<!DOCTYPE html><html><head><title>专利 CN102722566A - 社交网络中潜在好友查询方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_6e802a6b2b28d51711baddc2f3bec198/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_6e802a6b2b28d51711baddc2f3bec198__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="社交网络中潜在好友查询方法"><meta name="DC.contributor" content="周傲英" scheme="inventor"><meta name="DC.contributor" content="宋羊力" scheme="inventor"><meta name="DC.contributor" content="王晓玲" scheme="inventor"><meta name="DC.contributor" content="田秀霞" scheme="inventor"><meta name="DC.contributor" content="上海电力学院" scheme="assignee"><meta name="DC.date" content="2012-6-4" scheme="dateSubmitted"><meta name="DC.description" content="本发明涉及一种社交网络中潜在好友查询方法，首先建立社交网络图，然后将前条最优路径查询算法和基于扩展LCS的字符串比较有效融合的方法相结合实现对社交网络中用户潜在好友进行快速查询，使得社交网络更加有效地服务于不同网络用户，如推荐商业潜在客户或用户潜在好友。不仅可以支持社交网络拓扑结构中存在好友的有效查询，更能够支持为指定用户找出其潜在好友或为无直接连接用户推荐潜在好友，很好地弥补了之前查询方法中，只能查询存在好友方法的缺点。"><meta name="DC.date" content="2012-10-10"><meta name="DC.relation" content="CN:101540739:A" scheme="references"><meta name="DC.relation" content="CN:102088419:A" scheme="references"><meta name="DC.relation" content="US:20050243736:A1" scheme="references"><meta name="DC.relation" content="WO:2006098588:A1" scheme="references"><meta name="citation_patent_publication_number" content="CN:102722566:A"><meta name="citation_patent_application_number" content="CN:201210179600"><link rel="canonical" href="https://www.google.com/patents/CN102722566A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102722566A?cl=zh"/><meta name="title" content="专利 CN102722566A - 社交网络中潜在好友查询方法"/><meta name="description" content="本发明涉及一种社交网络中潜在好友查询方法，首先建立社交网络图，然后将前条最优路径查询算法和基于扩展LCS的字符串比较有效融合的方法相结合实现对社交网络中用户潜在好友进行快速查询，使得社交网络更加有效地服务于不同网络用户，如推荐商业潜在客户或用户潜在好友。不仅可以支持社交网络拓扑结构中存在好友的有效查询，更能够支持为指定用户找出其潜在好友或为无直接连接用户推荐潜在好友，很好地弥补了之前查询方法中，只能查询存在好友方法的缺点。"/><meta property="og:title" content="专利 CN102722566A - 社交网络中潜在好友查询方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102722566A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102722566A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=e16oBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102722566A&amp;usg=AFQjCNHQ8JizHPJocs0hgXTmD7M0yZ4M6A" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/86b3e0b00d608ac1a329/CN102722566A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/86b3e0b00d608ac1a329/CN102722566A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102722566A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102722566A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102722566A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102722566B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102722566A?cl=zh" style="display:none"><span itemprop="description">本发明涉及一种社交网络中潜在好友查询方法，首先建立社交网络图，然后将前条最优路径查询算法和基于扩展LCS的字符串比较有效融合的方法相结合实现对社交网络中用户潜在好友进行快速查询，使得社交网络更加有效地服务...</span><span itemprop="url">https://www.google.com/patents/CN102722566A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102722566A - 社交网络中潜在好友查询方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102722566A - 社交网络中潜在好友查询方法" title="专利 CN102722566A - 社交网络中潜在好友查询方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102722566 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210179600</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2012年10月10日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年6月4日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年6月4日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102722566B?hl=zh-CN&amp;cl=zh">CN102722566B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210179600.X, </span><span class="patent-bibdata-value">CN 102722566 A, </span><span class="patent-bibdata-value">CN 102722566A, </span><span class="patent-bibdata-value">CN 201210179600, </span><span class="patent-bibdata-value">CN-A-102722566, </span><span class="patent-bibdata-value">CN102722566 A, </span><span class="patent-bibdata-value">CN102722566A, </span><span class="patent-bibdata-value">CN201210179600, </span><span class="patent-bibdata-value">CN201210179600.X</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%91%A8%E5%82%B2%E8%8B%B1%22">周傲英</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%AE%8B%E7%BE%8A%E5%8A%9B%22">宋羊力</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%8E%8B%E6%99%93%E7%8E%B2%22">王晓玲</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%94%B0%E7%A7%80%E9%9C%9E%22">田秀霞</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E4%B8%8A%E6%B5%B7%E7%94%B5%E5%8A%9B%E5%AD%A6%E9%99%A2%22">上海电力学院</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102722566A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102722566A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102722566A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (3),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=e16oBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210179600&amp;usg=AFQjCNGxwYFrAaUUe1sBYNCnUZcxSt9CZg"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=e16oBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102722566A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNHaSZXaD6WfgMIahP2-nQXhE6gpiQ"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT116107105" lang="ZH" load-source="patent-office">社交网络中潜在好友查询方法</invention-title>
      </span><br><span class="patent-number">CN 102722566 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA101019371" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明涉及一种社交网络中潜在好友查询方法，首先建立社交网络图，然后将前条最优路径查询算法和基于扩展LCS的字符串比较有效融合的方法相结合实现对社交网络中用户潜在好友进行快速查询，使得社交网络更加有效地服务于不同网络用户，如推荐商业潜在客户或用户潜在好友。不仅可以支持社交网络拓扑结构中存在好友的有效查询，更能够支持为指定用户找出其潜在好友或为无直接连接用户推荐潜在好友，很好地弥补了之前查询方法中，只能查询存在好友方法的缺点。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(3)</span></span></div><div class="patent-text"><div mxw-id="PCLM45767632" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种社交网络中潜在好友查询方法，其特征在于，包括如下具体步骤：1)建立社交网络图：将各个用户的信息建模成图的结点，其中F是图中结点的集合&#8222;是图中无向边的集合，表示两个用户之间的直接连接，用户邻接关系矩阵中对应用户之间的连接关系，有连接关系相应的单元设置为M0(I),否则设置为Jbfe(O);2)在社交网络图的基础上，进行前#条最优路径查询算法：第一步：根据用户社交网络图找到一条指定结点间的最短路径，首先利用路径关系矩阵PiW辅助存储两个结点之间最短路径的途经结点，PiW初始设置为空，以用户邻接关系矩阵M?M为基础，将任意一个用户结点C插入到另外两个用户结点A和B之间，检查是否为最短路径，即是否满足+	,如果这样的结点存在，则将结点存储在路径关系矩阵, IiKJT中,直到所有结点全部被遍历则循环结束；第二步：根据启发式的剪枝策略得到指定结点间前^条最优最短路径，存储在路径用户矩阵中，具体方法步骤：A :结点之间的边删除：将两用户邻接关系之间的权值设置为,设置一个大小为2的一维字符串数组临时存储此两用户对应两个结点的信息，同时更新用户邻接关系矩阵；B :再次执行第一步指定结点间的最短路径，并将获取的路径结点序列保存在路径用户矩阵为起始地址的二维数组中，丨幻；C :从临时一维字符串数组&amp;%/&gt;中获取步骤A中选择的两个结点的信息，并将连接边的权值恢复为iraeO)，同时更新用户邻接关系矩阵；D :针对最短路径中的各个相邻结点进行同样的删除、查询与恢复操作，直到所有的前 ^条最优路径全部找到；3)基于ELCS的潜在好友发现：首先通过前A条最短路径查询前K条最短路径，将每条最短路径构造成一个字符串数组作为求解公共子序列的一条母串，然后依次从前Γ条最短路径中取出不同的两条母串，执行算法，进行字串比较，并将比较结果记录在公共子项序列矩阵《Μ中，最后通过PiM查询出两组最短路径PtM中存在的潜在好友。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求I所述社交网络中潜在好友查询方法，其特征在于，所述步骤3)中的 ELCS算法包括两部分：第一部分：将字符比较扩展到字符串比较，将其中一组用户字符串数组作为基准项，获取其长度length，构造一个2length大小的数组空间，将另外一组用户字符串数组作为比较项，I夂衫f，且,对基准项的每一项字符串进行比较，并逐次刷新数组内容，如果发现相同的字符串则引入标记变量以斜向增加方式进行数组内容更新，反之则顺向地映射为临近的最大值，直到对基准项中的所有字符串元素遍历完毕；第二部分：字符串匹配的标记方法改进，在字符串比较过程中，引入两个标记变量来标记矩阵中值最大元素的位置，在矩阵生成的过程中来判断当前生成元素的值是不是最大的，据此来改变标记变量的值，最后在矩阵生成的同时，最长公共子序列的位置和长度也可以同步计算出来。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求2所述社交网络中潜在好友查询方法，其特征在于，所述两条最短路径中字符串比较的具体步骤如下：A :假设从前Z条最优最短路径查询算法获得的所有字符串中任取两个字符串为 sWngl和string】,m为siringl的长度，n为stingi的长度，tag= I ,	&#38357;初始化为O，设置等于O, &#171;&#171;啤等于ο ;B :如果大于N，则设置《^_等于O和ir等于1，跳转至步骤6，否则跳转到步骤C ；C :如果《&#171;&#171;&#943;&#943;大于η ,则跳转到步骤B，且等于《ωη&#943;/ + I ,否则跳转到步骤D ；D :如果 strt?2gl[cou?2t^ = sirt^g2[count^，贝Ij PIM[tag][county = PIM[l - tag\[countj-1] +1，且tag== I - tag , count】+ + ,跳转到步骤C，反之跳转到步骤E ；E :设置	[&#171;5_ij = max(j°ZM[l - tag][county, PlM[tag\[countj- I],而且lag = I &#8212; tag ,counij+ +，跳转到步骤C ；F :如果则算法模块结束，否则跳转到步骤G ；G :如果他Φ - tog][j] = k ,则输出	, k++ 而且《&#171;吨 + + ,跳转到步骤F，否则《&#171;&#171;庐+，跳转到步骤F。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES52117233" lang="ZH" load-source="patent-office" class="description">
    <p>社交网络中潜在好友查询方法</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及一种数据库技术，特别涉及一种社交网络中潜在好友查询方法。</p>
    <p>背景技术</p>
    <p>[0002]	随着在线社交网络（Online Social Networks,简称ONSs),如国际上的Facebook、 MySpace&gt; YouTube以及国内的开心网、人人网等，的日益普及应用，越来越多的用户加入了至少一个社交网络，而且越来越多的电子商务也日益依赖社交网络进行用户之间的交流联系（淘宝阿里旺旺)。不过，虽然越来越多的用户开始通过社交网络与世界各地的用户进行交流，但是大多数仅仅局限于好友之间的互动交流，如何通过社交网络寻找潜在好友，如商业团体寻找潜在合作伙伴或潜在客户，进而扩大业务或交际范围则是当前商业团体、用户对社交网络发展的迫切需求。</p>
    <p>[0003]	之前对社交网络中用户好友的查询方法基本上是通过抓取指定用户所有链接用户信息，并按照和指定用户 的路径距离存放在数据库中，然后根据指定用户的爱好对用户的信息进行分类实现好友查询，也就是只能根据指定特征实现好友查询，并没有关注即使一个用户不具有和指定用户共同的兴趣设置，但是从路径连接分析上可能成为其潜在好友，如在保护用户隐私的匿名网络上查找潜在好友；另一方面，已提出的对路径距离的计算主要采用单源Di jkstra算法计算社交网络中一个用户到指定用户的路径距离，主要特点就是以一个用户为中心，向其它结点扩展，直到遇到终止结点为止。虽然可以得到最优解， 但是由于需要遍历计算的结点太多，导致效率不高，而且在查询多用户时需要改变源结点， 从而导致某些结点的重复遍历。综上所述，为了使得社交网络更好地服务于用户，有必要设计一种社交网络中潜在好友快速有效的查询方法，并利用查询结果有效地为用户推荐其可能的潜在好友。</p>
    <p>发明内容</p>
    <p>[0004]	本发明是针对社交网络的问题，提出了一种社交网络中潜在好友查询方法，将前 K条最优路径查询和基于扩展LCS的字符串比较有效融合的方法实现对社交网络中用户潜在好友进行快速查询，使得社交网络更加有效地服务于不同网络用户，如推荐商业潜在客户或用户潜在好友。</p>
    <p>[0005]	本发明的技术方案为：一种社交网络中潜在好友查询方法，包括如下具体步骤：</p>
    <p>1)建立社交网络图：将各个用户的信息建模成图的结点，其中是图中结点的集合，是图中无向边的集合，表示两个用户之间的直接连接，用户邻接关系矩阵中对应用户之间的连接关系，有连接关系相应的单元设置为,否则设置为/&amp;&amp;(0);</p>
    <p>2)在社交网络图的基础上，进行前#条最优路径查询算法：</p>
    <p>第一步：根据用户社交网络图找到一条指定结点间的最短路径，首先利用路径关系矩阵PJiM辅助存储两个结点之间最短路径的途经结点，PiiM初始设置为空，以用户邻接关系矩阵为基础，将任意一个用户结点C插入到另外两个用户结点A和B之间，检查是否为最短路径，即是否满足Zi +,如果这样的结点存在，则将结点存储在路径关系矩阵[用，I&#971;[中,直到所有结点全部被遍历则循环结束；</p>
    <p>第二步：根据启发式的剪枝策略得到指定结点间前^条最优最短路径，存储在路径用户矩阵中，具体方法步骤：</p>
    <p>A :结点之间的边删除：将两用户邻近关系之间的权值设置为/d@(0),设置一个大小为2的一维字符串数组临时存储此两用户的两个结点的信息，同时更新用户邻接关系矩阵；</p>
    <p>B :再次执行第一步指定结点间的最短路径，并将获取的路径结点序列保存在路径用户矩阵PKffci]为起始地址的二维数组中，丨；</p>
    <p>C :从临时一维字符串数组中获取步骤A中选择的两个结点的信息，并将连接边的权值恢复为toeO)，同时更新用户邻接关系矩阵；</p>
    <p>D :针对最短路径中的各个相邻结点进行同样的删除、查询与恢复操作，直到所有的前 K条最优路径全部找到；</p>
    <p>3)基于ELCS的潜在好友发现：首先通过前r条最短路径查询前，夺最短路径，将每条最短路径构造成一个字符串数组作为求解公共子序列的一条母串，然后其中选其中两组前 r条最短路径中取出两条母串，执行mo?算法，进行字串比较，并将比较结果记录在公共子项序列矩阵/W中，最后通过PiM查询出两组最短路径中存在的潜在好友。</p>
    <p>[0006]	所述步骤3 )中的SLCS算法包括两部分：</p>
    <p>第一部分：将字符比较扩展到字符串比较，将其中一组用户字符串数组PiWi作为基准项，获取其长度length，构造一个2length大小的数组空间，将另外一组用户字符串数组作为比较项，I夂,且对基准项的每一项字符串进行比较，并逐次刷新数</p>
    <p>组内容，如果发现相同的字符串则引入标记变量Mg以斜向增加方式进行数组内容更新，反之则顺向地映射为临近的最大值，直到对基准项中的所有字符串元素遍历完毕；</p>
    <p>第二部分：字符串匹配的标记方法改进，在字符串比较过程中，引入两个标记变量来标记矩阵中值最大元素的位置，在矩阵生成的过程中来判断当前生成元素的值是不是最大的，据此来改变标记变量的值，最后在矩阵生成的同时，最长公共子序列的位置和长度也可以同步计算出来。</p>
    <p>[0007]	所述两条最短路径中字符串比较的具体步骤如下：</p>
    <p>A :假设从前Z条最优最短路径查询算法获得的所有字符串中任取两个字符串为 SiriMgl和sWwg2 , m为StHngl的长度，η为切Hng2的长度，tag= I ,	初始化为0，设</p>
    <p>置等于O, countj等子ο ;</p>
    <p>B :如果大于η，则设置等于O和&#943;:等于1，跳转至步骤6，否则跳转到步骤</p>
    <p>C ；</p>
    <p>C :如果大于H，则跳转到步骤B，且等于mmrti + I ,否则跳转到步骤D ；、D :如果</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00061.png"> <img id="idf0001" file="CN102722566AD00061.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00061.png" class="patent-full-image" alt="Figure CN102722566AD00061"> </a> </div>
    <p>,跳转到步骤C，反之跳转到步骤E ；</p>
    <p>E :设置</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00062.png"> <img id="idf0002" file="CN102722566AD00062.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00062.png" class="patent-full-image" alt="Figure CN102722566AD00062"> </a> </div>
    <p>而且</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00063.png"> <img id="idf0003" file="CN102722566AD00063.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00063.png" class="patent-full-image" alt="Figure CN102722566AD00063"> </a> </div>
    <p>跳转到步骤C ；</p>
    <p>F :如果则算法模块结束，否则跳转到步骤G ；</p>
    <p>G :如果</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00064.png"> <img id="idf0004" file="CN102722566AD00064.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00064.png" class="patent-full-image" alt="Figure CN102722566AD00064"> </a> </div>
    <p>跳转到步骤F，否则+，跳转到步骤F。</p>
    <p>[0008]	本发明的有益效果在于：本发明社交网络中潜在好友查询方法，不仅可以支持社交网络拓扑结构中存在好友的有效查询，更能够支持为指定用户找出其潜在好友或为无直接连接用户推荐潜在好友，很好地弥补了之前查询方法中，只能查询存在好友方法的缺点。</p>
    <p>附图说明</p>
    <p>[0009]	图I为本发明用户社交网络图；</p>
    <p>图2为本发明第一次调用多结点路径算法得到路径图；</p>
    <p>图3为本发明通过剪枝策略获得前Γ条最优最短路径图；</p>
    <p>图4为本发明前匕条最优路径查询算法流程图；</p>
    <p>图5为本发明基于ELCS的潜在好友发现算法流程图；</p>
    <p>图6为本发明公共子项矩阵PiM图；</p>
    <p>图7为本发明路径关系矩阵PjW图；</p>
    <p>图8为本发明路径用户矩阵&#943;&#905;4图；</p>
    <p>图9为本发明顺序表中潜在好友图。</p>
    <p>具体实施方式</p>
    <p>[0010]	本发明首次将前I：条最优路径查询和基于扩展LCS的字符串比较有效融合的方法实现对社交网络中用户潜在好友进行快速查询，使得社交网络更加有效地服务于不同网络用户，如推荐商业潜在客户或用户潜在好友。</p>
    <p>[0011]	一、基本概念和定义：</p>
    <p>I、社交网络：</p>
    <p>本发明中，社交网络被定义为一个图σ=&lt;Κ&#163;&gt;，其中是图中结点的集合，包含一个样本社交网络中用户的集合，F=Wlvie用户集合},其中结点Vi表示一个用户，E是图中无向边的集合，是无序积 vJ &gt;的多重子集，</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00065.png"> <img id="idf0005" file="CN102722566AD00065.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00065.png" class="patent-full-image" alt="Figure CN102722566AD00065"> </a> </div>
    <p>和&gt;表</p>
    <p>示同一条边，表示两个用户之间的直接连接。</p>
    <p>[0012]	2、最短路径：</p>
    <p>图 G 中从 h IlJ Vk 的路径是一系列边 .V2 &gt;，&lt;v2 ,V3 &gt; , &lt; V3lV4 &gt; , ...	&gt; ,可以</p>
    <p>表示成结点序列 其中当某一路径长度或权值之和为最小时则称为6到4的最短路径。两个结点之间的路径长度是两个结点之间边的个数之和，权值之和指的是每条边被赋予一定的权值之和(如两个结点用户之间的亲密程度值，即按和指定结点用户的关系划分亲密程度等级值，如家庭成员的亲密程度值为5，知心朋友为4，陌生人为O等)。</p>
    <p>[0013]	3、用户属性集合：</p>
    <p>图中的结点集合F对应一个用户集合tter ,每个用户可以用属性集合 4- = Ikeyi, Ottra ,attri2,... ,Ottrim)表示，每个结点Vi 6 V都拥有一个关键字_^ &#8364;&#28858;，用于标识相应于结点力的用户Useri ,为了避免构建的社交网络图占用大量空间，可以在结点F中只</p>
    <p>保留关键字并将剩下的结点属性以&#28858;为主关键字存放在相应的数据库表中进行维护和管理，在需要的时候再按照标准的SQL接口进行查询，以减少内存消耗。</p>
    <p>[0014]	4、用户邻接关系矩阵：</p>
    <p>用于存储用户与用户之间的连接关系，为了减少存储空间，利用布尔类型的true/ false (1/0)表示两个用户之间是否存在连接,如图I中的Jim与Samantha无直接连接关系则腿_3]为false (0)，否则为true (I)。</p>
    <p>[0015]	5、路径关系矩阵PRM ：</p>
    <p>用于存储两个用户结点之间的相关路径结点，是整个算法中的关键存储矩阵。为了使得查询结果更加符合用户实际需求，我们需要得到前^条最优路径，因此我们将设置为三维数组，第一维表示第七&lt;=1条路径，后面两个维度分别表示起始用户结点和终止用户结点。我们的算法通过递归调用手段，进行途中结点的遍历与查询，如针对图I中所示的用户社交网络，我们可以通过前条最优路径查询算法得到图7所示的路径关系矩阵《&#938;Μ。为了避免存储空间耗费，在实际运算过程中我们在该路径关系矩阵中只存储实际用户的关键字，而不存储其姓名及其他相关属性信息，如用户的信息 &lt; O, Jim,上海,0216456734 2 &gt; ,用户 Ailm 的信息 &lt; I, Alien,天津,0228765123 4 &gt; ,......，用户</p>
    <p>Samantha的信息&lt;13,&amp;&#38918;咐知山东O53Ol23456 78 &gt;等，仅将其关键字&lt;0,U......,13 &gt;存储在</p>
    <p>矩阵PRM中,这样我们通过PRM查找Jim到Samantha的路径，得到的路径结点序列为O到 13的关键字序列。</p>
    <p>[0016]	6、路径用户矩阵：</p>
    <p>用于临时存储两个用户结点之间的前I：条最优路径中结点的信息。通过递归调用逐步得到两个用户结点最优路径中其他用户结点信息，并依次记录获得一组以用户姓名为主的路径信息。将PK4设置为二维数组，第一维表示第K &lt;= I：条最优路径，第二维则表示当前前Γ条最优路径下的结点组。如求Jira到之间的路径数据，如图8所示路径用户矩阵PUA图，得到的路径用户矩阵的第^行PUAiki)为 &#171; O, Jim......&gt;, &lt; I, Mlen......&gt;,......，&lt; I O, Sophia &#187;。</p>
    <p>[0017]	7、最长公共子序列IG?：</p>
    <p>对于I和:T两个字符串=	, &#165; = &lt;b,d,c,a,b,a&gt;，则JT和；F的最长公共</p>
    <p>子序列为：&lt;h,c,a,b &gt; 和 &lt;b,d,a,b &gt;。 </p>
    <p>[0018]	8、扩展最长公共子序列：对于JT和r两个以字符串作为基本比较单位的字符串： X=&lt;Sfr1,Sfr2,Sir3.,Btrl,Str2 &gt; , If=Ofr2lSfr4Jfr3lSir1Jfr2lSfr1 &gt; ,则 L 和的最长公共子序</p>
    <p>列为：&lt;Str2iStr3fStri^Str2 &gt; &lt;^tr2?^^4^s^l^s^2 &gt;。</p>
    <p>[0019]	9、公共子项矩阵Pflf ：</p>
    <p>利用ELCS算法分析两组最优路径用户矩阵《%和PtM2 ,以其中一组PtM1为基准，</p>
    <p>另一组PtM2为比较项，逐个字符串项进行比较，最终得到最大公共子项矩阵PiM,如对两组路径用户序列 Mhn, Biskop, Mdan, Sopkia &gt; 和 &lt; Jim, Mien, Biskop, Aidan, Samantka&gt;，经</p>
    <p>过我们MG?算法分析，即可得到如图6所示的公共子项矩阵WM。</p>
    <p>[0020]	二、ELCS算法思想及主要性质： ELCS (Extended LCS )算法思想就是将LCS基于字符的比较拓展到基于字符串比较， 通过将一字符串数组作为基准并与另一字符串数组逐个比较的方式得到两组字符串数组中的公共字符串序列。</p>
    <p>[0021]	假设前缀=OfrllSiJV..&#30908; &gt; 为if序列中的前个字符串（用户名）， l&lt;i&lt;f&#171; ,前缀Yj=UtnJtutrj &gt;为γ序列的前1/个字符串（用户名），</p>
    <p>Z =KStrl7Str2,...,StTk &gt;e	,则具有下列性质：</p>
    <p>性质I :如果Sfrsj = sir&#8222; (最后一个字符串相同)，则用反证法可以证明，该字符串必定是 X与Γ的任一最长公共子序列Z (假定长度为it)的最后一个字符串，即有= ，而且显然有,即序列Z的前缀4-1是^^1和^1的最长公共子序列。</p>
    <p>[0022]	性质2 :如果Sirm结&#8222; (最后一个字符串不相同），则用反证法可以证明， Z&#8364; ELCS(Xm^F)或 2 e SLCS(X,Y1^1)必然成立，因为 sirp Strm 与 Sfrfc # Strn 其中至少有一个必成立，如果 ％ * Strtn ,则 2 e ELCS(Xm^lr)，否则如果 Strk φ str&#8222; ,那么 Z e ELCS(XJn^l)</p>
    <p>O</p>
    <p>[0023]	性质3 :如果Sfrm = drH，则问题化归为求解hi与的ELCS ,而且 ELCS(X,7)- ELCSiXr^1，l；_j)+1。</p>
    <p>[0024]	性质4 ： ^ sK ,则问题化归为求解h与:T的ELCS以及Jf与U的EWS。</p>
    <p>O	I = 01&#190;/= O</p>
    <p>豇颂心]=	&#20098;啤-l][j -1] + I	O或碑=Strj</p>
    <p>Ma攻SLGSfi - !][/], ELCS[i][j -1])	i,j&gt; OJLsiri Stri</p>
    <p>[0025]	根据问题定义，我们的工作首先设计前Z条最优路径查询算法来解决用户路径查询问题，然后基于前Γ条最优路径查询结果提出SiG?算法来解决用户之间的潜在好友发现问题。</p>
    <p>[0026]	三、算法描述</p>
    <p>I、基于用户关系构建社交网络图：根据用户信息构建社交网络用户连接图G&lt;d&gt;。在此方法中将各个用户的信息建模成图0 &lt;F,S &gt;的结点，用户的姓名、兴趣、联系方式等各种信息内容也可以存放在结点数据结构中。S表示用户之间是否有连接关系，为了简单起见，我们使用布尔类型数据存储用户之间的连接关系，以减少存储空间的使用，如果用户Λ和用户S之间有连接关系，则用户邻接关系矩阵MiM中相应的单元设置为,否则设置为/d&#174;(0)，具体如图I将用户关系构建成一个社交网络。</p>
    <p>[0027]	2、前r条最优路径查询算法：</p>
    <p>这个算法由两个阶段完成，第一阶段根据用户社交网络图找到一条指定结点间的最短路径，第二阶段根据剪枝策略得到指定结点间前K条最优最短路径，以有效支持潜在好友查询。</p>
    <p>[0028]	在第一阶段中，需要以下两个步骤，首先我们利用路径关系矩阵PPM辅助存储两个结点之间最短路径的途经结点，在这个过程中，初始设置为空，以用户邻接关系矩</p>
    <p>为基础，将每一个结点(例如C)插入到另外两个结点（A和B)之间，检查是否为最短路径，即是否满足1| + %3 &lt;hc ,如果这样的结点存在，则将结点存储在, 中，直到所有结点全部被遍历则循环结束。然后，在用户执行实际查询时，我们根据用户端的输入，得到用户需要查找的两个结点(起始结点和终止结点)，通过递归调用逐步抛出两个结点最短路径间存在的结点，这期间我们利用路径用户矩阵来辅助存储用户社交网络中指定两个结点之间的最短路径。图2中加粗 线段为查找到的一条从Λ'μ到卿Aia之间的最短路径。</p>
    <p>[0029]	在第二阶段，由于单一最短路径不能有效地、全面地支持结点间的潜在好友发现，如非直接连接结点间的潜在好友查询，因此需要根据启发式的剪枝策略得到指定结点间前K条最优最短路径，如对得到的Jim和挪&#8212;之间的一组最短路径 &#171;O, Jim.…&lt;1? Aiim……X &lt;6?Biskop....-.&gt;3.,,..&lt;10?Sophia&#187; ,存储在 PLMfZ0]中，执行我们的剪枝策略，具体实施方法如下(参见图3中的剪枝变换过程）：</p>
    <p>O	结点之间的边删除。将/加和之间的权值设置为&gt;^(0)(即逻辑删</p>
    <p>除和Aikn之间的边),设置一个大小为2的一维字符串数组临时存储和jMen 这两个结点的信息，同时更新用户邻接关系矩阵Μ&#938;Μ ；</p>
    <p>2)	再次执行前/&#183;：条最优路径查询算法的第一个阶段，并将获取的路径结点序列保存在为起始地址的二维数组中，I[；</p>
    <p>3)	从临时一维字符串数组中获取两个结点Jim和AieM的信息，并将连接边的权值恢复为iraeO)，同时更新用户邻接关系矩阵；</p>
    <p>4)	针对最短路径中的各个相邻结点进行同样的删除、查询与恢复操作，直到所有的前条最优路径全部找到。</p>
    <p>[0030]	在第二阶段的剪枝策略中，如果针对最短路径中所有边执行剪枝策略，即删除、查询和恢复是不切合实际的，所以我们引入数据约束方法，根据实际情况对删除边的最大数目进行限定，如最优K限定，以便得到存放在路径用户矩阵中前K条最优最短路径，如图4前Γ条最优路径查询算法流程图。</p>
    <p>[0031]	我们提出的前Z条最优路径查询方法可以针对社交网络图中的任意结点进行查询，与其他单源算法(如Dijkstra等）相比，灵活性得到很大的提高。针对任意多组结点用户数据而言，提出的方法由于不必改变源结点，只需要调整起始和终止结点即可，因此更加具有优势。而且我们的方法通过剪枝策略，实现了前Γ条最优路径查询，优化了查询结果， 使得查询结果更加符合用户的查询需求。通过对路径关系矩阵PK4和公共子序列矩阵放缩调整，减少运行过程中的硬件资源占用。我们通过多次测试结果发现，该方法比单源路径执行在效率上有很大程度的提闻。</p>
    <p>[0032]	3、基于ELCS的潜在好友发现算法：</p>
    <p>传统的最长公共子序列LCS算法，采取的是动态规划方式，通过两组字符串之间逐个字符比较，以递归的方式 逐渐填充矩阵。在输出时，用动态规划算法从底层向上计算最优值，递归调用得到公共子序列。然而这个算法需要占用大量存储空间。因此我们通过两个方面扩展传统的算法实现潜在好友发现，一是将字符比较扩展到字符串比较（SIC? 算法)，二是对字符串匹配的标记方法进行改进。</p>
    <p>[0033]	将字符比较扩展到字符串比较（MG?算法)，主要就是将其中一组用户字符串数组作为基准项，获取其长度length,构造一个2MengA大小的数组空间，将另外一组用户字符串数组PM/作为比较项，，且&#943;气.?，对基准项的每一项字符串进行比</p>
    <p>较，并逐次刷新数组内容，如果发现相同的字符串则引入标记变量以斜向增加方式进行数组内容更新，反之则顺向地映射为临近的最大值，直到对基准项中的所有字符串元素遍历完毕。</p>
    <p>[0034]	字符串匹配的标记方法改进，主要是在字符串比较过程中，并不是简单的给id 矩阵中相应元素赋值1，而是赋值其左上角元素值加I。我们引入两个标记变量来标记矩阵中值最大元素的位置，在矩阵生成的过程中来判断当前生成元素的值是不是最大的，据此来改变标记变量的值，最后在矩阵生成的同时，最长公共子序列的位置和长度也可以同步计算出来。采取这种改进方式可以有效的减少存储空间耗费，并有效计算字符串数组之间的最长公共字符串序列。</p>
    <p>[0035]	我们的基于ffiC?的潜在好友发现算法基于前尤条最短路径查询结果。首先通过 iuf条最短路径查询得到一组如K条最短路径，并为如K条最短路径中的每一条最短路径构造成一个字符串数组作为求解公共子序列的一条母串，然后从前2条最短路径中任选两组作为两条母串，执行ELCS算法，进行字符串比较，并将比较结果记录在公共子项序列矩阵WM中，最后通过PiM查询出两组最短路径PCM中存在的潜在好友。在此过程中引入顺序表作为辅助存储结构，收集通过剪枝抛出的潜在好友，在插入顺序表的过程中判断是否重复，如果没有重复则执行插入操作，在算法的最后将顺序表的内容抛出，即为查询所得的所有潜在好友。</p>
    <p>[0036]	两条最短路径中字符串比较的具体步骤如下(详见图5)：</p>
    <p>O	假设从前Z条最优最短路径查询算法获得的所有字符串中任取两个字符串</p>
    <p>为s_gl和s_g2 , m为si_gi的长度，n为smngl的长度，tog= I，间初始化为0，设置等于O，Ciffi吨等于O ;</p>
    <p>2)	如果《^_大于M，则设置等于O和fc等于1，跳转至步骤6，否则跳转到步骤3 ；</p>
    <p>3)	如果cmmtJ大于μ ,则跳转到步骤2,且counH等于ecwitt + I ,否则跳转到步骤</p>
    <p>4；</p>
    <p>4 )	如果</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00111.png"> <img id="idf0006" file="CN102722566AD00111.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00111.png" class="patent-full-image" alt="Figure CN102722566AD00111"> </a> </div>
    <p>,跳转到步骤 3,反之跳转到步骤 5。</p>
    <p>[0037]	5 )	设置</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00112.png"> <img id="idf0007" file="CN102722566AD00112.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00112.png" class="patent-full-image" alt="Figure CN102722566AD00112"> </a> </div>
    <p>,跳转到步骤 3。</p>
    <p>[0038]	6)	如果β则算法模块结束，否则跳转到步骤7。</p>
    <p>[0039]	7)	如果</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00113.png"> <img id="idf0008" file="CN102722566AD00113.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00113.png" class="patent-full-image" alt="Figure CN102722566AD00113"> </a> </div>
    <p>，则输出</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00114.png"> <img id="idf0009" file="CN102722566AD00114.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00114.png" class="patent-full-image" alt="Figure CN102722566AD00114"> </a> </div>
    <p>跳转到步骤6，否则</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00115.png"> <img id="idf0010" file="CN102722566AD00115.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102722566A/CN102722566AD00115.png" class="patent-full-image" alt="Figure CN102722566AD00115"> </a> </div>
    <p>,跳转到步骤6。</p>
    <p>[0040]	通过构造二次for循环，对任意两组前K最优最短路径进行逐个比较计算，得到两个结点间一系列最优潜在好友，如图9所示顺序表中潜在好友图。二次for循环的构造为： 外层for循环包括串行执行的两部分内容，第一部分是从前&#163;条最优最短路径查询算法获得的所有字符串任取两条作为母串，第二部分是内层for循环(从步骤I)到步骤6))对选取的两条母串调用算法进行字符串比较，获取其中潜在好友。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101540739A?cl=zh">CN101540739A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年4月14日</td><td class="patent-data-table-td patent-date-value">2009年9月23日</td><td class="patent-data-table-td ">腾讯科技（深圳）有限公司</td><td class="patent-data-table-td ">用户推荐方法及用户推荐系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102088419A?cl=zh">CN102088419A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年12月7日</td><td class="patent-data-table-td patent-date-value">2011年6月8日</td><td class="patent-data-table-td ">倪加元</td><td class="patent-data-table-td ">一种在社交网络中查找好友信息的方法和系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20050243736">US20050243736</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2004年4月19日</td><td class="patent-data-table-td patent-date-value">2005年11月3日</td><td class="patent-data-table-td ">International Business Machines Corporation</td><td class="patent-data-table-td ">System, method, and service for finding an optimal collection of paths among a plurality of paths between two nodes in a complex network</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2006098588A1?cl=zh">WO2006098588A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2006年3月15日</td><td class="patent-data-table-td patent-date-value">2006年9月21日</td><td class="patent-data-table-td ">Nhn Corporation</td><td class="patent-data-table-td ">Online human network management system and method for stimulating users to build various faces of relation</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103049523A?cl=zh">CN103049523A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年12月20日</td><td class="patent-data-table-td patent-date-value">2013年4月17日</td><td class="patent-data-table-td ">浙江大学</td><td class="patent-data-table-td ">一种使用低秩半定规划求解社交推荐问题的方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103049523B?cl=zh">CN103049523B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年12月20日</td><td class="patent-data-table-td patent-date-value">2015年10月28日</td><td class="patent-data-table-td ">浙江大学</td><td class="patent-data-table-td ">一种使用低秩半定规划求解社交推荐问题的方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103150678B?cl=zh">CN103150678B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年3月12日</td><td class="patent-data-table-td patent-date-value">2014年12月10日</td><td class="patent-data-table-td ">中国科学院计算技术研究所</td><td class="patent-data-table-td ">微博中用户间潜在关注关系的发现方法及装置</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=e16oBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2012年10月10日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年11月28日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2015年4月15日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/86b3e0b00d608ac1a329/CN102722566A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_6e802a6b2b28d51711baddc2f3bec198.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E7%A4%BE%E4%BA%A4%E7%BD%91%E7%BB%9C%E4%B8%AD%E6%BD%9C%E5%9C%A8%E5%A5%BD%E5%8F%8B%E6%9F%A5%E8%AF%A2%E6%96%B9%E6%B3%95.pdf?id=e16oBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U0Yz-OO7FUF__uvewbVosGIPLNWLQ"},"sample_url":"https://www.google.com/patents/reader?id=e16oBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>