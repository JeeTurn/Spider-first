<!DOCTYPE html><html><head><title>专利 CN103377259A - 一种多模式字符串匹配方法和装置 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_6e802a6b2b28d51711baddc2f3bec198/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_6e802a6b2b28d51711baddc2f3bec198__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种多模式字符串匹配方法和装置"><meta name="DC.contributor" content="王延维" scheme="inventor"><meta name="DC.contributor" content="徐广鑫" scheme="inventor"><meta name="DC.contributor" content="刘鹏" scheme="inventor"><meta name="DC.contributor" content="北京新媒传信科技有限公司" scheme="assignee"><meta name="DC.date" content="2012-4-28" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种多模式字符串匹配方法和装置。该方法包括：将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构；将待匹配的主串沿所述决策树向下进行匹配。本发明的技术方案，能够实现多模式字符串的精确匹配，同时根据子节点对应的哈希值查找该子节点，决策树的宽度改变并不会影响字符串匹配的CPU时间开销，该算法的时间开销只取决于决策树的平均深度，与模式串的数量无关。对于模式串较多的字符串匹配，该算法能大量降低CPU的时间开销，提高应用的响应速度。"><meta name="DC.date" content="2013-10-30"><meta name="DC.relation" content="CN:101458694:A" scheme="references"><meta name="DC.relation" content="US:5202986" scheme="references"><meta name="citation_patent_publication_number" content="CN:103377259:A"><meta name="citation_patent_application_number" content="CN:201210132834"><link rel="canonical" href="https://www.google.com/patents/CN103377259A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN103377259A?cl=zh"/><meta name="title" content="专利 CN103377259A - 一种多模式字符串匹配方法和装置"/><meta name="description" content="本发明公开了一种多模式字符串匹配方法和装置。该方法包括：将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构；将待匹配的主串沿所述决策树向下进行匹配。本发明的技术方案，能够实现多模式字符串的精确匹配，同时根据子节点对应的哈希值查找该子节点，决策树的宽度改变并不会影响字符串匹配的CPU时间开销，该算法的时间开销只取决于决策树的平均深度，与模式串的数量无关。对于模式串较多的字符串匹配，该算法能大量降低CPU的时间开销，提高应用的响应速度。"/><meta property="og:title" content="专利 CN103377259A - 一种多模式字符串匹配方法和装置"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN103377259A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN103377259A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=LRTeCAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN103377259A&amp;usg=AFQjCNEfHqufaY70prFPfOfg1iaUIxD1CA" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/b3d1c904c316b31f5921/CN103377259A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/b3d1c904c316b31f5921/CN103377259A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN103377259A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN103377259A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN103377259A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种多模式字符串匹配方法和装置。该方法包括：将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构；将待匹配的主串沿所述决策树向下进行匹配...</span><span itemprop="url">https://www.google.com/patents/CN103377259A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN103377259A - 一种多模式字符串匹配方法和装置</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN103377259A - 一种多模式字符串匹配方法和装置" title="专利 CN103377259A - 一种多模式字符串匹配方法和装置"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN103377259 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210132834</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年10月30日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年4月28日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年4月28日</td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210132834.9, </span><span class="patent-bibdata-value">CN 103377259 A, </span><span class="patent-bibdata-value">CN 103377259A, </span><span class="patent-bibdata-value">CN 201210132834, </span><span class="patent-bibdata-value">CN-A-103377259, </span><span class="patent-bibdata-value">CN103377259 A, </span><span class="patent-bibdata-value">CN103377259A, </span><span class="patent-bibdata-value">CN201210132834, </span><span class="patent-bibdata-value">CN201210132834.9</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%8E%8B%E5%BB%B6%E7%BB%B4%22">王延维</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BE%90%E5%B9%BF%E9%91%AB%22">徐广鑫</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%88%98%E9%B9%8F%22">刘鹏</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E5%8C%97%E4%BA%AC%E6%96%B0%E5%AA%92%E4%BC%A0%E4%BF%A1%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">北京新媒传信科技有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103377259A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103377259A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103377259A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (2),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (2)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=LRTeCAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210132834&amp;usg=AFQjCNEgva_IFTp12_q3Jbca1Gw32TBhjw"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=LRTeCAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D103377259A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNGQDJdI-JKfdizI1bPyZ3Zvp1lYmQ"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT131056710" lang="ZH" load-source="patent-office">一种多模式字符串匹配方法和装置</invention-title>
      </span><br><span class="patent-number">CN 103377259 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA125185123" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种多模式字符串匹配方法和装置。该方法包括：将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构；将待匹配的主串沿所述决策树向下进行匹配。本发明的技术方案，能够实现多模式字符串的精确匹配，同时根据子节点对应的哈希值查找该子节点，决策树的宽度改变并不会影响字符串匹配的CPU时间开销，该算法的时间开销只取决于决策树的平均深度，与模式串的数量无关。对于模式串较多的字符串匹配，该算法能大量降低CPU的时间开销，提高应用的响应速度。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(10)</span></span></div><div class="patent-text"><div mxw-id="PCLM56653875" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.一种多模式字符串匹配方法，其特征在于，该方法包括:  将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构；  将待匹配的主串沿所述决策树向下进行匹配。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的方法，其特征在于，  生成的所述决策树结构中，除了根节点外，其余的所有节点都写入有字符；  生成的所述决策树结构中，起始的一个或多个字符相同的两个模式串的该相同字符对应写入同一节点。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求2所述的方法，其特征在于，所述决策树中的每条路径对应一个或者多个模式串；  所述决策树结构中的除根节点以外的每个节点还均包括:该节点对应的终止标志符；  所述将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中还包括:如果一个模式串的最后一个字符对应的节点为非叶子节点，则设置其终止标志符有效，以标记该模式串的结束。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求3所述的方法，其特征在于，所述将待匹配的主串沿所述决策树向下进行匹配包括:  将待匹配的主串按字符顺序沿所述决策树逐节点向下匹配，如果当前字符与当前节点写入的字符不一致，则结束流程；如果匹配到叶子节点或者匹配到终止标志符有效的非叶子节点，则匹配成功，将该路径上的从起始到该匹配到的叶子节点或者终止标志符有效的非叶子节点为止的字符作为匹配到的字符串输出。`</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求4所述的方法，其特征在于，所述将待匹配的主串沿所述决策树向下进行匹配包括:  将待匹配的主串按字符顺序沿所述决策树逐节点向下匹配时，每匹配到终止标志符有效的非叶子节点，则将该路径上的从起始到该终止标志符有效的非叶子节点为止的字符作为匹配到的字符串输出，并继续向下匹配，如果一直匹配到叶子节点，则将该整条路径上的字符作为匹配到的字符串输出。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求2所述的方法，其特征在于，该方法在生成决策树结构之前，进一步包括:在所述的多个模式串中，如果一个N字符的模式串与另一个模式串的首N个字符重合时，只保留前者，N为自然数；  所述生成决策树结构包括:  将保留下来的多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构；  所述决策树中的每条路径仅对应一个模式串。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求6所述的方法，其特征在于，  所述将待匹配的主串沿所述决策树向下进行匹配包括:将待匹配的主串按字符顺序沿所述决策树逐节点向下匹配，如果当前字符与当前节点写入的字符不一致，则结束流程；如果匹配到叶子节点则匹配成功。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.根据权利要求4或7所述的方法，其特征在于，  所述决策树结构中，非叶子节点还包括其各子节点对应的哈希值；所述将待匹配的主串按字符沿所述决策树逐节点向下匹配的过程中，判断当前节点的子节点集合中是否包含与主串的当前字符匹配的子节点包括:计算主串当前字符的哈希值；将所述计算出的哈希值与各子节点对应的哈希值进行匹配，如果存在与主串当前字符的哈希值相匹配的哈希值，则确定当前节点的子节点集合中包含与主串的当前字符匹配的子节点，反之，则确定不包含。</div>
    </div>
    </div> <div class="claim"> <div num="9" class="claim">
      <div class="claim-text">9.一种多模式字符串匹配装置，其特征在于，该装置包括:创建模块，保存模块和匹配模块；  创建模块，用于将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构，并将所述决策树结构保存到存储模块中；  存储模块，用于保存决策树结构；  匹配模块，用于将待匹配的主串沿存储模块中的决策树向下进行匹配。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.根据权利要求9所述的装置，其特征在于，  创建模块生成的所述决策树结构中，除了根节点外，其余的所有节点都写入有字符；  创建模块生成的所述决策树结构中，起始的一个或多个字符相同的两个模式串的该相同字符对应写入同一节点 。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES63636184" lang="ZH" load-source="patent-office" class="description">
    <p>一种多模式字符串匹配方法和装置</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及计算机技术领域，特别涉及一种多模式字符串匹配方法和装置。</p>
    <p>背景技术</p>
    <p>[0002]	在计算机领域，字符串匹配是比较常见的话题，比如在搜索操作、敏感词过滤等应用中，都会涉及到字符串匹配的问题。一个好的字符串匹配的方式，能够帮助应用减少CPU占用时间，提闻应用的响应时间。</p>
    <p>[0003]	多模式字符串匹配就是匹配的模式串不止一个，多模式串的匹配方法为:有η个</p>
    <p>模式串P1、P2.....Pn和一个文本主串Τ，在T中寻找η个模式串中的任一个是否在T中出</p>
    <p>现，是则匹配成功。</p>
    <p>[0004]	对于多模式串的匹配，现有方案的思路是按照单模式串进行匹配，然后遍历所有的模式串，直到匹配完成，即分别用各模式串与主串相匹配，判断是否有匹配成功的。假设单模式串的时间复杂度为0(m)，模式串的个数为η，那么现有方案的多模式串匹配的时间复杂度则为n0(m)。由此可见，该类算法的时间复杂度会随着模式串个数的增加而线性增长，即使单模式的时间复杂度很低，但是当模式串的数量达到一定的量级后，该算法的CPU时间开销将十分可观。</p>
    <p>发明内容</p>
    <p>[0005]	本发明提供了一种多模式字符串匹配方法和装置，本发明的技术方案能够实现多模式字符串的精确匹配，同时该算法能大量降低CPU的时间开销，提高应用的响应速度。</p>
    <p>[0006]	为达到上述目的，本发明的技术方案是这样实现的:</p>
    <p>[0007]	本发明公开了一种多模式字符串匹配方法，该方法包括:</p>
    <p>[0008]	将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构；</p>
    <p>[0009]	将待匹配的主串沿所述决策树向下进行匹配。</p>
    <p>[0010]	生成的所述决策树结构中，除了根节点外，其余的所有节点都写入有字符；</p>
    <p>[0011]	生成的所述决策树结构中，起始的一个或多个字符相同的两个模式串的该相同字符对应写入同一节点。</p>
    <p>[0012]	所述决策树中的每条路径对应一个或者多个模式串；</p>
    <p>[0013]	所述决策树结构中的除根节点以外的每个节点还均包括:该节点对应的终止标志符;</p>
    <p>[0014]	所述将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中还包括:如果一个模式串的最后一个字符对应的节点为非叶子节点，则设置其终止标志符有效，以标记该模式串的结束。</p>
    <p>[0015]	所述将待匹配的主串沿所述决策树向下进行匹配包括:</p>
    <p>[0016]	将待匹配的主串按字符顺序沿所述决策树逐节点向下匹配，如果当前字符与当前节点写入的字符不一致，则结束流程；如果匹配到叶子节点或者匹配到终止标志符有效的非叶子节点，则匹配成功，将该路径上的从起始到该匹配到的叶子节点或者终止标志符有效的非叶子节点为止的字符作为匹配到的字符串输出。</p>
    <p>[0017]	所述将待匹配的主串沿所述决策树向下进行匹配包括:</p>
    <p>[0018]	将待匹配的主串按字符顺序沿所述决策树逐节点向下匹配时，每匹配到终止标志符有效的非叶子节点，则将该路径上的从起始到该终止标志符有效的非叶子节点为止的字符作为匹配到的字符串输出，并继续向下匹配，如果一直匹配到叶子节点，则将该整条路径上的字符作为匹配到的字符串输出。</p>
    <p>[0019]	或者，该方法在生成决策树结构之前，进一步包括:在所述的多个模式串中，如果一个N字符的模式串与另一个模式串的首N个字符重合时，只保留前者，N为自然数；</p>
    <p>[0020]	所述生成决策树结构包括:</p>
    <p>[0021]	将保留下来的多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构；</p>
    <p>[0022]	所述决策树中的每条路径仅对应一个模式串。</p>
    <p>[0023]	所述将待匹配的主串沿所述决策树向下进行匹配包括:将待匹配的主串按字符顺序沿所述决策树逐节点向下匹配，如果当前字符与当前节点写入的字符不一致，则结束流程；如果匹配到叶子节点则匹配成功。</p>
    <p>[0024]	所述决策树结构中，非叶子节点还包括其各子节点对应的哈希值；</p>
    <p>[0025]	所述将待匹配的主串按字符沿所述决策树逐节点向下匹配的过程中，判断当前节点的子节点集合中是否包含与主串的当前字符匹配的子节点包括:计算主串当前字符的哈希值；将所述计算出的哈希值与各子节点对应的哈希值进行匹配，如果存在与主串当前字符的哈希值相匹配的哈希值，则确定当前节点的子节点集合中包含与主串的当前字符匹配的子节点，反之，则确定不包含。</p>
    <p>[0026]	本发明还公开了一种多模式字符串匹配装置，该装置包括:创建模块，保存模块和匹配模块；</p>
    <p>[0027]	创建模块，用于将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构，并将所述决策树结构保存到存储模块中；</p>
    <p>[0028]存储模块，用于保存决策树结构；</p>
    <p>[0029]	匹配模块，用于将待匹配的主串沿存储模块中的决策树向下进行匹配。</p>
    <p>[0030]	创建模块生成的所述决策树结构中，除了根节点外，其余的所有节点都写入有字符;</p>
    <p>[0031]	创建模块生成的所述决策树结构中，起始的一个或多个字符相同的两个模式串的该相同字符对应写入同一节点。</p>
    <p>[0032]	综上可见，本发明通过构建多模式字符串的决策树，然后用主串去匹配由多模式串构建的决策树，实现多模式字符串的精确匹配，该匹配方法与现有的将模式串逐个与主串进行匹配的方法相反，是将主串与由多模式串构成的决策树进行匹配，避免了大量的重复比较，提高了效率。该算法的时间开销取决于决策树的平均深度(即模式串的平均长度)，而与模式串的数量无关。因此对于模式串较多的字符串匹配，该算法能大量降低CPU的时间开销，提高应用的响应速度。</p>
    <p>附图说明</p>
    <p>[0033]	图1是本发明实施例中多模式字符串匹配方法的流程图；</p>
    <p>[0034]	图2a是本发明实施例中的一个决策树的示意图；</p>
    <p>[0035]	图2b是本发明实施例中的第二个决策树的示意图；</p>
    <p>[0036]	图2c是本发明实施例中的第三个决策树的示意图；</p>
    <p>[0037]	图3是本发明方案一中的构建多模式字符串匹配的决策树的流程图</p>
    <p>[0038]	图4是本发明方案一中主串沿决策树匹配的流程图；</p>
    <p>[0039]	图5是本发明方案二中的构建多模式字符串匹配的决策树的流程图；</p>
    <p>[0040]	图6是本发明方案二中的主串沿决策树匹配的流程图；</p>
    <p>[0041]	图7是本发明实施例中多模式字符串匹配装置的结构图。</p>
    <p>具体实施方式</p>
    <p>[0042]	现有多模式串的主要问题在于，会进行大量的重复比较。比如模式串中有如下的字符串:“中华人民共和国”、“中国大使馆”、“中不中”、“新闻”、“新华日报”。由于其中三个模式串中的第一个字符都是“中”，所以在现有方案中，这个字符会被比较三次。</p>
    <p>[0043]	因此本发明的整体思路为:为了避免这种重复的比较，首先将模式串进行整理和排序，生成一个决策树结构，从根节点出发向下遍历，每一条路径都是一个或多个模式串，然后将匹配方式反制，用主串去决策树结构上进行匹配。</p>
    <p>[0044]	为使本发明的目的、技术方案和优点更加清楚，下面将结合附图对本发明实施方式作进一步地详细描述。</p>
    <p>[0045]	图1是本发明实施例中多模式字符串匹配方法的流程图。如图1所示，该方法包括:</p>
    <p>[0046]	101，将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构。</p>
    <p>[0047]	所述决策树结构中的根节点包括:该根节点的子节点集合；</p>
    <p>[0048]	所述决策树结构中的除根节点以外的每个节点均包括:该节点对应的字符和该节点是否为叶子节点的信息；当该节点是非叶子节点时，该节点还包括:该节点的子节点集</p>
    <p>口 ο</p>
    <p>[0049]	这里,一个节点的子节点是指该节点下的下一级节点，而不包括该节点下的下二级或以上的节点。</p>
    <p>[0050]	本步骤生成的所述决策树结构中，除了根节点外，其余的所有节点都写入有字符;</p>
    <p>[0051]	本步骤生成的所述决策树结构中，起始的一个或多个字符相同的两个模式串的该相同字符对应写入同一节点。这样，在决策树结构中这些起始相同的字符对应的路径重合。</p>
    <p>[0052]	102，将待匹配的主串沿所述决策树向下进行匹配。也就是将主串从第一个字符开始沿着决策树向下匹配。</p>
    <p>[0053]	本步骤中，将待匹配的主串按字符顺序沿所述决策树逐节点向下匹配，如果当前字符与当前节点写入的字符不一致，则结束流程；如果一直匹配到叶子节点则匹配成功，所匹配到的模式串为由该条路径上的节点中的字符按顺序组成的字符串。</p>
    <p>[0054]	本发明通过构建多模式字符串的决策树，将待匹配的主串沿所述决策树向下进行匹配能够实现多模式字符串的精确匹配。</p>
    <p>[0055]	根据图1所示的方法，对于多模式串的一个例子:“中华人民共和国”、“中国人民解放军”、“中不中”、“新闻”、“新华日报”，可生成如图2a所示的决策树。图2a是本发明实施例中的一个决策树的示意图，如图2a所示的决策树中只示意出各个节点所对应的字符。</p>
    <p>[0056]	参见图2a，在所生成的决策树结构中，除了根节点以外，其余的所有节点都有字符且每个节点一个字符。模式串“中华人民共和国”、“中国人民解放军”和“中不中”的首字符相同，都是“中”，因此这三个字符串的字符“中”对应的路径是重合的。同样，“新闻”和“新华日报”的首字符也相同，都为“新”，因此这两个字符串的字符“新”的路径重合，即对应同一个节点。</p>
    <p>[0057]	很多时候，会出现一个N(N为自然数)字符的模式串与另一个模式串的首N个字符重合的情况:例如，存在模式串为“中国人民”和模式串“中国人民解放军”，即4字符的模式串“中国人民”与模式串“中国人民解放军”的首4个字符相同。此时按照图1所示的方法，“中国人民”和“中国人民解放军”在决策树结构中在同一条路径上，当主串中有“中国人民”字符时不能被识别到，只有“中国人民解放军”能被识别，为解决该问题，本发明中给出了两种解决方案:</p>
    <p>[0058]	方案一、在本发明的一个较佳的实施例中，设置终止标志符，具体来说:</p>
    <p>[0059]	所述决策树结构中的除根节点以外的每个节点还可以均包括:该节点对应的终止标志符；上述步骤101中的将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中还包括:如果一个模式串的最后一个字符对应的节点为非叶子节点，则设置其终止标志符有效，以标记该模式串的结束；上述步骤102中，将待匹配的主串按字符顺序沿所述决策树逐节点向下匹配，如果当前字符与当前节点写入的字符不一致，则结束流程；如果匹配到叶子节点或者匹配到终止标志符有效的非叶子节点，则匹配成功，将该路径上的从起始到该匹配到的叶子节点或者终止标志符有效的非叶子节点为止的字符作为匹配到的字符串输出。</p>
    <p>[0060]	这种方案下，决策树上的一条路径对应一个或者多个模式串。</p>
    <p>[0061]	进一步地，如果匹配到终止标志符有效的非叶子节点，则匹配成功之后，还继续沿所述决策树向下匹配，如果当前字符与当前节点写入的字符不一致，则结束流程；如果一直匹配到叶子节点，则匹配成功，将该整条路径上的字符作为匹配到的字符串输出。</p>
    <p>[0062]	也就是说，将待匹配的主串按字符沿所述决策树逐节点向下匹配时，每匹配到终止标志符有效的非叶子节点，则将该路径上的从起始到该终止标志符有效的非叶子节点为止的字符作为匹配到的字符串输出，并继续向下匹配，如果一直匹配到叶子节点，则将该整条路径上的字符作为匹配到的字符串输出。</p>
    <p>[0063]	例如，构成图2a所示的决策树的模式串为:中华人民共和国”、“中国人民解放军”、“中不中”、“新闻”、“新华日报”，在此基础上，又增加了模式串“中国人民”，这里，“中国人民”与“中国人民解放军”的首4个字符重合，则此时的决策树结构如图2b所示。</p>
    <p>[0064]	图2b是本发明实施例中的第二个决策树的示意图。如图2b所示，模式串“中国人民解放军”的路径覆盖了“中国人民”的路径，为了能够识别模式串“中国人民”，在其最后一个字符“民”对应的非叶子节点中设置终止标志符有效(图2b中用“终止”示意)。则将待匹配的主串按字符沿所述决策树逐节点向下匹配，如果匹配到叶子节点或者匹配到终止标志符有效的非叶子节点，则匹配成功。</p>
    <p>[0065]	再举例主串为“中国人民团结一致....”，则沿图2b所示的决策树逐节点向下匹配，则首先匹配到“中”节点，然后在“中”节点的多个子节点中匹配到“国”节点，在“国”节点的子节点中匹配到“人”节点，再在“人”节点的子节点中匹配到“民”节点，该“民”节点中设置终止有效，则匹配成功，匹配到的模式串为“中国人民”。</p>
    <p>[0066]	如果实际应用需要，则可以继续向下进行匹配，每匹配到终止标志符有效的非叶子节点，则将该路径上的从起始到该终止标志符有效的非叶子节点为止的字符作为匹配到的字符串输出，并继续向下匹配，如果一直匹配到叶子节点，则将该整条路径上的字符作为匹配到的字符串输出。</p>
    <p>[0067]	方案二、在本发明的另一个较佳实施例中，精减模式串，即在所述的多个模式串中，如果一个N字符的模式串与另一个模式串的首N个字符重合时，只保留前者，N为自然数，然后用保留下来的(即精减后剩下的)多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构。</p>
    <p>[0068]	这种方案下，决策树中的每条路径仅对应一个模式串。将待匹配的主串沿所述决策树向下进行匹配为:将待匹配的主串按字符顺序沿所述决策树逐节点向下匹配，如果当前字符与当前节点写入的字符不一致，则结束流程；如果匹配到叶子节点则匹配成功。</p>
    <p>[0069]	仍以上述的多个模式串为例，该多个模式串为:“中华人民共和国”、“中国人民解放军”、“中不中”、“中国人民”、“新闻”和“新华日报”。</p>
    <p>[0070]	其中“中国人民”与“中国人民解放军”的首4个字符重合，保留前者，则“中国人民解放军”被精简掉，剩下的模式串为:“中华人民共和国”、“中不中”、“中国人民”、“新闻”和“新华日报”，由这些剩下的模式串构成的决策树如图2c所示。</p>
    <p>[0071]	图2c是本发明实施例中的第三个决策树的示意图。如图2c所示，在方案二中所生成的决策树，由于预先进行了精简，因此不需要设置终止符号。</p>
    <p>[0072]	在实际应用中，如果需要将主串中存在的所有模式串都找出来，则此时不适合采用方案二，而适合米用方案一。</p>
    <p>[0073]	下面对方案一和方案二的具体实现方式进一步进行详细描述。</p>
    <p>[0074]	方案一的具体实现</p>
    <p>[0075]	图3是本发明方案一中的构建多模式字符串匹配的决策树的流程图，如图3所示具体包括以下步骤:</p>
    <p>[0076]	步骤301，构建根节点及根节点的子节点集合；</p>
    <p>[0077]	步骤302，判断所述多个模式串中是否存在未被添入决策树的的模式串，是则将一个未被添入决策树的模式串设置为当前模式串，执行303，否则结束流程；</p>
    <p>[0078]	步骤303，设置当前模式串的首位字符为当前字符，设置根节点为当前节点，所述当前节点的子节点集合为当前集合；</p>
    <p>[0079]	本流程中所述的“当前”相当于编程技术中的“指针”，用于表示当前的处理对象。</p>
    <p>[0080]例如，当前模式串为“中国人民”则，其首字符“中”为当前字符。[0081]	步骤304，判断当前集合中是否包含所述当前字符，是则执行步骤305 ;否则执行步骤308 ；</p>
    <p>[0082]	例如，本步骤中当前集合为根节点的子集合，当前字符为“中”，则判断根节点是否已存在与“中”字对应的子节点。</p>
    <p>[0083]	步骤305，判断当前字符是否为当前模式串的最后一个字符，是则执行步骤306，否则执行步骤307 ；</p>
    <p>[0084]	本步骤中是判断是否到了当前要添入的模式串的结尾，是则说明当前模式串的路径在原决策树结构中已存在。例如“中国人民解放军”已添入决策树时，当前要添入的模式串为“中国人民”，且当前字符为“民”的情况。</p>
    <p>[0085]	步骤306，设置当前字符对应的节点中的终止标志符有效，以指示匹配终止，执行步骤302 ；</p>
    <p>[0086]	例如，本步骤中，在“中国人民”的“民”字符对应的节点中设置终止标志符有效。</p>
    <p>[0087]	步骤307，设置当前字符对应的节点为当前节点，所述当前字符对应的节点的子节点集合为当前集合，当前模式串的当前字符的下一个字符为当前字符，执行步骤304;</p>
    <p>[0088]	步骤308，判断当前字符是否为最后一个字符，是则执行步骤309，否则执行步骤310 ；</p>
    <p>[0089]	步骤309，在当前节点下创建当前字符对应的叶子节点，并将当前字符添加到所述当前集合中，设置当前字符对应的节点中的终止标志符有效，以指示匹配终止，执行步骤302 ；</p>
    <p>[0090]	本步骤中是将当前模式串的最后一个字符添入了决策树结构中，当前模式串的处理结束，返回302去处理下一个模式串。</p>
    <p>[0091]	步骤310，在当前节点下创建当前字符对应的非叶子节点，并将当前字符作添加到所述当前集合中，并构建所创建的非叶子节点的子节点集合，设置所述当前字符对应的节点中的终止标志符无效，以指示匹配不终止，设置所创建的非叶子节点的子节点集合为当前集合，设置当前模式串的下一个字符为当前字符，执行步骤304。</p>
    <p>[0092]	本步骤中是将当前模式串的一个字符添入了决策树结构中，且当前模式串还未结束，后续仍有待添入的字符，因此各个指针分别向下移动一位，返回执行304所述的步骤。</p>
    <p>[0093]	通过上述的步骤301&#12316;310，可以将多个模式串全部添入决策树中，最后得到一个由该多个模式串构成的决策树结构。</p>
    <p>[0094]	图4是本发明方案一中主串沿决策树匹配的流程图，如图4所示，将主串沿所述决策树向下进行匹配具体步骤包括:</p>
    <p>[0095]	步骤401，设置主串的首位字符为当前字符；</p>
    <p>[0096]	步骤402，设置根节点为当前节点，且所述根节点的子节点集合为当前集合；</p>
    <p>[0097]	步骤403，判断所述当前字符是否为空，是则结束流程，否则进执行步骤404 ；</p>
    <p>[0098]	步骤404，判断当前集合中是否包含与所述当前字符匹配的子节点，是则执行步骤405，否则执行步骤410 ；</p>
    <p>[0099]	步骤405，设置所述子节点为当前节点，所述子节点的子节点集合为当前集合；</p>
    <p>[0100]	步骤406，判断当前节点是否为叶子节点，是则匹配成功，执行步骤408，否则执行步骤407 ；[0101]	步骤407，判断当前节点中的终止标志符是否有效，是则匹配成功，执行步骤408，否则执行步骤409 ；</p>
    <p>[0102]	步骤408，匹配成功，输出匹配到的模式串，执行步骤409 ；</p>
    <p>[0103]	步骤409，设置所述当前字符的下一个字符为当前字符，执行步骤403 ；</p>
    <p>[0104]	步骤410，去除主串的首位字符得到新主串，设置该新主串的首位字符为当前字符，执行步骤402。</p>
    <p>[0105]	例如，决策树如图2b所示，主串为“中国人民解放了”，按图4所示的流程匹配如下:</p>
    <p>[0106]	1.设置主串的首字符“中”为当前字符(步骤401)；</p>
    <p>[0107]	2.设置决策树(图2b所示)的根节点为当前节点，根节点的子节点集合为当前集合(步骤402)；</p>
    <p>[0108]	3.当前字符为“中”，不为空，当前集合中包含与“中”对应的节点，设置“中”节点为当前节点以及设置“中”节点的子节点集合为当前集合；“中”节点不为叶子节点，且终止标志符无效，设置“国”为当前字符(步骤403-404-405-406-407-409)；</p>
    <p>[0109]	4.当前字符为“国”，不为空，当前集合中包含与“国”对应的节点，设置“国”节点为当前节点以及设置“国”节点的子节点集合为当前集合；“国”节点不为叶子节点，且终止标志符无效，设置“人”为当前字符(步骤403-404-405-406-407-409)；</p>
    <p>[0110]	5.当前字符为“人”，不为空，当前集合中包含与“人”对应的节点，设置“人”节点为当前节点以及设置“人”节点的子节点集合为当前集合；“人”节点不为叶子节点，且终止标志符无效，设置“民”为当前字符(步骤403-404-405-406-407-409)；</p>
    <p>[0111]	6.当前字符为“民”，不为空，当前集合中包含与“民”对应的节点，设置“民”节点为当前节点以及设置“民”节点的子节点集合为当前集合；“民”节点不为叶子节点，但其终止标志符有效，匹配成功(步骤403-406-407-411-412-匹配成功)；输出匹配成功的模式串“中国人民”。</p>
    <p>[0112]	7.设置“解”为当前字符(步骤409)；</p>
    <p>[0113]	8.当前字符为“解”，不为空，当前集合中包含与“解”对应的节点，设置“解”节点为当前节点以及设置“解”节点的子节点集合为当前集合；“解”节点不为叶子节点，且终止标志符无效，设置“放”为当前字符(步骤403-404-405-406-407-409)；</p>
    <p>[0114]	9.当前字符为“放”，不为空，当前集合中包含与“放”对应的节点，设置“放”节点为当前节点以及设置“放”节点的子节点集合为当前集合；“放”节点不为叶子节点，且终止标志符无效，设置“了”为当前字符(步骤403-404-405-406-407-409)；</p>
    <p>[0115]	10.当前字符为“了”，不为空，当前集合中不包含与“了”对应的节点，去除主串的首字符得到新的主串“国人民解放了”，设置该新主串的首字符“国”为当前字符，设置根节点为当前节点，根节点的子节点集合为当前集合进行新一轮的匹配(步骤403-404-410-402)，这里不在复述。</p>
    <p>[0116]	下面给出方案二下的具体实现情况。</p>
    <p>[0117]	方案二的具体实现</p>
    <p>[0118]	缩减模式串的范围后，在构建决策树的过程中，无需再进行终止标志符的设置。</p>
    <p>[0119]	图5是本发明方案二中的构建多模式字符串匹配的决策树的流程图，如图5所示具体包括以下步骤:</p>
    <p>[0120]	步骤501，构建根节点及根节点的子节点集合；</p>
    <p>[0121]	步骤502，判断所述多个模式串中是否存在未添入决策树的模式串，是则将一个未添入决策树的模式串设置当前模式串，执行503，否则结束流程；</p>
    <p>[0122]	步骤503，设置当前模式串的首位字符为当前字符，设置根节点为当前节点，所述当前节点的子节点集合为当前集合；</p>
    <p>[0123]	步骤504，判断当前集合中是否包含所述当前字符，是则执行步骤505 ;否则执行步骤507 ；</p>
    <p>[0124]	步骤505，判断当前字符是否为当前模式串的最后一个字符，是则执行步骤502，否则执行步骤506，</p>
    <p>[0125]	步骤506，设置当前字符对应的节点为当前节点，所述当前字符对应的节点的子节点集合为当前集合，当前模式串的下一个字符为当前字符，执行步骤504 ；</p>
    <p>[0126]	步骤507，判断当前字符是否为最后一个字符，是则执行步骤508，否则执行步骤509 ；</p>
    <p>[0127]	步骤508，在当前节点下创建当前字符对应的叶子节点，并将当前字符添加到所述当前集合中，执行步骤502 ；</p>
    <p>[0128]	步骤509，在当前节点下创建当前字符对应的非叶子节点，并将当前字符作添加到所述当前集合中，并构建所创建的非叶子节点的子节点集合，设置所创建的非叶子节点的子节点集合为当前集合，设置当前模式串的下一个字符为当前字符，执行步骤504。</p>
    <p>[0129]	由于预先对多模式串进行了精简处理，因此图5所示的决策树构建流程，与图3所示的决策树构建流程相比，省略了设置终止标志符的过程。</p>
    <p>[0130]	图6是本发明方案二中的主串沿决策树匹配的流程图，如图6所示，此时将待匹配的主串沿所述决策树向下进行匹配包括:</p>
    <p>[0131]	步骤601，设置主串的首位字符为当前字符；</p>
    <p>[0132]	步骤602，设置根节点为当前节点，且所述根节点的子节点集合为当前集合；</p>
    <p>[0133]	步骤603，判断所述当前字符是否为空，是则结束流程，否则执行步骤604;</p>
    <p>[0134]	步骤604，判断当前集合中是否包含与所述当前字符匹配的子节点，是则执行步骤605，否则执行步骤609 ；</p>
    <p>[0135]	步骤605，设置所述子节点为当前节点，所述子节点的子节点集合为当前集合，并执行步骤606 ；</p>
    <p>[0136]	步骤606，判断当前节点是否为叶子节点，是则匹配成功执行步骤607，否则执行608 ；</p>
    <p>[0137]	步骤607，匹配成功，输出匹配到的模式串，执行608 ；</p>
    <p>[0138]	步骤608，设置所述当前字符的下一个字符为当前字符，执行步骤603。</p>
    <p>[0139]	步骤609,去除主串的首位字符得到新主串，设置该新主串的首位字符为当前字符，执行步骤602。</p>
    <p>[0140]	图6所示的匹配流程与图4所示的匹配流程相比，只是省略了关于终止标志符的判断，其他相同，这里不在复述。</p>
    <p>[0141]	另外，当模式串的数量增加时，决策树的宽度会增加，本发明中对决策树子节点的查找使用哈希算法，具体来说:</p>
    <p>[0142]	决策树结构中的非叶子节点还包括各子节点对应的哈希值；</p>
    <p>[0143]	匹配流程中，判断当前集合中是否包含与主串的当前字符匹配的子节点包括:计算主串当前字符的哈希值；将所述计算出的哈希值与各子节点对应的哈希值进行匹配，如果存在与主串当前字符的哈希值相匹配的哈希值，则确定当前集合中包含与主串的当前字符匹配的子节点，反之，则确定不包含。</p>
    <p>[0144]	这种对于决策树的子节点的查找使用哈希算法的方案，使得决策树的宽度改变并不会影响字符串匹配的CPU时间开销，所以该算法的时间开销只取决于决策树的平均深度，与模式串的数量无关。对于模式串较多的字符串匹配，该算法能大量降低CPU的时间开销，提高应用的响应速度。</p>
    <p>[0145]	图7是本发明实施例中多模式字符串匹配装置的结构图，如图7所示，该装置包括:创建模块701，保存模块702和匹配模块703 ；</p>
    <p>[0146]	创建模块701，用于将多个模式串，按其各自的字符组成顺序，沿树结构的根节点向下，将每个字符写入一个节点中，生成一个决策树结构，并将所述决策树结构保存到存储模块702中；</p>
    <p>[0147]	存储模块702，用于保存决策树结构；</p>
    <p>[0148]	所述决策树结构中的根节点包括:该根节点的子节点集合；</p>
    <p>[0149]	所述决策树结构中的除根节点以外的每个节点均包括:该节点对应的字符和该节点是否为叶子节点的信息；当该节点是非叶子节点时，该节点还包括:该节点的子节点集合；</p>
    <p>[0150]	匹配模块703，用于将待匹配的主串沿存储某块702中的决策树向下进行匹配。</p>
    <p>[0151]	创建模块701生成的所述决策树结构中，除了根节点外，其余的所有节点都写入有字符；</p>
    <p>[0152]	创建模块701生成的所述决策树结构中，起始的一个或多个字符相同的两个模式串的该相同字符对应写入同一节点。</p>
    <p>[0153]	在一种情况下:</p>
    <p>[0154]	所述决策树结构中的除根节点以外的每个节点均包括:该节点对应的终止标志符;</p>
    <p>[0155]	所述创建模块，用于通过执行下述步骤来根据被匹配的多个模式串生成一个决策树结构:</p>
    <p>[0156]	al，构建根节点及根节点的子节点集合；</p>
    <p>[0157]	a2，判断所述多个模式串中是否存在未被添入决策树的模式串，是则将一个未被添入决策树的模式串设置当前模式串，否则结束流程；</p>
    <p>[0158]	a3，设置当前模式串的首位字符为当前字符，设置根节点为当前节点，所述当前节点的子节点集合为当前集合；</p>
    <p>[0159]	a4，判断当前集合中是否包含所述当前字符，是则执行a5 ;否则执行a8 ；</p>
    <p>[0160]	a5，判断当前字符是否为当前模式串的最后一个字符，是则执行a6，否则执行a7 ；</p>
    <p>[0161]	a6，设置当前字符对应的节点中的终止标志符有效，以指示匹配终止，进入a2 ；</p>
    <p>[0162]	a7，设置当前字符对应的节点为当前节点，所述当前字符对应的节点的子节点集合为当前集合，当前模式串的当前字符的下一个字符为当前字符，执行a4 ；</p>
    <p>[0163]	a8，判断当前字符是否为最后一个字符，是则执行a9，否则执行alO ；</p>
    <p>[0164]	a9，在当前节点下创建当前字符对应的叶子节点，并将当前字符添加到所述当前集合中，设置所述当前字符对应的节点中的终止标志符有效，以指示匹配终止，执行a2 ；</p>
    <p>[0165]	alO,在当前节点下创建当前字符对应的非叶子节点，并将当前字符作添加到所述当前集合中，并构建所创建的非叶子节点的子节点集合，设置所述当前字符对应的节点中的终止标志符无效，以指示匹配不终止，设置所创建的非叶子节点的子节点集合为当前集合，设置当前模式串的下一个字符为当前字符，执行a4。</p>
    <p>[0166]	所述匹配模块，用于通过执行以下步骤将待匹配的主串沿决策树向下进行匹配:</p>
    <p>[0167]	bl，设置主串的首位字符为当前字符；</p>
    <p>[0168]	b2，设置根节点为当前节点，且所述根节点的子节点集合为当前集合；</p>
    <p>[0169]	b3，判断所述当前字符是否为空，是则结束流程，否则执行b4 ；</p>
    <p>[0170]	b4，判断当前集合中是否包含与所述当前字符匹配的子节点，是则执行b5，否则执行 blO ；</p>
    <p>[0171]	b5，设置所述子节点为当前节点，所述子节点的子节点集合为当前集合，并执行bll ；</p>
    <p>[0172]	b6，判断当前节点是否为叶子节点，是则匹配成功，执行b8，否则执行b7 ；</p>
    <p>[0173]	b7，判断当前节点中的终止标志符是否有效，是则匹配成功，执行b8，否则执行b9 ；</p>
    <p>[0174]	b8，步骤408，匹配成功，输出匹配到的模式串，执行b9 ；</p>
    <p>[0175]	b9，设置所述当前字符的下一个字符为当前字符，执行b3。</p>
    <p>[0176]	blO，去除该主串的首位字符得到新主串，设置该新主串的首位字符为当前字符，执行b2。</p>
    <p>[0177]	在另一种情况下:</p>
    <p>[0178]	所述创建模块，在根据被匹配的多个模式串生成一个决策树结构之前，进一步用于对多个模式串进行精减，即在所述的多个模式串中，如果一个N字符的模式串与另一个模式串的首N个字符重合时，只保留前者，N为自然数；</p>
    <p>[0179]	所述创建模块，用于通过执行下述步骤来根据被精简后剩下的多个模式串生成一个决策树结构:</p>
    <p>[0180]	Al,构建根节点及根节点的子节点集合；</p>
    <p>[0181]	A2，判断所述多个模式串中是否存在未被添入决策树的模式串，是则将一个未被添入决策树的模式串设置当前模式串，执行A3，否则结束流程；</p>
    <p>[0182]	A3，设置当前模式串的首位字符为当前字符，设置根节点为当前节点，所述当前节点的子节点集合为当前集合；</p>
    <p>[0183]	A4，判断当前集合中是否包含所述当前字符，是则执行A5 ;否则执行A7 ；</p>
    <p>[0184]	A5，判断当前字符是否为当前模式串的最后一个字符，是则执行A2，否则执行A6，</p>
    <p>[0185]	A6，设置当前字符对应的节点为当前节点，所述当前字符对应的节点的子节点集合为当前集合，当前模式串的下一个字符为当前字符，执行步骤A4;</p>
    <p>[0186]	A7，判断当前字符是否为最后一个字符，是则执行AS，否则执行A9 ；[0187]	A8，在当前节点下创建当前字符对应的叶子节点，并将当前字符添加到所述当前集合中，执行A2 ；</p>
    <p>[0188]	A9，在当前节点下创建当前字符对应的非叶子节点，并将当前字符作添加到所述当前集合中，并构建所创建的非叶子节点的子节点集合，设置所创建的非叶子节点的子节点集合为当前集合，设置当前模式串的下一个字符为当前字符，执行A4;</p>
    <p>[0189]	所述匹配模块，用于通过执行以下步骤将待匹配的主串沿决策树向下进行匹配:</p>
    <p>[0190]	步骤BI，设置主串的首位字符为当前字符；</p>
    <p>[0191]	步骤B2，设置根节点为当前节点，且所述根节点的子节点集合为当前集合；</p>
    <p>[0192]	步骤B3，判断所述当前字符是否为空，是则结束流程，否则执行步骤B4 ；</p>
    <p>[0193]	步骤B4，判断当前集合中是否包含与所述当前字符匹配的子节点，是则执行步骤B5，否则执行步骤B9 ；</p>
    <p>[0194]	步骤B5，设置所述子节点为当前节点，所述子节点的子节点集合为当前集合，并执行步骤B6 ；</p>
    <p>[0195]	步骤B6，判断当前节点是否为叶子节点，是则匹配成功执行步骤B7，否则执行B8 ；</p>
    <p>[0196]	步骤B7，匹配成功，输出匹配到的模式串，执行B8 ；</p>
    <p>[0197]	步骤B8，设置所述当前字符的下一个字符为当前字符，执行步骤B3。</p>
    <p>[0198]	步骤B9，去除主串的首位字符得到新主串，设置该新主串的首位字符为当前字符，执行步骤B2。</p>
    <p>[0199]	在上述装置中，决策树结构中的非叶子节点还包括:各子节点对应的哈希值；则，匹配模块703，用于计算主串当前字符的哈希值，将所述计算出的哈希值与各子节点对应的哈希值进行匹配，如果存在与主串当前字符的哈希值相匹配的哈希值，则确定当前集合中包含与主串的当前字符匹配的子节点，反之，则确定不包含，以判断当前集合中是否包含与主串的当前字符匹配的子节点。</p>
    <p>[0200]	综上所述本发明通过构建多模式字符串的决策树能够实现多模式字符串的精确匹配，同时根据子节点对应的哈希值查找该子节点，决策树的宽度改变并不会影响字符串匹配的CPU时间开销，所以该算法的时间开销只取决于决策树的平均深度，与模式串的数量无关。对于模式串较多的字符串匹配，该算法能大量降低CPU的时间开销，提高应用的响应速度。</p>
    <p>[0201]	以上所述仅为本发明的较佳实施例而已，并非用于限定本发明的保护范围。凡在本发明的精神和原则之内所作的任何修改、等同替换、改进等，均包含在本发明的保护范围内。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101458694A?cl=zh">CN101458694A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2008年10月9日</td><td class="patent-data-table-td patent-date-value">2009年6月17日</td><td class="patent-data-table-td ">浙江大学</td><td class="patent-data-table-td ">一种基于树形词库的中文分词方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US5202986">US5202986</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">1989年9月28日</td><td class="patent-data-table-td patent-date-value">1993年4月13日</td><td class="patent-data-table-td ">Bull Hn Information Systems Inc.</td><td class="patent-data-table-td ">Prefix search tree partial key branching</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=LRTeCAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年10月30日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年11月27日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/b3d1c904c316b31f5921/CN103377259A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_6e802a6b2b28d51711baddc2f3bec198.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E5%A4%9A%E6%A8%A1%E5%BC%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D%E6%96%B9%E6%B3%95%E5%92%8C.pdf?id=LRTeCAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U3Trhlsh6LCLMBAwcEQzNHlsA9hKg"},"sample_url":"https://www.google.com/patents/reader?id=LRTeCAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>