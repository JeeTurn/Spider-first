<!DOCTYPE html><html><head><title>专利 CN102833352A - 分布式缓存管理系统和实现分布式缓存管理的方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_6e802a6b2b28d51711baddc2f3bec198/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_6e802a6b2b28d51711baddc2f3bec198__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="分布式缓存管理系统和实现分布式缓存管理的方法"><meta name="DC.contributor" content="孙为" scheme="inventor"><meta name="DC.contributor" content="田睿" scheme="inventor"><meta name="DC.contributor" content="吴振宇" scheme="inventor"><meta name="DC.contributor" content="张弛" scheme="inventor"><meta name="DC.contributor" content="深圳中兴网信科技有限公司" scheme="assignee"><meta name="DC.date" content="2012-9-17" scheme="dateSubmitted"><meta name="DC.description" content="本发明提供了一种分布式缓存管理系统，包括索引服务器和分布式内存对象缓存服务器，其中，所述索引服务器包括：索引建立单元，用于根据接收到的数据缓存请求，将对应的数据存储至分布式内存对象缓存服务器中，并为缓存的数据建立索引；数据获取单元，用于根据接收到的数据获取请求，获取对应的索引，并利用该索引从所述分布式内存对象缓存服务器中获取对应的数据。本发明还提供了一种实现分布式缓存管理的方法。通过本发明的技术方案，可以对分布式内存对象缓存服务器中的数据进行有效管理，提高请求响应和数据处理的效率。"><meta name="DC.date" content="2012-12-19"><meta name="DC.relation" content="CN:101651628:A" scheme="references"><meta name="DC.relation" content="CN:101969465:A" scheme="references"><meta name="DC.relation" content="CN:102375853:A" scheme="references"><meta name="DC.relation" content="CN:102420867:A" scheme="references"><meta name="DC.relation" content="CN:102662699:A" scheme="references"><meta name="citation_patent_publication_number" content="CN:102833352:A"><meta name="citation_patent_application_number" content="CN:201210345622"><link rel="canonical" href="https://www.google.com/patents/CN102833352A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102833352A?cl=zh"/><meta name="title" content="专利 CN102833352A - 分布式缓存管理系统和实现分布式缓存管理的方法"/><meta name="description" content="本发明提供了一种分布式缓存管理系统，包括索引服务器和分布式内存对象缓存服务器，其中，所述索引服务器包括：索引建立单元，用于根据接收到的数据缓存请求，将对应的数据存储至分布式内存对象缓存服务器中，并为缓存的数据建立索引；数据获取单元，用于根据接收到的数据获取请求，获取对应的索引，并利用该索引从所述分布式内存对象缓存服务器中获取对应的数据。本发明还提供了一种实现分布式缓存管理的方法。通过本发明的技术方案，可以对分布式内存对象缓存服务器中的数据进行有效管理，提高请求响应和数据处理的效率。"/><meta property="og:title" content="专利 CN102833352A - 分布式缓存管理系统和实现分布式缓存管理的方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102833352A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102833352A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=KXa0BwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102833352A&amp;usg=AFQjCNGMi2MkaHGmgzXKECALUhJPNJEdDg" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/a92f53bb4efc5eba2ea6/CN102833352A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/a92f53bb4efc5eba2ea6/CN102833352A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102833352A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102833352A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102833352A?cl=zh" style="display:none"><span itemprop="description">本发明提供了一种分布式缓存管理系统，包括索引服务器和分布式内存对象缓存服务器，其中，所述索引服务器包括：索引建立单元，用于根据接收到的数据缓存请求，将对应的数据存储至分布式内存对象缓存服务器中，并为缓...</span><span itemprop="url">https://www.google.com/patents/CN102833352A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102833352A - 分布式缓存管理系统和实现分布式缓存管理的方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102833352A - 分布式缓存管理系统和实现分布式缓存管理的方法" title="专利 CN102833352A - 分布式缓存管理系统和实现分布式缓存管理的方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102833352 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210345622</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2012年12月19日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年9月17日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年9月17日</td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210345622.9, </span><span class="patent-bibdata-value">CN 102833352 A, </span><span class="patent-bibdata-value">CN 102833352A, </span><span class="patent-bibdata-value">CN 201210345622, </span><span class="patent-bibdata-value">CN-A-102833352, </span><span class="patent-bibdata-value">CN102833352 A, </span><span class="patent-bibdata-value">CN102833352A, </span><span class="patent-bibdata-value">CN201210345622, </span><span class="patent-bibdata-value">CN201210345622.9</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%AD%99%E4%B8%BA%22">孙为</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%94%B0%E7%9D%BF%22">田睿</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%90%B4%E6%8C%AF%E5%AE%87%22">吴振宇</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BC%A0%E5%BC%9B%22">张弛</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%B7%B1%E5%9C%B3%E4%B8%AD%E5%85%B4%E7%BD%91%E4%BF%A1%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">深圳中兴网信科技有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102833352A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102833352A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102833352A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (5),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (2)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=KXa0BwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210345622&amp;usg=AFQjCNGLOVEiEok5ydnTHNwuo8RS3CMeEQ"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=KXa0BwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102833352A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNGFILiJYtrPkuYKkXWPCuMzHbOTMQ"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT118140395" lang="ZH" load-source="patent-office">分布式缓存管理系统和实现分布式缓存管理的方法</invention-title>
      </span><br><span class="patent-number">CN 102833352 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA103373111" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明提供了一种分布式缓存管理系统，包括索引服务器和分布式内存对象缓存服务器，其中，所述索引服务器包括：索引建立单元，用于根据接收到的数据缓存请求，将对应的数据存储至分布式内存对象缓存服务器中，并为缓存的数据建立索引；数据获取单元，用于根据接收到的数据获取请求，获取对应的索引，并利用该索引从所述分布式内存对象缓存服务器中获取对应的数据。本发明还提供了一种实现分布式缓存管理的方法。通过本发明的技术方案，可以对分布式内存对象缓存服务器中的数据进行有效管理，提高请求响应和数据处理的效率。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(10)</span></span></div><div class="patent-text"><div mxw-id="PCLM47645190" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种分布式缓存管理系统，其特征在于，包括索引服务器和分布式内存对象缓存服务器，其中，  所述索引服务器包括：  索引建立单元，用于根据接收到的数据缓存请求，将对应的数据存储至分布式内存对象缓存服务器中，并为缓存的数据建立索引；  数据获取单元，用于根据接收到的数据获取请求，获取对应的索引，并利用该索引从所述分布式内存对象缓存服务器中获取对应的数据。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求I所述的分布式缓存管理系统，其特征在于，所述索引服务器还包括：  数据判断单元，用于根据需要缓存的数据的关键字以及已建立的索引，判断是否存在相同的已缓存数据，若存在，则进一步判断所述需要缓存的数据的版本号是否高于所述已缓存数据的版本号；  数据替换单元，用于在所述需要缓存的数据的版本号高于所述已缓存数据的版本号的情况下，将所述需要缓存的数据替换所述已缓存数据，否则拒绝所述数据缓存请求。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求I所述的分布式缓存管理系统，其特征在于，所述索引服务器还包括：  时间记录单元，用于记录建立索引的时间；以及  存储控制单元，用于在所述分布式内存对象缓存服务器中的已使用内存容量大于或等于预设的容量阈值的情况下，利用新建立的索引及对应的数据替换建立时间最早的已建立索引及对应的数据。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求I至3中任一项所述的分布式缓存管理系统，其特征在于，所述分布式内存对象缓存服务器的数量为多个，则所述索引服务器还包括：  位置确定单元，用于根据所述分布式内存对象缓存服务器的实时状态，确定需要缓存的数据的存储位置，其中，所述实时状态包括以下至少之一或其组合：  所述分布式内存对象缓存服务器的个数、容量、内存空闲程度。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求I至3中任一项所述的分布式缓存管理系统，其特征在于，通过多台索引服务器实现对所述分布式内存对象缓存服务器的管理，其中，所述多台索引服务器包括主服务器和从服务器：  在所述主服务器正常工作的情况下，所述主服务器实现对所述数据缓存请求和所述数据获取请求的响应，所述从服务器实现对所述主服务器的热备；  在所述主服务器出现故障的情况下，由所述从服务器实现对所述数据缓存请求和所述数据获取请求的响应；以及  在所述主服务器恢复正常的情况下，从指定的索引服务器上获取最新索引状态信息，以获取对所述数据缓存请求和所述数据获取请求的响应。</div>
    </div>
    </div> <div class="claim"> <div num="6" class="claim">
      <div class="claim-text">6.	一种实现分布式缓存管理的方法，其特征在于，包括：  步骤202，根据接收到的数据缓存请求，将对应的数据存储至分布式内存对象缓存服务器中，并为缓存的数据建立索引；  步骤204，根据接收到的数据获取请求，获取对应的索引，并利用该索引从所述分布式内存对象缓存服务器中获取对应的数据。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求6所述的实现分布式缓存管理的方法，其特征在于，所述步骤202还包括：根据需要缓存的数据的关键字以及已建立的索引，判断是否存在相同的已缓存数据，若存在，则当所述需要缓存的数据的版本号高于所述已缓存数据的版本号时，将所述需要缓存的数据替换所述已缓存数据，否则拒绝所述数据缓存请求。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.根据权利要求6所述的实现分布式缓存管理的方法，其特征在于，所述步骤202还包括：  记录建立索引的时间；以及   在所述分布式内存对象缓存服务器中的已使用内存容量大于或等于预设的容量阈值时，利用新建立的索引及对应的数据替换建立时间最早的已建立索引及对应的数据。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.根据权利要求6至8中任一项所述的实现分布式缓存管理的方法，其特征在于，所述分布式内存对象缓存服务器的数量为多个，则根据所述分布式内存对象缓存服务器的实时状态，确定需要缓存的数据的存储位置，其中，所述实时状态包括以下至少之一或其组合：  所述分布式内存对象缓存服务器的个数、容量、内存空闲程度。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.根据权利要求6至8中任一项所述的实现分布式缓存管理的方法，其特征在于，通过多台索引服务器实现对所述分布式内存对象缓存服务器的管理，其中，所述多台索引服务器包括主服务器和从服务器：  当所述主服务器正常工作时，所述主服务器实现对所述数据缓存请求和所述数据获取请求的响应，所述从服务器实现对所述主服务器的热备；  当所述主服务器出现故障时，由所述从服务器实现对所述数据缓存请求和所述数据获取请求的响应；以及  当所述主服务器恢复正常时，从指定的索引服务器上获取最新索引状态信息，以获取对所述数据缓存请求和所述数据获取请求的响应。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES54628795" lang="ZH" load-source="patent-office" class="description">
    <p>分布式缓存管理系统和实现分布式缓存管理的方法</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及分布式缓存管理技术领域，具体而言，涉及一种分布式缓存管理系统和一种实现分布式缓存管理的方法。</p>
    <p>背景技术</p>
    <p>[0002]	在B2C电商实践中，为了改善用户浏览图片的速度，但同时减少图片存储服务器的访问压力，采用了 Memcached (分布式内存对象缓存服务器）实现cache (高速缓冲存储器)集群，达到分担来自前端的请求。在运营的过程中，随着Memcached中实例的不断增加，开始出现以下问题：</p>
    <p>[0003]	I &#183; η台分布的Memcached做实际数据的存储，每台Memcached存放数据总量的一个子集（分布算法：Key映射整数值,再根据已有server数取模）,随着Memcached实例数量的增加，管理、维护的难度也相应增加； </p>
    <p>[0004]	2.新增X台Memcached进行扩容，已有数据需要作大规模迁移，且同时一定时间内cache命中较低；</p>
    <p>[0005]	3.如有Memcached服务异常退出，如不能迅速拉起,会影响前端访问的体验,或者可能导致数据分布的重计算，使得Memcached的SLA(Service-Level Agreement,服务等级协议）级别较低；</p>
    <p>[0006]	4.因为缺乏统一分配、管理机制，可能会存在数据在多个Memcached存在实例的情况，导致数据不一致或不同版本数据冲突的情况。</p>
    <p>[0007]	因此，需要一种新的分布式缓存管理技术，可以对分布式内存对象缓存服务器中的数据进行有效管理，提高请求响应和数据处理的效率。</p>
    <p>发明内容</p>
    <p>[0008]	本发明正是基于上述问题，提出了一种新的分布式缓存管理技术，可以对分布式内存对象缓存服务器中的数据进行有效管理，提高请求响应和数据处理的效率。</p>
    <p>[0009]	有鉴于此，本发明提出了一种分布式缓存管理系统，包括索引服务器和分布式内存对象缓存服务器，其中，所述索引服务器包括：索引建立单元，用于根据接收到的数据缓存请求，将对应的数据存储至分布式内存对象缓存服务器中，并为缓存的数据建立索引；数据获取单元，用于根据接收到的数据获取请求，获取对应的索引，并利用该索引从所述分布式内存对象缓存服务器中获取对应的数据。</p>
    <p>[0010]	在该技术方案中，在分布式内存对象缓存服务器的前端设置索引服务器，通过为缓存的数据建立索引，当用户希望获取某个数据时，能够由索引服务器根据索引及时准确地查找到该数据，在缓存的数据量较大时，依然能够对每个数据进行有效管理，并提高数据查找效率。在由多台分布式内存对象缓存服务器构成服务器集群时，其中的部分服务器出现问题时，不会对其他的服务器造成影响，使得整个系统保持高可用性。</p>
    <p>[0011]	在上述技术方案中，优选地，所述索引服务器还包括：数据判断单元，用于根据需要缓存的数据的关键字以及已建立的索引，判断是否存在相同的已缓存数据，若存在，则进一步判断所述需要缓存的数据的版本号是否高于所述已缓存数据的版本号；数据替换单元，用于在所述需要缓存的数据的版本号高于所述已缓存数据的版本号的情况下，将所述需要缓存的数据替换所述已缓存数据，否则拒绝所述数据缓存请求。</p>
    <p>[0012]	在该技术方案中，通过对数据版本号的比较，实现对于数据的更新，并避免出现低版本的数据对高版本数据的覆盖。</p>
    <p>[0013]	在上述任一技术方案中，优选地，所述索引服务器还包括：时间记录单元，用于记录建立索引的时间；以及存储控制单元，用于在所述分布式内存对象缓存服务器中的已使用内存容量大于或等于预设的容量阈值的情况下，利用新建立的索引及对应的数据替换建立时间最早的已建立索引及对应的数据。</p>
    <p>[0014]	在该技术方案中，对于已使用内存容量不足的情况下，根据建立时间进行新老替换，从而可以比较好地处理索引数量的不断增加与有限的内存容量之间的供需矛盾。</p>
    <p>[0015]	在上述任一技术方案中，优选地，所述分布式内存对象缓存服务器的数量为多个， 则所述索引服务器还包括：位置确定单元，用于根据所述分布式内存对象缓存服务器的实时状态，确定需要缓存的数据的存储位置，其中，所述实时状态包括以下至少之一或其组合：所述分布式内存对象缓存服务器的个数、容量、内存空闲程度。</p>
    <p>[0016]	在该技术方案中，不再按照Key取模的方式进行处理，从而实现更好的负载均衡分配。</p>
    <p>[0017]	在上述任一技术方案中，优选地，通过多台索引服务器实现对所述分布式内存对象缓存服务器的管理，其中，所述多台索引服务器包括主服务器和从服务器：在所述主服务器正常工作的情况下，所述主服务器实现对所述数据缓存请求和所述数据获取请求的响应，所述从服务器实现对所述主服务器的热备；在所述主服务器出现故障的情况下，由所述从服务器实现对所述数据缓存请求和所述数据获取请求的响应；以及在所述主服务器恢复正常的情况下，从指定的索引服务器上获取最新索引状态信息，以获取对所述数据缓存请求和所述数据获取请求的响应。</p>
    <p>[0018]	在该技术方案中，通过设置主从式的索引服务器集群，从而在主服务器出现问题时，可以由从服务器进行顶替；而主服务器在恢复正常后，也能够及时通过对最新索引状态信息的获取，最快地重新恢复工作，把对系统运行和用户体验的影响降至最小。</p>
    <p>[0019]	根据本发明的又一方面，还提出了一种实现分布式缓存管理的方法，包括：步骤202，根据接收到的数据缓存请求，将对应的数据存储至分布式内存对象缓存服务器中，并为缓存的数据建立索引；步骤204，根据接收到的数据获取请求，获取对应的索引，并利用该索引从所述分布式内存对象缓存服务器中获取对应的数据。</p>
    <p>[0020]	在该技术方案中，在分布式内存对象缓存服务器的前端设置索引服务器，通过为缓存的数据建立索引，当用户希望获取某个数据时，能够由索引服务器根据索引及时准确地查找到该数据，在缓存的数据量较大时，依然能够对每个数据进行有效管理，并提高数据查找效率。在由多台分布式内存对象缓存服务器构成服务器集群时，其中的部分服务器出现问题时，不会对其他的服务器造成影响，使得整个系统保持高可用性。</p>
    <p>[0021]	在上述技术方案中，优选地，所述步骤202还包括：根据需要缓存的数据的关键字以及已建立的索引，判断是否存在相同的已缓存数据，若存在，则当所述需要缓存的数据的版本号高于所述已缓存数据的版本号时，将所述需要缓存的数据替换所述已缓存数据，否则拒绝所述数据缓存请求。</p>
    <p>[0022]	在该技术方案中，通过对数据版本号的比较，实现对于数据的更新，并避免出现低版本的数据对高版本数据的覆盖。</p>
    <p>[0023]	在上述任一技术方案中，优选地，所述步骤202还包括：记录建立索引的时间；以及在所述分布式内存对象缓存服务器中的已使用内存容量大于或等于预设的容量阈值时，利用新建立的索引及对应的数据替换建立时间最早的已建立索引及对应的数据。</p>
    <p>[0024]	在该技术方案中，对于已使用内存容量不足的情况下，根据建立时间进行新老替换，从而可以比较好地处理索引数量的不断增加与有限的内存容量之间的供需矛盾。</p>
    <p>[0025]	在上述任一技术方案中，优选地，所述分布式内存对象缓存服务器的数量为多个，则根据所述分布式内存对象缓存服务器的实时状态，确定需要缓存的数据的存储位置，其 中，所述实时状态包括以下至少之一或其组合：所述分布式内存对象缓存服务器的个数、容量、内存空闲程度。</p>
    <p>[0026]	在该技术方案中，不再按照Key取模的方式进行处理，从而实现更好的负载均衡分配。</p>
    <p>[0027]	在上述任一技术方案中，优选地，通过多台索引服务器实现对所述分布式内存对象缓存服务器的管理，其中，所述多台索引服务器包括主服务器和从服务器：当所述主服务器正常工作时，所述主服务器实现对所述数据缓存请求和所述数据获取请求的响应，所述从服务器实现对所述主服务器的热备；当所述主服务器出现故障时，由所述从服务器实现对所述数据缓存请求和所述数据获取请求的响应；以及当所述主服务器恢复正常时，从指定的索引服务器上获取最新索引状态信息，以获取对所述数据缓存请求和所述数据获取请求的响应。</p>
    <p>[0028]	在该技术方案中，通过设置主从式的索引服务器集群，从而在主服务器出现问题时，可以由从服务器进行顶替；而主服务器在恢复正常后，也能够及时通过对最新索引状态信息的获取，最快地重新恢复工作，把对系统运行和用户体验的影响降至最小。</p>
    <p>[0029]	通过以上技术方案，可以对分布式内存对象缓存服务器中的数据进行有效管理，提高请求响应和数据处理的效率。</p>
    <p>附图说明</p>
    <p>[0030]	图IA和图IB示出了根据本发明的实施例的分布式缓存管理系统的框图；</p>
    <p>[0031]	图2示出了根据本发明的实施例的实现分布式缓存管理的方法的流程图；</p>
    <p>[0032]	图3示出了根据本发明的实施例的分布式缓存管理系统的结构示意图；</p>
    <p>[0033]	图4A示出了根据本发明的实施例的主索引服务器的索引服务的运行时的示意图；</p>
    <p>[0034]	图4B示出了根据本发明的实施例的从索引服务器的索引服务的运行时的示意图；</p>
    <p>[0035]	图5A示出了根据本发明的实施例的建立索引的流程示意图；</p>
    <p>[0036]	图5B示出了根据本发明的实施例的读取数据的流程示意图。具体实施方式</p>
    <p>[0037]	为了能够更清楚地理解本发明的上述目的、特征和优点，下面结合附图和具体实施方式对本发明进行进一步的详细描述。需要说明的是，在不冲突的情况下，本申请的实施例及实施例中的特征可以相互组合。</p>
    <p>[0038]	在下面的描述中阐述了很多具体细节以便于充分理解本发明，但是，本发明还可以采用其他不同于在此描述的其他方式来实施，因此，本发明的保护范围并不受下面公开的具体实施例的限制。</p>
    <p>[0039]	图IA和图IB示出了根据本发明的实施例的分布式缓存管理系统的框图。</p>
    <p>[0040]	如图IA所示，根据本发明的实施例的分布式缓存管理系统100，包括索引服务器100A和分布式内存对象缓存服务器100B，其中，所述索引服务器100A包括：索引建立单元102，用于根据接收到的数据缓存请求，将对应的数据存储至分布式内存对象缓存服务器100B中，并为缓存的数据建立索引；数据获取单元104，用于根据接收到的数据获取请求，获取对应的索引，并利用该索引从所述分布式内存对象缓存服务器100B中获取对应的数  据。</p>
    <p>[0041]	在该技术方案中，在分布式内存对象缓存服务器100B的前端设置索引服务器100A，通过为缓存的数据建立索引，当用户希望获取某个数据时，能够由索引服务器100A根据索引及时准确地查找到该数据，在缓存的数据量较大时，依然能够对每个数据进行有效管理，并提高数据查找效率。在由多台分布式内存对象缓存服务器100B构成服务器集群时，其中的部分服务器出现问题时，不会对其他的服务器造成影响，使得整个系统保持高可用性。</p>
    <p>[0042]	在上述技术方案中，优选地，所述索引服务器100A还包括：数据判断单元106，用于根据需要缓存的数据的关键字以及已建立的索引，判断是否存在相同的已缓存数据，若存在，则进一步判断所述需要缓存的数据的版本号是否高于所述已缓存数据的版本号；数据替换单元108，用于在所述需要缓存的数据的版本号高于所述已缓存数据的版本号的情况下，将所述需要缓存的数据替换所述已缓存数据，否则拒绝所述数据缓存请求。</p>
    <p>[0043]	在该技术方案中，通过对数据版本号的比较，实现对于数据的更新，并避免出现低版本的数据对高版本数据的覆盖。</p>
    <p>[0044]	在上述任一技术方案中，优选地，所述索引服务器100A还包括：时间记录单元110，用于记录建立索引的时间；以及存储控制单元112，用于在所述分布式内存对象缓存服务器100B中的已使用内存容量大于或等于预设的容量阈值的情况下，利用新建立的索引及对应的数据替换建立时间最早的已建立索引及对应的数据。</p>
    <p>[0045]	在该技术方案中，对于已使用内存容量不足的情况下，根据建立时间进行新老替换，从而可以比较好地处理索引数量的不断增加与有限的内存容量之间的供需矛盾。</p>
    <p>[0046]	如图IB所示，优选地，所述分布式内存对象缓存服务器100B的数量为多个，则所述索引服务器100A包含除了图IA中所示的各单元外，还包括：位置确定单元114，用于根据所述分布式内存对象缓存服务器100B的实时状态，确定需要缓存的数据的存储位置，其中，所述实时状态包括以下至少之一或其组合：所述分布式内存对象缓存服务器100B的个数、容量、内存空闲程度。</p>
    <p>[0047]	在该技术方案中，不再按照Key取模的方式进行处理，从而实现更好的负载均衡分配。</p>
    <p>[0048]	在上述技术方案中，优选地，通过多台索引服务器100A实现对所述分布式内存对象缓存服务器100B的管理，其中，所述多台索引服务器100A包括主服务器和从服务器：在所述主服务器正常工作的情况下，所述主服务器实现对所述数据缓存请求和所述数据获取请求的响应，所述从服务器实现对所述主服务器的热备；在所述主服务器出现故障的情况下，由所述从服务器实现对所述数据缓存请求和所述数据获取请求的响应；以及在所述主服务器恢复正常的情况下，从指定的索引服务器100A上获取最新索引状态信息，以获取对所述数据缓存请求和所述数据获取请求的响应。</p>
    <p>[0049]	在该技术方案中，通过设置主从式的索引服务器集群，从而在主服务器出现问题时，可以由从服务器进行顶替；而主服务器在恢复正常后，也能够及时通过对最新索引状态信息的获取，最快地重新恢复工作，把对系统运行和用户体验的影响降至最小。</p>
    <p>[0050]	图2示出了根据本发明的实施例的实现分布式缓存管理的方法的流程图。 [0051]	如图2所示，根据本发明的实施例的实现分布式缓存管理的方法，包括：步骤202，根据接收到的数据缓存请求，将对应的数据存储至分布式内存对象缓存服务器中，并为缓存的数据建立索引；步骤204，根据接收到的数据获取请求，获取对应的索引，并利用该索引从所述分布式内存对象缓存服务器中获取对应的数据。</p>
    <p>[0052]	在该技术方案中，在分布式内存对象缓存服务器的前端设置索引服务器，通过为缓存的数据建立索引，当用户希望获取某个数据时，能够由索引服务器根据索引及时准确地查找到该数据，在缓存的数据量较大时，依然能够对每个数据进行有效管理，并提高数据查找效率。在由多台分布式内存对象缓存服务器构成服务器集群时，其中的部分服务器出现问题时，不会对其他的服务器造成影响，使得整个系统保持高可用性。</p>
    <p>[0053]	在上述技术方案中，优选地，所述步骤202还包括：根据需要缓存的数据的关键字以及已建立的索引，判断是否存在相同的已缓存数据，若存在，则当所述需要缓存的数据的版本号高于所述已缓存数据的版本号时，将所述需要缓存的数据替换所述已缓存数据，否则拒绝所述数据缓存请求。</p>
    <p>[0054]	在该技术方案中，通过对数据版本号的比较，实现对于数据的更新，并避免出现低版本的数据对高版本数据的覆盖。</p>
    <p>[0055]	在上述任一技术方案中，优选地，所述步骤202还包括：记录建立索引的时间；以及在所述分布式内存对象缓存服务器中的已使用内存容量大于或等于预设的容量阈值时，利用新建立的索引及对应的数据替换建立时间最早的已建立索引及对应的数据。</p>
    <p>[0056]	在该技术方案中，对于已使用内存容量不足的情况下，根据建立时间进行新老替换，从而可以比较好地处理索引数量的不断增加与有限的内存容量之间的供需矛盾。</p>
    <p>[0057]	在上述任一技术方案中，优选地，所述分布式内存对象缓存服务器的数量为多个，则根据所述分布式内存对象缓存服务器的实时状态，确定需要缓存的数据的存储位置，其中，所述实时状态包括以下至少之一或其组合：所述分布式内存对象缓存服务器的个数、容量、内存空闲程度。</p>
    <p>[0058]	在该技术方案中，不再按照Key取模的方式进行处理，从而实现更好的负载均衡分配。</p>
    <p>[0059]	在上述任一技术方案中，优选地，通过多台索引服务器实现对所述分布式内存对象缓存服务器的管理，其中，所述多台索引服务器包括主服务器和从服务器：当所述主服务器正常工作时，所述主服务器实现对所述数据缓存请求和所述数据获取请求的响应，所述从服务器实现对所述主服务器的热备；当所述主服务器出现故障时，由所述从服务器实现对所述数据缓存请求和所述数据获取请求的响应；以及当所述主服务器恢复正常时，从指定的索引服务器上获取最新索引状态信息，以获取对所述数据缓存请求和所述数据获取请求的响应。</p>
    <p>[0060]	在该技术方案中，通过设置主从式的索引服务器集群，从而在主服务器出现问题时，可以由从服务器进行顶替；而主服务器在恢复正常后，也能够及时通过对最新索引状态信息的获取，最快地重新恢复工作，把对系统运行和用户体验的影响降至最小。</p>
    <p>[0061]	图3示出了根据本发明的实施例的分布式缓存管理系统的结构示意图。</p>
    <p>[0062]	如图3所示，分布式缓存管理系统包括索引服务器和MemcachedlOOB，其中，索引服务器包括主索引服务器100A1和从索引服务器100A2。应用服务器300通过主 索引服务器100A1进行数据的Set (缓存并建立对应的索引）/Get (读取)，并由主索引服务器100A1对MemcachedlOOB进行访问，而应用服务器300自身并不直接对MemcachedlOOB进行访问。</p>
    <p>[0063]	索引服务器以MemcachedlOOB缓存索引数据，将来自应用服务器300的数据分配到具体的MemcachedlOOB位置，并记录对应的索引信息。索引服务器以FIFtXFirst InputFirst Output，先入先出队列）方式进行淘汰，并作为应用服务器300和MemcachedlOOB之间的Proxy (代理服务器）角色进行数据的传输。</p>
    <p>[0064]	可将多个索引服务器配置在一起构成一个索引集群。如该图所示，在同一个索引集群中，索引信息在各个索引服务器之前互为拷贝，保证索引表的一致性，这一特性使用索引集群具有高可用性。</p>
    <p>[0065]	具体地，索引集群中的索引服务器分为主索引服务器100A1和从索引服务器100A2，其中，从索引服务器100A2不进行实际的Set/Get操作，只是对主索引服务器100A1的一份热备。当主索引服务器100A1出现异常时，从索引服务器100A2可承担处理应用的请求，而原来已经异常的主索引服务器100A1变为从，把对应用产生的影响降至最小。主索引服务器100A1出现异常时，通过配置中心进行服务路由切换，那么从索引服务器100A2将由从变为主，所有的Set/Get请求落在该从索引服务器100A2上，待故障的主索引服务器100A1恢复并重新启动时，会向集群中指定IP的索引服务器请求当前最新的状态信息，这些信息包括：Memcached服务列表信息、索引数据的全量信息等，从而重新由从变回主，对数据进行处理。</p>
    <p>[0066]	索引服务器后端的MemcachedlOOB构成实际的存储信息集群，每个MemcachedlOOB保存一部分数据，索引服务器对已有的存储资源进行分配，并实时地将索引信息同步到索引集群中的其他索引服务器上去。</p>
    <p>[0067]	在MemcachedlOOB中，数据的实际存储位置的分配，不再按照Key取模的方式，而是根据后端MemcachedlOOB的个数及容量、内存空闲程度等进行负载均衡分配。当对MemcachedlOOB进行扩容时，不会对已存储的信息造成影响，也不存在扩容时的数据迁移问题，因为所有的数据都已经通过索引建立了具体的对应关系，只需要对之后继续缓存的数据继续建立索引即可；同时，单个或部分MemcachedlOOB的失效也不会影响到整个Memcached群集的可用性。[0068]	在建立索引的过程中，对于同一索引Key的数据，根据已缓存的数据和待缓存的数据的版本号进行区分，从而避免了低版本数据覆盖高版本数据的问题。</p>
    <p>[0069]	通过上述分布式缓存管理系统及相应的处理过程，使得Memcached实例的SLA级别相比于不使用索引时得到较大的提升。</p>
    <p>[0070]	对于图3所示的分布式缓存管理系统，其具体的框架及运行时的情况，下面结合图4A和图4B进行说明，其中，图4A示出了根据本发明的实施例的主索引服务器的索引服务的运行时的示意图；图48示出了根据本发明的实施例的从索引服务器的索引服务的运行时的示意图。</p>
    <p>[0071]	如图4A和图4B所示，索引服务器主要包括配置代理模块（Config-agent)、本地索引控制器（Loc Index Controller)、数据传输装置（Reactor NetIO)、通信管理线程(JgroupsMsg Manager Thread)、工作池（WorkersPool)分发器、Worker 线程等实现索引建 立、数据获取等功能，其中：</p>
    <p>[0072]	本地索引控制器中还设置有定时器模块（Timer-Module)和Memcached列表(Memcached List),配置代理模块与定时器模块之间实现JAVA本地调用（jni, Java NativeInterface),而定时器模块与Memcached列表实现数据传输。</p>
    <p>[0073]	数据传输装置中包含有请求单元（request)和响应单元（response)。</p>
    <p>[0074]	通信管理线程与应用服务器通过多播信息(多播Pkg)实现数据交互。</p>
    <p>[0075]	Worker 线程包括队列、索引图（Index Map)、Memcached 连接池（Memcached conpool),每个Worker线程分别与Memcached集群连接,实现数据交互。</p>
    <p>[0076]	如图4A所示，在建立索引的过程中，主要包括以下步骤：</p>
    <p>[0077]	I、请求单元将请求发送至工作池分发器。</p>
    <p>[0078]	2、工作池分发器根据请求中的Key取Worker线程数模进行分发。</p>
    <p>[0079]	3、Worker线程处理完成后返回数据包。</p>
    <p>[0080]	如图4B所示，在读取数据的过程中，主要包括以下步骤：</p>
    <p>[0081]	I、通过通信管理线程接收到应用服务器发送的多播信息。</p>
    <p>[0082]	2、通信管理线程将多播信息发送至工作池分发器。</p>
    <p>[0083]	3、工作池分发器将消息分给具体的Worker线程进行处理。</p>
    <p>[0084]	对于图4A和图4B对应的具体的建立索引和读取数据的流程，下面结合图5A和图5B进行详细说明，其中，图5A示出了根据本发明的实施例的建立索引的流程示意图；图58示出了根据本发明的实施例的读取数据的流程示意图。</p>
    <p>[0085]	如图5A所示，建立索引的流程包括：</p>
    <p>[0086]	I.使用者发出的设置（Set)请求通过前端的应用服务器发送至数据传输装置。</p>
    <p>[0087]	2.数据传输装置读取请求包，并判断请求包是否已经读取完整。</p>
    <p>[0088]	3.若请求包读取完整，则数据传输装置将请求包发送至工作池。</p>
    <p>[0089]	4.由工作池分发器选择一个Worker线程，将请求包放入该线程对应的缓存队列，并唤醒该Woker线程进行处理。</p>
    <p>[0090]	5. Worker处理线程判断当前Set数据是否有效,并判断Key是否已经存在Index记录，且版本信息高于当前请求值，若是，需拒绝当前Set请求。否则，从目前有效的Memcached中，随机选择一个作为存储入口（根据Memcached容量信息来随机选择,可以设置为大容量Memcached具有大的当选概率)。</p>
    <p>[0091]	6.通过上述存储入口，将对应的数据缓存至Memcached,其中，如果当前选择中Memcached的已使用内存容量大于预设阈值（比如接近最大值),那么从索引map中找到最老节点（距离当前时间最长)，并使用新的数据替换之。这样就可以比较好的处理索引不断增多和有限的内存容量之间的供需矛盾。</p>
    <p>[0092]	7. Woker线程将Index更新信息保存在Jgroups通知缓存队列中。</p>
    <p>[0093]	8.待Jgroups-msg-snder (通信线程)发送更新消息,通知到索引集群内其他索引服务器。</p>
    <p>[0094]	Worker处理线程根据获取到的Memcached入口信息，获取到此Memcached的长连接，保存应用应用数据。若保存失败，需删除相应Index信息。</p>
    <p>[0095]	9. Worker处理线程拼装Set响应信息，通过NetIO. RespDispatcher找到对应的前 端应用连接入口，将响应包缓存到响应缓存队列。</p>
    <p>[0096]	10.数据传输装置将响应包发送至应用前端。</p>
    <p>[0097]	如图5B所示，读取数据的流程包括：</p>
    <p>[0098]	I.使用者发出的设置（Get)请求通过前端的应用服务器发送至数据传输装置。</p>
    <p>[0099]	2.数据传输装置读取请求包，并判断请求包是否已经读取完整。</p>
    <p>[0100]	3.若请求包读取完整，则数据传输装置发送至工作池。</p>
    <p>[0101]	4.由工作池分发器选择一个Worker线程，将请求包放入该线程对应的缓存队列，并唤醒该Woker线程进行处理。</p>
    <p>[0102]	5. Worker处理线程首先判断Key是否在本地索引表中存在记录,若无则直接通知前端应用Get失败。另外,还可以判断索引是否已经超时,或对应的后端Memcached是否当前有效。</p>
    <p>[0103]	6. Worker处理线程根据获取到的Memcached入口信息，获取到此Memcached的长连接，查询应用应用数据。若查询失败，需删除相应Index信息。</p>
    <p>[0104]	7. Worker处理线程拼装Get响应信息，通过Netio. RespDispatcher找到对应的前端应用连接入口，将响应包缓存到响应缓存队列。</p>
    <p>[0105]	8.数据传输装置将响应包发送至应用前端。</p>
    <p>[0106]	以上结合附图详细说明了本发明的技术方案，考虑到相关技术中无法很好地对分布式内存对象进行有效管理，因此，本发明提供了一种分布式缓存管理系统和一种实现分布式缓存管理的方法，可以对分布式内存对象缓存服务器中的数据进行有效管理，提高请求响应和数据处理的效率。</p>
    <p>[0107]	以上所述仅为本发明的优选实施例而已，并不用于限制本发明，对于本领域的技术人员来说，本发明可以有各种更改和变化。凡在本发明的精神和原则之内，所作的任何修改、等同替换、改进等，均应包含在本发明的保护范围之内。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101651628A?cl=zh">CN101651628A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年9月17日</td><td class="patent-data-table-td patent-date-value">2010年2月17日</td><td class="patent-data-table-td ">杭州华三通信技术有限公司</td><td class="patent-data-table-td ">一种三状态内容可寻址存储器实现方法及装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101969465A?cl=zh">CN101969465A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年10月13日</td><td class="patent-data-table-td patent-date-value">2011年2月9日</td><td class="patent-data-table-td ">北京神州融信信息技术股份有限公司</td><td class="patent-data-table-td ">集群读写方法、装置、系统及控制器</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102375853A?cl=zh">CN102375853A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年8月24日</td><td class="patent-data-table-td patent-date-value">2012年3月14日</td><td class="patent-data-table-td ">中国移动通信集团公司</td><td class="patent-data-table-td ">分布式数据库系统、在其中建立索引的方法和查询方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102420867A?cl=zh">CN102420867A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年12月1日</td><td class="patent-data-table-td patent-date-value">2012年4月18日</td><td class="patent-data-table-td ">浪潮电子信息产业股份有限公司</td><td class="patent-data-table-td ">一种基于实时负载均衡机制的集群存储入口解析方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102662699A?cl=zh">CN102662699A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年3月27日</td><td class="patent-data-table-td patent-date-value">2012年9月12日</td><td class="patent-data-table-td ">惠州Tcl移动通信有限公司</td><td class="patent-data-table-td ">一种更新移动终端nfc固件的方法及其移动终端</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=KXa0BwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029080000">H04L29/08</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2012年12月19日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年2月6日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/a92f53bb4efc5eba2ea6/CN102833352A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_6e802a6b2b28d51711baddc2f3bec198.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%92%8C%E5%AE%9E%E7%8E%B0%E5%88%86.pdf?id=KXa0BwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U2Bvn_uA3VlT_MNBZQOksCGVySRgA"},"sample_url":"https://www.google.com/patents/reader?id=KXa0BwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>