<!DOCTYPE html><html><head><title>专利 CN102722589A - 基于三网融合的数据查询方法及系统 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_6e802a6b2b28d51711baddc2f3bec198/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_6e802a6b2b28d51711baddc2f3bec198__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="基于三网融合的数据查询方法及系统"><meta name="DC.contributor" content="董琪" scheme="inventor"><meta name="DC.contributor" content="车晓雪" scheme="inventor"><meta name="DC.contributor" content="青岛海信传媒网络技术有限公司" scheme="assignee"><meta name="DC.date" content="2012-6-15" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种基于三网融合的数据查询方法及系统，所述方法包括：数据网格从应用服务器发送的查询文件中解析出查询条件；并对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息后，将生成的消息向对应的数据源服务器发送；并将各数据源服务器返回的查询结果封装到预定格式的查询结果文件后向所述应用服务器返回。由于在不同网络介质中的应用服务器与提供数据源的数据源服务器之间设置了数据网格，使得不同介质中的应用服务器可以通过数据网格平台而获得不同介质中各数据源的查询结果，从而使用户更为方便地获取更全面、更完善的查询结果。"><meta name="DC.date" content="2012-10-10"><meta name="DC.relation" content="CN:101256560:A" scheme="references"><meta name="DC.relation" content="CN:101640825:A" scheme="references"><meta name="DC.relation" content="CN:102064959:A" scheme="references"><meta name="DC.relation" content="CN:102300129:A" scheme="references"><meta name="citation_patent_publication_number" content="CN:102722589:A"><meta name="citation_patent_application_number" content="CN:201210198815"><link rel="canonical" href="https://www.google.com/patents/CN102722589A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102722589A?cl=zh"/><meta name="title" content="专利 CN102722589A - 基于三网融合的数据查询方法及系统"/><meta name="description" content="本发明公开了一种基于三网融合的数据查询方法及系统，所述方法包括：数据网格从应用服务器发送的查询文件中解析出查询条件；并对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息后，将生成的消息向对应的数据源服务器发送；并将各数据源服务器返回的查询结果封装到预定格式的查询结果文件后向所述应用服务器返回。由于在不同网络介质中的应用服务器与提供数据源的数据源服务器之间设置了数据网格，使得不同介质中的应用服务器可以通过数据网格平台而获得不同介质中各数据源的查询结果，从而使用户更为方便地获取更全面、更完善的查询结果。"/><meta property="og:title" content="专利 CN102722589A - 基于三网融合的数据查询方法及系统"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102722589A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102722589A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=ZF6oBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102722589A&amp;usg=AFQjCNHw6jpsaYuA1TjkXeFP5t2Ka0m1hw" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/9c95900b0b2a90cb5ad9/CN102722589A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/9c95900b0b2a90cb5ad9/CN102722589A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102722589A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102722589A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102722589A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102722589B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102722589A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种基于三网融合的数据查询方法及系统，所述方法包括：数据网格从应用服务器发送的查询文件中解析出查询条件；并对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息后，将生成的消息...</span><span itemprop="url">https://www.google.com/patents/CN102722589A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102722589A - 基于三网融合的数据查询方法及系统</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102722589A - 基于三网融合的数据查询方法及系统" title="专利 CN102722589A - 基于三网融合的数据查询方法及系统"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102722589 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210198815</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2012年10月10日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年6月15日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年6月15日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102722589B?hl=zh-CN&amp;cl=zh">CN102722589B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210198815.6, </span><span class="patent-bibdata-value">CN 102722589 A, </span><span class="patent-bibdata-value">CN 102722589A, </span><span class="patent-bibdata-value">CN 201210198815, </span><span class="patent-bibdata-value">CN-A-102722589, </span><span class="patent-bibdata-value">CN102722589 A, </span><span class="patent-bibdata-value">CN102722589A, </span><span class="patent-bibdata-value">CN201210198815, </span><span class="patent-bibdata-value">CN201210198815.6</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%91%A3%E7%90%AA%22">董琪</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%BD%A6%E6%99%93%E9%9B%AA%22">车晓雪</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E9%9D%92%E5%B2%9B%E6%B5%B7%E4%BF%A1%E4%BC%A0%E5%AA%92%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">青岛海信传媒网络技术有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102722589A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102722589A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102722589A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=ZF6oBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210198815&amp;usg=AFQjCNHGDU5DgI896Jf93pm5cbgOFHACQA"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=ZF6oBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102722589A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNEmgt6NjNkeL9s2tVQlf2l4UsLBbw"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT116107128" lang="ZH" load-source="patent-office">基于三网融合的数据查询方法及系统</invention-title>
      </span><br><span class="patent-number">CN 102722589 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA101019394" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种基于三网融合的数据查询方法及系统，所述方法包括：数据网格从应用服务器发送的查询文件中解析出查询条件；并对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息后，将生成的消息向对应的数据源服务器发送；并将各数据源服务器返回的查询结果封装到预定格式的查询结果文件后向所述应用服务器返回。由于在不同网络介质中的应用服务器与提供数据源的数据源服务器之间设置了数据网格，使得不同介质中的应用服务器可以通过数据网格平台而获得不同介质中各数据源的查询结果，从而使用户更为方便地获取更全面、更完善的查询结果。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(10)</span></span></div><div class="patent-text"><div mxw-id="PCLM45767655" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种基于三网融合的数据查询方法，包括：  应用服务器在接收到终端发送的查询请求后，解析出查询条件；将所述查询条件封装在预定格式的查询文件中向数据网格发送；  所述数据网格从所述查询文件中解析出查询条件；并对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息后，将生成的消息向对应的数据源服务器发送;  所述数据网格将各数据源服务器返回的查询结果封装到预定格式的查询结果文件后向所述应用服务器返回；  所述应用服务器在接收到所述查询结果文件后，从中解析出查询结果向终端返回。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.如权利要求I所述的方法，其特征在于，所述对应于各不同网络介质中的数据源服 务器，根据所述查询条件分别生成消息具体为：  所述数据网格对于各不同网络介质中的数据源服务器，根据schema文件记录的每个数据源服务器的网络地址以及该数据源服务器所支持的协议，生成对应于该数据源服务器、包含所述查询条件的消息。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.如权利要求I所述的方法，其特征在于，在所述对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息之前，还包括：  所述数据网格根据所述查询条件在本地缓存中存储的至少一个数据源服务器的数据中查询，得到第一查询结果；以及  所述数据网格将各数据源服务器返回的查询结果封装到预定格式的查询结果文件具体为：  所述数据网格将数据未存储到所述缓存中的数据源服务器返回的查询结果作为第二查询结果，将第一查询结果和第二查询结果封装到所述查询结果文件中。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.如权利要求3所述的方法，其特征在于，所述数据网格的本地缓存中的数据源服务器的数据是根据如下方法进行存储的：  所述数据网格在设定周期内，若数据源服务器返回查询结果，则记录下该数据源服务器在进行该次查询结果返回时所用响应时长；  所述数据网格在设定周期到达时，将设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存中。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.如权利要求4所述的方法，其特征在于，在所述将设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存之前，还包括：  所述数据网格判断本地缓存空间是否足够；以及，  所述将设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存具体为：  若所述本地缓存空间足够，则直接将设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存中；  若所述本地缓存空间不足，则将设定周期内响应时长最长或记录频率最高的数据源服务器的数据覆盖掉所述本地缓存中存储时间最久的数据源服务器的数据。</div>
    </div>
    </div> <div class="claim"> <div num="6" class="claim">
      <div class="claim-text">6.	一种基于三网融合的数据查询系统，包括：数据网格、与所述数据网格连接的设置 于不同网络介质中的多个应用服务器、与所述数据网格连接的设置于不同网络介质中的多个数据源服务器；  所述应用服务器用于在接收到终端发送的查询请求后，解析出查询条件；将所述查询条件封装在预定格式的查询文件中向所述数据网格发送；  所述数据网格用于从所述查询文件中解析出查询条件，并对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息后，将生成的消息向对应的数据源服务器发送；  所述数据源服务器用于根据所述数据网格发送的消息中的查询条件进行查询，并向所述数据网格返回查询结果；  所述数据网格还用于将各数据源服务器返回的查询结果封装到预定格式的查询结果文件后向所述应用服务器返回；  所述应用服务器在接收到返回的查询结果文件后，从中解析出查询结果向终端返回。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.如权利要求6所述的系统，其特征在于，所述数据网格对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息具体为：  所述数据网格对于各不同网络介质中的数据源服务器，根据schema文件记录的每个数据源服务器的网络地址以及该数据源服务器所支持的协议，生成对应于该数据源服务器、包含所述查询条件的消息。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.如权利要求6所述的系统，其特征在于，  所述数据网格还用于在所述对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息之前，根据所述查询条件在本地缓存中存储的至少一个数据源服务器的数据中查询，得到第一查询结果；以及  所述数据网格将各数据源服务器返回的查询结果封装到预定格式的查询结果文件具体为：  所述数据网格将数据未存储到所述缓存中的数据源服务器返回的查询结果作为第二查询结果，将第一查询结果和第二查询结果封装到所述查询结果文件中。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.如权利要求8所述的系统，其特征在于，  所述数据网格还用于在设定周期内，若数据源服务器返回查询结果，则记录下该数据源服务器在进行该次查询结果返回时所用响应时长;所述设定周期到达时，将所述设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存中。</div>
    </div>
    </div> <div class="claim"> <div num="10" class="claim">
      <div class="claim-text">10.	一种数据网格，包括：  查询文件接收模块，用于接收不同网络介质中的应用服务器发送的查询文件；  查询文件解析模块，用于从所述查询文件中解析出查询条件；  消息生成模块，用于对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息；  消息发送模块，用于将生成的消息向对应的数据源服务器发送；  消息接收模块，用于接收各数据源服务器返回的查询结果；  查询结果文件生成模块，用于将各数据源服务器返回的查询结果封装到预定格式的查询结果文件；  查询结果文件发送模块，用于将生成的查询结果文件向发送所述查询文件的应用服务器返回。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES52117256" lang="ZH" load-source="patent-office" class="description">
    <p>基于三网融合的数据查询方法及系统</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及网络通讯技术，尤其涉及基于三网融合的数据查询方法及系统。</p>
    <p>背景技术</p>
    <p>[0002]	电子商务（Electronic Commerce)是利用计算机技术、网络技术和远程通信技术，实现电子化、数字化和网络化的整个商务过程，例如：网上营销、网上客户服务、以及网上做</p>
    <p>广告、网上调查等。</p>
    <p>[0003]	随着电子商务的日益盛行，无论是互联网、广播电视网（以下简称广电网），还是通信网，都推出了富有自己特色的电子商城系统，如依附于互联网的淘宝和Amazon，依附于广电网的各种购物频道、电视商城和依附于通信网的各种WAP版电子商城(如手机版淘宝）等 </p>
    <p>坐寸o</p>
    <p>[0004]	用户通过终端访问其中一种网络介质的电子商务应用时，比如访问互联网的电子商务应用时，应用服务器会向终端返回该网络介质，即互联网中的数据源的查询。这样，用户如果还希望能够获得其它网络介质中的电子商城的相关查询结果，就不得不通过访问其它网络介质中的电子商务应用得到查询结果。</p>
    <p>[0005]	也就是说，现有技术中，不同网络介质中的数据源无法共享，用户不能通过访问其中一个网络介质的应用，而获取各不同网络介质中的数据源中的查询数据，不能使用户更为方便地获取更全面、更完善的查询结果。</p>
    <p>发明内容</p>
    <p>[0006]	本发明的实施例提供了一种基于三网融合的数据查询方法及系统，使得用户终端可以方便地获得三网融合中不同网络介质的数据源的查询结果。</p>
    <p>[0007]	根据本发明的一个方面，提供了一种基于三网融合的数据查询方法，包括：</p>
    <p>[0008]	应用服务器在接收到终端发送的查询请求后，解析出查询条件；将所述查询条件封装在预定格式的查询文件中向数据网格发送；</p>
    <p>[0009]	所述数据网格从所述查询文件中解析出查询条件；并对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息后，将生成的消息向对应的数据源服务器发送；</p>
    <p>[0010]	所述数据网格将各数据源服务器返回的查询结果封装到预定格式的查询结果文件后向所述应用服务器返回；</p>
    <p>[0011]	所述应用服务器在接收到所述查询结果文件后，从中解析出查询结果向终端返回。</p>
    <p>[0012]	其中，所述对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息具体为：</p>
    <p>[0013]	所述数据网格对于各不同网络介质中的数据源服务器，根据schema文件记录的每个数据源服务器的网络地址以及该数据源服务器所支持的协议，生成对应于该数据源服务器、包含所述查询条件的消息。</p>
    <p>[0014]	进一步，在所述对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息之前，所述方法还包括：</p>
    <p>[0015]	所述数据网格根据所述查询条件在本地缓存中存储的至少一个数据源服务器的数据中查询，得到第一查询结果；以及</p>
    <p>[0016]	所述数据网格将各数据源服务器返回的查询结果封装到预定格式的查询结果文件具体为：</p>
    <p>[0017]	所述数据网格将数据未存储到所述缓存中的数据源服务器返回的查询结果作为第二查询结果，将第一查询结果和第二查询结果封装到所述查询结果文件中。</p>
    <p>[0018]	较佳地，所述数据网格的本地缓存中的数据源服务器的数据是根据如下方法进行存储的： </p>
    <p>[0019]	所述数据网格在设定周期内，若数据源服务器返回查询结果，则记录下该数据源服务器在进行该次查询结果返回时所用响应时长；</p>
    <p>[0020]	所述数据网格在设定周期到达时，将设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存中。</p>
    <p>[0021]	进一步，在所述将设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存之前，所述方法还包括：</p>
    <p>[0022]	所述数据网格判断本地缓存空间是否足够；以及，</p>
    <p>[0023]	所述将设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存具体为：</p>
    <p>[0024]	若所述本地缓存空间足够，则直接将设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存中；</p>
    <p>[0025]	若所述本地缓存空间不足，则将设定周期内响应时长最长或记录频率最高的数据源服务器的数据覆盖掉所述本地缓存中存储时间最久的数据源服务器的数据。</p>
    <p>[0026]	若所述数据源服务器所在网络介质具体为互联网，该数据源服务器所支持的协议为HTTP协议，则对应于该数据源服务器，根据所述查询条件生成消息后，将生成的消息向对应的数据源服务器发送具体包括：</p>
    <p>[0027]	所述数据网格对应于该数据源服务器，根据所述查询条件生成HTTP请求消息；根据该数据源服务器之前开放的相应的通信端口，以schema文件中记录的请求方法将生成的HTTP请求消息向该数据源服务器发送。</p>
    <p>[0028]	若所述数据源服务器所在网络介质具体为通信网，该数据源服务器所支持的协议为SOAP协议，则对应于该数据源服务器，根据所述查询条件生成消息后，将生成的消息向对应的数据源服务器发送具体包括：</p>
    <p>[0029]	所述数据网格对应于该数据源服务器，根据所述查询条件生成SOAP消息，并根据该数据源服务器之前提供的访问数据的过程调用和应答的协定向该数据源服务器发送生成的SOAP消息。</p>
    <p>[0030]	若所述数据源服务器所在网络介质具体为广电网，该数据源服务器所支持的协议为LDAP协议，则对应于该数据源服务器，根据所述查询条件生成消息后，将生成的消息向对应的数据源服务器发送具体包括：[0031]	所述数据网格对应于该数据源服务器，根据之前该数据源服务器向所述数据网格建立并开放的层次结构，以及所述查询条件、schema文件中的dn标签生成包含查询语句的消息后，将生成的消息向该数据源服务器发送。</p>
    <p>[0032]	其中，所述应用服务器所在网络介质具体为广播电视网；或者，</p>
    <p>[0033]	所述应用服务器所在网络介质具体为互联网；或者，</p>
    <p>[0034]	所述应用服务器所在网络介质具体为通信网。</p>
    <p>[0035]	根据本发明的另一个方面，还提供了一种基于三网融合的数据查询系统，包括：</p>
    <p>[0036]	数据网格、与所述数据网格连接的设置于不同网络介质中的多个应用服务器、与 所述数据网格连接的设置于不同网络介质中的多个数据源服务器；</p>
    <p>[0037]	所述应用服务器用于在接收到终端发送的查询请求后，解析出查询条件；将所述查询条件封装在预定格式的查询文件中向所述数据网格发送；</p>
    <p>[0038]	所述数据网格用于从所述查询文件中解析出查询条件，并对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息后，将生成的消息向对应的数据源服务器发送；</p>
    <p>[0039]	所述数据源服务器用于根据所述数据网格发送的消息中的查询条件进行查询，并向所述数据网格返回查询结果；</p>
    <p>[0040]	所述数据网格还用于将各数据源服务器返回的查询结果封装到预定格式的查询结果文件后向所述应用服务器返回；</p>
    <p>[0041]	所述应用服务器在接收到返回的查询结果文件后，从中解析出查询结果向终端返回。</p>
    <p>[0042]	较佳地，所述数据网格对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息具体为：</p>
    <p>[0043]	所述数据网格对于各不同网络介质中的数据源服务器，根据schema文件记录的每个数据源服务器的网络地址以及该数据源服务器所支持的协议，生成对应于该数据源服务器、包含所述查询条件的消息。</p>
    <p>[0044]	进一步，所述数据网格还用于在所述对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息之前，根据所述查询条件在本地缓存中存储的至少一个数据源服务器的数据中查询，得到第一查询结果；以及</p>
    <p>[0045]	所述数据网格将各数据源服务器返回的查询结果封装到预定格式的查询结果文件具体为：</p>
    <p>[0046]	所述数据网格将数据未存储到所述缓存中的数据源服务器返回的查询结果作为第二查询结果，将第一查询结果和第二查询结果封装到所述查询结果文件中。</p>
    <p>[0047]	进一步，所述数据网格还用于在设定周期内，若数据源服务器返回查询结果，则记录下该数据源服务器在进行该次查询结果返回时所用响应时长；所述设定周期到达时，将所述设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存中。</p>
    <p>[0048]	进一步，所述数据网格还用于在所述将设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存之前，判断本地缓存空间是否足够；以及，[0049]	所述数据网格将设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存具体为：</p>
    <p>[0050]	若所述本地缓存空间足够，所述数据网格则直接将设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存中；</p>
    <p>[0051]	若所述本地缓存空间不足，所述数据网格则将设定周期内响应时长最长或记录频率最高的数据源服务器的数据覆盖掉所述本地缓存中存储时间最久的数据源服务器的数据。</p>
    <p>[0052]	根据本发明的另一个方面，还提供了一种数据网格，包括：、[0053]	查询文件接收模块，用于接收不同网络介质中的应用服务器发送的查询文件；</p>
    <p>[0054]	查询文件解析模块，用于从所述查询文件中解析出查询条件；</p>
    <p>[0055]	消息生成模块，用于对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息；</p>
    <p>[0056]	消息发送模块，用于将生成的消息向对应的数据源服务器发送；</p>
    <p>[0057]	消息接收模块，用于接收各数据源服务器返回的查询结果；</p>
    <p>[0058]	查询结果文件生成模块，用于将各数据源服务器返回的查询结果封装到预定格式的查询结果文件；</p>
    <p>[0059]	查询结果文件发送模块，用于将生成的查询结果文件向发送所述查询文件的应用服务器返回。</p>
    <p>[0060]	较佳地，所述消息生成模块对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息具体为：</p>
    <p>[0061]	所述消息生成模块对于各不同网络介质中的数据源服务器，根据schema文件记录的每个数据源服务器的网络地址以及该数据源服务器所支持的协议，生成对应于该数据源服务器、包含所述查询条件的消息。</p>
    <p>[0062]	进一步，所述数据网格还包括：</p>
    <p>[0063]	缓存查询模块，用于根据所述查询条件在本地缓存中存储的至少一个数据源服务器的数据中查询，得到第一查询结果；以及</p>
    <p>[0064]	所述查询结果文件生成模块将各数据源服务器返回的查询结果封装到预定格式的查询结果文件具体为：</p>
    <p>[0065]	所述查询结果文件生成模块将数据未存储到所述缓存中的数据源服务器返回的查询结果作为第二查询结果，将第一查询结果和第二查询结果封装到所述查询结果文件中。</p>
    <p>[0066]	进一步，所述数据网格还包括：</p>
    <p>[0067]	数据缓存模块，用于在设定周期内，若数据源服务器返回查询结果，则记录下该数据源服务器在进行该次查询结果返回时所用响应时长；所述设定周期到达时，将所述设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存中。</p>
    <p>[0068]	根据本发明的另一个方面，还提供了一种应用服务器，包括：</p>
    <p>[0069]	查询请求接收模块，用于接收终端发送的查询请求；</p>
    <p>[0070]	查询请求解析模块,用于从所述查询请求中解析出查询条件；[0071]	查询文件生成模块，用于生成包含所述查询条件的、具有预定格式的查询文件；</p>
    <p>[0072]	查询文件发送模块，用于将所述查询文件向数据网格发送；</p>
    <p>[0073]	查询结果文件接收模块，用于接收所述数据网格返回的、具有预定格式的查询结果文件;</p>
    <p>[0074]	查询结果文件解析模块，用于从所述查询结果文件中解析出查询结果；</p>
    <p>[0075]	查询结果返回模块，用于将解析出的查询结果向所述终端返回。</p>
    <p>[0076]	本发明实施例由于在不同网络介质中的应用服务器与提供数据源的数据源服务器之间设置了数据网格，使得不同介质中的应用服务器可以通过数据网格平台而获得不同介质中各数据源的查询结果，也就是应用服务器可以通过数据网格平台获得三网融合中各数据源的查询结果，从而使用户更为方便地获取更全面、更完善的查询结果。 [0077]	进一步，由于数据网格可将某个或某些数据源服务器的数据缓存于本地缓存中，从而可以加快查询速度。</p>
    <p>附图说明</p>
    <p>[0078]	图I为本发明实施例的基于三网融合的数据查询系统示意图；</p>
    <p>[0079]	图2a、2b为本发明实施例的数据查询系统进行数据查询的方法流程图；</p>
    <p>[0080]	图3为本发明实施例的数据网格102将数据源数据库的数据存储到本地缓存的方法流程图；</p>
    <p>[0081]	图4为本发明实施例的支持LDAP协议的数据源服务器给数据网格建立并开放的层次结构示意图；</p>
    <p>[0082]	图5为本发明实施例的应用服务器内部结构框图；</p>
    <p>[0083]	图6为本发明实施例的数据网格内部结构框图。</p>
    <p>具体实施方式</p>
    <p>[0084]	为使本发明的目的、技术方案及优点更加清楚明白，以下参照附图并举出优选实施例，对本发明进一步详细说明。然而，需要说明的是，说明书中列出的许多细节仅仅是为了使读者对本发明的一个或多个方面有一个透彻的理解，即便没有这些特定的细节也可以实现本发明的这些方面。</p>
    <p>[0085]	本申请使用的“模块”、“系统”等术语旨在包括与计算机相关的实体，例如但不限于硬件、固件、软硬件组合、软件或者执行中的软件。例如，模块可以是，但并不仅限于：处理器上运行的进程、处理器、对象、可执行程序、执行的线程、程序和/或计算机。举例来说，计算设备上运行的应用程序和此计算设备都可以是模块。一个或多个模块可以位于执行中的一个进程和/或线程内，一个模块也可以位于一台计算机上和/或分布于两台或更多台计算机之间。</p>
    <p>[0086]	本发明的发明人考虑到数据网格是一种存储、传输和处理全球范围内的分散数据的应用平台，它将高端的计算技术、高性能的网络以及广域网范围内的存储技术能有效地结合在一起。在三网融合的环境下，信息数据可以达到海量级别。原则上，数据网格可以连接任何通过双方安全认证的数据源，只要该数据源同意开放相应的端口、连接方式和数据访问协议给数据网格。因此，可以利用数据网格来实现三网融合下的电商应用的数据共享。[0087]	下面结合附图详细说明本发明实施例的技术方案。本发明实施例的基于三网融合的数据查询系统，即基于不同网络介质的数据查询系统，如图I所示，包括：应用服务器101、数据网格102、数据源服务器103。</p>
    <p>[0088]	其中，应用服务器101可以是一个，也可以是多个；多个应用服务器101可以位于不同的网络介质中。例如，图I中示出了一个应用服务器位于广播电视网(Broadcasting&amp;TV network)中，另一个应用服务器位于互联网（Internet)中，还一个应用服务器位于通信网（Telecom network)中。应用服务器101可以为用户提供电子应用的服务，例如电子商务应用的服务。具体地，应用服务器101可以通过网站网页的方式或者运行应用程序的方式提供电子应用的服务。例如，用户通过终端访问应用服务器101提供的电子商务应用中的淘宝商城网站的网页，查询相关产品，应用服务器101则向用户返回查询结果。</p>
    <p>[0089]	数据源服务器103可以是一个，也可以是多个；多个数据源服务器103可以位于不同的网络介质中。例如，图I中示出了一个数据源服务器位于广播电视网（简称广电网） 中，另一个数据源服务器位于互联网中，还一个数据源服务器位于通信网中。数据源服务器103中存储了数据可供查询，即数据源服务器103中存储了数据源的数据。位于同一网络介质中的数据源服务器可以支持不同的协议。例如，位于广电网中的数据源服务器所支持的协议可以包括：LDAP、SQL等协议；位于互联网中的数据源服务器所支持的协议可以包括：HTTP、HTTPS、SQL、SOAP等协议；位于通信网中的数据源服务器所支持的协议可以包括：HTTP、HTTPS、SOAP、LDAP、Diameter 等协议。</p>
    <p>[0090]	本发明实施例的基于三网融合的数据查询系统进行数据查询的方法，流程图如图2a所示,包括如下步骤：</p>
    <p>[0091]	S201 :应用服务器101接收终端发送的查询请求。</p>
    <p>[0092]	应用服务器101可以为用户提供电子应用的服务，例如电子商务应用的服务。具体地，应用服务器101可以通过网站网页的方式或者运行应用程序的方式提供电子应用的服务。例如，用户通过终端访问应用服务器101提供的电子商务应用中的淘宝商城网站的网页，查询相关产品，应用服务器101则向用户返回查询结果。</p>
    <p>[0093]	用户可以通过终端向不同网络介质中的应用服务器101发送查询请求。也就是说，接收到终端所发送的查询请求的应用服务器所在网络介质具体可以是互联网，或者通信网，或者广电网。所述终端包括各种具有网络连接功能及显示功能的设备，如手机、计算机、笔记本、平板电脑、智能电视等。</p>
    <p>[0094]	例如，用户通过手机向通信网的应用服务器101的WAP版电子商城发送某种产品的查询请求；再如，用户通过计算机向互联网的应用服务器101的淘宝电子商城发送某种产品的查询请求；又如，用户通过智能电视向广电网的电视商城发送某种产品的查询请求。</p>
    <p>[0095]	S202 :应用服务器101接收到终端发送的查询请求后，从查询请求中解析出查询条件。</p>
    <p>[0096]	不同网络介质支持不同的协议，由此不同网络介质中的应用服务器101在接收到包含查询条件的查询请求后，根据其所在网络介质支持的协议解析查询请求，获得查询条件。</p>
    <p>[0097]	查询请求中所包含的查询条件依实际情况而定，通常可以包括如下条件中的一个或多个：产品名称、产品类别、品牌名称、价格、型号等。</p>
    <p>[0098]	S203 :应用服务器101将查询条件封装在预定格式的查询文件中向数据网格102发送。</p>
    <p>[0099]	查询文件的格式可以是由数据网格102、应用服务器101、数据源服务器103共同协议约定的，该查询文件可以包括上述的查询条件。查询文件中具体包括的查询条件，可以根据应用服务器101和数据源服务器103的能力做合理定制。例如，应用服务器101提供给用户终端可作查询的查询条件包括：类别、品牌、价格和型号，而数据源服务器103亦可以基于些查询条件，返回查询结果。以下示出了一个具体的XML (extensible MarkupLanguage,可扩展标记语言）格式的查询文件：</p>
    <p>[0100]</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102722589A/CN102722589AD00101.png"> <img id="idf0001" file="CN102722589AD00101.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102722589A/CN102722589AD00101.png" class="patent-full-image" alt="Figure CN102722589AD00101"> </a> </div>
    <p>[0101]	其中的查询条件包括：产品类别为TV、品牌为TCL、型号为6100。</p>
    <p>[0102]	进一步，应用服务器101还根据应用服务器101和数据源服务器103的查询能力，针对每个查询条件限定了查询范围，限定的查询范围可以记载在XSD文件中。这样，应用服务器101可以根据XSD文件中记载的查询范围为用户终端提供每个查询条件的选项，用户通过终端从中进行选择。例如，针对产品类别，应用服务器101和数据源服务器103可支持类别只有：电视、冰箱、洗衣机、手机和空调，一个具体的XSD文件如下所示：</p>
    <p>[0103]&lt;?xml version=" 1.0"?&gt;</p>
    <p>        &lt;xs:schema xmlns:xs=l,http://www.w3.org/2001/XMLSchema"        targetNamespace="http://www.dg.com.cnl,        xmiiis=,*littp://www.dg.com.cn"        elementFormDefault=,,qualified"&gt;</p>
    <p>        &lt;xs:element name^'Troduct'^</p>
    <p>           &lt;xs:complexType&gt;</p>
    <p>               &lt;xs:sequence&gt;</p>
    <p>                  &lt;xs:element name=,,category"&gt; </p>
    <p>                   &lt;xs:simpleType&gt;</p>
    <p>&lt;xs:restriction base=”xs:string”&gt;</p>
    <p>                              &lt;xs;enumerat ion &#165;alue=5TV57&gt;</p>
    <p>[0104]</p>
    <p>                            &lt;xs:enumeration value=”Refrigerator”/&gt;                            &lt;xs:enumeration value=5,CeIIPhone,7&gt;</p>
    <p>                            &lt;xs:enumeration valiie=,,washing-macliine,7&gt;                     &lt;xs:enumeration &#165;alue=,,air&#8364;ondition,7&gt;                     &lt;/xs:restriction&gt;</p>
    <p>                  &lt;/xs:simpleType&gt;</p>
    <p>                 &lt;/xs: element〉</p>
    <p>&lt;xs:element name=”brand” type="xs:string7&gt;</p>
    <p>&lt;xs: element name=,,priceH type=”xs:iiiteger"/&gt;</p>
    <p>                  &lt;xs:elemeni name=”model" type=,fxs:stringH/&gt;             &lt;/xs:sequence&gt;</p>
    <p>         &lt;/xs: compl exType〉</p>
    <p>     &lt;/xs:element&gt;</p>
    <p>     &lt;/xs:schema&gt;</p>
    <p>[0105]	上述XSD文件表明针对查询条件产品类别（category),查询范围中可供选择的选项仅包括：电视（TV)、冰箱（Refrigerator)、洗衣机（washing-machine)、手机（CellPhone)和空调（airCondition)。</p>
    <p>[0106]	S204 :数据网格102接收到查询文件后，从所述查询文件中解析出查询条件。</p>
    <p>[0107]	由于查询文件的格式是预定的，也就是说，数据网格102事先已确定查询文件的格式，因此，在接收到应用服务器101发送的查询文件后，可以对查询文件进行解析，从中解析出查询条件。例如，对于上述的查询文件，数据网格102可以从中解析出查询条件包括：产品类别为TV、品牌为TCL、价格为1888、型号为6100。</p>
    <p>[0108]	S205 :数据网格102将所述查询条件封装到多个不同协议的消息中。</p>
    <p>[0109]	数据网格102对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息 ，每个生成的消息中均包含有数据网格102解析出的查询条件。具体地，数据网格102从查询文件中解析出查询条件后，对于各不同网络介质中的数据源服务器，根据数据源信息文件（schema文件）记录的每个数据源服务器的网络地址以及该数据源服务器所支持的协议，生成对应于该数据源服务器的消息。数据网格102中存储的schema文件具体可以</p>
    <p>如下所示：</p>
    <p>[0110]&lt;?xmi version=" 1.0° encoding="ISO-8859-l ”?&gt;</p>
    <p>               &lt;DataStores &gt;</p>
    <p>                   &#8226;dalahasc&gt;</p>
    <p>                  &lt;name&gt;db I &lt;/name&gt;</p>
    <p>              &lt;IP&gt;135.252.!.K/IP&gt;</p>
    <p>                        &lt;port,....、228',..../port&gt;</p>
    <p>                  &lt;prolocol'- I .,DA P&lt;/prt)tocol&gt;              &lt;dn&gt;o=amazon&lt;/dn&gt;</p>
    <p>                 &lt;/database&gt;</p>
    <p>                 &lt;database&gt;</p>
    <p>              〈.nmiietdbSi/mmie、</p>
    <p>              &lt;IP&gt;135.252.1.2&lt;/IP&gt;</p>
    <p>               &lt;port&gt;229&lt;/port&gt;</p>
    <p>                 &lt;p ml oco I SQI m 丨 oco I '&#8226;&gt;</p>
    <p>               &lt;tableview&gt;product &lt;/tableview&gt;</p>
    <p>                 &lt;/database&gt;</p>
    <p>              〈database〉</p>
    <p>                           ⑴ lie'..'(U)3,mmie &gt;</p>
    <p>               &lt;IP&gt; 135.252.13&lt;/IP&gt;</p>
    <p>              &lt;port&gt;8080々port&gt;</p>
    <p>                    &lt;.prol oco I-* i I.「I P: /p rotocol&gt;</p>
    <p>               &lt;mcihod *P()S F &lt;/method&gt;</p>
    <p>                 &lt;/database&gt;</p>
    <p>              〈database〉</p>
    <p>               &lt;name&gt;db4&lt;/name&gt;</p>
    <p>              &lt;IP&gt;135.252.1.4&lt;/IP&gt;</p>
    <p>              &lt;port&gt;8081&lt;/port&gt;</p>
    <p>                &lt;protocol..'SOA P--/protocol&gt;</p>
    <p>                 〈/database〉</p>
    <p>               &lt;/DataStores&gt;</p>
    <p>[0111]	从上述的schema文件中可以看出，记录了四个数据源的信息：dbl、db2、db3、db4 </p>
    <p>的数据源数据库的IP地址、端口号，以及数据源数据库所支持的协议。</p>
    <p>[0112]	对应于每个数据源数据库，数据网格102根据该数据源服务器的IP (InternetProtocol，网际协议）地址、端口号以及该数据源服务器所支持的协议，生成对应于该数据源服务器的消息。对于不同协议所生成的消息将在后续中进行详细介绍。</p>
    <p>[0113]	S206 :数据网格102将生成的消息分别向对应的数据源服务器103发送。</p>
    <p>[0114]	S207 :数据源服务器103接收到消息后，从消息中解析出查询条件，根据查询条件进行查询后，向数据网格102返回查询结果。</p>
    <p>[0115]	数据源服务器103接收到消息后，从消息中解析出查询条件，根据查询条件进行查询后，向数据网格102返回包含查询结果的消息为本领域技术人员所熟知的技术，此处不再赘述。</p>
    <p>[0116]	S208 :数据网格102接收到各数据源服务器103返回的查询结果后，将各数据源服务器返回的查询结果封装到预定格式的查询结果文件向应用服务器101返回。</p>
    <p>[0117]	数据网格102从各数据源服务器103返回的包含查询结果的消息中分别解析出查 询结果，获得各数据源服务器103返回的查询结果后，生成包含这些查询结果的查询结果文件并向应用服务器101返回。</p>
    <p>[0118]	查询结果文件的格式可以是由数据网格102、应用服务器101、数据源服务器103</p>
    <p>共同协议约定的。一个具体的查询结果文件可以如下所示：</p>
    <p>[0119]</p>
    <p>                &lt;?xml version=" 1.0" encoding==="ISO-8859-1 "?&gt;</p>
    <p>              〈Products〉</p>
    <p>                〈product〉</p>
    <p>                        &lt;source&gt;dbl&lt;/ source &gt;</p>
    <p>                         &lt;category&gt;TV〈/category..-                         &lt;brand&gt;TCL&lt;/brand&gt;</p>
    <p>                         &lt;price&gt; 1888&lt;/price&gt;</p>
    <p>                           -pic：-I IRl&lt;/pic&gt;</p>
    <p>                      &lt;vedio&gt;URI&lt;/vedio&gt;</p>
    <p>                      &lt;remark&gt;remarks&lt;/remark&gt;</p>
    <p>                                  &lt;po])u I ari ty &gt; I &lt; /populari t:y&gt;</p>
    <p>                 〈/product〉</p>
    <p>[0120]&lt;product&gt;</p>
    <p>          &lt;	source &gt;db2&lt;/ source &gt;</p>
    <p>         &lt;categoiy&gt;TV&lt;/category&gt;         &lt;brand&gt; I CL&lt;/brand&gt;         &lt;price&gt;2000&lt;/ price&gt;         &lt;model&gt;6100&lt;/model&gt;         &lt;pic&gt;l..;RK,.pic&gt;&#183;         &lt;vedio&gt;URI&lt;/vedio&gt;         &lt;remark&gt;remarks&lt;/remark&gt;         &lt;popularity&gt;2&lt;/popu!arity&gt;         〈/product〉</p>
    <p>  &lt;pi'oduct&gt;</p>
    <p>          &lt;	source &gt;db3&lt;/ source &gt;          &lt;caiegory&gt;TV&lt;/categoi*y&gt;          &lt;braiid&gt;TCL&lt;/brand&gt;          &lt;price&gt; 丨 600&lt;/ price&gt;          &lt;model&gt;6100&lt;/nioder&gt;          &lt;pic&gt;UR 卜.:/pic&gt;</p>
    <p>               &lt;	v cd i o&gt; I j KI &lt;/vcd i o&gt;</p>
    <p>            &lt;i.en.ui rk&gt;renu) fks&lt;/i"eniark&gt;            &lt;popularity&gt;9&lt;/popiilarity&gt;</p>
    <p>  〈/product〉</p>
    <p>&lt; product〉</p>
    <p>          &lt;	source &gt;db4&lt;/ source &gt;          &lt;eategory&gt;TV&lt;/category&gt;          &lt;brand&gt;TCL.&lt;/brand&gt;          &lt;price&gt;2500&lt;/price&gt;          &lt;model&gt;6100&lt;/mode&gt;          &lt;pic&gt;URI&lt;/pic&gt;</p>
    <p>             &lt;vt'du.)&gt;U R I':.../vedio&gt;             &lt;remark&gt;remarks&lt;/rei i iark:             〈popularity》I〈/popularity〉</p>
    <p>     [0121]〈/product〉</p>
    <p>〈/products〉</p>
    <p>[0122]	从上述的查询结果文件中，可以看出四个数据源dbl、db2、db3、db4根据查询条件：产品类别为TV、品牌为TCL、型号为6100进行查询，分别返回的查询结果中包括查询到的品牌为TCL、型号为6100的TV的价格、图片、视频、评论、欢迎度。</p>
    <p>[0123]	S209 :应用服务器101在接收到所述查询结果文件后，从中解析出查询结果向终端返回。</p>
    <p>[0124]	应用服务器101在接收到所述查询结果文件后，从中解析出各数据源服务器103的查询结果。应用服务器101对查询结果进行相应的逻辑处理，并将查询结果向终端返回。应用服务器101将查询结果封装到相应协议的消息中向终端返回的技术为本领域技术人员所熟知的，此处不再赘述。 </p>
    <p>[0125]	作为一种更优的数据查询方法，为了加快查询速度，数据网格102还可在设定周期内统计各数据源数据库的响应时长，或被查询的频率，数据网格102将设定周期内响应时间最长，或查询频率最高的数据源数据库的数据存储到本地缓存中，在根据查询条件进行查询时，数据网格102便可在本地缓存中查询该数据源数据库中的数据，从而加快查询速度。</p>
    <p>[0126]	数据网格102将数据源数据库的数据存储到本地缓存的方法流程，如图3所示，包括如下步骤：</p>
    <p>[0127]	S301 :数据网格102在设定周期内，若接收到数据源服务器103返回的查询结果，则在记录表中记录下该数据源服务器在进行该次查询结果返回时所用的响应时长，即自发送消息到该数据源服务器返回查询结果之间的时长。设定周期的长短可根据实际情况确定，例如，可以是I小时，或者I天。下表I示出了某个周期内统计的数据源数据库的响应时长：</p>
    <p>[0128]表	I</p>
    <p>[0129]</p>
    <p>查询ID	数据源编号响应时长^</p>
    <p>     I	数据源I	2</p>
    <p>     I	数据源2	5</p>
    <p>                 数据源3 20          I	数据源4	I</p>
    <p>       &#8212;2	数据源I	15</p>
    <p>     ~	数据源2	I</p>
    <p>     ~	数据源4	3</p>
    <p>[0130][0131]	表I中不同的数据源编号分别对应不同的数据源服务器，也就是说，根据数据源编号可以唯一确定数据源服务器。</p>
    <p>[0132]	S302:数据网格102在设定周期到达时，根据记录表中的记录确定将其中一个数据源编号所对应的数据源服务器的数据存储到本地缓存中。</p>
    <p>[0133]	从表I可以看出，数据源编号为3的数据源服务器的响应时长最长，数据源编号为1、2、4的数据源服务器的 被查询频率较高，被查询了 2次。可以根据数据源服务器的响应时长或被查询频率制定策略，确定将哪个或哪些数据源服务器的数据缓存到数据网格102中。例如，可以将响应时长最长的数据源服务器的数据缓存到数据网格102中；或者，将被查询频率最高（即记录表中记录频率最高）的数据源服务器的数据缓存到数据网格102中；或者，综合考虑响应时长与被查询频率后确定将数据缓存到数据网格102中的数据源服务器。</p>
    <p>[0134]	数据网格102在确定出数据源服务器后，比如确定出响应时长最长、或被查询频率最高的数据源服务器后，将该数据源服务器的数据缓存到本地缓存中。具体地，在数据网格102的本地缓存中可能之前已经缓存了其它数据源服务器的数据，如果本地缓存空间足够，则直接将该数据源服务器的数据缓存到本地缓存中；如果本地缓存空间不足，则用该数据源服务器的数据覆盖掉本地缓存中之前缓存的其它数据源服务器的数据，例如，可以根据FIFO原则覆盖掉缓存中存放最久的数据源服务器的数据。</p>
    <p>[0135]	对于数据网格102中缓存了某个或某些个数据源数据库的数据的情况，在执行上述步骤S205之前，数据网格102可以先执行如下步骤S2041，具体的流程图如图2b所示。</p>
    <p>[0136]	S2041 :数据网格102根据所述查询条件在本地缓存中存储的至少一个数据源服务器的数据中查询，得到第一查询结果。</p>
    <p>[0137]	由于在缓存中进行数据查询要大大快于在响应时长最长的数据源数据库中进行查询的速度，从而大大提高了查询速度。</p>
    <p>[0138]	数据网格102接收到各数据源服务器103返回的查询结果后，不执行上述步骤S208，而是执行步骤S2081 ：</p>
    <p>[0139]	S2081 :数据网格102将数据未存储到所述缓存中的数据源服务器所返回的查询结果作为第二查询结果，将第一查询结果和第二查询结果都封装到所述查询结果文件向应用服务器101返回。也就是说，对于数据网格102中缓存了某个或某些个数据源数据库的数据的情况，在执行上述步骤S208时，还包括：数据网格102除各数据源服务器返回的查询结果封装到查询结果文件中，还将第一查询结果也封装到所述查询结果文件向应用服务器101返回。</p>
    <p>[0140]	图2b中除S2041、S2081之外的其它步骤，与图2a中介绍的各步骤相同，此处不再</p>
    <p>重复地--介绍。</p>
    <p>[0141]	这里需要指出的是，虽然数据网格102对于缓存于本地缓存的数据源数据库的数据已经获得了查询结果，然而，在步骤S205中数据网格102将所述查询条件封装到多个不同协议的消息具体为：数据网格102对应于各不同网络介质中、数据未存储到所述缓存中的数据源服务器，根据所述查询条件分别生成消息，也对应于数据已存储到所述缓存中的数据源服务器，根据所述查询条件分别生成消息。这样，数据网格102可以对不论是否将数据存储到缓存中的数据源服务器测试响应时长，在记录表中作相应记录，以供设定周期到达时，确定将数据写入缓存的数据源数据库。</p>
    <p>[0142]	上述步骤S205中，对应于每个数据源数据库，数据网格102根据该数据源服务器的IP地址、端口号以及该数据源服务器所支持的协议，生成对应于该数据源服务器的消息的详细介绍如下：</p>
    <p>[0143]	例如，数据网格102与4个数据源服务器相连，它们开放的端口分别是228、229、8080、8081，支持的协议分别是 LDAP (Lightweight Directory Access Protocol,轻量目录访问协议）、SQL (Structured Query Language,结构化查询语言）、HTTP (Hyper textTransfer Protocol,超文本传输协议)、S0AP (Simple Object Access Protocol,基本对象访问协议)。</p>
    <p>[0144]	对于所在网络介质为广电网、支持LDAP协议的数据源服务器，该数据源服务器要 给数据网格建立并开放如图4所示的层次结构。</p>
    <p>[0145]其中，一级	RDN (o=amazon)和 schema 文件中该数据的 dn (Distinguished Name,标识名）标签amazon相对应；二级RDN (Relative Distinguished Name,相对标识名）对应商品分类(如：ou=TV),和查询文件中的category标签相对应；三级RDN对应商品品牌(如：brand=TCL),和查询文件中的brand标签相对应；四级RDN对应于商品型号（如：model=6100)，和查询文件中的model标签相对应，且这级RDN节点下要包含前端电商应用要求获取的商品属性信息(如：价格price,评论remark,图片pic,视频URL地址vedio,欢迎度 popularity)。</p>
    <p>[0146]	数据网格103根据该层次结构，以及schema文件、查询文件中的查询条件生成的对应于该数据源数据库的消息中所包含的查询语句为：</p>
    <p>[0147]	Ldapsearch - h 135. 252. I. 1-1 228_b “model=6100, brand=TCL, ou=TVo=amazon”_s sub brand, model, price, pic, video, remark, popularity</p>
    <p>[0148]	对于广电网中支持其它协议的数据源服务器，生成对应于该数据源服务器的消息的方法与本方法类似，此处不再--详述。</p>
    <p>[0149]	对于所在网络介质为互联网的关系型数据源，即支持SQL协议的数据源服务器，该数据源服务器要给数据网格提供一个tableview(逻辑视图)，该tableview需要以查询文件中包含的查询条件为主键，电商应用要求返回的数据都要作为该表的一个属性而存在。那么该tableview的结构为：</p>
    <p>[0150]	Table view name:product (和 schema 中的该数据源的 tableview 属性相对应）；[0151 ] Primary key: category, brand, model (和查询文件中的 category, brand 及 model标签相对应）;</p>
    <p>[0152]	Attribute:price, pic, video, remark, popularity (该 tableview 所包含的属性需要涵盖所要求返回的商品属性信息）;</p>
    <p>[0153]	根据该tableview以及schema文件和查询文件中的查询条件,数据网格生成的对应于该支持SQL协议的数据源服务器的消息中所包含的查询语句为：</p>
    <p>[0154]	Select brand, model, price, pic, video, remark, popularity from product wheremodel=6100, brand=TCL, category=TV</p>
    <p>[0155]	对于所在网络介质为互联网、支持协议为HTTP的数据源服务器，该数据源服务器需要开放相应的通信端口给数据网格，数据网格根据查询条件，生成包含查询条件的HTTP请求消息，如：</p>
    <p>[0156]	http://135. 252. I. 3:8080/query?category=TV&amp;brand=TCL&amp;model=6100)</p>
    <p>[0157]	以POST/GET (对应于schema文件中该数据源服务器定义的请求方法）方式发送给该数据源服务器。该数据源服务器收到请求后触发相应的应用程序(如Servlet等)，根据收到的查询条件查询数据库中的数据,并将需要的商品数据信息(如price, pic, video, remark, popularity)以HTTP response的形式返回给数据网格。</p>
    <p>[0158]	对于互联网中支持其它协议的数据源服务器，生成对应于该数据源服务器的消息的方法与上述的两个方法类似，此处不再一一详述。</p>
    <p>[0159]	对于所在网络介质为通信网、支持协议为SOAP的数据源服务器，该数据源服务器 向数据网格提供访问数据的过程调用和应答的协定，通过XML编码，发送SOAP消息。例如，根据查询条件生成的查询商品属性的SOAP消息为：</p>
    <p>[0160]</p>
    <p>          &lt;soap:Body xmlns:m=，’ ^lttp://www.example.colIl/price,, &gt;             &lt;i]]：("rciAnr-'</p>
    <p>           &lt;m:Name&gt;TV&lt;/m:Name&gt;</p>
    <p>              &lt;m: Brand&gt;T C L&lt;/m:Brand&gt;</p>
    <p>            &lt;m:Model&gt;6100&lt;/m:Model&gt;</p>
    <p>                                       「丨 ce'..</p>
    <p>         &lt;/soap:Body&gt;</p>
    <p>[0161]	SOAP数据源服务器对应的应答回复具体价格等其它属性的SOAP消息为：</p>
    <p>[0162]</p>
    <p>          &lt;soap:Body xmliis:m=w http://www.example.com/price” &gt;            &lt;m:GetAftr&gt;</p>
    <p>               &lt;m: Price&gt;3000&lt;/m: Price&gt;</p>
    <p>              &lt;m;pic&gt;URL&lt;/ m: pic&gt;</p>
    <p>             &lt;m:vedio&gt;URL&lt;/m:vedio&gt;</p>
    <p>            &lt;m:remark&gt;URL&lt;/m:remark&gt;</p>
    <p>              &lt;m:populaiity&gt;Hot&lt;/m:populaiity &gt;</p>
    <p>             &lt;/m:GetPrictf&gt;</p>
    <p>         &lt;/soap:Body&gt;</p>
    <p>[0163]	对于通信网中支持其它协议的数据源服务器，生成对应于该数据源服务器的消息的方法与本方法类似，此处不再--详述。</p>
    <p>[0164]	本发明实施例提供的一种应用服务器，内部结构如图5所示，包括：查询请求接收模块501、查询请求解析模块502、查询文件生成模块503、查询文件发送模块504、查询结果文件接收模块505、查询结果文件解析模块506、查询结果返回模块507。</p>
    <p>[0165]	查询请求接收模块501用于接收终端发送的查询请求；具体地，查询请求接收模块501根据本应用服务器所支持的协议接收终端发送的查询请求。</p>
    <p>[0166]	查询请求解析模块502用于从查询请求接收模块501接收的查询请求中解析出查询条件。</p>
    <p>[0167]	查询文件生成模块503用于获取查询请求解析模块502解析的查询条件，生成包含所述查询条件的、具有预定格式的查询文件。</p>
    <p>[0168]	查询文件发送模块504用于将查询文件生成模块503生成的查询文件向数据网格发送。</p>
    <p>[0169]	查询结果文件接收模块505用于接收所述数据网格返回的、具有预定格式的查询结果文件。</p>
    <p>[0170]	查询结果文件解析模块506用于从查询结果文件接收模块505接收的查询结果文件中解析出查询结果。 [0171 ] 查询结果返回模块507用于将查询结果文件解析模块506解析出的查询结果向所述终端返回。具体地，查询结果返回模块507根据本应用服务器所支持的协议对查询结果进行封装后向所述终端返回。</p>
    <p>[0172]	具体地，本发明实施例的应用服务器中的各模块所涉及的具体工作过程，可以参考上述图2a、2b所示的查询方法中所公开的相关内容，此处不再赘述。</p>
    <p>[0173]	本发明实施例提供的一种数据网格，内部结构如图6所示，包括：查询文件接收模块601、查询文件解析模块602、消息生成模块603、消息发送模块604、消息接收模块605、查询结果文件生成模块606、查询结果文件发送模块607。</p>
    <p>[0174]	查询文件接收模块601用于接收不同网络介质中的应用服务器发送的查询文件；</p>
    <p>[0175]	查询文件解析模块602用于从查询文件接收模块601接收的查询文件中解析出查询条件。由于查询文件的格式是预先约定的，因此，查询文件解析模块602可以根据预先约定的格式对接收的查询文件进行解析。</p>
    <p>[0176]	消息生成模块603用于获取查询文件解析模块602解析的查询条件，并对应于各不同网络介质中的数据源服务器，根据所述查询条件分别生成消息。具体地，消息生成模块603对于各不同网络介质中的数据源服务器，根据schema文件记录的每个数据源服务器的网络地址以及该数据源服务器所支持的协议，生成对应于该数据源服务器、包含所述查询条件的消息。</p>
    <p>[0177]	消息发送模块604用于将消息生成模块603生成的消息向对应的数据源服务器发送。</p>
    <p>[0178]	消息接收模块605用于接收各数据源服务器返回的包含查询结果的消息。</p>
    <p>[0179]	查询结果文件生成模块606用于将消息接收模块605接收的各数据源服务器返回的查询结果封装到预定格式的查询结果文件。</p>
    <p>[0180]	查询结果文件发送模块607用于将查询结果文件生成模块606生成的查询结果文件向发送所述查询文件的应用服务器返回。</p>
    <p>[0181]	进一步，数据网格还包括：缓存查询模块608。</p>
    <p>[0182]	缓存查询模块608用于根据查询文件解析模块602解析出的查询条件在本地缓存中存储的至少一个数据源服务器的数据中查询，得到第一查询结果。</p>
    <p>[0183]	从而查询结果文件生成模块606用于将消息接收模块605接收的各数据源服务器返回的查询结果封装到预定格式的查询结果文件，具体为：查询结果文件生成模块606将数据未存储到所述缓存中的数据源服务器返回的查询结果作为第二查询结果，将第二查询结果和缓存查询模块608得到的第一查询结果封装到所述查询结果文件中。</p>
    <p>[0184]	进一步，数据网格还包括：数据缓存模块609。</p>
    <p>[0185]	数据缓存模块609用于在设定周期内，若数据源服务器返回查询结果，则记录下该数据源服务器在进行该次查询结果返回时所用响应时长；所述设定周期到达时，将所述设定周期内响应时长最长或记录频率最高的数据源服务器的数据存储到所述数据网格的本地缓存中。 [0186]	具体地，本发明实施例的数据网格中的各模块所涉及的具体工作过程，可以参考上述图2a、2b所示的查询方法中所公开的相关内容，此处不再赘述。</p>
    <p>[0187]	虽然，本发明实施例中主要以电子商务应用中的数据查询为例讲述了具体方案，而本领域技术人员可以轻而易举地将本发明实施例的技术方案应用于其它电子应用需要获取不同网络介质中的数据源的查询数据的场合；因此，在不脱离本发明原理的前提下对于其它类型的数据查询也应视为本发明的保护范围。</p>
    <p>[0188]	本发明实施例由于在不同网络介质中的应用服务器与提供数据源的数据源服务器之间设置了数据网格，使得不同介质中的应用服务器可以通过数据网格平台而获得不同介质中各数据源的查询结果，也就是应用服务器可以通过数据网格平台获得三网融合中各数据源的查询结果，从而使用户更为方便地获取更全面、更完善的查询结果。</p>
    <p>[0189]	进一步，由于数据网格可将某个或某些数据源服务器的数据缓存于本地缓存中，从而可以加快查询速度。</p>
    <p>[0190]	本领域普通技术人员可以理解实现上述实施例方法中的全部或部分步骤是可以通过程序来指令相关的硬件来完成，该程序可以存储于一计算机可读取存储介质中，如：R0M/RAM、磁碟、光盘等。</p>
    <p>[0191]	以上所述仅是本发明的优选实施方式，应当指出，对于本技术领域的普通技术人员来说，在不脱离本发明原理的前提下，还可以作出若干改进和润饰，这些改进和润饰也应视为本发明的保护范围。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101256560A?cl=zh">CN101256560A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2007年2月26日</td><td class="patent-data-table-td patent-date-value">2008年9月3日</td><td class="patent-data-table-td ">中国航空工业第二集团公司科学技术委员会</td><td class="patent-data-table-td ">基于网格的分布存储数据文件共享系统构建方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101640825A?cl=zh">CN101640825A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年8月19日</td><td class="patent-data-table-td patent-date-value">2010年2月3日</td><td class="patent-data-table-td ">刘文祥</td><td class="patent-data-table-td ">三网融合</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102064959A?cl=zh">CN102064959A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年11月16日</td><td class="patent-data-table-td patent-date-value">2011年5月18日</td><td class="patent-data-table-td ">西安电子科技大学</td><td class="patent-data-table-td ">一种面向三网融合的数字家庭网络体系结构</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102300129A?cl=zh">CN102300129A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年8月30日</td><td class="patent-data-table-td patent-date-value">2011年12月28日</td><td class="patent-data-table-td ">深圳创维－Rgb电子有限公司</td><td class="patent-data-table-td ">一种电视与电脑之间互动的方法</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=ZF6oBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2012年10月10日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年12月5日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2014年6月11日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/9c95900b0b2a90cb5ad9/CN102722589A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_6e802a6b2b28d51711baddc2f3bec198.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E5%9F%BA%E4%BA%8E%E4%B8%89%E7%BD%91%E8%9E%8D%E5%90%88%E7%9A%84%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E6%96%B9%E6%B3%95.pdf?id=ZF6oBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U2VRfBvSq4KAaPFg7FYat_IzHpctg"},"sample_url":"https://www.google.com/patents/reader?id=ZF6oBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>