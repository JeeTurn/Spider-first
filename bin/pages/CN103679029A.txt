<!DOCTYPE html><html><head><title>专利 CN103679029A - 一种修复山寨应用程序的方法及装置 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种修复山寨应用程序的方法及装置"><meta name="DC.contributor" content="王卫平" scheme="inventor"><meta name="DC.contributor" content="李新华" scheme="inventor"><meta name="DC.contributor" content="李小庆" scheme="inventor"><meta name="DC.contributor" content="蒋又新" scheme="inventor"><meta name="DC.contributor" content="北京奇虎科技有限公司" scheme="assignee"><meta name="DC.contributor" content="奇智软件（北京）有限公司" scheme="assignee"><meta name="DC.date" content="2013-12-11" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种修复山寨应用程序的方法及装置，该方法包括：扫描终端设备上已安装的应用程序，并根据扫描得到的信息生成应用程序列表；判断应用程序列表中的应用程序是否在预设的应用程序白名单中；如果应用程序在预设的应用程序白名单中，判断应用程序的安装包中的至少部分文件是否被篡改；如果应用程序的安装包中的至少部分文件被篡改，则卸载终端设备上的应用程序；从云端服务器中下载应用程序的官方安装包并在终端设备上安装。通过本发明的实施例可以帮助用户将终端设备上的山寨应用程序替换成官方版本的应用程序，有效防止山寨应用程序中的恶意代码给用户带来安全问题，提高了终端设备的操作系统的安全性。"><meta name="DC.date" content="2014-3-26"><meta name="DC.relation" content="CN:102360320:A" scheme="references"><meta name="DC.relation" content="CN:102495771:A" scheme="references"><meta name="DC.relation" content="CN:102508735:A" scheme="references"><meta name="DC.relation" content="CN:102779257:A" scheme="references"><meta name="DC.relation" content="CN:102855274:A" scheme="references"><meta name="citation_patent_publication_number" content="CN:103679029:A"><meta name="citation_patent_application_number" content="CN:201310674728"><link rel="canonical" href="https://www.google.com/patents/CN103679029A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN103679029A?cl=zh"/><meta name="title" content="专利 CN103679029A - 一种修复山寨应用程序的方法及装置"/><meta name="description" content="本发明公开了一种修复山寨应用程序的方法及装置，该方法包括：扫描终端设备上已安装的应用程序，并根据扫描得到的信息生成应用程序列表；判断应用程序列表中的应用程序是否在预设的应用程序白名单中；如果应用程序在预设的应用程序白名单中，判断应用程序的安装包中的至少部分文件是否被篡改；如果应用程序的安装包中的至少部分文件被篡改，则卸载终端设备上的应用程序；从云端服务器中下载应用程序的官方安装包并在终端设备上安装。通过本发明的实施例可以帮助用户将终端设备上的山寨应用程序替换成官方版本的应用程序，有效防止山寨应用程序中的恶意代码给用户带来安全问题，提高了终端设备的操作系统的安全性。"/><meta property="og:title" content="专利 CN103679029A - 一种修复山寨应用程序的方法及装置"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN103679029A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN103679029A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=olT5CAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN103679029A&amp;usg=AFQjCNFV5twSfkMmXKdcR3wnLyUvIslv-A" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/a3b9f54c075c8574ca1d/CN103679029A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/a3b9f54c075c8574ca1d/CN103679029A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN103679029A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN103679029A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN103679029A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种修复山寨应用程序的方法及装置，该方法包括：扫描终端设备上已安装的应用程序，并根据扫描得到的信息生成应用程序列表；判断应用程序列表中的应用程序是否在预设的应用程序白名单中；如果应用程序在...</span><span itemprop="url">https://www.google.com/patents/CN103679029A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN103679029A - 一种修复山寨应用程序的方法及装置</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN103679029A - 一种修复山寨应用程序的方法及装置" title="专利 CN103679029A - 一种修复山寨应用程序的方法及装置"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN103679029 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201310674728</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2014年3月26日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2013年12月11日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2013年12月11日</td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201310674728.8, </span><span class="patent-bibdata-value">CN 103679029 A, </span><span class="patent-bibdata-value">CN 103679029A, </span><span class="patent-bibdata-value">CN 201310674728, </span><span class="patent-bibdata-value">CN-A-103679029, </span><span class="patent-bibdata-value">CN103679029 A, </span><span class="patent-bibdata-value">CN103679029A, </span><span class="patent-bibdata-value">CN201310674728, </span><span class="patent-bibdata-value">CN201310674728.8</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%8E%8B%E5%8D%AB%E5%B9%B3%22">王卫平</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%9D%8E%E6%96%B0%E5%8D%8E%22">李新华</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%9D%8E%E5%B0%8F%E5%BA%86%22">李小庆</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%92%8B%E5%8F%88%E6%96%B0%22">蒋又新</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E5%8C%97%E4%BA%AC%E5%A5%87%E8%99%8E%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">北京奇虎科技有限公司</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E5%A5%87%E6%99%BA%E8%BD%AF%E4%BB%B6%EF%BC%88%E5%8C%97%E4%BA%AC%EF%BC%89%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">奇智软件（北京）有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103679029A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103679029A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103679029A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (5),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (5),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (1)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=olT5CAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201310674728&amp;usg=AFQjCNHa2l1UyO6x0hhl3ob1krzTlUQIMQ"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=olT5CAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D103679029A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNGt7j-Cfl1SNQu0YaGW_RXyH-3QSg"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT134711729" lang="ZH" load-source="patent-office">一种修复山寨应用程序的方法及装置</invention-title>
      </span><br><span class="patent-number">CN 103679029 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA132095443" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种修复山寨应用程序的方法及装置，该方法包括：扫描终端设备上已安装的应用程序，并根据扫描得到的信息生成应用程序列表；判断应用程序列表中的应用程序是否在预设的应用程序白名单中；如果应用程序在预设的应用程序白名单中，判断应用程序的安装包中的至少部分文件是否被篡改；如果应用程序的安装包中的至少部分文件被篡改，则卸载终端设备上的应用程序；从云端服务器中下载应用程序的官方安装包并在终端设备上安装。通过本发明的实施例可以帮助用户将终端设备上的山寨应用程序替换成官方版本的应用程序，有效防止山寨应用程序中的恶意代码给用户带来安全问题，提高了终端设备的操作系统的安全性。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(10)</span></span></div><div class="patent-text"><div mxw-id="PCLM59891527" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.一种修复山寨应用程序的方法，其包括:  扫描终端设备上已安装的应用程序，并根据扫描得到的信息生成应用程序列表，所述应用程序列表包括应用程序的特征信息；  判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；  如果所述应用程序在所述预设的应用程序白名单中，判断所述应用程序的安装包中的至少部分文件是否被篡改；  如果所述应用程序的安装包中的至少部分文件被篡改，则卸载所述终端设备上的所述应用程序；   从云端服务器中下载所述应用程序的官方安装包并在所述终端设备上安装。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的方法，其中，所述判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中的步骤包括:  在所述终端设备侧判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；或者  在所述终端设备侧将所述应用程序列表发送至云端服务器，并接收由所述云端服务器判断所述应用程序列表中的应用程序是否在预设的应用程序白名单的结果。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求1所述的方法，其中，判断所述应用程序的安装包中的至少部分文件是否被篡改的步骤包括:  在所述终端设备侧根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改；或者  在所述终端设备侧将已安装应用程序的特征信息发送至云端服务器，由云端服务器根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求1所述的方法，其中，所述应用程序的特征信息至少包括以下中的任意一种:应用程序的安装包的包名、版本号、开发者签名、Android组件receiver的特征，Android组件service的特征,Android组件activity的特征,可执行文件中的指令或字符串和安装包目录下各文件的校验值。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求1所述的方法，其中，如果所述应用程序不在所述预设的应用程序白名单中，所述方法还包括:  在终端设备侧将应用程序的特征信息发送至云端服务器，由云端服务器根据安全识别库进行识别；所述安全识别库中的特征信息包括以下中的一种或几种组合:各种样本Android安装包的包名，版本号，数字签名，Android组件receiver的特征，Android组件service的特征，Android组件activity的特征,可执行文件中的指令或字符串，Android安装包目录下各文件的MD5值；其中，所述可执行文件包括Dex文件，和/或，ELF文件；所述Dex文件包括classes, dex文件，扩展名为.jar的文件，以及，Dex格式的文件；其中，所述样本Android安装包包括各种安全级别下的Android安装包；  在所述终端设备接收所述云端服务器发送的卸载建议，所述卸载建议包括:建议卸载、不建议卸载和谨慎卸载。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求1所述的方法，其中，从云端服务器中下载所述应用程序的官方安装包并在所述终端设备上安装的步骤包括:在所述终端设备侧向所述云端服务器发送下载请求，所述下载请求中包括应用程序的安装包的包名和版本号，由所述云端服务器根据所述应用程序的安装包的包名和版本号匹配得到所述应用程序的官方安装包；  在所述终端设备侧从所述云端服务器中下载并安装所述应用程序的官方安装包。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求6所述的方法，其中，在所述终端设备侧向所述云端服务器发送下载请求的步骤之前，还包括:  在所述终端设备侧提示用户可以下载所述应用程序的官方安装包；   如果用户选择下载所述应用程序的官方安装包，则执行在所述终端设备侧向所述云端服务器发送下载请求的步骤。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.根据权利要求1所述的方法，其中，卸载所述终端设备上的应用程序的步骤包括:  在所述终端设备侧提示用户可以卸载所述应用程序；  在所述终端设备侧接收卸载命令；  在所述终端设备侧根据所述卸载命令卸载所述应用程序。</div>
    </div>
    </div> <div class="claim"> <div num="9" class="claim">
      <div class="claim-text">9.一种修复山寨应用程序的装置，其包括:  扫描模块，用于扫描终端设备上已安装的应用程序，并根据扫描得到的信息生成应用程序列表，所述应用程序列表包括应用程序的特征信息；  白名单判断模块，用于判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；  篡改判断模块，用于如果所述应用程序在所述预设的应用程序白名单中，判断所述应用程序的安装包中的至少部分文件是否被篡改；  卸载模块，用于如果所述应用程序的安装包中的至少部分文件被篡改，则卸载所述终端设备上的所述应用程序；  自动安装模块，用于从云端服务器中下载所述应用程序的官方安装包并在所述终端设备上安装。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.根据权利要求9所述的装置，其中，所述白名单判断模块进一步用于在所述终端设备侧判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；或者在所述终端设备侧将所述应用程序列表发送至云端服务器，并接收由所述云端服务器判断所述应用程序列表中的应用程序是否在预设的应用程序白名单的结果。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES67876598" lang="ZH" load-source="patent-office" class="description">
    <p>一种修复山寨应用程序的方法及装置</p>
    <p>技术领域</p>
    <p>[0001]	本发明属于计算机技术领域，尤其涉及一种修复山寨应用程序的方法及装置。</p>
    <p>背景技术</p>
    <p>[0002]	近年来安卓系统因其开放性得到了广泛的应用，适用于安卓系统的应用程序的数量也呈爆炸式增长，但也因安卓系统的开放性导致应用程序易于被篡改或伪造，通常将篡改或伪造已有应用程序而产生的应用程序称为山寨应用程序。基于安全性方面的考虑，山寨应用程序通常包含木马、病毒、广告、泄露隐私等危害用户的恶意代码。</p>
    <p>[0003]	然而，目前还没有一种有效的方式对山寨应用程序进行识别并修复。</p>
    <p>发明内容</p>
    <p>[0004]	鉴于上述问题，提出了本发明以便提供一种克服上述问题或者至少部分地解决上述问题的修复山寨应用程序的方法及装置。</p>
    <p>[0005]	依据本发明的一个方面，提供了一种修复山寨应用程序的方法，其包括:</p>
    <p>[0006]	扫描终端设备上已安装的应用程序，并根据扫描得到的信息生成应用程序列表，所述应用程序列表包括应用程序的特征信息；</p>
    <p>[0007]	判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；</p>
    <p>[0008]	如果所述应用程序在所述预设的应用程序白名单中，判断所述应用程序的安装包中的至少部分文件是否被篡改；</p>
    <p>[0009]	如果所述应用程序的安装包中的至少部分文件被篡改，则卸载所述终端设备上的所述应用程序；</p>
    <p>[0010]	从云端服务器中下载所述应用程序的官方安装包并在所述终端设备上安装。</p>
    <p>[0011]	可选地，所述判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中的步骤包括:</p>
    <p>[0012]	在所述终端设备侧判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；或者</p>
    <p>[0013]	在所述终端设备侧将所述应用程序列表发送至云端服务器，并接收由所述云端服务器判断所述应用程序列表中的应用程序是否在预设的应用程序白名单的结果。</p>
    <p>[0014]	可选地，判断所述应用程序的安装包中的至少部分文件是否被篡改的步骤包括:</p>
    <p>[0015]	在所述终端设备侧根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改；或者</p>
    <p>[0016]	在所述终端设备侧将已安装应用程序的特征信息发送至云端服务器，由云端服务器根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改。</p>
    <p>[0017]	可选地，所述应用程序的特征信息至少包括以下中的任意一种:应用程序的安装包的包名、版本号、开发者签名、Android组件receiver的特征,Android组件service的特征，Android组件activity的特征,可执行文件中的指令或字符串和安装包目录下各文件的校验值。</p>
    <p>[0018]	可选地，如果所述应用程序不在所述预设的应用程序白名单中，所述方法还包括:</p>
    <p>[0019]	在终端设备侧将应用程序的特征信息发送至云端服务器，由云端服务器根据安全识别库进行识别；所述安全识别库中的特征信息包括以下中的一种或几种组合:各种样本Android安装包的包名，版本号，数字签名，Android组件receiver的特征，Android组件service的特征，Android组件activity的特征,可执行文件中的指令或字符串，Android安装包目录下各文件的MD5值；其中，所述可执行文件包括Dex文件，和/或，ELF文件；所述Dex文件包括classes, dex文件，扩展名为.jar的文件，以及，Dex格式的文件；其中，所述样本Android安装包包括各种安全级别下的Android安装包；</p>
    <p>[0020]	在所述终端设备接收所述云端服务器发送的卸载建议，所述卸载建议包括:建议卸载、不建议卸载和谨慎卸载。</p>
    <p>[0021]	可选地，从云端服务器中下载所述应用程序的官方安装包并在所述终端设备上安装的步骤包括:</p>
    <p>[0022]	在所述终端设备侧向所述云端服务器发送下载请求，所述下载请求中包括应用程序的安装包的包名和版本号，由所述云端服务器根据所述应用程序的安装包的包名和版本号匹配得到所述应用程序的官方安装包；</p>
    <p>[0023]	在所述终端设备侧从所述云端服务器中下载并安装所述应用程序的官方安装包。</p>
    <p>[0024]	可选地，在所述终端设备侧向所述云端服务器发送下载请求的步骤之前，还包括:</p>
    <p>[0025]	在所述终端设备侧提示用户可以下载所述应用程序的官方安装包；</p>
    <p>[0026]	如果用户选择下载所述应用程序的官方安装包，则执行在所述终端设备侧向所述云端服务器发送下载请求的步骤。</p>
    <p>[0027]	可选地，卸载所述终端设备上的应用程序的步骤包括:</p>
    <p>[0028]	在所述终端设备侧提示用户可以卸载所述应用程序；</p>
    <p>[0029]	在所述终端设备侧接收卸载命令；</p>
    <p>[0030]	在所述终端设备侧根据所述卸载命令卸载所述应用程序。</p>
    <p>[0031]	依据本发明的另一个方面，还提供了一种修复山寨应用程序的装置，其包括:</p>
    <p>[0032]	扫描模块，用于扫描终端设备上已安装的应用程序，并根据扫描得到的信息生成应用程序列表，所述应用程序列表包括应用程序的特征信息；</p>
    <p>[0033]	白名单判断模块，用于判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；</p>
    <p>[0034]	篡改判断模块，用于如果所述应用程序在所述预设的应用程序白名单中，判断所述应用程序的安装包中的至少部分文件是否被篡改；</p>
    <p>[0035]	卸载模块，用于如果所述应用程序的安装包中的至少部分文件被篡改，则卸载所述终端设备上的所述应用程序；</p>
    <p>[0036]自动安装模块，用于从云端服务器中下载所述应用程序的官方安装包并在所述终端设备上安装。[0037]	可选地，所述白名单判断模块进一步用于在所述终端设备侧判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；或者在所述终端设备侧将所述应用程序列表发送至云端服务器，并接收由所述云端服务器判断所述应用程序列表中的应用程序是否在预设的应用程序白名单的结果。</p>
    <p>[0038]	可选地，所述篡改判断模块进一步用于在所述终端设备侧根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改；或者在所述终端设备侧将已安装应用程序的特征信息发送至云端服务器，由云端服务器根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改。</p>
    <p>[0039]	可选地，所述应用程序的特征信息至少包括以下中的任意一种:应用程序的安装包的包名、版本号、开发者签名、Android组件receiver的特征,Android组件service的特征，Android组件activity的特征,可执行文件中的指令或字符串和安装包目录下各文件的校验值。</p>
    <p>[0040]	可选地，所述自动安装模块包括:</p>
    <p>[0041]	下载请求发送单元，用于在所述终端设备侧向所述云端服务器发送下载请求，所述下载请求中包括应用程序的描述信息，由所述云端服务器根据所述应用程序的描述信息匹配得到所述应用程序的官方安装包；</p>
    <p>[0042]	下载单元，用于在所述终端设备侧从所述云端服务器中下载所述应用程序的官方安装包；</p>
    <p>[0043]	安装单元，用于在所述终端设备侧安装所述应用程序的官方安装包。</p>
    <p>[0044]	可选地，所述自动安装模块还包括:</p>
    <p>[0045]	下载提示单元，用于在所述终端设备侧提示用户可以下载所述应用程序的官方安装包；如果用户选择下载所述应用程序的官方安装包，则触发所述下载请求发送单元。</p>
    <p>[0046]	可选地，所述卸载模块包括:</p>
    <p>[0047]	卸载提示单元，用于在所述终端设备侧提示用户可以卸载所述应用程序；</p>
    <p>[0048]	卸载命令接收单元，用于在所述终端设备侧接收卸载命令，所述卸载命令包括应用程序的描述信息；</p>
    <p>[0049]	卸载单元，用于在所述终端设备侧根据所述卸载命令卸载所述应用程序。</p>
    <p>[0050]	可选地，所述装置还包括:</p>
    <p>[0051]	识别请求模块，用于在终端设备侧将应用程序的特征信息发送至云端服务器，由云端服务器根据安全识别库进行识别；所述安全识别库中的特征信息包括以下中的一种或几种组合:各种样本Android安装包的包名，版本号,数字签名，Android组件receiver的特征，Android组件service的特征，Android组件activity的特征,可执行文件中的指令或字符串，Android安装包目录下各文件的MD5值；其中，所述可执行文件包括Dex文件，和/或，ELF文件；所述Dex文件包括classes, dex文件,扩展名为.jar的文件，以及，Dex格式的文件；其中，所述样本Android安装包包括各种安全级别下的Android安装包；</p>
    <p>[0052]	卸载建议接收模块，用于在所述终端设备接收所述云端服务器发送的卸载建议，所述卸载建议包括:建议卸载、不建议卸载和谨慎卸载。</p>
    <p>[0053]	由上述技术方案可知，本发明的实施例具有如下有益效果:通过判断应用程序的安装包中的至少部分文件是否被篡改，来识别终端设备中已安装的应用程序是否为山寨应用程序，如果该应用程序为山寨应用程序，则可以提示用户卸载该应用程序，并引导用户从云端服务器中下载并安装应用程序的官方安装包，从而实现帮助用户将山寨应用程序替换成官方版本的应用程序，有效防止山寨应用程序中的木马、病毒、广告、泄露隐私等危害用户的恶意代码给用户带来安全问题，提高了终端设备的操作系统的安全性。</p>
    <p>附图说明</p>
    <p>[0054]	通过阅读下文优选实施方式的详细描述，各种其他的优点和益处对于本领域普通技术人员将变得清楚明了。附图仅用于示出优选实施方式的目的，而并不认为是对本发明的限制。而且在整个附图中，用相同的参考符号表示相同的部件。在附图中:</p>
    <p>[0055]	图1示出了根据本发明的一个实施例中修复山寨应用程序的方法的流程图；以及</p>
    <p>[0056]	图2示出了根据本发明的另一个实施例中修复山寨应用程序的装置的结构框图。</p>
    <p>具体实施方式</p>
    <p>[0057]	下面将参照附图更详细地描述本公开的示例性实施例。虽然附图中显示了本公开的示例性实施例，然而应当理解，可以以各种形式实现本公开而不应被这里阐述的实施例所限制。相反，提供这些实施例是为了能够更透彻地理解本公开，并且能够将本公开的范围完整的传达给本领域的技术人员。</p>
    <p>[0058]	如图1所示，本发明的实施例中提供了一种修复山寨应用程序的方法，该方法100包括:</p>
    <p>[0059]	步骤S101、扫描已安装的应用程序，并根据扫描得到的信息生成应用程序列表，应用程序列表包括应用程序的特征信息。</p>
    <p>[0060]	具体地，步骤SlOl中包括如下两种情形:</p>
    <p>[0061]	在本发明的一个实施例中，终端设备侧可以扫描本地已安装的应用程序，并根据扫描得到的信息生成应用程序列表，该应用程序列表在终端设备侧显示。</p>
    <p>[0062]	在本发明的另一个实施例中，终端设备侧也可以扫描与其建立连接的其他终端设备中已安装的应用程序。例如计算设备与移动设备建立连接，然后计算设备扫描移动设备中已安装的应用程序，并根据扫描得到的信息生成应用程序列表，其中该应用程序列表在计算设备侧显示。</p>
    <p>[0063]	在具体实现中，所述移动设备侧通过无线的方式接入所述计算设备，可以包括如下情况:</p>
    <p>[0064]	1.有无线路由</p>
    <p>[0065]	这种方式是移动设备通过WIFI连到路由，计算设备通过WIFI或网线连到路由，在移动设备上用websharing、虚拟数据线、文件大师等软件开通ftp服务，在计算设备上用浏览器打开ftp后，进行文件传输。</p>
    <p>[0066]	2.没有无线路由，计算设备有无线网卡</p>
    <p>[0067]	2.1无线网卡支持mywifi技术</p>
    <p>[0068]	把计算设备设为wifi热点(xp下手工设置，win7下手工设置或用connectify软件)，移动设备通过wifi连到计算设备；在移动设备上用websharing、虚拟数据线、文件大师等软件开通ftp服务，计算设备上用浏览器打开ftp后进行文件传输。</p>
    <p>[0069]	2.2无线网卡不支持mywifi技术</p>
    <p>[0070]	把移动设备的wifi热点打开,计算设备通过wifi连到移动设备,在移动设备上用websharing、虚拟数据线、文件大师等软件开通ftp服务，计算设备上用浏览器打开ftp后进行文件传输。</p>
    <p>[0071]	所述移动设备侧可以通过上述任一种无线连接方式或其他无线连接方式连接至计算设备，本发明实施例对移动设备无线连接计算设备的具体连接方式无需加以限制。</p>
    <p>[0072]	在本发明的实施例中，终端设备可以是计算设备或移动设备，其中，计算设备可以是具有操作系统的智能设备，如台式电脑，笔记本电脑等。计算设备可以有线方式连接网络，也可以无线方式连接网络，所连接的网络可以是因特网，也可以是局域网。可设置为无线热点的网卡具体可以是计算设备内置的无线网卡或者是可设置为无线热点的USB无线网卡。将所述无线网卡设置成为共享所述计算设备所连接的网络的无线热点后，接入该无线热点的手机、PAD等移动设备就可以通过该无线网卡访问该计算设备所连接的网络。</p>
    <p>[0073]	在本发明的实施例中，该应用程序的特征信息至少包括以下中的任意一种:应用程序的安装包的包名、版本号、开发者签名、Android组件receiver的特征，Android组件service的特征，Android组件activity的特征,可执行文件中的指令或字符串，安装包目录下各文件的MD5值，其中，所述可执行文件包括Dex文件，和/或，ELF文件；所述Dex文件包括classes, dex文件,扩展名为.jar的文件，以及，Dex格式的文件。</p>
    <p>[0074]	I)安装包的包名</p>
    <p>[0075]	Android操作系统通过APK的包名(package name)对各个安装的APK进行管理。“包名”源自于Java的package的概念,按照Java的package的命名风格,例如某个An droid安装包的包名是com.qihoo360.mobiIesafe。Android系统要求每个应用程序都声明一个唯一的安装包的包名。如果要安装的APK的包名和当前手机上某个已有的应用程序的安装包的包名重复了，那么Android系统会拒绝安装。Android平台下的山寨应用程序也需要声明一个包名，因此，包名就可以作为识别山寨应用程序的一个特征。</p>
    <p>[0076]	2)开发者签名</p>
    <p>[0077]	出于安全性的目的，Android系统要求每个APK都要包含开发者签名(digitalsignature)。Android系统在安装APK文件的时候会检查APK内部各文件的开发者签名是否与其预先设定的开发者签名一致，如果不一致，或者没有开发者签名，则认为文件已被篡改，拒绝该APK的安装和运行。Android平台下的山寨应用程序也不例外,所以APK文件的开发者签名也可以作为识别山寨应用程序的一个特征。</p>
    <p>[0078]	上述应用程序的开发者签名，也可称为代码签名，是在应用程序上附加一个防伪和防篡改的开发者签名来保护应用程序不被恶意修改。如果已安装的应用程序的开发者签名与应用程序的官方的开发者签名不一致，则可以认为已安装的应用程序可能被恶意修改过，该应用程序是山寨应用程序。在提取开发者签名时，对于安卓应用而言，可以从程序安装包中的元信息(META-1NF)目录下提取，META-1NF目录用于存储包和扩展的配置数据，例如安全性信息和版本信息，其中开发者签名就存储于此。META-1NF目录如下表所示:</p>
    <p>[0079]</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103679029A/CN103679029AD00091.png"> <img id="idf0001" file="CN103679029AD00091.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103679029A/CN103679029AD00091.png" class="patent-full-image" alt="Figure CN103679029AD00091"> </a> </div>
    <p>[0080]	3) AndroidManifest.xml中列出的各模块的入口信息</p>
    <p>[0081]	AndroidManifest.xml是每个APK文件所必需的全局描述文件，里面列出了 Android安装包中应用的每个模块的入口信息。在Android系统中，只有在AndroidManifest.xml中列出了的模块,才能够被系统调用。Android平台下的木马，往往会伪装成正常的应用或游戏来诱骗用户安装，其中有很多木马就是寄生在一个正常的应用或游戏中，用户运行它的时候，看上去是原来的软件或游戏，但寄生在其中的木马模块在合适的时机就被激活，从而感染用户的手机。而因为Android系统要求所有的模块都要在AndroidManifest.xml中列出，这就为寻找寄生的木马提高了重要线索。因此，AndroidManifest.xml中列出的各模块的信息，也是识别山寨应用程序的重要特征。</p>
    <p>[0082]	4) Dex文件和ELF文件</p>
    <p>[0083]	在Android系统的架构设计中，Android应用通常是用Java语言开发的，它用Android开发工具编译之后变成了二进制的字节码(byte code),这些字节码被打包成classes, dex文件，由Android平台的Dalvik虚拟机来解释执行。为了能够调用Android系统功能，Android系统提供了一套运行环境(Android Framework), Android应用调用系统各功能都是通过调用Android Framework的库来实现的。</p>
    <p>[0084]	另一方面,Android系统也支持应用程序通过JNI或者native executable直接运行。此时应用执行的是直接在CPU上运行的二进制机器码，不需要经过虚拟机解释，可以直接调用Android库如libc、WebKit、SQLite、OpenGL/ES等来调用系统各功能。如果Android应用要通过JNI或者native executable运行，就需要将要执行的代码编译成ELF文件格式。ELF 是 Executable and Linkable Format 的缩写，是 Android/Linux 操作系统中可执行程序、共享库的文件格式。</p>
    <p>[0085]	Android上的山寨应用程序要想在Android系统中运行起来,也要遵循上述架构规范。因此，在识别山寨应用程序的过程中，可以分别从Dex文件(即字节码文件)和ELF文件提取相应的特征。</p>
    <p>[0086]	此外，除上述列举之外，应用程序的安装包的版本号、应用程序的安装包目录下各文件的校验值等信息，也可以作为识别山寨应用程序的重要特征。</p>
    <p>[0087]	上述应用程序的安装包目录下各文件的校验值，是对安装包中所有文件利用现有的校验算法(例如MD5算法)计算产生的一个校验值(例如MD5值)，该校验值可以用于验证安装包目录下文件的完整性，文件的完整性保护主要是关注安装包中某个文件或对象是否被篡改。如果应用程序的安装包目录下各文件的校验值与应用程序的官方安装包中各文件的校验值不一致，则可以认为应用程序的安装包中的某个文件被篡改，该应用程序是山寨应用程序。[0088]	步骤S103、判断应用程序列表中的应用程序是否在预设的应用程序白名单中。</p>
    <p>[0089]	在本发明的一个实施例中，终端设备可以根据应用程序的特征信息判断应用程序列表中的应用程序是否在预设的应用程序白名单中。因为终端设备通常可以从云端服务器下载或从PC机安装预设的应用程序白名单，所以可以优先使用终端设备本地进行识别。</p>
    <p>[0090]	在本发明的另一个实施例中，终端设备侧将应用程序列表发送至云端服务器，并接收由云端服务器判断应用程序列表中的应用程序是否在预设的应用程序白名单的结果。实际应用中，终端设备中可能安装上百个应用程序，但是由于终端设备本地容量有限，一般只能识别出20个左右的应用程序，对于剩余的将近80款软件应用程序未能识别，此时的配置可以是在本地查找完后，全部上传云端服务器再次复查，或者直接将应用程序列表上传云端服务器识别。</p>
    <p>[0091]	在本发明的又一个实施例中，首先提示用户选择在终端设备本地识别还是上传到云端服务器由云端服务器识别，然后根据用户的选择执行终端设备根据应用程序的特征信息判断应用程序列表中的应用程序是否在预设的应用程序白名单中，或者执行终端设备侧将应用程序列表发送至云端服务器，并接收由云端服务器判断应用程序列表中的应用程序是否在预设的应用程序白名单的结果。这种情况下，需要由用户参与选择，终端设备提取出应用程序的特征信息后，在终端设备的用户界面显示提示信息，提示用户选择在终端设备本地识别还是上传到云端服务器，由云端服务器识别。通常，如果用户终端设备有包月的上网流量，则可以选择上传云端服务器，由云端服务器识别，以提高白名单识别的准确率；如果上网流量用完，又不想额外耗费更多流量，则可以选择仅在终端设备本地识别，或者优先在终端设备本地识别，如果终端设备本地识别的结果不全，还可以将剩余未识别的特征信息上传云端服务器，由云端服务器识别。</p>
    <p>[0092]	由于山寨应用程序的安装包的包名通常会伪装成与官方应用程序的安装包的包名一样，因此仅从安装包的包名无法识别出该应用程序是否为山寨应用程序，但是可以首先根据安装包的包名来识别该应用程序是否为受信任的应用程序。</p>
    <p>[0093]	具体地,在步骤S103中可以利用应用程序列表中记录的应用程序的安装包的包名判断应用程序列表中的应用程序是否在预设的应用程序白名单中。</p>
    <p>[0094]	如果该应用程序在该预设的应用程序白名单中，则说明该应用程序的名称是属于受信任的应用程序的名称。如果该应用程序不在该预设的应用程序白名单中，则说明该应用程序不受信任，可以进一步由云端服务器根据安全识别库进行识别。</p>
    <p>[0095]	在本发明的一个实施例中，可以在终端设备或云端服务器上设置一预先定义的安全识别库，所述预先定义的安全识别库可以包含应用程序白名单、应用程序黑名单、以及应用程序特征数据。所述白名单可以包含已知的受信任的应用程序的名称(包括应用程序的UID (唯一标识符)和应用程序的安装包的包名)，所述应用程序黑名单可以包含已知的恶意应用程序的名称(包括应用程序的WD (唯一标识符)和应用程序的安装包的包名)，所述应用程序特征数据可以包含已知的恶意特征(例如山寨应用特征)的数据。</p>
    <p>[0096]	云端服务器存储的特征信息包括以下中的一种或几种组合=Android安装包的包名，版本号，开发者签名，Android组件receiver的特征，Android组件service的特征，Android组件activity的特征,可执行文件中的指令或字符串，Android安装包目录下各文件的MD5值；其中，所述可执行文件包括Dex文件，和/或，ELF文件；所述Dex文件包括classes, dex文件,扩展名为.jar的文件，以及，Dex格式的文件。</p>
    <p>[0097]	如果应用程序在预设的应用程序白名单中，只能说明该应用程序具有受信任的应用程序的名称，考虑到山寨应用程序通常是通过篡改安装包中的文件来将该山寨应用程序的安装包伪装成官方应用程序的安装包，因此有必要进一步判断该应用程序的安装包中的文件是否被篡改。</p>
    <p>[0098]	具体地，在步骤S103中如果判断出应用程序在预设的应用程序白名单中，则进入步骤S105，在步骤S105中，判断应用程序的安装包中的至少部分文件是否被篡改。</p>
    <p>[0099]	在本发明的一个实施例中，在终端设备侧判断应用程序的安装包中的至少部分文件是否被桌改。</p>
    <p>[0100]	具体地，在所述终端设备侧根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改；或者在所述终端设备侧将已安装应用程序的特征信息发送至云端服务器，由云端服务器根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改。</p>
    <p>[0101]	优选地，在终端设备侧判断应用程序列表中的应用程序的开发者签名或应用程序的安装包目录下各文件的校验值与预设的官方应用程序库中的应用程序的官方开发者签名或应用程序的官方安装包目录下各文件的校验值是否相同。</p>
    <p>[0102]	也就是，在终端设备侧判断应用程序列表中的应用程序的开发者签名与预设的官方应用程序库中的应用程序的官方开发者签名是否相同，如果应用程序列表中的应用程序的开发者签名与预设的官方应用程序库中的应用程序的官方开发者签名不相同，则可以认为应用程序的安装包中的部分文件被篡改。</p>
    <p>[0103]	或者，在终端设备侧判断应用程序列表中的应用程序的安装包目录下各文件校验值与预设的官方应用程序库中应用程序的官方安装包目录下各文件的校验值是否相同，如果应用程序列表中的应用程序的安装包目录下各文件的校验值与预设的官方应用程序库中应用程序的官方安装包目录下各文件的官方校验值不相同，则可以认为应用程序的安装包中的部分文件被篡改。</p>
    <p>[0104]	上述预设的官方应用程序库中存储有多种不同版本的官方应用程序的安装包。</p>
    <p>[0105]	在本发明的另一个实施例中，也可以由云端服务器根据终端设备上传的应用程序的特征信息判断应用程序的安装包中的至少部分文件是否被篡改。</p>
    <p>[0106]	如果应用程序的安装包中的至少部分文件被篡改，则说明已安装的应用程序属于山寨应用程序，而不是官方版本的应用程序。考虑到山寨应用程序中可能设置有木马、病毒、广告、泄露隐私等危害用户的恶意代码，因此有必要引导用户卸载该山寨应用程序，并安装官方版本的应用程序，从而完成对山寨应用程序的修复。</p>
    <p>[0107]	具体地，如果在步骤S105中判断出应用程序的安装包中的至少文件被篡改，则可以进入步骤S107。在步骤S107中，卸载终端设备上已安装的应用程序。</p>
    <p>[0108]	在本发明的一个实施例中，当终端设备在本地判断应用程序的安装包中的至少文件被篡改时，在终端设备侧可以提示用户可以卸载该应用程序；在终端设备侧接收卸载命令之后，在终端设备侧根据卸载命令卸载该应用程序。</p>
    <p>[0109]	在本发明的另一个实施例中，当云端服务器判断该应用程序的安装包中的至少文件被篡改时，终端设备可以从云端服务器中获取该应用程序的卸载建议，该卸载建议包括:可卸载、不可卸载和谨慎卸载。由用户根据卸载建议选择是否卸载该应用程序，如果用户选择卸载该应用程序，则根据用户的卸载命令，卸载该应用程序。</p>
    <p>[0110]	若云端服务器通过安全服务检测出应用程序内包含恶意病毒，则确定该应用程序属于可卸载的应用程序，标识为可卸载；若云端服务器检测出应用程序内包含广告、弹窗、收费等，则做标注，将该应用程序归类并标识为可卸载；若云端服务器判断应用程序为移动终端系统自身的应用，卸载可能会对系统自身的运行造成严重影响，则归类并标识为不可卸载；若云端服务器判断应用程序为移动终端系统自身的应用，卸载对系统自身的运行没有严重影响，但是可能损失功能，归类并标识为谨慎卸载。</p>
    <p>[0111]	随后，在步骤S109中，从云端服务器中下载应用程序的官方安装包，并在终端设备上安装。</p>
    <p>[0112]	上述应用程序的官方安装包，是指由该应用程序的开发者发布的官方版本的安装包。</p>
    <p>[0113]	可选地，在本发明的另一个实施例中可以采用以下方式下载并安装应用程序的官方安装包，即步骤S109包括:</p>
    <p>[0114]	S1091、在终端设备侧向云端服务器发送下载请求，该下载请求中包括应用程序的安装包的包名和版本号，由云端服务器根据应用程序的安装包的包名和版本号匹配得到应用程序的官方安装包。</p>
    <p>[0115]	在本发明的一个实施例中，如果应用程序的安装包中的至少部分文件被篡改，在终端设备侧可以自动向云端服务器发送下载请求。</p>
    <p>[0116]	在本发明的另一个实施例中，如果应用程序的安装包中的至少部分文件被篡改，在终端设备侧可以自动向云端服务器发送下载请求之前，在终端设备侧提示用户可以下载应用程序的官方安装包；如果用户选择下载应用程序的官方安装包，则执行步骤S1091。</p>
    <p>[0117]	步骤S1093、在终端设备侧根据下载请求从云端服务器中下载并安装应用程序的官方安装包。</p>
    <p>[0118]	在本发明的另一个实施例中，如果应用程序不在预设的应用程序白名单中，可以将该应用程序的描述信息发送至云端服务器，由云端服务器根据应用程序黑名单对该应用程序进行识别，其中应用程序黑名单包括病毒库，如果该应用程序在应用程序黑名单中，则该应用程序可能是病毒、木马等具有危害的程序。</p>
    <p>[0119]	具体地，在步骤S103中，如果应用程序不在预设的应用程序白名单中，方法100还包括:在终端设备侧将应用程序的特征信息发送至云端服务器，由云端服务器根据安全识别库进行识别，然后在终端设备接收云端服务器发送的卸载建议，该卸载建议包括:可卸载、不可卸载和谨慎卸载。</p>
    <p>[0120]	若云端服务器通过安全识别库检测应用程序的安装包中包含恶意病毒，则确定该应用程序属于可卸载的应用程序，标识为可卸载；若云端服务器检测出应用程序内包含广告、弹窗、收费等，则做标注，将该应用程序归类并标识为可卸载；若云端服务器判断应用程序为移动终端系统自身的应用，卸载可能会对系统自身的运行造成严重影响，则归类并标识为不可卸载；若云端服务器判断应用程序为移动终端系统自身的应用，卸载对系统自身的运行没有严重影响，但是可能损失功能，归类并标识为谨慎卸载。[0121]	优选地，所述安全识别库中的特征信息包括以下中的一种或几种组合:各种样本Android安装包的包名，版本号，数字签名，Android组件receiver的特征，Android组件service的特征，Android组件activity的特征,可执行文件中的指令或字符串，Android安装包目录下各文件的MD5值；其中，所述可执行文件包括Dex文件，和/或，ELF文件；所述Dex文件包括classes, dex文件，扩展名为.jar的文件，以及，Dex格式的文件；其中，所述样本Android安装包包括各种安全级别下的Android安装包。</p>
    <p>[0122]	云端服务器的安全规则库的策略主要包括:安全、危险、谨慎和木马四个安全级另U。其中，各种安全级别的定义如下:</p>
    <p>[0123]	安全:该应用程序是一个正常的应用程序，没有任何威胁用户移动设备手机安全的行为；</p>
    <p>[0124]	危险:该应用程序存在安全风险，有可能该应用程序本身就是恶意软件；也有可能该应用程序本来是正规公司发布的正常软件，但是因为存在安全漏洞，导致用户的隐私、手机安全受到威胁；</p>
    <p>[0125]	谨慎:该应用程序是一个正常的应用程序，但是存在一些问题，例如会让用户不小心被扣费，或者有不友好的广告遭到投诉等；当发现这类应用程序之后，会提示用户谨慎使用并告知该应用程序可能的行为，但是由用户自行决定是否清除该应用程序；</p>
    <p>[0126]	木马:该应用是病毒、木马或者其他恶意软件，此处为了简单统称为木马，但并不表示该应用程序仅仅是木马。</p>
    <p>[0127]	由上述技术方案可知，本发明的实施例具有如下有益效果:通过判断应用程序的安装包中的至少部分文件是否被篡改，来识别终端设备中已安装的应用程序是否为山寨应用程序，如果该应用程序为山寨应用程序，则可以提示用户卸载该应用程序，并引导用户从云端服务器中下载并安装应用程序的官方安装包，从而实现帮助用户将山寨应用程序替换成官方版本的应用程序，有效防止山寨应用程序中的木马、病毒、广告、泄露隐私等危害用户的恶意代码给用户带来安全问题，提高了终端设备的操作系统的安全性。</p>
    <p>[0128]	如图2所示，在本发明的另一个实施例中提供了一种修复山寨应用程序的装置，该装置200包括:</p>
    <p>[0129]	扫描模块201，用于扫描终端设备上已安装的应用程序，并根据扫描得到的信息生成应用程序列表；</p>
    <p>[0130]	白名单判断模块203，用于判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；</p>
    <p>[0131]	篡改判断模块205，用于如果所述应用程序在所述预设的应用程序白名单中，判断所述应用程序的安装包中的至少部分文件是否被篡改；</p>
    <p>[0132]	卸载模块207，用于如果所述应用程序的安装包中的至少部分文件被篡改，卸载终端设备上的应用程序；</p>
    <p>[0133]自动安装模块209，用于从云端服务器中下载应用程序的官方安装包并在终端设备上安装。</p>
    <p>[0134]	可选地，在本发明的一个实施例中，所述白名单判断模块203进一步用于在所述终端设备侧判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；或者在所述终端设备侧将所述应用程序列表发送至云端服务器，并接收由所述云端服务器判断所述应用程序列表中的应用程序是否在预设的应用程序白名单的结果。</p>
    <p>[0135]	可选地，在本发明的一个实施例中，所述篡改判断模块205进一步用于在所述终端设备侧根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改；或者在所述终端设备侧将已安装应用程序的特征信息发送至云端服务器，由云端服务器根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改。</p>
    <p>[0136]	可选地，在本发明的一个实施例中，所述应用程序的特征信息至少包括以下中的任意一种:应用程序的安装包的包名、版本号、开发者签名、Android组件receiver的特征，Android组件service的特征,Android组件activity的特征,可执行文件中的指令或字符串和安装包目录下各文件的校验值。</p>
    <p>[0137]	可选地，在本发明的一个实施例中，所述自动安装模块209包括:</p>
    <p>[0138]	下载请求发送单元，用于在所述终端设备侧向所述云端服务器发送下载请求，所述下载请求中包括应用程序的描述信息，由所述云端服务器根据所述应用程序的描述信息匹配得到所述应用程序的官方安装包；</p>
    <p>[0139]	下载单元，用于在所述终端设备侧从所述云端服务器中下载所述应用程序的官方安装包；</p>
    <p>[0140]	安装单元，用于在所述终端设备侧安装所述应用程序的官方安装包。</p>
    <p>[0141]	可选地，在本发明的一个实施例中，所述自动安装模块209还包括:</p>
    <p>[0142]	下载提示单元，用于在所述终端设备侧提示用户可以下载所述应用程序的官方安装包；如果用户选择下载所述应用程序的官方安装包，则触发所述下载请求发送单元。</p>
    <p>[0143]	可选地，在本发明的一个实施例中，所述卸载模块包括:</p>
    <p>[0144]	卸载提示单元，用于在所述终端设备侧提示用户可以卸载所述应用程序；</p>
    <p>[0145]	卸载命令接收单元，用于在所述终端设备侧接收卸载命令，所述卸载命令包括应用程序的描述信息；</p>
    <p>[0146]	卸载单元，用于在所述终端设备侧根据所述卸载命令卸载所述应用程序。</p>
    <p>[0147]	可选地，在本发明的一个实施例中，所述装置200还包括:</p>
    <p>[0148]	识别请求模块，用于在终端设备侧将应用程序的特征信息发送至云端服务器，由云端服务器根据安全识别库进行识别；所述安全识别库中的特征信息包括以下中的一种或几种组合:各种样本Android安装包的包名，版本号,数字签名，Android组件receiver的特征，Android组件service的特征，Android组件activity的特征,可执行文件中的指令或字符串，Android安装包目录下各文件的MD5值；其中，所述可执行文件包括Dex文件，和/或，ELF文件；所述Dex文件包括classes, dex文件,扩展名为.jar的文件，以及，Dex格式的文件；其中，所述样本Android安装包包括各种安全级别下的Android安装包；</p>
    <p>[0149]	卸载建议接收模块，用于在所述终端设备接收所述云端服务器发送的卸载建议，所述卸载建议包括:建议卸载、不建议卸载和谨慎卸载。</p>
    <p>[0150]	由上述技术方案可知，本发明的实施例具有如下有益效果:通过判断应用程序的安装包中的至少部分文件是否被篡改，来识别终端设备中已安装的应用程序是否为山寨应用程序，如果该应用程序为山寨应用程序，则可以提示用户卸载该应用程序，并引导用户从云端服务器中下载并安装应用程序的官方安装包，从而实现帮助用户将山寨应用程序替换成官方版本的应用程序，有效防止山寨应用程序中的木马、病毒、广告、泄露隐私等危害用户的恶意代码给用户带来安全问题，提高了终端设备的操作系统的安全性。</p>
    <p>[0151]	在此提供的算法和显示不与任何特定计算机、虚拟系统或者其它设备固有相关。各种通用系统也可以与基于在此的示教一起使用。根据上面的描述，构造这类系统所要求的结构是显而易见的。此外，本发明也不针对任何特定编程语言。应当明白，可以利用各种编程语言实现在此描述的本发明的内容，并且上面对特定语言所做的描述是为了披露本发明的最佳实施方式。</p>
    <p>[0152]	在此处所提供的说明书中，说明了大量具体细节。然而，能够理解，本发明的实施例可以在没有这些具体细节的情况下实践。在一些实例中，并未详细示出公知的方法、结构和技术，以便不模糊对本说明书的理解。</p>
    <p>[0153]	类似地，应当理解，为了精简本公开并帮助理解各个发明方面中的一个或多个，在上面对本发明的示例性实施例的描述中，本发明的各个特征有时被一起分组到单个实施例、图、或者对其的描述中。然而，并不应将该公开的方法解释成反映如下意图:即所要求保护的本发明要求比在每个权利要求中所明确记载的特征更多的特征。更确切地说，如下面的权利要求书所反映的那样，发明方面在于少于前面公开的单个实施例的所有特征。因此，遵循具体实施方式的权利要求书由此明确地并入该具体实施方式，其中每个权利要求本身都作为本发明的单独实施例。</p>
    <p>[0154]	本领域那些技术人员可以理解，可以对实施例中的设备中的模块进行自适应性地改变并且把它们设置在与该实施例不同的一个或多个设备中。可以把实施例中的模块或单元或组件组合成一个模块或单元或组件，以及此外可以把它们分成多个子模块或子单元或子组件。除了这样的特征或过程或者单元中的至少一些是相互排斥之外，可以采用任何组合对本说明书(包括伴随的权利要求、摘要和附图)中公开的所有特征以及如此公开的任何方法或者设备的所有过程或单元进行组合。除非另外明确陈述，本说明书(包括伴随的权利要求、摘要和附图)中公开的每个特征可以由提供相同、等同或相似目的替代特征来代替。</p>
    <p>[0155]	此外，本领域的技术人员能够理解，尽管在此所述的一些实施例包括其它实施例中所包括的某些特征而不是其它特征，但是不同实施例的特征的组合意味着处于本发明的范围之内并且形成不同的实施例。例如，在下面的权利要求书中，所要求保护的实施例的任意之一都可以以任意的组合方式来使用。</p>
    <p>[0156]	本发明的各个部件实施例可以以硬件实现，或者以在一个或者多个处理器上运行的软件模块实现，或者以它们的组合实现。本领域的技术人员应当理解，可以在实践中使用微处理器或者数字信号处理器(DSP )来实现根据本发明实施例的装置中的一些或者全部部件的一些或者全部功能。本发明还可以实现为用于执行这里所描述的方法的一部分或者全部的设备或者装置程序(例如，计算机程序和计算机程序产品)。这样的实现本发明的程序可以存储在计算机可读介质上，或者可以具有一个或者多个信号的形式。这样的信号可以从因特网网站上下载得到，或者在载体信号上提供，或者以任何其他形式提供。</p>
    <p>[0157]	应该注意的是上述实施例对本发明进行说明而不是对本发明进行限制，并且本领域技术人员在不脱离所附权利要求的范围的情况下可设计出替换实施例。在权利要求中，不应将位于括号之间的任何参考符号构造成对权利要求的限制。单词“包含”不排除存在未列在权利要求中的元件或步骤。位于元件之前的单词“一”或“一个”不排除存在多个这样的元件。本发明可以借助于包括有若干不同元件的硬件以及借助于适当编程的计算机来实现。在列举了若干设备的单元权利要求中，这些设备中的若干个可以是通过同一个硬件项来具体体现。单词第一、第二、以及第三等的使用不表示任何顺序。可将这些单词解释为名称。</p>
    <p>[0158]	本发明还公开了 Al、一种修复山寨应用程序的方法，其包括:</p>
    <p>[0159]	扫描终端设备上已安装的应用程序，并根据扫描得到的信息生成应用程序列表，所述应用程序列表包括应用程序的特征信息；</p>
    <p>[0160]	判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；</p>
    <p>[0161]	如果所述应用程序在所述预设的应用程序白名单中，判断所述应用程序的安装包中的至少部分文件是否被篡改；</p>
    <p>[0162]	如果所述应用程序的安装包中的至少部分文件被篡改，则卸载所述终端设备上的所述应用程序；</p>
    <p>[0163]	从云端服务器中下载所述应用程序的官方安装包并在所述终端设备上安装。</p>
    <p>[0164]	A2、根据Al所述的方法，其中，所述判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中的步骤包括:</p>
    <p>[0165]	在所述终端设备侧判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；或者</p>
    <p>[0166]	在所述终端设备侧将所述应用程序列表发送至云端服务器，并接收由所述云端服务器判断所述应用程序列表中的应用程序是否在预设的应用程序白名单的结果。</p>
    <p>[0167]	A3、根据Al所述的方法，其中，判断所述应用程序的安装包中的至少部分文件是否被篡改的步骤包括:</p>
    <p>[0168]	在所述终端设备侧根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改；或者</p>
    <p>[0169]	在所述终端设备侧将已安装应用程序的特征信息发送至云端服务器，由云端服务器根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改。</p>
    <p>[0170]	A4、根据Al所述的方法，其中，所述应用程序的特征信息至少包括以下中的任意一种:应用程序的安装包的包名、版本号、开发者签名、Android组件receiver的特征，Android组件service的特征,Android组件activity的特征,可执行文件中的指令或字符串和安装包目录下各文件的校验值。</p>
    <p>[0171]	A5、根据Al所述的方法，其中，如果所述应用程序不在所述预设的应用程序白名单中，所述方法还包括:</p>
    <p>[0172]	在终端设备侧将应用程序的特征信息发送至云端服务器，由云端服务器根据安全识别库进行识别；所述安全识别库中的特征信息包括以下中的一种或几种组合:各种样本Android安装包的包名，版本号，数字签名，Android组件receiver的特征，Android组件service的特征，Android组件activity的特征,可执行文件中的指令或字符串，Android安装包目录下各文件的MD5值；其中，所述可执行文件包括Dex文件，和/或，ELF文件；所述Dex文件包括classes, dex文件，扩展名为.jar的文件，以及，Dex格式的文件；其中，所述样本Android安装包包括各种安全级别下的Android安装包；[0173]	在所述终端设备接收所述云端服务器发送的卸载建议，所述卸载建议包括:建议卸载、不建议卸载和谨慎卸载。</p>
    <p>[0174]	A6、根据Al所述的方法，其中，从云端服务器中下载所述应用程序的官方安装包并在所述终端设备上安装的步骤包括:</p>
    <p>[0175]	在所述终端设备侧向所述云端服务器发送下载请求，所述下载请求中包括应用程序的安装包的包名和版本号，由所述云端服务器根据所述应用程序的安装包的包名和版本号匹配得到所述应用程序的官方安装包；</p>
    <p>[0176]	在所述终端设备侧从所述云端服务器中下载并安装所述应用程序的官方安装包。</p>
    <p>[0177]	A7、根据A6所述的方法，其中，在所述终端设备侧向所述云端服务器发送下载请求的步骤之前，还包括:</p>
    <p>[0178]	在所述终端设备侧提示用户可以下载所述应用程序的官方安装包；</p>
    <p>[0179]	如果用户选择下载所述应用程序的官方安装包，则执行在所述终端设备侧向所述云端服务器发送下载请求的步骤。</p>
    <p>[0180]	AS、根据Al所述的方法，其中，卸载所述终端设备上的应用程序的步骤包括:</p>
    <p>[0181]	在所述终端设备侧提示用户可以卸载所述应用程序；</p>
    <p>[0182]	在所述终端设备侧接收卸载命令；</p>
    <p>[0183]	在所述终端设备侧根据所述卸载命令卸载所述应用程序。</p>
    <p>[0184]	B9、一种修复山寨应用程序的装置，其包括:</p>
    <p>[0185]	扫描模块，用于扫描终端设备上已安装的应用程序，并根据扫描得到的信息生成应用程序列表，所述应用程序列表包括应用程序的特征信息；</p>
    <p>[0186]	白名单判断模块，用于判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；</p>
    <p>[0187]	篡改判断模块，用于如果所述应用程序在所述预设的应用程序白名单中，判断所述应用程序的安装包中的至少部分文件是否被篡改；</p>
    <p>[0188]	卸载模块，用于如果所述应用程序的安装包中的至少部分文件被篡改，则卸载所述终端设备上的所述应用程序；</p>
    <p>[0189]自动安装模块，用于从云端服务器中下载所述应用程序的官方安装包并在所述终端设备上安装。</p>
    <p>[0190]	B10、根据B9所述的装置，其中，所述白名单判断模块进一步用于在所述终端设备侧判断所述应用程序列表中的应用程序是否在预设的应用程序白名单中；或者在所述终端设备侧将所述应用程序列表发送至云端服务器，并接收由所述云端服务器判断所述应用程序列表中的应用程序是否在预设的应用程序白名单的结果。</p>
    <p>[0191]	B11、根据B9所述的装置，其中，所述篡改判断模块进一步用于在所述终端设备侧根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改；或者在所述终端设备侧将已安装应用程序的特征信息发送至云端服务器，由云端服务器根据已安装应用程序的特征信息与官方版本的应用程序的特征信息，判断所述应用程序的安装包中的至少部分文件是否被篡改。</p>
    <p>[0192]	B12、根据B9所述的装置，其中，所述应用程序的特征信息至少包括以下中的任意一种:应用程序的安装包的包名、版本号、开发者签名、Android组件receiver的特征，Android组件service的特征,Android组件activity的特征,可执行文件中的指令或字符串和安装包目录下各文件的校验值。</p>
    <p>[0193]	B13、根据B9所述的装置，其中，所述自动安装模块包括:</p>
    <p>[0194]	下载请求发送单元，用于在所述终端设备侧向所述云端服务器发送下载请求，所述下载请求中包括应用程序的描述信息，由所述云端服务器根据所述应用程序的描述信息匹配得到所述应用程序的官方安装包；</p>
    <p>[0195]	下载单元，用于在所述终端设备侧从所述云端服务器中下载所述应用程序的官方安装包；</p>
    <p>[0196]	安装单元，用于在所述终端设备侧安装所述应用程序的官方安装包。</p>
    <p>[0197]	B14、根据B13所述的装置，其中，所述自动安装模块还包括:</p>
    <p>[0198]	下载提示单元，用于在所述终端设备侧提示用户可以下载所述应用程序的官方安装包；如果用户选择下载所述应用程序的官方安装包，则触发所述下载请求发送单元。</p>
    <p>[0199]	B15、根据B9所述的装置，其中，所述卸载模块包括:</p>
    <p>[0200]	卸载提示单元，用于在所述终端设备侧提示用户可以卸载所述应用程序；</p>
    <p>[0201]	卸载命令接收单元，用于在所述终端设备侧接收卸载命令，所述卸载命令包括应用程序的描述信息；</p>
    <p>[0202]	卸载单元，用于在所述终端设备侧根据所述卸载命令卸载所述应用程序。</p>
    <p>[0203]	B16、根据B9所述的装置，所述装置还包括:</p>
    <p>[0204]	识别请求模块，用于在终端设备侧将应用程序的特征信息发送至云端服务器，由云端服务器根据安全识别库进行识别；所述安全识别库中的特征信息包括以下中的一种或几种组合:各种样本Android安装包的包名，版本号,数字签名，Android组件receiver的特征，Android组件service的特征，Android组件activity的特征,可执行文件中的指令或字符串，Android安装包目录下各文件的MD5值；其中，所述可执行文件包括Dex文件，和/或，ELF文件；所述Dex文件包括classes, dex文件,扩展名为.jar的文件，以及，Dex格式的文件；其中，所述样本Android安装包包括各种安全级别下的Android安装包；</p>
    <p>[0205]	卸载建议接收模块，用于在所述终端设备接收所述云端服务器发送的卸载建议，所述卸载建议包括:建议卸载、不建议卸载和谨慎卸载。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102360320A?cl=zh">CN102360320A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年9月30日</td><td class="patent-data-table-td patent-date-value">2012年2月22日</td><td class="patent-data-table-td ">奇智软件（北京）有限公司</td><td class="patent-data-table-td ">一种基于云架构的终端备份对象共享恢复方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102495771A?cl=zh">CN102495771A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年9月30日</td><td class="patent-data-table-td patent-date-value">2012年6月13日</td><td class="patent-data-table-td ">奇智软件（北京）有限公司</td><td class="patent-data-table-td ">一种基于云架构的终端对象分类备份及恢复方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102508735A?cl=zh">CN102508735A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年9月30日</td><td class="patent-data-table-td patent-date-value">2012年6月20日</td><td class="patent-data-table-td ">奇智软件（北京）有限公司</td><td class="patent-data-table-td ">一种基于云架构的终端系统备份及恢复方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102779257A?cl=zh">CN102779257A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年6月28日</td><td class="patent-data-table-td patent-date-value">2012年11月14日</td><td class="patent-data-table-td ">奇智软件（北京）有限公司</td><td class="patent-data-table-td ">一种Android应用程序的安全检测方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102855274A?cl=zh">CN102855274A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年7月17日</td><td class="patent-data-table-td patent-date-value">2013年1月2日</td><td class="patent-data-table-td ">北京奇虎科技有限公司</td><td class="patent-data-table-td ">一种可疑进程检测的方法和装置</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=olT5CAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0009445000">G06F9/445</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=olT5CAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0021560000">G06F21/56</a></span></td></tr><tr><td class="patent-data-table-td "> 合作分类</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=olT5CAABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F9/44594">G06F9/44594</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=olT5CAABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F21/562">G06F21/562</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=olT5CAABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F9/44521">G06F9/44521</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2014年4月23日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/a3b9f54c075c8574ca1d/CN103679029A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E4%BF%AE%E5%A4%8D%E5%B1%B1%E5%AF%A8%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%96%B9%E6%B3%95.pdf?id=olT5CAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U05TYNrFWgmQr2OhntKSBvvI0kitQ"},"sample_url":"https://www.google.com/patents/reader?id=olT5CAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>