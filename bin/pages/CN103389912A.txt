<!DOCTYPE html><html><head><title>专利 CN103389912A - 一种浏览器内核切换方法、系统与装置 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种浏览器内核切换方法、系统与装置"><meta name="DC.contributor" content="唐红兵" scheme="inventor"><meta name="DC.contributor" content="阿里巴巴集团控股有限公司" scheme="assignee"><meta name="DC.date" content="2012-5-9" scheme="dateSubmitted"><meta name="DC.description" content="本申请实施例提供一种浏览器内核切换方法、系统与装置，包括：主控单元在第一子控单元利用当前运行内核接收到网页打开请求之后，打开网页之前，根据该网页对应的URL判断打开该网页的目标内核标识，在确定出的目标内核标识与当前内核标识一致时，指示第一子控单元继续利用当前运行内核打开该网页，否则，直接利用第二子控单元通过目标内核标识对应的内核打开该网页。从而避免了在需要切换内核来打开网页时，需要在当前运行内核打开网页之后切换内核来重新打开该网页，并关闭之前已打开的网页造成的利用切换后的内核打开网页的速度较慢，以及由于网页重复打开造成网络流量浪费，以及存在页面闪烁的问题。"><meta name="DC.date" content="2013-11-13"><meta name="DC.relation" content="CN:101655863:A" scheme="references"><meta name="DC.relation" content="CN:102156709:A" scheme="references"><meta name="DC.relation" content="CN:102385594:A" scheme="references"><meta name="DC.relation" content="US:20100094891:A1" scheme="references"><meta name="DC.relation" content="US:20100153544:A1" scheme="references"><meta name="citation_patent_publication_number" content="CN:103389912:A"><meta name="citation_patent_application_number" content="CN:201210141365"><link rel="canonical" href="https://www.google.com/patents/CN103389912A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN103389912A?cl=zh"/><meta name="title" content="专利 CN103389912A - 一种浏览器内核切换方法、系统与装置"/><meta name="description" content="本申请实施例提供一种浏览器内核切换方法、系统与装置，包括：主控单元在第一子控单元利用当前运行内核接收到网页打开请求之后，打开网页之前，根据该网页对应的URL判断打开该网页的目标内核标识，在确定出的目标内核标识与当前内核标识一致时，指示第一子控单元继续利用当前运行内核打开该网页，否则，直接利用第二子控单元通过目标内核标识对应的内核打开该网页。从而避免了在需要切换内核来打开网页时，需要在当前运行内核打开网页之后切换内核来重新打开该网页，并关闭之前已打开的网页造成的利用切换后的内核打开网页的速度较慢，以及由于网页重复打开造成网络流量浪费，以及存在页面闪烁的问题。"/><meta property="og:title" content="专利 CN103389912A - 一种浏览器内核切换方法、系统与装置"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN103389912A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN103389912A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=C-PgCAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN103389912A&amp;usg=AFQjCNGGNSKLtkQyO0hdrhu6ZelHXd-4bQ" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/ed89163af6125702dacc/CN103389912A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/ed89163af6125702dacc/CN103389912A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN103389912A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN103389912A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN103389912A?cl=zh" style="display:none"><span itemprop="description">本申请实施例提供一种浏览器内核切换方法、系统与装置，包括：主控单元在第一子控单元利用当前运行内核接收到网页打开请求之后，打开网页之前，根据该网页对应的URL判断打开该网页的目标内核标识，在确定出的目标内核...</span><span itemprop="url">https://www.google.com/patents/CN103389912A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN103389912A - 一种浏览器内核切换方法、系统与装置</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN103389912A - 一种浏览器内核切换方法、系统与装置" title="专利 CN103389912A - 一种浏览器内核切换方法、系统与装置"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN103389912 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210141365</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年11月13日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年5月9日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年5月9日</td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210141365.7, </span><span class="patent-bibdata-value">CN 103389912 A, </span><span class="patent-bibdata-value">CN 103389912A, </span><span class="patent-bibdata-value">CN 201210141365, </span><span class="patent-bibdata-value">CN-A-103389912, </span><span class="patent-bibdata-value">CN103389912 A, </span><span class="patent-bibdata-value">CN103389912A, </span><span class="patent-bibdata-value">CN201210141365, </span><span class="patent-bibdata-value">CN201210141365.7</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%94%90%E7%BA%A2%E5%85%B5%22">唐红兵</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E9%9B%86%E5%9B%A2%E6%8E%A7%E8%82%A1%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">阿里巴巴集团控股有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103389912A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103389912A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103389912A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (5),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (2),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=C-PgCAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210141365&amp;usg=AFQjCNExvgMxuitMChbWAs21k4RAke9DeA"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=C-PgCAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D103389912A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNEffsD4NhZ52CsfyT24yyJU7eZAuQ"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT131098671" lang="ZH" load-source="patent-office">一种浏览器内核切换方法、系统与装置</invention-title>
      </span><br><span class="patent-number">CN 103389912 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA125227084" lang="ZH" load-source="patent-office">
    <div class="abstract">本申请实施例提供一种浏览器内核切换方法、系统与装置，包括：主控单元在第一子控单元利用当前运行内核接收到网页打开请求之后，打开网页之前，根据该网页对应的URL判断打开该网页的目标内核标识，在确定出的目标内核标识与当前内核标识一致时，指示第一子控单元继续利用当前运行内核打开该网页，否则，直接利用第二子控单元通过目标内核标识对应的内核打开该网页。从而避免了在需要切换内核来打开网页时，需要在当前运行内核打开网页之后切换内核来重新打开该网页，并关闭之前已打开的网页造成的利用切换后的内核打开网页的速度较慢，以及由于网页重复打开造成网络流量浪费，以及存在页面闪烁的问题。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(16)</span></span></div><div class="patent-text"><div mxw-id="PCLM56723901" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.一种浏览器内核切换方法，其特征在于，应用于包括主控单元、第一子控单元和第二子控单元的系统，其中，第一子控单元用于利用当前运行内核进行操作，第二子控单元用于利用非当前运行内核进行操作，主控单元选择第一子控单元和第二子控单元进行操作，所述方法包括:  主控单元接收第一子控单元发送的网页所使用的统一资源定位符URL以及当前运行内核的内核标识，所述URL和当前内核标识是所述第一子控单元接收到网页打开请求之后，打开所述网页之前发送的；  主控单元根据所述URL，确定打开所述网页的目标内核标识；  主控单元在所述目标内核标识与所述当前内核标识相同时，指示所述第一子控单元利用当前运行内核打开所述网页，否则，指示第二子控单元利用所述目标内核标识对应的内核打开所述网页。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.如权利要求1所述的方法，其特征在于，主控单元接收所述URL以及当前内核标识时，还进一步包括接收网页打开请求类型以及POST参数，所述网页打开请求类型为获得GET请求或发布POST请求，所述POST参数是POST请求类型的网页打开请求对应的参数；  主控单元指示所述第一子控单元利用当前运行内核打开所述网页，具体包括:  主控单元指示第一子控单元根据所述网页打开请求类型，在所述网页打开请求类型为GET请求时，利用所述URL打开所述网页，在所述网页打开请求类型为POST请求时，利用所述URL和POST参数打开所述网页；  主控单元指示第二子控单元利用所 述目标内核标识对应的内核打开所述网页，具体包括:  主控单元指示第二子控单元根据所述网页打开请求类型，在所述网页打开请求类型为GET请求时，利用所述URL打开所述网页，在所述网页打开请求类型为POST请求时，利用所述URL和POST参数打开所述网页。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.如权利要求2所述的方法，其特征在于，当前运行内核为trident内核时，主控单元接收所述URL、当前内核标识、网页打开请求类型以及POST参数，具体包括:  主控单元接收第一子控单元在导航前BeforeNavigate事件结束之前发送的第一事件，所述第一事件中携带URL、当前内核标识、网页打开请求类型以及POST参数，其中，所述URL、网页打开请求类型以及POST参数是从BeforeNavigate事件中获取的；  主控单元指示所述第一子控单元利用当前内核标识对应的内核打开所述网页，具体包括:  主控单元向第一子控单元返回所述第一事件的指定参数，指示第一子控单元是否利用当前运行内核打开所述网页；  主控单元指示第二子控单元利用所述目标内核标识对应的内核打开所述网页，具体包括:  主控单元向第二子控单元发送所述URL、网页打开请求类型以及POST参数，指示第二子控单元根据接收到的所述URL、网页打开请求类型以及POST参数打开所述网页。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.如权利要求2所述的方法，其特征在于，当前运行内核为webkit内核时，主控单元接收所述URL、当前内核标识、网页打开请求类型以及POST参数，具体包括:  主控单元接收第一子控单元在即将发送请求WillSendRequest事件结束之前发送的第二事件，所述第二事件中携带URL、当前内核标识、网页打开请求类型以及POST参数，其中，所述URL、网页打开请求类型以及POST参数是从willSendRequest事件中获取的；主控单元指示所述第一子控单元利用当前内核标识对应的内核打开所述网页，具体包括:  主控单元向第一子控单元返回所述第二事件的指定参数，指示第一子控单元是否利用当前运行内核打开所述网页；  主控单元指示第二子控单元利用所述目标内核标识对应的内核打开所述网页，具体包括:  主控单元向第二子控单元发送所述URL、网页打开请求类型以及POST参数，指示第二子控单元根据接收到的所述URL、网页打开请求类型以及POST参数打开所述网页。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.如权利要求Γ4任一所述的方法，其特征在于，在所述系统为多进程架构时，所述主控单元为主进程，第一子控单元为第一子进程，第二子控单元为第二子进程；或者，在所述系统为单进程多线程架构时，所述主控单元为主线程，第一子控单元为第一子线程，第二子控单元为第二子线程。</div>
    </div>
    </div> <div class="claim"> <div num="6" class="claim">
      <div class="claim-text">6.一种浏览器内 核切换方法，其特征在于，所述方法包括:  子控单元利用当前运行内核接收到网页打开请求之后，利用当前运行内核打开网页之前，确定所述网页所使用的统一资源定位符URL以及当前运行内核的内核标识，并发送所述URL和当前内核标识至主控单元；  子控单元在接收到主控单元发送的利用当前运行内核打开所述网页的指示时，利用当前运行内核打开所述网页。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.如权利要求6所述的方法，其特征在于，子控单元确定所述URL以及当前内核标识时，还进一步包括确定网页打开请求类型以及POST参数，所述网页打开请求类型为获得GET请求或发布POST请求，所述POST参数是POST请求类型的网页打开请求对应的参数；  子控单元发送所述URL和当前内核标识时,还进一步包括发送所述URL、当前内核标识、网页打开请求类型和POST参数。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.如权利要求7所述的方法，其特征在于，当前运行内核为trident内核时，子控单元确定所述URL、当前内核标识、网页打开请求类型以及POST参数，具体包括:  子控单元从导航前BeforeNavigate事件中获取所述URL、网页打开请求类型以及POST参数；  子控单元发送所述URL、当前内核标识、网页打开请求类型和POST参数，具体包括:子控单元在BeforeNavigate事件结束之前发送第一事件，所述第一事件中携带URL、当前内核标识、网页打开请求类型以及POST参数；  子控单元在接收到主控单元发送的利用当前运行内核打开所述网页的指示时，利用当前运行内核打开所述网页，具体包括:  子控单元接收主控单元返回的所述第一事件的指定参数，将所述指定参数的值赋予BeforeNavigate 事件的出口参数 continue ；  其中，所述指定参数的值为真时，指示子控单元利用当前运行内核打开所述网页，否则，指示子控单元终止本次操作。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.如权利要求7所述的方法，其特征在于，当前运行内核为webkit内核时，子控单元确定所述URL、当前内核标识、网页打开请求类型以及POST参数，具体包括:  子控单元从即将发送请求willSendRequest事件中获取所述URL、网页打开请求类型以及POST参数；  子控单元发送所述URL、当前内核标识、网页打开请求类型和POST参数，具体包括:子控单元在willSendRequest事件结束之前发送第二事件，所述第二事件中携带URL、当前内核标识、网页打开请求类型以及POST参数；  子控单元在接收到主控单元发送的利用当前运行内核打开所述网页的指示时，利用当前运行内核打开所述网页，具体包括:  子控单元接收主控单元返回的所述第二事件的指定参数，将所述指定参数的值赋予willSendRequest事件的返回值；  其中，所述指定参数的值为真时，指示子控单元利用当前运行内核打开所述网页，否则，指示子控单元终止本次操作。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.如权利要求6、任一所述的方法，其特征在于，子控单元确定所述网页所使用的统一资源定位符URL以及当前运行内核的内核标识之前，所述方法还包括:  子控单元确定所述网页打开请求为网页主框架MainFrame产生的。</div>
    </div>
    </div> <div class="claim"> <div num="11" class="claim">
      <div class="claim-text">11.一种浏览器内核切换方法，其特征在于，所述方法包括:  子控单元接收主控单元发送的利用目标内核标识对应的内核打开网页的指示；  子控单元根据所述指示，利用目标内核标识对应的内核打开所述网页。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="12" class="claim">
      <div class="claim-text">12.如权利要求11所述的方法，其特征在于，所述指示携带有所述网页所使用的URL、网页打开请求类型以及POST参数，所述网页打开请求类型为获得GET请求或发布POST请求，所述POST参数是POST请求类型的网页打开请求对应的参数；  子控单元根据所述指示，利用目标内核标识对应的内核打开所述网页，具体包括:  子控单元根据所述网页打开请求类型，在所述网页打开请求类型为GET请求时，利用所述URL打开所述网页，在所述网页打开请求类型为POST请求时，利用所述URL和POST参数打开所述网页。</div>
    </div>
    </div> <div class="claim"> <div num="13" class="claim">
      <div class="claim-text">13.&#8212;种浏览器内核切换系统，其特征在于，所述系统包括第一装置、第二装置和第三装置，其中:  第一装置，用于利用当前运行内核接收到网页打开请求之后，利用当前运行内核打开网页之前，确定所述网页所使用的统一资源定位符URL以及当前运行内核的内核标识，向第二装置发送所述URL和当前内核标识，并在接收到第二装置发送的利用当前运行内核打开所述网页的指示时，利用当前运行内核打开所述网页；  第二装置，用于接收第一装置发送的URL以及当前内核标识，根据所述URL，确定打开所述网页的目标内核标识，并在所述目标内核标识与所述当前内核标识相同时，指示第一装置利用当前运行内核打开所述网页，否则，指示第三装置利用所述目标内核标识对应的内核打开所述网页；  第三装置，用于在接收到第二装置发送的利用所述目标内核标识对应的内核打开所述网页的指示时，根据所述指示，利用目标内核标识对应的内核打开所述网页。</div>
    </div>
    </div> <div class="claim"> <div num="14" class="claim">
      <div class="claim-text">14.一种浏览器内核切换装置，其特征在于，所述装置包括:  接收模块，用于接收第一子控单元发送的网页所使用的统一资源定位符URL以及当前运行内核的内核标识，所述URL和当前内核标识是所述第一子控单元接收到网页打开请求之后，打开所述网页之前发送的；  确定模块，用于根据所述URL，确定打开所述网页的目标内核标识；  切换模块，用于在所述目标内核标识与所述当前内核标识相同时，指示所述第一子控单元利用当前运行内核打开所述网页，否则，指示第二子控单元利用所述目标内核标识对应的内核打开所述网页。</div>
    </div>
    </div> <div class="claim"> <div num="15" class="claim">
      <div class="claim-text">15.一种浏览器内核切换装置，其特征在于，所述装置包括:  确定模块，用于利用当前运行内核接收到网页打开请求之后，利用当前运行内核打开网页之前，确定所述网页所使用的统一资源定位符URL以及当前运行内核的内核标识；  发送模块，用于发送所述URL和当前内核标识至主控单元；  执行模块，用于在接收到主控单元发送的利用当前运行内核打开所述网页的指示时，利用当前运行内核打开所述网页。</div>
    </div>
    </div> <div class="claim"> <div num="16" class="claim">
      <div class="claim-text">16.一种浏览器内核切换装置，其特征在于，所述装置包括:  接收模块，用于接收主控单元发送的利用目标内核标识对应的内核打开网页的指示；  执行模块，用于根据所述 指示，利用目标内核标识对应的内核打开所述网页。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES63706120" lang="ZH" load-source="patent-office" class="description">
    <p>&#8212;种浏览器内核切换方法、系统与装置</p>
    <p>技术领域</p>
    <p>[0001]	本申请涉及通信领域，尤其涉及一种浏览器内核切换方法、系统与装置。</p>
    <p>背景技术</p>
    <p>[0002]	在现有技术中，许多网站是以IE浏览器的渲染效果为准，基于IE浏览器的内核进行设计开发，特别是各大银行网站，其网上银行系统在IE浏览器下往往得到全面支持，而在其它浏览器下则或多或少地存在问题。</p>
    <p>[0003]	近年来，引入各种先进的开源浏览器引擎的新兴浏览器层出不穷，在性能、稳定性与安全性方面大有超越IE浏览器之势。为了兼容已经存在的各种网站、特别是网银网站的需要，新兴浏览器在引入各种先进的开源浏览器引擎作为主要内核时往往不能完全摒弃IE浏览器的内核，由此诞生了双内核甚至多内核浏览器。</p>
    <p>[0004]	下面以双内核浏览器为例，对双内核和多内核浏览器的使用过程进行说明。</p>
    <p>[0005]	在双内核浏览器中，一般设定一个主要的内核，用于渲染大部分的网页。仅仅是遇到一些特定网站，，例如网银网站，由于与该主要的内核存在兼容性的问题，因此需要切换到另一个内核，由另一个内核来进行网页渲染。通过这种方式保证浏览器的性能与兼容性。而对于多内核浏览器，其使用过程与双内核浏览器类似，即可以设定一个主要的内核，用于渲染大部分的网页，而在遇到一些特定网站时，从其他内核中选择一个内核进行网页渲染。</p>
    <p>[0006]	尽管浏览器的内核有多种，但基于一个内核打开网页的执行流程是类似的。在打开一个网页的过程中，通常会产生导航前(BeforeNavigate)、导航结束(NavigateComplete)等事件。现有技术中，一般使用NavigateComplete事件来进行双核切换。即在基于当前内核打开网页完成之后，浏览器主进程(或主线程)会收到NavigateComplete事件，该事件发出时带有网页的统一资源定位符(url, UniformResource Locator)。主进程或主线程获得该url,并判断是否需要切换到另一个内核,如需切换，则使用另一个内核来重新打开这个网页，并将已打开的该网页关闭或隐藏。</p>
    <p>[0007]	现有的内核切换方法存在以下问题:</p>
    <p>[0008]	(I)、由于是在NavigateComplete事件中获得url并判断是否需要切换内核,切换时重新打开这个网页，而NavigateComplete事件标志着该网页的打开已经完成,并已经呈现给用户，这时切换内核并重新打开网页会导致网络流量浪费、完成利用切换后的内核打开网页时耗时较长，以及存在页面闪烁感的问题。</p>
    <p>[0009]	(2)、请求打开网页的超文本传输协定(HTTP, HyperText Transfer Protocol)请求可以通过获得(get)请求和发布(post)请求实现。利用get请求打开网页需要的参数url,而利用post请求打开网页需要的参数包括url和post参数。由于在NavigateComplete事件中不能获得post请求中的post参数，导致目前的切换方案对get请求有效，而不能支持post请求。要支持post请求，需要做更复杂的工作，如在BeforeNavigate中把post请求的参数存下来,并提供一种机制让主进程(或主线程)在切换内核时，可以获取到保存下来的post参数。因此，即使使得目前的切换方案能支持post请求，但也存在实现复杂的问题，由此也必然导致利用切换后的内核打开网页执行时间的进一步增加，这降低了打开网页的速度，甚至由于网页重复打开而造成的页面闪烁感。</p>
    <p>发明内容</p>
    <p>[0010]	本申请实施例提供一种浏览器内核切换方法、系统与装置，用于节约网络流量，提高利用切换后的内核打开网页的速度。</p>
    <p>[0011]	一种浏览器内核切换方法，应用于包括主控单元、第一子控单元和第二子控单元的系统，其中，第一子控单元用于利用当前运行内核进行操作，第二子控单元用于利用非当前运行内核进行操作，主控单元选择第一子控单元和第二子控单元进行操作，所述方法包括:</p>
    <p>[0012]	主控单元接收第一子控单元发送的网页所使用的统一资源定位符URL以及当前运行内核的内核标识，所述URL和当前内核标识是所述第一子控单元接收到网页打开请求之后，打开所述网页之前发送的；</p>
    <p>[0013]	主控单元根据所述URL，确定打开所述网页的目标内核标识；</p>
    <p>[0014]	主控单元在所述目标内核标识与所述当前内核标识相同时，指示所述第一子控单元利用当前运行内核打开所述网页，否则，指示第二子控单元利用所述目标内核标识对应的内核打开所述网页。</p>
    <p>[0015]	一种浏览器内核切换方法，所述方法包括:</p>
    <p>[0016]	子控单元利用当前运行内核接收到网页打开请求之后，利用当前运行内核打开网页之前，确定所述网页所使用的统一资源定位符URL以及当前运行内核的内核标识，并发送所述URL和当前内核标识至主控单元；</p>
    <p>[0017]	子控单元在接收到主控单元发送的利用当前运行内核打开所述网页的指示时，利用当前运行内核打开所述网页。</p>
    <p>[0018]	一种浏览器内核切换方法，所述方法包括:</p>
    <p>[0019]	子控单元接收主控单元发送的利用目标内核标识对应的内核打开网页的指示；</p>
    <p>[0020]	子控单元根据所述指示，利用目标内核标识对应的内核打开所述网页。</p>
    <p>[0021]	一种浏览器内核切换系统，所述系统包括第一装置、第二装置和第三装置，其中:</p>
    <p>[0022]	第一装置，用于利用当前运行内核接收到网页打开请求之后，利用当前运行内核打开网页之前，确定所述网页所使用的统一资源定位符URL以及当前运行内核的内核标识，向第二装置发送所述URL和当前内核标识，并在接收到第二装置发送的利用当前运行内核打开所述网页的指示时，利用当前运行内核打开所述网页。</p>
    <p>[0023]	第二装置，用于接收第一装置发送的URL以及当前内核标识，根据所述URL，确定打开所述网页的目标内核标识，并在所述目标内核标识与所述当前内核标识相同时，指示第一装置利用当前运行内核打开所述网页，否则，指示第三装置利用所述目标内核标识对应的内核打开所述网页。</p>
    <p>[0024]	第三装置，用于在接收到第二装置发送的利用所述目标内核标识对应的内核打开所述网页的指示时，根据所述指示，利用目标内核标识对应的内核打开所述网页。</p>
    <p>[0025]	一种浏览器内核切换装置，所述装置包括:</p>
    <p>[0026]	接收模块，用于接收第一子控单元发送的网页所使用的统一资源定位符URL以及当前运行内核的内核标识，所述URL和当前内核标识是所述第一子控单元接收到网页打开请求之后，打开所述网页之前发送的；</p>
    <p>[0027]	确定模块，用于根据所述URL，确定打开所述网页的目标内核标识；</p>
    <p>[0028]	切换模块，用于在所述目标内核标识与所述当前内核标识相同时，指示所述第一子控单元利用当前运行内核打开所述网页，否则，指示第二子控单元利用所述目标内核标识对应的内核打开所述网页。</p>
    <p>[0029]	一种浏览器内核切换装置，所述装置包括:</p>
    <p>[0030]	确定模块，用于利用当前运行内核接收到网页打开请求之后，利用当前运行内核打开网页之前，确定所述网页所使用的统一资源定位符URL以及当前运行内核的内核标识；</p>
    <p>[0031]	发送模块，用于发送所述URL和当前内核标识至主控单元；</p>
    <p>[0032]	执行模块，用于在接收到主控单元发送的利用当前运行内核打开所述网页的指示时，利用当前运行内核打开所述网页。</p>
    <p>[0033]	一种浏览器内核切换装置，所述装置包括:</p>
    <p>[0034]	接收模块，用于接收主控单元发送的利用目标内核标识对应的内核打开网页的指示；</p>
    <p>[0035]	执行模块，用于根据所述指示，利用目标内核标识对应的内核打开所述网页。</p>
    <p>[0036]	根据本申请实施例提供的方案，主控单元在第一子控单元利用当前运行内核接收到网页打开请求之后，打开网页之前，根据该网页对应的URL判断打开该网页的目标内核对应的目标内核标识，在确定出的目标内核标识与当前运行内核对应的当前内核标识一致，即确定出的目标内核即为当前运行内核时，指示第一子控单元继续利用当前运行内核打开该网页，否则，无需第一子控单元打开该网页，直接利用第二子控单元通过目标内核标识对应的内核打开该网页。从而避免了在需要切换内核来打开网页时，需要在当前运行内核打开网页之后切换内核来重新打开该网页，并关闭之前已打开的网页造成的利用切换后的内核打开网页的速度较慢，以及由于网页重复打开造成网络流量浪费，以及存在页面闪烁的问题。</p>
    <p>附图说明</p>
    <p>[0037]图1为本申请实施例一提供的浏览器内核切换系统的结构示意图；</p>
    <p>[0038]	图2为本申请实施例二提供的浏览器内核切换方法的步骤流程图；</p>
    <p>[0039]	图3为本申请实施例三提供的浏览器内核切换方法的步骤流程图；</p>
    <p>[0040]	图4为本申请实施例四提供的浏览器内核切换方法的步骤流程图；</p>
    <p>[0041]图5为本申请实施例五提供的浏览器内核切换装置的结构示意图；</p>
    <p>[0042]图6为本申请实施例六提供的浏览器内核切换装置的结构示意图；</p>
    <p>[0043]图7为本申请实施例七提供的浏览器内核切换装置的结构示意图；</p>
    <p>[0044]	图8为本申请实施例八提供的浏览器内核切换方法的步骤流程图。</p>
    <p>具体实施方式</p>
    <p>[0045]	在本申请实施例提供的方案中，在利用当前运行内核接收到网页打开请求之后，利用当前运行内核打开网页之前，判断该网页对应的URL所对应的目标内核，并利用确定出的目标内核直接打开该网页，从而可以提高利用切换后的内核打开网页的速度。且在利用目标内核打开网页时，可以结合与URL同时获得的POST参数，根据POST请求来打开网页，相对于现有技术中针对POST请求时，进一步提高利用切换后的内核打开网页的速度。</p>
    <p>[0046]	下面结合说明书附图和各实施例对本申请方案进行说明。</p>
    <p>[0047]	实施例一、</p>
    <p>[0048]	本申请实施例一提供一种浏览器内核切换系统，该系统的结构可以如图1所示，包括第一装置、第二装置和第三装置，在本实施例中，第一装置可以理解为利用当前运行内核进行操作的第一子控单元，第二装置可以理解为控制是否进行内核切换的主控单元，第三装置可以理解为利用非当前运行内核进行操作的第二子控单元。当然，如果所述系统为多进程架构时，所述第二装置可以理解为主进程，第一装置可以理解为第一子进程，第三装置可以理解为第二子进程；或者，在所述系统为单进程多线程程架构时，所述第二装置可以理解为主线程，第一装置可以理解为第一子线程，第三装置可以理解为第二子线程。其中:</p>
    <p>[0049]	第一装置11用于利用当前运行内核接收到网页打开请求之后，利用当前运行内核打开网页之前，确定所述网页所使用的统一资源定位符URL以及当前运行内核的内核标识，向第二装置发送所述URL和当前内核标识，并在接收到第二装置发送的利用当前运行内核打开所述网页的指示时，利用当前运行内核打开所述网页。</p>
    <p>[0050]	第二装置12用于接收第一装置发送的URL以及当前内核标识，根据所述URL，确定打开所述网页的目标内核标识，并在所述目标内核标识与所述当前内核标识相同时，指示第一装置利用当前运行内核打开所述网页，否则，指示第三装置利用所述目标内核标识对应的内核打开所述网页。</p>
    <p>[0051]	第三装置13用于在接收到第二装置发送的利用所述目标内核标识对应的内核打开所述网页的指示时，根据所述指示，利用目标内核标识对应的内核打开所述网页。</p>
    <p>[0052]	第一装置11具体用于确定所述URL、当前内核标识、网页打开请求类型以及POST参数，所述网页打开请求类型为获得(GET )请求或发布(POST )请求，所述POST参数是POST请求类型的网页打开请求对应的参数，并向第二装置发送所述URL、当前内核标识、网页打开请求类型和POST参数。</p>
    <p>[0053]	第二装置12具体用于接收第一装置发送的所述网页对应的URL、当前内核标识、网页打开请求类型以及POST参数，并指示第一装置或第三装置利用所述URL、网页打开请求类型和POST参数打开所述网页。</p>
    <p>[0054]	第一装置11具体用于在当前运行内核为trident内核时，从导航前(BeforeNavigate)事件中获取所述URL、网页打开请求类型以及POST参数，在BeforeNavigate事件结束之前发送第一事件，所述第一事件中携带URL、当前内核标识、网页打开请求类型以及POST参数，并在接收到第二装置返回的所述第一事件的指定参数时，将所述指定参数的值赋予BeforeNavigate事件的出口参数continue,其中，所述指定参数的值为真时，指示第一装置利用当前内核标识对应的内核打开所述网页，否则，指示第一装置终止本次操作。</p>
    <p>[0055]	第一装置11还可以具体用于在当前运行内核为webkit内核时，从即将发送请求(willSendRequest)事件中获取所述URL、网页打开请求类型以及POST参数，在willSendRequest事件结束之前发送第二事件，所述第二事件中携带URL、当前内核标识、网页打开请求类型以及POST参数，并在接收到第二装置返回的所述第二事件的指定参数时，将所述指定参数的值赋予willSendRequest事件的返回值,其中,所述指定参数的值为真时，指示第一装置利用当前内核标识对应的内核打开所述网页，否则，指示第一装置终止本次操作。</p>
    <p>[0056]	且，第一装置11进一步具体用于确定所述网页所使用的统一资源定位符URL以及当前运行内核的内核标识之前，确定所述网页打开请求为网页主框架MainFrame产生的。</p>
    <p>[0057]	实施例二、</p>
    <p>[0058]	以实施例一中的第一装置作为执行主体，本申请实施例二提供一种浏览器内核切换方法，本申请各实施例中利用当前运行内核进行的操作均可以理解为第一装置执行的，该方法的步骤流程可以如图2所示，包括:</p>
    <p>[0059]	步骤IO1、确定待打开的网页对应的URL和当前内核标识。</p>
    <p>[0060]	本步骤执行于利用当前运行内核接收到网页打开请求之后，利用当前运行内核打开网页之前。在本步骤中，可以确定网页打开请求中请求打开的网页(待打开的网页)对应的URL和当前运行内核对应的当前内核标识。对于每个特定的浏览器内核，该内核的内核标识可以是一个固定的值。而所述网页对应的URL可以从当前运行内核提供的事件中获得。</p>
    <p>[0061]	网页打开请求的类型也可以从当前运行内核提供的事件中获得，所述网页打开请求类型可以为GET请求或POST请求。网页打开请求为GET请求时，后续可以根据确定出的所述网页对应URL来打开网页。本实施例提供的方法同样适用于网页打开请求为POST请求的情况。此时，需要进一步确定网页打开请求对应的POST参数，所述POST参数是POST请求类型的网页打开请求对应的参数，使得后续可以根据URL和POST参数来打开网页。当然，所述POST参数也可以从当前运行内核提供的事件中获得。</p>
    <p>[0062]	步骤102、发送URL和当前内核标识。</p>
    <p>[0063]	如果步骤101中进一步确定出了 POST参数，在本步骤中，还可以发送所述POST参数。当然，在本步骤发送的信息中还可以包括网页打开请求类型，以便于后续根据该网页打开请求类型确定打开网页的方式，如可以在该网页打开请求类型是POST请求时，确定根据POST请求来打开网页，或者在该网页打开请求类型为GET请求时，确定根据GET请求来打开网页。</p>
    <p>[0064]	步骤IOf 102的执行主体可以理解为实施例一中的第一装置，且通过步骤102向实施例一中的第二装置发送URL和当前内核标识之后，可以理解为第一装置利用当前运行内核打开网页的操作处于暂停状态，需要等待第二装置的指示以确定是否继续打开所述网页。</p>
    <p>[0065]	步骤103、打开待打开的网页。</p>
    <p>[0066]	如果第二装置判断出可以利用当前运行内核来打开待打开的网页，则本步骤中，当前运行内核会根据第二装置的指示继续执行打开所述网页的操作。具体的，可以根据网页打开请求的类型，如网页打开请求为GET请求，则可以根据所述URL打开网页，如果网页打开请求为POST请求，则可以根据所述URL和POST参数打开网页。</p>
    <p>[0067]	以当前运行内核为trident(又称为MSHTML，是微软的窗口操作系统(Windows)搭载的网页浏览器(Internet Explorer)的排版引擎的名称)内核为例，由于该内核定义的BeforeNavigate事件发生于接收到网页打开请求之后，打开网页之前，且该事件中携带有打开所述网页需要的相关参数，因此在步骤101中可以从BeforeNavigate事件中获取所述URL、网页打开请求类型以及POST参数,步骤102中可以在BeforeNavigate事件结束之前发送第一事件，所述第一事件中携带URL、当前内核标识、网页打开请求类型以及POST参数。而由于在trident内核中，BeforeNavigate事件提供了出口参数continue来决定本次打开网页的操作是否继续执行(continue的值为布尔值，为真时，表示本次打开网页的操作继续执行，为假时，表示本次打开网页的操作停止执行)，因此在步骤103中，可以接收返回的所述第一事件的指定参数，将所述指定参数的值赋予BeforeNavigate事件的出口参数continue。其中,所述指定参数的值为真时，指示利用当前内核标识对应的内核打开所述网页，否则，指示终止本次操作。</p>
    <p>[0068]	以当前运行内核为WebKit (WebKit是一个开源的浏览器引擎。WebKit的优势在于高效稳定，兼容性好，且源码结构清晰，易于维护)内核为例，由于该内核定义的wi I ISendRequest事件发生于接收到网页打开请求之后，打开网页之前，且该事件中携带有打开所述网页需要的相关参数，因此在步骤101中可以从willSendRequest事件中获取所述URL、网页打开请求类型以及POST参数,步骤102中可以在willSendRequest事件结束之前发送第二事件，所述第二事件中携带URL、当前内核标识、网页打开请求类型以及POST参数。同样，与当前运行内核为trident内核类似，在步骤103中，可以接收返回的所述第二事件的指定参数，将所述指定参数的值赋予willSendRequest事件的返回值。需要说明的是，目前webkit内核提供的willSendRequest事件没有返回值,在本实施例中，需要将willSendRequest事件的返回值定义为布尔值，以提示是否继续访问，并可以定义该返回值为真时，表示本次打开网页的操作继续执行，为假时，表示本次打开网页的操作停止执行。此时，所述指定参数的值为真时，指示利用当前内核标识对应的内核打开所述网页，否则，指示终止本次操作。当然，此时也需要修改willSendRequest事件的所有调用流程，每个调用流程需要判断该事件的返回值，返回值为真时可以继续访问，否则立即终止访问。当然，也可以将返回值的布尔值定义为相反的含义，即定义该返回值为假时，表示本次打开网页的操作继续执行，为真时，表示本次打开网页的操作停止执行。此时，所述指定参数的值为假时，指示利用当前内核标识对应的内核打开所述网页，否则，指示终止本次操作。当然，此时也需要修改willSendRequest事件的所有调用流程，每个调用流程需要判断该事件的返回值，返回值为假时可以继续访问，否则立即终止访问。</p>
    <p>[0069]	较优的，在本实施例步骤101执行执行，还可以进一步包括步骤101’:</p>
    <p>[0070]	步骤101’、确定所述网页打开请求为网页主框架MainFrame产生的。</p>
    <p>[0071]	由于网页页面可能为嵌套结构，即同一个网页包括主框架页面和子框架页面时，在主框架页面打开之后，可以继续打开子框架页面。即在需要打开子框架页面时，必然已经利用当前运行内核打开了主框架页面。而由于在网页设计时，主框架页面和子框架页面一般需要利用相同的内核打开，可以打开主框架页面的内核必然可以打开子框架页面。因此，可以仅针对网页主框架MainFrame产生的网页打开请求来判断是否需要进行内核切换，从而减少内核切换的判断次数，减轻系统的负荷，进一步加快内核切换的速度。</p>
    <p>[0072]	实施例三、[0073]	以实施例一中的第二装置作为执行主体，第二装置可以理解为控制是否进行内核切换的主进程或主线程，本申请实施例三提供一种浏览器内核切换方法，该方法的步骤流程可以如图3所示，包括:</p>
    <p>[0074]	步骤201、接收URL和当前内核标识。</p>
    <p>[0075]	本步骤的执行是在第一装置利用当前运行内核接收到网页打开请求之后，利用当前运行内核打开所述网页之前。本步骤可以具体包括，接收当前运行内核发送的URL、当前内核标识和POST参数。当然，在本步骤接收到的信息中还可以进一步包括表示网页打开请求为GET请求或POST请求的网页打开请求类型。</p>
    <p>[0076]	步骤202、确定所述URL对应的目标内核标识。</p>
    <p>[0077]	在本步骤中，可以根据接收到的所述URL，确定打开所述网页的目标内核对应的目标内核标识。</p>
    <p>[0078]	具体的，对于一些特定的URL，必须使用某一内核进行打开的情况，可以预先为对应指定内核的URL设置一个配置文件，该配置文件中可以保存有指定一个内核打开的URL列表，配置文件可以保存在第二装置中，也可以独立于第二装置，从而可以通过确定接收到的所述URL是否属于配置文件中的URL列表,来确定打开该URL对应的网页的目标内核对应的目标内核标识。例如，针对集成有WebKit内核和trident内核的多核浏览器，可以预先设置两个配置文件，其中一个配置文件(第一配置文件)保存有指定WebKit内核打开的URL列表，另一个配置文件(第二配置文件)保存有指定trident内核打开的URL列表。在本步骤中，可以分别确定接收到的URL是否为第一配置文件/第二配置文件URL列表中的URL。</p>
    <p>[0079]	如果接收到的URL为第一配置文件URL列表中的一个URL，则可以确定接收到的URL对应的目标内核标识为WebKit内核标识。</p>
    <p>[0080]	如果接收到的URL为第二配置文件URL列表中的一个URL，则可以确定接收到的URL对应的目标内核标识为trident内核标识。</p>
    <p>[0081]	而如果接收到的URL既不属于第一配置文件URL列表，也不属于第二配置文件URL列表，则可以确定接收到的URL对应的目标内核标识为任意一个内核标识。较优的，此时可以将目标内核标识确定为当前内核标识，使得后续无需进行内核切换，即可直接利用当前运行内核打开该URL对应的网页，提高网页打开的速度，并减少内核切换的次数，减轻系统的负荷。</p>
    <p>[0082]	步骤203、指示内核打开网页。</p>
    <p>[0083]	具体的，在步骤202中确定出的所述目标内核标识与接收到的所述当前内核标识相同时，确定无需进行内核切换，指示利用当前内核标识对应的内核打开所述网页，否则，确定需要进行内核切换，指示利用所述目标内核标识对应的内核打开所述网页。</p>
    <p>[0084]	指示内核(目标内核)打开网页包括:指示内核利用所述URL、POST参数和网页打开请求类型，根据网页打开类型打开所述网页。进一步的，可以在网页打开请求类型为GET请求时，指示内核利用所述URL，根据GET请求打开所述网页。在网页打开请求类型为POST请求时，指示内核利用所述URL和POST参数，根据POST请求打开所述网页。</p>
    <p>[0085]	实施例四、</p>
    <p>[0086]	以实施例一中的第三装置作为执行主体，第三装置可以理解为实现对非当前运行内核进行操作的子进程或子线程，本申请实施例四提供一种浏览器内核切换方法，该方法的步骤流程可以如图4所示，包括:</p>
    <p>[0087]	步骤301、接收指示。</p>
    <p>[0088]	在本步骤中，可以接收第二装置利用目标内核标识对应的内核(非当前运行内核)打开网页的指示，该指示中可以携带有该网页对应的URL。所述指示中可以进一步携带有POST参数。当然，所述指示中还可以更进一步携带有网页打开请求类型。</p>
    <p>[0089]	步骤302、打开所述网页。</p>
    <p>[0090]	在本步骤中，若接收到的指示中携带有URL，则在本步骤中，可以认为网页打开请求类型为GET请求，根据所述URL，利用目标内核标识对应的内核打开所述网页。当然，如果接收到的指示中进一步携带有POST参数，则在本步骤中，可以认为网页打开请求类型为POST请求，根据所述URL和POST参数，利用目标内核标识对应的内核打开所述网页。当然，如果接收到的指示中更进一步携带有网页打开请求类型，即所述指示携带有所述网页对应的URL、网页打开请求类型以及POST参数，可以根据网页打开请求类型来确定根据GET请求还是POST请求，来利用目标内核标识对应的内核打开所述网页。</p>
    <p>[0091]	与实施例二&#12316;实施例四提供的方法一一对应，分别提供以下三种装置。</p>
    <p>[0092]	实施例五、</p>
    <p>[0093]	本申请实施例五提供一种浏览器内核切换装置，可以理解为实施例一中涉及的第一装置，该装置的结构可以如图5所示，包括:</p>
    <p>[0094]	确定模块21，用于利用当前运行内核接收到网页打开请求之后，利用当前运行内核打开网页之前，确定所述网页所使用的统一资源定位符URL以及当前运行内核的内核标识；</p>
    <p>[0095]	发送模块22用于发送所述URL和当前内核标识至主控单元；</p>
    <p>[0096]	执行模块23用于在接收到主控单元发送的利用当前运行内核打开所述网页的指示时，利用当前运行内核打开所述网页。</p>
    <p>[0097]	其中，确定模块21可具体用于确定所述URL、当前内核标识、网页打开请求类型以及POST参数，所述网页打开请求类型为GET请求或POST请求，所述POST参数是POST请求类型的网页打开请求对应的参数；此时，发送模块22具体用于发送所述URL、当前内核标识、网页打开请求类型和POST参数。</p>
    <p>[0098]	其中，确定模块21还可具体用于当前运行内核为trident内核时，从BeforeNavigate事件中获取所述URL、网页打开请求类型以及POST参数；此时，发送模块22具体用于在BeforeNavigate事件结束之前发送第一事件，所述第一事件中携带URL、当前内核标识、网页打开请求类型以及POST参数；执行模块23具体用于接收主控单元返回的所述第一事件的指定参数，将所述指定参数的值赋予BeforeNavigate事件的出口参数continue;其中，所述指定参数的值为真时，指示子控单元利用当前运行内核打开所述网页，否则，指示子控单元终止本次操作。</p>
    <p>[0099]	确定模块21还可具体用于当前运行内核为webkit内核时,从willSendRequest事件中获取所述URL、网页打开请求类型以及POST参数；此时，发送模块22具体用于在willSendRequest事件结束之前发送第二事件，所述第二事件中携带URL、当前内核标识、网页打开请求类型以及POST参数；执行模块23具体用于接收主控单元返回的所述第二事件的指定参数，将所述指定参数的值赋予willSendRequest事件的返回值；其中，所述指定参数的值为真时，指示子控单元利用当前运行内核打开所述网页，否则，指示子控单元终止本次操作。</p>
    <p>[0100]	所述装置还包括判断模块20，用于确定模块确定所述网页所使用的URL以及当前运行内核的内核标识之前，确定所述网页打开请求为网页主框架MainFrame产生的。</p>
    <p>[0101]	实施例六、</p>
    <p>[0102]	本申请实施例六提供一种浏览器内核切换装置，可以理解为实施例一中涉及的第二装置，该装置的结构可以如图6所示，包括:</p>
    <p>[0103]	接收模块31，用于接收第一子控单元发送的网页所使用的统一资源定位符URL以及当前运行内核的内核标识，所述URL和当前内核标识是所述第一子控单元接收到网页打开请求之后，打开所述网页之前发送的；</p>
    <p>[0104]	确定模块32，用于根据所述URL，确定打开所述网页的目标内核标识；</p>
    <p>[0105]	切换模块33，用于在所述目标内核标识与所述当前内核标识相同时，指示所述第一子控单元利用当前运行内核打开所述网页，否则，指示第二子控单元利用所述目标内核标识对应的内核打开所述网页。</p>
    <p>[0106]	其中，接收模块31可具体用于接收所述URL、当前内核标识、网页打开请求类型以及POST参数，所述网页打开请求类型为GET请求或POST请求，所述POST参数是POST请求类型的网页打开请求对应的参数；切换模块33具体用于指示第一子控单元根据所述网页打开请求类型，在所述网页打开请求类型为GET请求时，利用所述URL打开所述网页，在所述网页打开请求类型为POST请求时，利用所述URL和POST参数打开所述网页，或者，指示第二子控单元根据所述网页打开请求类型，在所述网页打开请求类型为GET请求时，利用所述URL打开所述网页，在所述网页打开请求类型为POST请求时，利用所述URL和POST参数打开所述网页。。</p>
    <p>[0107]	其中，接收模块31还可具体用于当前运行内核为trident内核时，接收第一子控单元在BeforeNavigate事件结束之前发送的第一事件，所述第一事件中携带URL、当前内核标识、网页打开请求类型以及POST参数，其中，所述URL、网页打开请求类型以及POST参数是从BeforeNavigate事件中获取的；切换模块33具体用于向第一子控单元返回所述第一事件的指定参数，指示第一子控单元是否利用当前运行内核打开所述网页。其中，可以在所述指定参数的值为真时，指示第一子控单元打开所述网页，否则，指示第一子控单元终止本次操作；或者，所述指定参数的值为假时，指示第一子控单元打开所述网页，否则，指示第一子控单元终止本次操作。切换模块33还可以具体用于向第二子控单元发送所述URL、网页打开请求类型以及POST参数，指示第二子控单元根据接收到的所述URL、网页打开请求类型以及POST参数打开所述网页。</p>
    <p>[0108]	其中，接收模块31还可具体用于当前运行内核为WebKit内核时，接收第一子控单元在wiIISendRequest事件结束之前发送的第二事件，所述第二事件中携带URL、当前内核标识、网页打开请求类型以及POST参数，其中，所述URL、网页打开请求类型以及POST参数是从wi I ISendRequest事件中获取的；切换模块33具体用于向第一子控单元返回所述第二事件的指定参数，指示第一子控单元是否利用当前运行内核打开所述网页。其中，可以在所述指定参数的值为真时，指示第一子控单元打开所述网页，否则，指示第一子控单元终止本次操作；或者，所述指定参数的值为假时，指示第一子控单元打开所述网页，否则，指示第一子控单元终止本次操作。切换模块33还可以具体用于向第二子控单元发送所述URL、网页打开请求类型以及POST参数，指示第二子控单元根据接收到的所述URL、网页打开请求类型以及POST参数打开所述网页。</p>
    <p>[0109]	实施例七、</p>
    <p>[0110]	本申请实施例七提供一种浏览器内核切换装置，可以理解为实施例一中涉及的第三装置，该装置的结构可以如图7所示，包括:</p>
    <p>[0111]	接收模块41用于接收主控单元发送的利用目标内核标识对应的内核打开网页的指示;</p>
    <p>[0112]	执行模块42用于根据所述指示，利用目标内核标识对应的内核打开所述网页。</p>
    <p>[0113]	其中，接收模块41可具体用于接收携带有所述网页所使用的URL、网页打开请求类型以及POST参数的指示,所述网页打开请求类型为GET请求或POST请求,所述POST参数是POST请求类型的网页打开请求对应的参数；执行模块42具体用于利用所述URL、网页打开请求类型和POST参数，打开所述网页。</p>
    <p>[0114]	下面通过一个具体的实例对本申请实施例一&#12316;实施例七的方案进行详细说明。本申请方案既可在多进程模型的浏览器中实现，也可在单进程多线程模型的浏览器中实现。目前流行的浏览器架构绝大部分是多进程模型，由一个主进程和一到多个子进程组成。主进程负责界面显示、链接(TAB)切换、资源下载、文件访问、启动子进程等基本的逻辑，子进程负责网页的渲染、脚本执行等与网页有关的事务。因此下面主要以浏览器内核为包括WebKit内核和trident内核的双核浏览器为例，并以多进程模型的实现来进行说明。为了简便起见，将在trident内核BeforeNavigate事件中定义的第一事件,在WebKit内核willSendRequest事件中定义的第二事件均统一称为即将导航(wiIINavigate)事件,并将第一事件和第二事件中的指定参数均设置为WillNavigate事件的出口参数。</p>
    <p>[0115]	实施例八、</p>
    <p>[0116]	本申请实施例八提供一种浏览器内核切换方法，该方法的步骤流程可以如图8所示，包括:</p>
    <p>[0117]	步骤401、确定网页对应的URL和当前内核标识。</p>
    <p>[0118]	子进程访问URL之前，需要在合适的时机进行拦截，取得该url、当前内核标识(及相应的参数，相应的参数可以是指网页打开请求类型以及POST参数)，并发送WillNavigate事件给主进程，让主进程去判断是否需要切换内核。在当前运行内核为trident内核时,在BeforeNavigate事件中取得url及相应的参数。在当前运行内核为webkit内核时,在willSendRequest事件中取得url及相应的参数。而不论当前运行内核是trident内核还是webkit内核，当前内核标识都是可以直接获得的。</p>
    <p>[0119]步骤	402、发送 willNavigate 事件。</p>
    <p>[0120]	在本步骤中，所述子进程可以将确定出的url、当前内核标识(及相应的参数)通过willNavigate事件发送给主进程。</p>
    <p>[0121]	步骤403、判断是否需要切换。</p>
    <p>[0122]	主进程处理willNavigate事件,根据url判断是否需要切换内核。具体的，主进程处理时，可以首先检查url是否为特有的url,如bluesky://newtab这种浏览器内置页面必须使用WebKit内核渲染(也可以理解为判断url是否为第一配置文件中保存的需要使用WebKit内核进行处理url列表)。然后通过配置文件(可以理解为第二配置文件)来检查url,配置文件中保存有需要使用trident内核进行处理url列表,如果该url在这个列表中，贝1J表示需要使用trident内核进行处理。</p>
    <p>[0123]	在需要切换时可以让另一个内核(非当前运行内核)访问该url，并返回标志给所述子进程指示其是继续访问，还是立即终止。具体的，可以通过willNavigate的出口参数将指示所述子进程继续访问还是立即终止的结果返回给所述子进程。并可以在不需要切换时设置该出口参数为真(true)，指示所述子进程继续访问。否则，设置该出口参数为假(false),指示所述子进程终止访问。</p>
    <p>[0124]	步骤404、打开网页。</p>
    <p>[0125]	所述子进程等待主进程的处理结果，并检查willNavigate事件的出口参数，如果该出口参数为true则继续执行，否则终止本次请求。具体的，在当前运行内核为webkit内核时，所述子进程可以将willNavigate事件出口参数的值赋予修改后的willSendRequest事件函数的返回值,并修改willSendRequest事件函数的所有调用流程，判断willSendRequest事件函数的返回值,在返回值为true继续访问，否则立即终止访问。在当前运行内核为trident内核时,所述子进程可以直接将willNavigate事件出口参数的值赋予BeforeNavigate事件函数的出口参数(可以用continue表示),所述子进程会在continue为true继续访问，否则立即终止访问。</p>
    <p>[0126]	在本步骤中，除了指示当前运行内核是否继续执行打开网页的操作，如果需要切换内核，来让另一个内核(非当前运行内核)访问该urI,则在本步骤中,还可以产生一个使用目标内核的新子进程(也可以找到一个正在使用目标内核的一个子进程)，把url、网页打开请求类型以及post参数传递给这个新的子进程，新的子进程使用这些参数进行访问，显示所述url对应的网页。</p>
    <p>[0127]	根据本申请实施例一&#12316;实施例八提供的方案，可以利用基于当前运行内核的子进程在访问网页之前向主进程提供的url，由主进程来确定打开该url对应的网页的目标内核，并利用确定出的目标内核对应的子进程来打开网页。使得可以利用多核浏览器中主要的内核打开网页保证网页浏览器的性能、稳定性和安全性的同时，还可以在利用保证兼容性的内核打开网页时，减少网络流量浪费，加快该内核打开网页的速度，并消除由于网页重复打开造成的页面闪烁的问题。本申请实施例提供的方案尤其适用于在不用网上交易的一般网站，使用速度快的WebKit内核访问(所谓的“高速模式”)，在访问支付宝或者网上银行的时候，使用Trident内核的“兼容模式”来进行业务的双核浏览器应用场景中。</p>
    <p>[0128]	本领域内的技术人员应明白，本申请的实施例可提供为方法、系统、或计算机程序产品。因此，本申请可采用完全硬件实施例、完全软件实施例、或结合软件和硬件方面的实施例的形式。而且，本申请可采用在一个或多个其中包含有计算机可用程序代码的计算机可用存储介质(包括但不限于磁盘存储器、CD-ROM、光学存储器等)上实施的计算机程序产品的形式。</p>
    <p>[0129]	本申请是参照根据本申请实施例的方法、设备(系统)、和计算机程序产品的流程图和/或方框图来描述的。应理解可由计算机程序指令实现流程图和/或方框图中的每一流程和/或方框、以及流程图和/或方框图中的流程和/或方框的结合。可提供这些计算机程序指令到通用计算机、专用计算机、嵌入式处理机或其他可编程数据处理设备的处理器以产生一个机器，使得通过计算机或其他可编程数据处理设备的处理器执行的指令产生用于实现在流程图一个流程或多个流程和/或方框图一个方框或多个方框中指定的功能的装置。</p>
    <p>[0130]	这些计算机程序指令也可存储在能引导计算机或其他可编程数据处理设备以特定方式工作的计算机可读存储器中，使得存储在该计算机可读存储器中的指令产生包括指令装置的制造品，该指令装置实现在流程图一个流程或多个流程和/或方框图一个方框或多个方框中指定的功能。</p>
    <p>[0131]	这些计算机程序指令也可装载到计算机或其他可编程数据处理设备上，使得在计算机或其他可编程设备上执行一系列操作步骤以产生计算机实现的处理，从而在计算机或其他可编程设备上执行的指令提供用于实现在流程图一个流程或多个流程和/或方框图一个方框或多个方框中指定的功能的步骤。</p>
    <p>[0132]	尽管已描述了本申请的优选实施例，但本领域内的技术人员一旦得知了基本创造性概念，则可对这些实施例做出另外的变更和修改。所以，所附权利要求意欲解释为包括优选实施例以及落入本申请范围的所有变更和修改。</p>
    <p>[0133]	显然，本领域的技术人员可以对本申请进行各种改动和变型而不脱离本申请的精神和范围。这样，倘若本申请的这些修改和变型属于本申请权利要求及其等同技术的范围之内，则本申请也意图包含这些改动和变型在内。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101655863A?cl=zh">CN101655863A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年5月8日</td><td class="patent-data-table-td patent-date-value">2010年2月24日</td><td class="patent-data-table-td ">北京搜狗科技发展有限公司</td><td class="patent-data-table-td ">在浏览器中加载网页的方法及浏览器</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102156709A?cl=zh">CN102156709A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年2月28日</td><td class="patent-data-table-td patent-date-value">2011年8月17日</td><td class="patent-data-table-td ">奇智软件（北京）有限公司</td><td class="patent-data-table-td ">一种浏览器引擎模式的切换方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102385594A?cl=zh">CN102385594A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年8月31日</td><td class="patent-data-table-td patent-date-value">2012年3月21日</td><td class="patent-data-table-td ">腾讯科技（深圳）有限公司</td><td class="patent-data-table-td ">多核浏览器的内核控制方法和装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20100094891">US20100094891</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年6月25日</td><td class="patent-data-table-td patent-date-value">2010年4月15日</td><td class="patent-data-table-td ">Bid Solve, Inc.</td><td class="patent-data-table-td ">Client-Server System for Multi-Resource Searching</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20100153544">US20100153544</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年10月21日</td><td class="patent-data-table-td patent-date-value">2010年6月17日</td><td class="patent-data-table-td ">Brad Krassner</td><td class="patent-data-table-td ">Content rendering control system and method</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=C-PgCAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=C-PgCAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0009480000">G06F9/48</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年11月13日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年12月4日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2014年5月23日</td><td class="patent-data-table-td ">REG</td><td class="patent-data-table-td ">Reference to a national code</td><td class="patent-data-table-td "><div class="nested-key-value"><span class="nested-key">Ref country code: </span><span class="nested-value">HK</span></div><div class="nested-key-value"><span class="nested-key">Ref legal event code: </span><span class="nested-value">DE</span></div><div class="nested-key-value"><span class="nested-key">Ref document number: </span><span class="nested-value">1189064</span></div><div class="nested-key-value"><span class="nested-key">Country of ref document: </span><span class="nested-value">HK</span></div></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/ed89163af6125702dacc/CN103389912A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E6%A0%B8%E5%88%87%E6%8D%A2%E6%96%B9%E6%B3%95_%E7%B3%BB%E7%BB%9F.pdf?id=C-PgCAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U1FPbp9BJMTyCK4Rh7CwQJ1yy6krA"},"sample_url":"https://www.google.com/patents/reader?id=C-PgCAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>