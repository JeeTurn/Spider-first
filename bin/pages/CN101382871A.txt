<!DOCTYPE html><html><head><title>专利 CN101382871A - 一种用于iSCSI目标器块设备I/O的方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_6e802a6b2b28d51711baddc2f3bec198/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_6e802a6b2b28d51711baddc2f3bec198__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种用于iSCSI目标器块设备I/O的方法"><meta name="DC.contributor" content="舟 周" scheme="inventor"><meta name="DC.contributor" content="陈俭喜" scheme="inventor"><meta name="DC.contributor" content="饶国林" scheme="inventor"><meta name="DC.contributor" content="武汉海恒信息存储有限责任公司" scheme="assignee"><meta name="DC.date" content="2008-9-17" scheme="dateSubmitted"><meta name="DC.description" content="公开了一种用在iSCSI目标器块设备I/O的方法。这种方法在iSCSI目标器与存储设备的接口之间，使用页高速缓存，并采用基于Radix-Tree的查找算法。本发明的目的在于提高存储系统的I/O性能，用空间换时间，同时使用高效的查找算法，提高执行效率。本发明采用改进软件系统的方法，基本与硬件设备特性无关，具有良好的通用外部接口。"><meta name="DC.date" content="2009-3-11"><meta name="citation_patent_publication_number" content="CN:101382871:A"><meta name="citation_patent_application_number" content="CN:200810149311"><link rel="canonical" href="https://www.google.com/patents/CN101382871A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN101382871A?cl=zh"/><meta name="title" content="专利 CN101382871A - 一种用于iSCSI目标器块设备I/O的方法"/><meta name="description" content="公开了一种用在iSCSI目标器块设备I/O的方法。这种方法在iSCSI目标器与存储设备的接口之间，使用页高速缓存，并采用基于Radix-Tree的查找算法。本发明的目的在于提高存储系统的I/O性能，用空间换时间，同时使用高效的查找算法，提高执行效率。本发明采用改进软件系统的方法，基本与硬件设备特性无关，具有良好的通用外部接口。"/><meta property="og:title" content="专利 CN101382871A - 一种用于iSCSI目标器块设备I/O的方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN101382871A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN101382871A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=aB9oBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN101382871A&amp;usg=AFQjCNElrQRA2177HXrLLIbtLBHutvs3-g" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/8ac94e287a1c8be52eb4/CN101382871A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/8ac94e287a1c8be52eb4/CN101382871A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN101382871A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN101382871A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN101382871A?cl=zh" style="display:none"><span itemprop="description">公开了一种用在iSCSI目标器块设备I/O的方法。这种方法在iSCSI目标器与存储设备的接口之间，使用页高速缓存，并采用基于Radix-Tree的查找算法。本发明的目的在于提高存储系统的I/O性能，用空间换时间，同时使用高效的查找算法 ...</span><span itemprop="url">https://www.google.com/patents/CN101382871A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN101382871A - 一种用于iSCSI目标器块设备I/O的方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN101382871A - 一种用于iSCSI目标器块设备I/O的方法" title="专利 CN101382871A - 一种用于iSCSI目标器块设备I/O的方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN101382871 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 200810149311</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2009年3月11日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2008年9月17日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2008年9月17日</td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">200810149311.9, </span><span class="patent-bibdata-value">CN 101382871 A, </span><span class="patent-bibdata-value">CN 101382871A, </span><span class="patent-bibdata-value">CN 200810149311, </span><span class="patent-bibdata-value">CN-A-101382871, </span><span class="patent-bibdata-value">CN101382871 A, </span><span class="patent-bibdata-value">CN101382871A, </span><span class="patent-bibdata-value">CN200810149311, </span><span class="patent-bibdata-value">CN200810149311.9</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%88%9F+%E5%91%A8%22">舟 周</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%99%88%E4%BF%AD%E5%96%9C%22">陈俭喜</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%A5%B6%E5%9B%BD%E6%9E%97%22">饶国林</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%AD%A6%E6%B1%89%E6%B5%B7%E6%81%92%E4%BF%A1%E6%81%AF%E5%AD%98%E5%82%A8%E6%9C%89%E9%99%90%E8%B4%A3%E4%BB%BB%E5%85%AC%E5%8F%B8%22">武汉海恒信息存储有限责任公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN101382871A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN101382871A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN101382871A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (2),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=aB9oBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D200810149311&amp;usg=AFQjCNF7w0z17w4DufhA0DQBlU4AnB8A-A"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=aB9oBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D101382871A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNFD1NAXZDO-WrGsB-Df_FiOFO3f4A"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT84979274" lang="ZH" load-source="patent-office">一种用于iSCSI目标器块设备I/O的方法</invention-title>
      </span><br><span class="patent-number">CN 101382871 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA61213977" lang="ZH" load-source="patent-office">
    <div class="abstract">公开了一种用在iSCSI目标器块设备I/O的方法。这种方法在iSCSI目标器与存储设备的接口之间，使用页高速缓存，并采用基于Radix-Tree的查找算法。本发明的目的在于提高存储系统的I/O性能，用空间换时间，同时使用高效的查找算法，提高执行效率。本发明采用改进软件系统的方法，基本与硬件设备特性无关，具有良好的通用外部接口。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(8)</span></span></div><div class="patent-text"><div mxw-id="PCLM13355592" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1、一种用在iSCSI目标器块设备I/O的方法，其特征在于：在iSCSI目标器与存储设备的接口之间，使用页高速缓存，并采用基于Radix-Tree的查找算法。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2、 根据权利要求1所述的方法，其特征在于：所述基于Radix-Tree的 查找算法应用Li皿x2. 6内核中的bio数据结构体进行基于Radix-Tree的读、预读和写、回写过程。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3、 根据权利要求2所述的方法，其特征在于：在所述回写过程中，采 用逐节点回写的方法。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4、 根据权利要求3所述的方法，其特征在于：包括以下步骤：(1) 初始化过程，即生成拥有前两层节点的Radix-Tree数据结构，第 三、四层节点在程序运行过程中动态生成；(2) 基于Radix-Tree的读和预读过程；(3) 基于Radix-Tree树的写过程；(4) 基于Radix-Tree树的"脏"页的回写和淘汰过程。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5、根据权利要求4所述的方法，其特征在于：所述步骤（1)包括以下 分步骤：(1.1) 生成一定数目的第二结构体，并使用nodes&#8212;inv&#8212;list链表管理起 来；(1.2) 生成一定数目的第三结构体，并使用inv&#8212;page&#8212;list链表管理起 来；(1.3) 为存储设备创建第一结构体，该结构体表示Radix-Tree的根节点；(1.4) 生成Radix-Tree的第一层节点：从nodes&#8212;inv&#8212;list链表摘取一个 节点，根节点的"rnode"指针指向该节点；(1. 5)生成Radix-Tree的第二层节点：从nodes&#8212;inv&#8212;list链表摘取一个节点，第一层节点的第0号Slots指针指向该节点；如此依次生成第一层节点的第1至255号slots指针指向的节点。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6、 根据权利要求4所述的方法，其特征在于：所述步骤（2)包括以下分步骤：(2.1) 对某一页号，调用查找函数定位该页号在Radix-Tree中对应的第四 层节点并返回该节点，过程中，如果定位到的某slots指针为空，则从 nodes一inv」ist链表摘取一个节点并把该slots指针指向该节点，对于定 位到的第四层节点，把其加入lru链表的末尾或调整其在lru链表中的位 置；(2.2) 通过逐个判断相应的每个slots指针是否为空来判断当前的读命令 是否在Radix-Tree中全部命中，是则转步骤（2.4);(2.3) 当前的读命令在Radix-Tree中不是全部命中，确定需要预读的页数 和起始地址，处理读和预读的所有页：对命中的页，则直接获得该页在 Radix-Tree中的数据地址；对不命中的页，把其加入bio链，当处理完了 所有的页，向下层提交bio链上的各个bio;(2.4) 当前读命令处理结束，转（2.1)继续进行下一读命令的处理。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7、 根据权利要求4所述的方法，其特征在于：所述步骤（3)包括以下 分步骤.-(3.1) 进行和（2.1)同样的操作；(3.2) 逐个判断相应的每个slots指针是否为空，如果不为空表示命中， 继续处理下个slots;如果为空，将该页加入Radix-Tree相应的位置，如 果该页不是满页，从下层读出该页剩余的部分，以保证Radix-Tree里的每 一页都是满页；(3.3) 当前写命令处理结束，转（3.1)继续进行下一个写命令的处理。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8、 根据权利要求4所述的方法，其特征在于：所述步骤（4)包括以下分步骤：(4.1) "脏"页的回写和淘汰用内核线程实现，它要执行一个回写函数， 在线程初始化之后，该函数执行一个死循环；(4.2) 如果Radix-Tree中"脏"页总数超过了一定的数量，则启动回写线 程；(4.3) 遍历nodes&#8212;lru&#8212;list链表，找到一个可以淘汰的节点；(4.4) 把该节点上可以回写的所有页加入bio或bio链，依次将bio结构 体从bio链中摘下，将bio结构体提交给存储设备，执行写入数据的操作；(4.5) 把该节点从nodes&#8212;lru&#8212;list链表摘除，插入nodesjnv&#8212;list链 表；(4.6) 如果Radix-Tree中"脏"页总数少于一定的数量，则把回写线程设 为休眠，转入（4.1);(4.7) 继续回写线程，转入（4.3)，开始下一个节点的回写操作。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES18742615" lang="ZH" load-source="patent-office" class="description">
    <p>一种用于iSCSI目标器块设备I/0的方法</p>
    <p>技术领域</p>
    <p>本发明涉及计算机存储技术领域，在iSCSI (Internet Small Computer System Interface,因特网小型计算机系统接口 ）目标器与存储 设备之间，使用页高速缓存和基于Radix-Tree (基树）的查找算法，提高 系统读、写性能。 背景技术</p>
    <p>iSCSI可以实现在IP (Internet Protocol,网际协议）网络上运行 SCSI (Small Computer System Interface,小型计算机系统接口）协议， 使其能够在诸如高速千兆以太网上进行路由选择。SCSI是一种广泛使用的 连接硬盘和计算机的技术标准，而iSCSI则将该技术应用于网络环境中。 iSCSI是基于IP协议的技术标准，实现了 SCSI和TCP/IP (Transfer Control Protocol/Internet Protocol,传输控制协议/网络协议）协议的 连接，该协议允许用户通过TCP/IP网络来构建SAN。</p>
    <p>目前，iSCSI目标器与不同的存储块设备之间通过一定的接口直接进行 I/O (Input/Output)，性能有很大的提升余地。改进硬件系统需要较长的 生命周期，但是改进软件系统可以快速提高系统性能、实现功能扩展。在 iSCSI目标器与存储块设备之间增加页高速缓存能有效的提高系统I/O性 能，且能实现与硬件设备特性的无关性。采用页高速缓存，在任何I/O操作 前都要检&#26619;页是否已经在页高速缓存中了，所以这种频繁的检查必须迅速、 高效，否则检索和检&#26619;页高速缓存的开销可能抵消页高速缓存带来的好处， 因而必须找到和系统特性匹配的&#26619;找算法和淘汰方法。 发明内容</p>
    <p>本发明要解决的技术问题是提供了一种提高系统读写性能的用于iSCSI</p>
    <p>目标器块设备1/0的方法。</p>
    <p>本发明的技术方案是：这种用于iSCSI目标器块设备I/O的方法，在</p>
    <p>iSCSI目标器与存储设备的接口之间，使用页高速缓存，并采用基于Radix-Tree的&#26619;找算法。</p>
    <p>进一步地，所述基于Radix-Tree的查找算法应用Linux2. 6内核中的 bio数据结构体进行基于Radix-Tree的读、预读和写、回写过程。</p>
    <p>更进一步地，在所述回写过程中，采用逐节点回写的方法。</p>
    <p>优选地，这种方法包括以下步骤：（1)初始化过程，即生成拥有前两 层节点的Radix-Tree数据结构，第三、四层节点在程序运行过程中动态生 成；（2)基于Radix-Tree的读和预读过程；（3)基于Radix-Tree树的写 过程；（4)基于Radix-Tree树的"脏"页的回写和淘汰过程。</p>
    <p>更进一步地，所述步骤（1)包括以下分步骤：（1.1)生成一定数目的 第二结构体，并使用nodes&#8212;inv&#8212;list链表管理起来；（1.2)生成一定数目 的第三结构体，并使用inv&#8212;page&#8212;list链表管理起来；（1.3)为存储设备 创建第一结构体，该结构体表示Radix-Tree的根节点；（1.4)生成 Radix-Tree的第一层节点：从nodes&#8212;inv&#8212;list链表摘取一个节点，根节点 的"rnode"指针指向该节点；（1.5)生成Radix-Tree的第二层节点：从 nodes&#8212;inv&#8212;list链表摘取一个节点，第一层节点的第0号slots指针指向 该节点；如此依次生成第一层节点的第1至255号slots指针指向的节点。</p>
    <p>更进一步地，所述步骤（2)包括以下分步骤：（2.1)对某一页号，调 用&#26619;找函数定位该页号在Radix-Tree中对应的第四层节点并返回该节点， 过程中，如果定位到的某slots指针为空，则从nodes&#8212;inv&#8212;list链表摘取 一个节点并把该slots指针指向该节点，对于定位到的第四层节点，把其加 入lru链表的末尾或调整其在lru链表中的位置；（2. 2)通过逐个判断相 应的每个slots指针是否为空来判断当前的读命令是否在Radix-Tree中全 部命中，是则转步骤（2.4) ;   (2.3)当前的读命令在Radix-Tree中不是 全部命中，确定需要预读的页数和起始地址，处理读和预读的所有页：对命</p>
    <p>中的页，则直接获得该页在Radix-Tree中的数据地址；对不命中的页，把</p>
    <p>其加入bi0链，当处理完了所有的页，向下层提交bi0链上的各个bi0;</p>
    <p>(2.4)当前读命令处理结束，转（2.1)继续进行下一读命令的处理。</p>
    <p>更进一步地，所述步骤（3)包括以下分步骤：（3.1)进行和（2.1) 同样的操作；（3.2)逐个判断相应的每个slots指针是否为空，如果不为 空表示命中，继续处理下个slots;如果为空，将该页加入Radix-Tree相 应的位置，如果该页不是满页，从下层读出该页剩余的部分，以保证 Radix-Tree里的每一页都是满页；（3.3)当前写命令处理结束，转 (3.1)继续进行下一个写命令的处理。</p>
    <p>更进一步地，所述步骤（4)包括以下分步骤：（4.1)"脏"页的回写 和淘汰用内核线程实现，它要执行一个回写函数，在线程初始化之后，该函 数执行一个死循环；（4.2)如果Radix-Tree中"脏"页总数超过了一定的 数量，则启动回写线程；（4.3)遍历nodes&#8212;lru&#8212;list链表，找到一个可以 淘汰的节点；（4.4)把该节点上可以回写的所有页加入bio或bio链，依 次将bio结构体从bio链中摘下，将bio结构体提交给存储设备，执行写入 数据的操作；（4. 5)把该节点从nodes&#8212;lru&#8212;list链表摘除，插入 nodes&#8212;inv&#8212;list链表；（4.6)如果Radix-Tree中"脏"页总数少于一定 的数量，则把回写线程设为休眠，转入（4.1) ;   (4.7)继续回写线程，转 入（4.3)，开始下一个节点的回写操作。</p>
    <p>页高速缓存是Li皿x实现的一种主要磁盘缓存，主要用来减少对磁盘的 I/O操作。Radix-Tree是一种搜索树，Linux内核利用这个数据结构来通 过文件内偏移快速定位页高速缓存项。Linux(内核版本号2.6.18)内核中 的分叉为64(26),树高为6(32位系统)或者11(64位系统），用来快速定 位32位或者64位偏移，Radix-Tree中的每一个叶子节点指向文件内相 应偏移所对应的页高速缓存项。本发明把Radix-Tree应用于页高速缓存的 &#26619;找算法，根据读写命令对应的每页为32位（4字节）的特点，改进 Radix-Tree的数据结构设计，使其分叉为256(28)，树高为4，以快速定位</p>
    <p>32位页号偏移；进而改进查找算法，通过&#26619;找定位节点而非页，极大的减 少查找次数。本发明的目的在于提高存储系统的V0性能，用空间换时间， 同时使用高效的查找算法，提高执行效率。本发明采用改进软件系统的方 法，基本与硬件设备特性无关，具有良好的通用外部接口。 附图说明</p>
    <p>图1是页高速缓存在系统中的位置示意图，页高速缓存位于存储系统中</p>
    <p>前端iSCSI目标器和后端存储设备的连接层，对上响应来自目标器的I/O命 令请求，对下向存储设备发起实际读写请求；</p>
    <p>图2为本发明的iSCSI目标器的软件模块结构示意图；</p>
    <p>图3为改进后的Radix-Tree的结构示意图；</p>
    <p>图4为判断读写命令对应的各页在Radix-Tree中命中与否方法示意</p>
    <p>图；</p>
    <p>图5a为Radix-Tree初始化之后的状态，图5b为基于图5a的查找算法 示意图；</p>
    <p>图6为基于Radix-Tree的读和预读过程的流程示意图； 图7为基于Radix-Tree的写过程的流程示意图；以及 图8为基于Radix-Tree的回写过程的流程示意图。 具体实施方式</p>
    <p>下面参照附图，将详细叙述本发明的具体实施方式。</p>
    <p>为了实现本发明的方法，定义了以下必须的数据结构：</p>
    <p>(1) hsr&#8212;cache&#8212;tree_root结构体（第一结构体） struct hsr&#8212;cache&#8212;tree&#8212;root//Radix&#8212;Tree的根节点</p>
    <p>unsigned intheight;   //Radix-Tree的高度 intgfp_mask; 〃内存分配的标志 struct hsr&#8212;cache&#8212;tree&#8212;node &#27706;rnode; 〃指向Radix-Tree的第一层内部节点的指针  (2) hsr_cache_tree&#8212;node结构体（第二结构体） struct hsr_cache&#8212;tree&#8212;node     //Radix-Tree的内部节点</p>
    <p>int in_lru;     〃该内部节点是否在lru链表中的标记 unsigned int locked; 〃内部节点被"锁定"标记 unsigned int dpages; 〃该节点上的"脏"页数目 void伞slots[256];〃指针数组，每个指针或为NULL,</p>
    <p>〃或指向该节点下层的某个节点（前三层）或指</p>
    <p>〃向第三结构体（第四层）</p>
    <p>struct hsr_cache_tree&#8212;node&#27706;parent;</p>
    <p>〃该内部节点的父节点</p>
    <p>struct list&#8212;head lru&#8212;node&#8212;list;</p>
    <p>〃把内部节点链接进"lru"链的list一head指针 struct list&#8212;head inv&#8212;node&#8212;list; 〃把新申请的或被完全回写的内部节点 〃链接进"inv"链的list&#8212;head指针</p>
    <p>(3) hsr_cache_tree_page结构体（第三结构体） struct hsr&#8212;cache&#8212;tree&#8212;page 〃第四层的内部节点slots指针指向该结构体</p>
    <p>{</p>
    <p>struct page *page; 〃指向页高速缓存中的某页 unsigned long status; 〃该页的状态 sector_tpsector; 〃该页在磁盘上对应的起始扇区 spinlock&#8212;t lock; 〃自方定锁 struct list&#8212;head inv_page&#8212;list;</p>
    <p>〃管理第三结构体的listjiead指针</p>
    <p>图1为本发明的页高速缓存在系统中的位置示意图。页高速缓存位于存 储系统中前端目标器和后端存储设备的连接层，对上响应来自目标器的I/O 命令请求，对下向存储设备发起实际读写请求。图中（1)为来自目标器的 I/O请求命令，（2)为页高速缓存对该I/O请求命令的响应，（3)为页高 速缓存对存储设备的I/O请求，（4)为存储设备完成I/O请求后对页高速 缓存的I/O请求的响应。其中（1)的请求以SCSI命令的形式表示，（3) 的请求为bio形式，通过调用submit&#8212;bio将I/O请求提交给存储设备。</p>
    <p>图2为本发明的iSCSI目标器的软件模块结构示意图，包括初始化和释 放、iSCSI目标器、查找、读和预读、写、淘汰和回写、存储设备等几个子 模块。</p>
    <p>图3为改造后的Radix-Tree的结构示意图。该Radix-Tree的分叉为 256(28)，树高为4。树根以第一结构体来表示；内部节点以第二结构体来表 示，总共分布在四个层次；叶子节点以第三结构体来表示，该结构体用于描 述存在于页高速缓存的各个页的页信息。内部节点通过两个list&#8212;head链表 管理， 一个是nodesjnv&#8212;list链表，用于管理系统初始化时预先申请的节 点，Radix-Tree中需要添加新的内部节点时，直接从该链表中选取；另一 个是nodes&#8212;lru&#8212;list链表，用于把第四层的内部节点按lru (Least Recently Used,最近最少使用）的算法规则管理，如果lru链上链接的节 点数目达到一定的值，第四层上就不再添加新的节点，而把lru链上的节点 循环利用。名为inv&#8212;page&#8212;list的list&#8212;head链表用来管理刚刚申请的第三 结构体。</p>
    <p>图4为判断命令对应的各页在Radix-Tree中命中与否方法示意图。如 图所示，当一个命令到达时，计算出该命令首页所对应的slots号和页号； 调用查找函数，根据首页页号&#26619;找到首页所在的第四层的内部节点；判断首 页对应slots号的指针是否为空，如果为空，表示该首页在Radix-Tree中</p>
    <p>不命中，否则，表示命中；像这样判断该命令剩下的各页是否在Radix-Tree 中命中。如果一个命令对应多个第四层的内部节点，那么对每个节 点，调用一次&#26619;找算法即可。</p>
    <p>图5a为Radix-Tree初始化之后的状态。为了避免无谓的内存空间消 耗，在系统初始化时，只是生成Radix-Tree的树根、前两层的内部节点， 其余部分在读写过程中动态生成和管理。图5b为基于图5a的查找算法示意 图。针对某一个页号执行&#26619;找函数时，从Radix-Tree的根节点定位到首层 节点，从首层节点开始，把页号依次右移24、 16、 8位，用来快速定位该页 号偏移在第二、三、四层上的位置。如果定位到的某个slots指针为空，从 nodes_inv_list链表中摘取一个节点添加到该位置。</p>
    <p>图6为基于Radix-Tree的读和预读过程的流程示意图，该过程负责处 理来自上层的读命令。当新的读命令到达时，首先判断该读命令所对应的所 有页是否在Radix-Tree中全部命中，若是，则直接将对应的数据返回；若 否，则执行预读操作，对于随机读，预取一页，对于顺序读，则预取该节点 上自命令对应的尾页开始的所有页。对于命令所对应的所有页和预取的页， 如果该页命中，则直接获得该页在Radix-Tree中的数据地址；如果不命 中，则获得自该页开始的连续不命中的各页，把这些页加入bio链。当处理 完了所有的页，向下层提交bio链上的各个bio。</p>
    <p>图7为基于Radix-Tree的写过程的流程示意图，该过程负责处理来自 上层的写命令。当新的写命令到达时，对其对应的每页进行处理：如果命 中，则更新Radix-Tree对应页的数据；若不命中，将该页加入Radix-Tree 相应的位置，如果该页不是满页，还需要发一个bio，从下层读出该页剩余 的部分，以保证Radix-Tree里的每一页都是满页。</p>
    <p>图8为基于Radix-Tree的"脏"页的回写和淘汰过程的流程示意图。 当满足回写条件时，遍历nodes&#8212;lru_list链表，找出当前节点上可以被连 续回写的页，把这些页加入bio或bio链，当该节点被回写完之后，把该节 点从Radix-Tree上摘除，并从nodes&#8212;lru&#8212;list上摘除，把它加入到</p>
    <p>nodes&#8212;inv一list链表。 本发明特点如下：</p>
    <p>1、 Radix-Tree是一种搜索树，Linux内核利用这个数据结构来通过文 件内偏移快速定位页高速缓存项。本发明利用基于Radix-Tree的查找算法 来提高存储设备读写性能。</p>
    <p>2、 根据从上层接收到的读写命令为32位的特点，把Radix-Tree的层 高设为4，分叉设为256 (28)，用来快速定位32位的页号偏移。</p>
    <p>3、 执行一次查找函数，只需从Radix-Tree的树根开始，遍历四层共四 个节点即可定位到相应的节点。这样，具有极高的查找速率。</p>
    <p>4、 执行一次查找函数，返回某页在Radix-Tree中对应的第四层内部节 点。判断该页是否在Radix-Tree中命中，只需判断该节点上相应slots的 指针是否为空即可。因而，对一个对应多页的读写命令，该命令跨几个节 点，就查找几次。这样，极大的减少了查找的次数，提高了查找效率和读写 性能。</p>
    <p>5、 Radix-Tree的树根、前两层节点在初始化时静态分配，第三、四层 节点在执行&#26619;找函数时动态添加，第四层节点用一个list_head链表通过 lru (Least Recently Used,最近最少使用）算法管理并且节点总数被限定 在一定数目之内。这样有效的控制了 Radix-Tree总的内存消耗。</p>
    <p>6、 方便处理高端内存，因为它直接处理的是物理页而不是指针。</p>
    <p>7、 设计保证了每个页高速缓存页都是满页，能有效的规避页高速缓存 中恼人的数据一致性问题，简化程序的设计和页高速缓存中一致性的处理。</p>
    <p>8、 在读、写的过程中，已经把各个节点按照lru的顺序组成了 lru 链，回写时，从lru链中按一定的条件取节点，逐个回写。本发明以节点为 单位进行处理，根据局部性原理，每个节点上的页具有样同或相似的属性或 特点，最好的情况能把该节点上的所有页组成一个bio向存储设备提交，极</p>
    <p>大的提高了回写的效率。</p>
    <p>8、本发明基本与硬件设备特性无关，具有良好的通用外部接口。 因此，本发明适用于构造高性能的存储系统。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101621526B?cl=zh">CN101621526B</a></td><td class="patent-data-table-td patent-date-value">2009年8月20日</td><td class="patent-data-table-td patent-date-value">2012年9月26日</td><td class="patent-data-table-td ">杭州华三通信技术有限公司</td><td class="patent-data-table-td ">一种防止无用连接占用系统资源的iSCSI方法及装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102681795A?cl=zh">CN102681795A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年5月2日</td><td class="patent-data-table-td patent-date-value">2012年9月19日</td><td class="patent-data-table-td ">无锡众志和达存储技术有限公司</td><td class="patent-data-table-td ">一种Linux系统的SCSI Target模式的数据I/O写入方法</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=aB9oBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0003060000">G06F3/06</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2009年3月11日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2009年5月6日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2011年1月26日</td><td class="patent-data-table-td ">C02</td><td class="patent-data-table-td ">Deemed withdrawal of patent application after publication (patent law 2001)</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/8ac94e287a1c8be52eb4/CN101382871A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_6e802a6b2b28d51711baddc2f3bec198.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E7%94%A8%E4%BA%8EiSCSI%E7%9B%AE%E6%A0%87%E5%99%A8%E5%9D%97%E8%AE%BE%E5%A4%87I_O.pdf?id=aB9oBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U1aBFYswl_ctgnEfNN6MFETlBkrUw"},"sample_url":"https://www.google.com/patents/reader?id=aB9oBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>