<!DOCTYPE html><html><head><title>专利 CN103207908A - 多数据源动态隔离访问方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_6e802a6b2b28d51711baddc2f3bec198/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_6e802a6b2b28d51711baddc2f3bec198__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="多数据源动态隔离访问方法"><meta name="DC.contributor" content="唐雪飞" scheme="inventor"><meta name="DC.contributor" content="陈科" scheme="inventor"><meta name="DC.contributor" content="成都康赛电子科大信息技术有限责任公司" scheme="assignee"><meta name="DC.date" content="2013-3-29" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种多数据源动态隔离访问方法，该方法针对多数据源动态访问的要求，利用动态数据库连接、访问与多事务处理技术，通过多数据源动态连接、多数据源动态查询和多数据源隔离存储三个阶段实现多数据源动态隔离访问。本发明可同时完成对多个(不限数量)数据源的高速访问与管理，并通过数据隔离技术，保证多数据源数据传输互不干扰，安全高速，从而克服传统软件对数据源操作的单一性和低效性，可广泛应用于需要同时访问不同数据源数据的软件开发环境，特别是云计算领域中的软件即服务(Softwareasa Service,SaaS)和平台即服务(PlatformasaService,PaaS)环境。"><meta name="DC.date" content="2013-7-17"><meta name="DC.relation" content="CN:101777047:A" scheme="references"><meta name="DC.relation" content="CN:102447620:A" scheme="references"><meta name="DC.relation" content="WO:2009116028:A2" scheme="references"><meta name="citation_reference" content="任俊国: &quot;《多数据源可控查询技术的研究与应用》&quot;, 《中国优秀硕士学位论文全文数据库》, 31 May 2012 (2012-05-31)"><meta name="citation_patent_publication_number" content="CN:103207908:A"><meta name="citation_patent_application_number" content="CN:201310108055"><link rel="canonical" href="https://www.google.com/patents/CN103207908A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN103207908A?cl=zh"/><meta name="title" content="专利 CN103207908A - 多数据源动态隔离访问方法"/><meta name="description" content="本发明公开了一种多数据源动态隔离访问方法，该方法针对多数据源动态访问的要求，利用动态数据库连接、访问与多事务处理技术，通过多数据源动态连接、多数据源动态查询和多数据源隔离存储三个阶段实现多数据源动态隔离访问。本发明可同时完成对多个(不限数量)数据源的高速访问与管理，并通过数据隔离技术，保证多数据源数据传输互不干扰，安全高速，从而克服传统软件对数据源操作的单一性和低效性，可广泛应用于需要同时访问不同数据源数据的软件开发环境，特别是云计算领域中的软件即服务(Softwareasa Service,SaaS)和平台即服务(PlatformasaService,PaaS)环境。"/><meta property="og:title" content="专利 CN103207908A - 多数据源动态隔离访问方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN103207908A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN103207908A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=T5fGCAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN103207908A&amp;usg=AFQjCNHEt10UhatbFFOOkmPmpCq-sIJnUA" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/759ea364797a0528f89b/CN103207908A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/759ea364797a0528f89b/CN103207908A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN103207908A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN103207908A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN103207908A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种多数据源动态隔离访问方法，该方法针对多数据源动态访问的要求，利用动态数据库连接、访问与多事务处理技术，通过多数据源动态连接、多数据源动态查询和多数据源隔离存储三个阶段实现多数据源动态隔离访问。本发明可同时完成对多个(不限数量)数据源的高速访问与管理，并通过数据隔离技术，保证多数据源数据传输互不干扰，安全高速，从而克服传统软件对数据源操作的单一性和低效性，可广泛应用于需要同时访问不同数据源数据的软件开发环境，特别是云计算领域中的软件即服务(Softwareasa...</span><span itemprop="url">https://www.google.com/patents/CN103207908A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN103207908A - 多数据源动态隔离访问方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN103207908A - 多数据源动态隔离访问方法" title="专利 CN103207908A - 多数据源动态隔离访问方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN103207908 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201310108055</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年7月17日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2013年3月29日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2013年3月29日</td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201310108055.X, </span><span class="patent-bibdata-value">CN 103207908 A, </span><span class="patent-bibdata-value">CN 103207908A, </span><span class="patent-bibdata-value">CN 201310108055, </span><span class="patent-bibdata-value">CN-A-103207908, </span><span class="patent-bibdata-value">CN103207908 A, </span><span class="patent-bibdata-value">CN103207908A, </span><span class="patent-bibdata-value">CN201310108055, </span><span class="patent-bibdata-value">CN201310108055.X</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%94%90%E9%9B%AA%E9%A3%9E%22">唐雪飞</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%99%88%E7%A7%91%22">陈科</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%88%90%E9%83%BD%E5%BA%B7%E8%B5%9B%E7%94%B5%E5%AD%90%E7%A7%91%E5%A4%A7%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E6%9C%89%E9%99%90%E8%B4%A3%E4%BB%BB%E5%85%AC%E5%8F%B8%22">成都康赛电子科大信息技术有限责任公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103207908A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103207908A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103207908A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (3),</span> <span class="patent-bibdata-value"><a href="#npl-citations">非专利引用</a> (1),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (4)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=T5fGCAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201310108055&amp;usg=AFQjCNGvzNnsw1qTVjnz5MPiFaG8ZVurOw"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=T5fGCAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D103207908A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNGJNaeFvddMdWA9_jxZlklnGmpDvA"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT126096663" lang="ZH" load-source="patent-office">多数据源动态隔离访问方法</invention-title>
      </span><br><span class="patent-number">CN 103207908 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA117496749" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种多数据源动态隔离访问方法，该方法针对多数据源动态访问的要求，利用动态数据库连接、访问与多事务处理技术，通过多数据源动态连接、多数据源动态查询和多数据源隔离存储三个阶段实现多数据源动态隔离访问。本发明可同时完成对多个(不限数量)数据源的高速访问与管理，并通过数据隔离技术，保证多数据源数据传输互不干扰，安全高速，从而克服传统软件对数据源操作的单一性和低效性，可广泛应用于需要同时访问不同数据源数据的软件开发环境，特别是云计算领域中的软件即服务(Softwareasa&#160;Service,SaaS)和平台即服务(PlatformasaService,PaaS)环境。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(7)</span></span></div><div class="patent-text"><div mxw-id="PCLM53676258" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.一种多数据源动态隔离访问方法，其特征在于:包括以下步骤:  第一步:生成多数据源动态连接；  第二步:生成多数据源动态查询；  第三步:将多数据源进行隔离存储。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的多数据源动态隔离访问方法，其特征在于:第一步包括以下步骤:  1)根据数据库和软件系统需要选择合适的数据库连接组件C，并记录唯一标识该连接的ID号、代表该连接的字符串CS和组件对象CO，其中，CO中包括一个以CS为参数的构造函数，并封装了对所连接数据库的操作方法，包括连接的创建与销毁；  2)在内存中申请一段空间M，包括三个组成部分，分别存储ID、CS和CO，该段空间以连续方式存储，以ID为索引，可根据ID迅速找到对应的数据库C ；  3)为C创建数据库连接池；  4)将该连接组件加入到M中:  5)当需要动态连接数据库时，需要事先给定连接组件ID。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求2所述的一种多数据源动态隔离访问方法，其特征在于:第二步包括以下步骤:  1)建立Hibernate环境,初始化Hibernate必要参数,使之正常运行，运行成功后，生成基本配置信息；  2)将第一步得到的数据库连接C注入基本配置信息，生成与该连接组件唯一对应的配置信息，并由配置信息生成ORM工厂，ORM工厂将自动完成ORM转换，将数据源转化为数据对象X，并生成包含对X进行操作的会话；  3)遍历第一步生成的M，获取所有数据连接C，重复上一步，得到全部会话队列，由于会话与C的唯一对应关系，可根据C唯一匹配得到对应的会话；  4)给定查询关键字W，在全部数据源中查询匹配W的数据记录；  5)如果找到包含W的数据源，根据该数据源连接C获得其对应的会话，由该会话生成ORM对象X，该过程由Hibernate完成；X的属性值中包含了 W，软件程序可利用X，修改或更新数据值；  6)若未能找到包含W的数据源，则返回空值NULL。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求3所述的多数据源动态隔离访问方法，其特征在于:第一步的第4)步按以下步骤进行:  (1)采用先进先出FIFO方式，在M的最后找到可用的存储空间，置标记K，若内存空间不足，则错误退出；  (2)为K置锁定标识L，以保证K为C所独占，使得在此其它的连接组件不会强占K位置，导致分配错误；  (3)将C的ID、CS和CO分别放入K的相对应位置；  (4)撤销锁定标记L。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求4所述的多数据源动态隔离访问方法，其特征在于:第一步的第5)步按以下步骤进行:  (I)在M的ID空间中索引给定ID， 若不存在，则错误退出；(2)找到给定ID后，查找其对应的CS和CO，并将CS注入CO的构造函数，实例化CO	；  (3)调用CO的数据库连接方法，到数据库连接池中取出一个可用连接，连接到给定ID指定的数据库。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求5所述的多数据源动态隔离访问方法，其特征在于:第二步的第4)步设数据库数目为N，查询的约束为K，按以下基于概率统计和目标探测方法确定包含W的数据源:  (O定义探测函数b(j，z)为对第j个数据源分配时间片Zj进行查询的条件下匹配W成功的概率，定义如下:  <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00031.png"> <img id="icf0001" file="CN103207908AC00031.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00031.png" class="patent-full-image" alt="Figure CN103207908AC00031"> </a> </div>  其中0〈α,1，是事先根据数据源j给出的与该数据源访问速度相关的参数，计算过程为:给定数据源j的连接Cp访问IKB的数据量，从发送查询请求到获得指定数据的时间为tj，其中建立网络连接和数据在网络上传输的时间为At」，则  <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00032.png"> <img id="icf0002" file="CN103207908AC00032.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00032.png" class="patent-full-image" alt="Figure CN103207908AC00032"> </a> </div>指出了在第j个数据源中，分配时间片Zj进行查询能成功匹配W的可能性，其中Zj的最优取值&lt;确定按下面的步骤进行；  (2)设关键字W在数据源j中的先验概率为P	(j)，P (j)的取值可事先根据经验或其它环境条件进行预估；对N个数据源进行编号，使得满足:   Q1P(I)≥ a 2P(2) &#187; αΝ, P(N) (2)    (3)令  <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00033.png"> <img id="icf0003" file="CN103207908AC00033.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00033.png" class="patent-full-image" alt="Figure CN103207908AC00033"> </a> </div>，则  <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00034.png"> <img id="icf0004" file="CN103207908AC00034.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00034.png" class="patent-full-image" alt="Figure CN103207908AC00034"> </a> </div>为了计算 a值，定义:   <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00035.png"> <img id="icf0005" file="CN103207908AC00035.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00035.png" class="patent-full-image" alt="Figure CN103207908AC00035"> </a> </div>  则: α  <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00036.png"> <img id="icf0006" file="CN103207908AC00036.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00036.png" class="patent-full-image" alt="Figure CN103207908AC00036"> </a> </div>  通过(2)、(3)和(4)式，可求出  <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00037.png"> <img id="icf0007" file="CN103207908AC00037.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AC00037.png" class="patent-full-image" alt="Figure CN103207908AC00037"> </a> </div> </div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求3或4或5或6所述的多数据源动态隔离访问方法，其特征在于:第三步包括以下步骤:  1)根据该数据源连接组件C，在任务队列中查询得到C对应的会话；  2)调用会话的开始事务方法获取对应的事务T	；  3)使用T的隔离属性，实现C与其它数据源连接的隔离；  4)执行存储操作，该操作可以是增加新数据、删除旧数据或修改现有数据；  5)提交存储操作，如果操作成功，则完成存储会话；如果操作失败，则回滚，将数据库重置为提交之前的状态，此时，可再次尝试提交操作。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES60712280" lang="ZH" load-source="patent-office" class="description">
    <p>多数据源动态隔离访问方法</p>
    <p>技术领域</p>
    <p>[0001]	本发明属于计算机数据访问与管理技术领域，具体涉及一种多数据源动态隔离访问方法。</p>
    <p>背景技术</p>
    <p>[0002]	随着云计算和互联网络的蓬勃发展，许多系统和平台都将面临海量数据，而且这些数据量都以爆炸式的速度递增，这直接导致许多软件架构越来越庞大，处理能力也越来越强，而支撑这些软件运行，为用户提供服务的基础正是这些庞大的海量数据，对于软件服务而言，不仅需要面临大量的数据，还面临着来自不同数据源的数据，包括来自不同数据库服务器、不同数据结构、分布式数据存储等环境。</p>
    <p>[0003]目前，对于来自单一数据源的海量数据，许多数据库服务都提供了强大的处理能力，但由于数据库厂商都只是存储和访问本厂商的数据，并不提供其它厂商的数据源访问方法，而对于复杂的软件系统而言，往往需要同时处理来自不同数据库的数据，这就需要提供一种高效的多数据源访问方法，同时需要保住在访问过程中，这些不同的数据源相互隔离，互不影响，保证数据的安全性和完整性。</p>
    <p>[0004]	针对目前软件系统日趋庞大，数据结构越来越复杂，特别是云计算技术的发展，使得软件需要处理的数据来源不再是单一的目标数据库，而可能是多个不同的数据源，传统的数据库访问技术仅能在一个软件系统中操作一个数据源，虽然有一些改进技术可以通过配置实现多个数据源的访问，但这些技术实质上只是对单一访问技术的简单扩展，需要事先指定需要访问的数据源位置和个数，也就是说，必须事先设置目标数据库的参数，不能动态地根据需要自动扩展，这并不符合多数据库访问的要求。</p>
    <p>[0005]	综上所述，对多数据源中的数据访问包括两个方面:一是数据操作，即动态连接数据源，对所需数据的各项操作，并通过事务处理存储回数据库中；二是数据查询，即在多个数据源的海量数据库中查询目标数据，要求快速和准确。</p>
    <p>发明内容</p>
    <p>[0006]	本发明针对现有技术的不足，提供了一种多数据源动态隔离访问方法，利用动态数据库连接、访问与多事务处理技术，实现多数据源动态隔离访问，可根据软件系统的需要动态扩展数据源。</p>
    <p>[0007]	本发明采用的技术方案是:一种多数据源动态隔离访问方法，包括以下步骤:</p>
    <p>[0008]	第一步:生成多数据源动态连接；</p>
    <p>[0009]	第二步:生成多数据源动态查询；</p>
    <p>[0010]	第三步:将多数据源进行隔离存储。</p>
    <p>[0011]	作为优选:第一步包括以下步骤:</p>
    <p>[0012]	I)根据数据库和软件系统需要选择合适的数据库连接组件C，并记录唯一标识该连接的ID号、代表该连接的字符串CS和组件对象CO，其中，CO中包括一个以CS为参数的构造函数，并封装了对所连接数据库的操作方法，包括连接的创建与销毁；</p>
    <p>[0013]	2)在内存中申请一段空间M，包括三个组成部分，分别存储ID、CS和CO，该段空间以连续方式存储，以ID为索引，可根据ID迅速找到对应的数据库C ；</p>
    <p>[0014]	3)为C创建数据库连接池；</p>
    <p>[0015]	4)将该连接组件加入到M中:</p>
    <p>[0016]	5)当需要动态连接数据库时，需要事先给定连接组件ID。</p>
    <p>[0017]	作为优选:第二步包括以下步骤:</p>
    <p>[0018]	I)建立Hibernate环境,初始化Hibernate必要参数,使之正常运行，运行成功后，生成基本配置信息；</p>
    <p>[0019]	2)将第一步得到的数据库连接C注入基本配置信息，生成与该连接组件唯一对应的配置信息，并由配置信息生成ORM工厂，ORM工厂将自动完成ORM转换，将数据源转化为数据对象X，并生成包含对X进行操作的会话；</p>
    <p>[0020]	3)遍历第一步生成的M，获取所有数据连接C，重复上一步，得到全部会话队列，由于会话与C的唯一对应关系，可根据C唯一匹配得到对应的会话；</p>
    <p>[0021]	4)给定查询关键字W，在全部数据源中查询匹配W的数据记录；</p>
    <p>[0022]	5)如果找到包含W的数据源，根据该数据源连接C获得其对应的会话，由该会话生成ORM对象X，该过程由Hibernate完成；X的属性值中包含了 W，软件程序可利用X，修改或更新数据值；</p>
    <p> [0023]	6)若未能找到包含W的数据源，则返回空值(NULL)。</p>
    <p>[0024]	作为优选:第一步的第4)步按以下步骤进行:</p>
    <p>[0025]	(I)采用先进先出FIFO方式，在M的最后找到可用的存储空间，置标记K，若内存空间不足，则错误退出；</p>
    <p>[0026]	(2)为K置锁定标识L，以保证K为C所独占，使得在此其它的连接组件不会强占K位置，导致分配错误；</p>
    <p>[0027]	(3)将C的ID、CS和CO分别放入K的相对应位置；</p>
    <p>[0028]	(4)撤销锁定标记L。</p>
    <p>[0029]	作为优选:第一步的第5)步按以下步骤进行:</p>
    <p>[0030]	(I)在M的ID空间中索引给定ID，若不存在，则错误退出；</p>
    <p>[0031]	(2)找到给定ID后，查找其对应的CS和CO，并将CS注入CO的构造函数，实例化CO ；</p>
    <p>[0032]	(3)调用CO的数据库连接方法，到数据库连接池中取出一个可用连接，连接到给定ID指定的数据库。</p>
    <p>[0033]	作为优选:第二步的第4)步设数据库数目为N，查询的约束为K，按以下基于概率统计和目标探测方法确定包含W的数据源:</p>
    <p>[0034]	(I)定义探测函数b (j，z)为对第j个数据源分配时间片Zj进行查询的条</p>
    <p>[0035]	件下匹配W成功的概率，定义如下:</p>
    <p>[0036]	b{j,z) = 1-	(I)</p>
    <p>[0037]	其中0〈α j〈l，是事先根据数据源j给出的与该数据源访问速度相关的参数，计算过程为:给定数据源j的连接Cp访问IKB的数据量，从发送查询请求到获得指定数据的时间为tj，其中建立网络连接和数据在网络上传输的时间为Λ tj，则A	; b (j，z)指出</p>
    <p>                                  了在第j个数据源中，分配时间片Zj进行查询，能成功匹配W的可能性，其中Zj的最优取值&lt;确定按下面的步骤进行；</p>
    <p>[0038]	(2)设关键字W在数据源j中的先验概率为P (j)，P (j)的取值可事先根据经验或其它环境条件进行预估；对N个数据源进行编号，使得满足:</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AD00061.png"> <img id="idf0001" file="CN103207908AD00061.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AD00061.png" class="patent-full-image" alt="Figure CN103207908AD00061"> </a> </div>
    <p>[0044]	通过(2)、(3)和(4)式，可求出'</p>
    <p>[0045]	作为优选:第三步包括以下步骤:</p>
    <p>[0046]	1)根据该数据源连接组件C，在任务队列中查询得到C对应的会话；</p>
    <p>[0047]	2)调用会话的开始事务方法获取对应的事务T ；</p>
    <p>[0048]	3)使用T的隔离属性，实现C与其它数据源连接的隔离；</p>
    <p>[0049]	4)执行存储操作，该操作可以是增加新数据、删除旧数据或修改现有数据；</p>
    <p>[0050]	5)提交存储操作，如果操作成功，则完成存储会话；如果操作失败，则回滚，将数据库重置为提交之前的状态，此时，可再次尝试提交操作。</p>
    <p>[0051]	本发明的有益效果是:通过采用可动态调节数据连接池和连接资源的方法，可同时完成对多个(不限数量)数据源的高速访问与管理，并通过数据隔离技术，保证多数据源数据传输互不干扰，安全高速，从而克服传统软件对数据源操作的单一性和低效性，可广泛应用于需要同时访问不同数据源数据的软件开发环境，特别是云计算领域中的软件即服务(SoftwareasaService, SaaS)和平台即服务(PlatformasaService, PaaS)环境。</p>
    <p>附图说明</p>
    <p>[0052]	图1:基于偏好度的网页内容管控方法的流程图；</p>
    <p>[0053]	图2:文本预处理的流程图。</p>
    <p>具体实施方式</p>
    <p>[0054]	为了便于本领域技术人员的理解，下面结合附图和具体的实施例对本发明做进一步的说明。[0055]	本发明提出了一种多数据源动态隔离访问方法，实现对多个不同数据源的动态隔离访问，其使用的现有技术主要涉及如下方面:</p>
    <p>[0056]	1.数据库连接组件</p>
    <p>[0057]	数据库连接组件用于实现与指定数据库的连接，原始的数据库连接组件是单一的，一次只能连接一个独立的数据库服务器。目前主要的数据库连接组件包括:</p>
    <p>[0058]	I) ODBC:开放数据库互连(OpenDatabaseConnectivity, ODBC)是微软公司开放服务结构(WOSA, WindowsOpenServicesArchitecture)中有关数据库的一个组成部分，它建立了一组规范，并提供了一组对数据库访问的标准API (应用程序编程接口)。这些API利用SQL来完成其大部分任务。</p>
    <p>[0059]	2) JDBC:JavaDataBaseConnectivity, java 数据库连接。是一种用于执行 SQL 语句的JavaAPI，可以为多种关系数据库提供统一访问，它由一组用Java语言编写的类和接口组成。JDBC提供了一种基准，据此可以构建更高级的工具和接口，使数据库开发人员能够编写数据库应用程序。</p>
    <p>[0060]	3)原生数据库连接:由各数据库厂商提供的针对本厂商服务的原生态数据库连接接口，一般包括不同编程语言扩展。如Oracle的OCI接口、MySQL的MySQLConnector等。</p>
    <p>[0061]	本发明支持根据软件系统的需要，使用不同的数据库连接组件实现对数据库的连接与访问。</p>
    <p>[0062]	2.数据库连接池</p>
    <p>[0063]	数据库连接是一种关键的有限的昂贵的资源，这一点在多用户的网页应用程序中体现得尤为突出。对数据库连接的管理能显著影响到整个应用程序的伸缩性和健壮性，影响到程序的性能指标。数据库连接池正是针对这个问题提出来的。数据库连接池负责分配、管理和释放数据库连接，它允许应用程序重复使用一个现有的数据库连接，而再不是重新建立一个；释放空闲时间超过最大空闲时间的数据库连接来避免因为没有释放数据库连接而引起的数据库连接遗漏。这项技术能明显提高对数据库操作的性能。</p>
    <p>[0064]	值得注意的是，数据库连接池的主要目的是提高数据库访问速度，但并不能实现同时访问多个不同的数据源，因此，多个不同的数据库需要多个数据库连接池。</p>
    <p>[0065]	本发明使用数据库连接池技术，与数据库连接组件结合，共同实现对数据库高效的连接与访问。</p>
    <p>[0066]	3.对象关系映射(ORM)</p>
    <p>[0067]	对象关系映射(Object-RelationshipMapping, 0RM)是随着面向对象的软件开发方法发展而产生的。面向对象的开发方法是当今企业级应用开发环境中的主流开发方法，关系数据库是企业级应用环境中永久存放数据的主流数据存储系统。对象和关系数据是业务实体的两种表现形式，业务实体在内存中表现为对象，在数据库中表现为关系数据。内存中的对象之间存在关联和继承关系，而在数据库中，关系数据无法直接表达多对多关联和继承关XS系。因此，ORM以中间件的形式存在，主要实现程序对象到关系数据库数据的映射。</p>
    <p>[0068]	在现有ORM技术中,Hibernate是较为成熟的ORM框架。Hibernate是一个开放源代码的对象关系映射框架，它对数据库连接组件进行了非常轻量级的对象封装，使得软件程序可以随心所欲的使用对象编程思维来操纵数据库，并完成数据持久化的任务。[0069]	本发明采用Hibernate作为ORM框架，实现对象-关系映射，为软件程序提供面向对象的数据访问组件。</p>
    <p>[0070]	4.事务管理</p>
    <p>[0071]	数据库事务(DatabaseTransaction),是指作为单个逻辑工作单元执行的一系列操作。事务处理可以确保除非事务性单元内的所有操作都成功完成，否则不会永久更新面向数据的资源。通过将一组相关操作组合为一个要么全部成功要么全部失败的单元，可以简化错误恢复并使应用程序更加可靠。一个逻辑工作单元要成为事务，必须满足原子性、一致性、隔离性和持久性四大属性。</p>
    <p>[0072]	本发明采用Hibernate基于会话(session)的事务管理技术。Session技术可以实现在一个ORM操作数据源的过程中对数据库事务进行管理，包括事务的创建、提交或回</p>
    <p>等等ο</p>
    <p>[0073]	本发明将按照多数据源动态连接、多数据源动态查询和多数据源隔离存储三个阶段进行详细描述:</p>
    <p>[0074]	1、多数据源动态连接阶段</p>
    <p>[0075]	I)根据数据库和软件系统需要选择合适的数据库连接组件C，并记录唯一标识该连接的ID号、代表该连接的字符串CS和组件对象CO，其中，CO中包括一个以CS为参数的构造函数，并封装了对所连接数据库的操作方法，包括连接的创建与销毁。</p>
    <p>[0076]	2)在内存中申请一段空间M，包括三个组成部分，分别存储ID、CS和CO，该段空间以连续方式存储，以ID为索引，可根据ID迅速找到对应的数据库C。该空间结构如附图1所示。</p>
    <p>[0077]	3)为C创建数据库连接池。</p>
    <p>[0078]	4)将该连接组件加入到M中，步骤如下:</p>
    <p>[0079]	(I)采用先进先出(FIFO)方式，在M的最后找到可用的存储空间，置标记K，若内存空间不足，则错误退出；</p>
    <p>[0080]	(2)为K置锁定标识L，以保证K为C所独占，使得在此其它的其它连接组件不会强占K位置，导致分配错误。</p>
    <p>[0081 ] (3)将C的ID、CS和CO分别放入K的相对应位置</p>
    <p>[0082]	(4)撤销锁定标记L。</p>
    <p>[0083]	5)当需要动态连接数据库时，需要事先给定连接组件ID，按以下步骤进行:</p>
    <p>[0084]	(I)在M的ID空间中索引给定ID，若不存在，则错误退出；</p>
    <p>[0085]	(2)找到给定ID后，查找其对应的CS和CO，并将CS注入CO的构造函数，实例化CO ；</p>
    <p>[0086]	(3)调用CO的数据库连接方法，到数据库连接池中取出一个可用连接，连接到给定ID指定的数据库。</p>
    <p>[0087]	2、多数据源动态查询阶段</p>
    <p>[0088]	不同于传统的单一数据源查询，在多数据源情况下，不能通过单一的SQL语句直接得到目标数据。需要采用本发明设定的多数据源动态查询方法，包括以下步骤:</p>
    <p>[0089]	I)建立Hibernate环境,初始化Hibernate必要参数,使之正常运行，运行成功后，生成基本配置信息(BasicConfiguration)。[0090]	2)将第I阶段得到的数据库连接C注入BasicConfiguration,生成与该连接组件唯一对应的配置信息(Configuration),并由 Configuration 生成 ORM 工厂(ORMFactory),ORMFactory将自动完成ORM转换，将数据源转化为数据对象X，并生成包含对X进行操作的会话(Session)。如附图2所示。</p>
    <p>[0091 ] 3)遍历第I阶段生成的M，获取所有数据连接C，重复上一步，得到全部Session队列，由于Session与C的唯一对应关系,可根据C唯一匹配得到对应的Session。</p>
    <p>[0092]	4)给定查询关键字W，需要在全部数据源中查询匹配W的数据记录，设数据库数目为N，查询的约束为K (即可容忍的最长查询时间)，按以下基于概率统计和目标探测方法确定包含W的数据源:</p>
    <p>[0093]	(I)定义探测函数b(j，z)为对第j个数据源分配时间片Zj进行查询的条件下匹配W成功的概率，定义如下:</p>
    <p>[0094]</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AD00091.png"> <img id="idf0002" file="CN103207908AD00091.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AD00091.png" class="patent-full-image" alt="Figure CN103207908AD00091"> </a> </div>
    <p>[0095]	其中0〈α j〈l，是事先根据数据源j给出的与该数据源访问速度相关的参数，计算过程为:给定数据源j的连接Cp访问IKB的数据量，从发送查询请求到获得指定数据的时</p>
    <p>间为</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AD00092.png"> <img id="idf0003" file="CN103207908AD00092.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AD00092.png" class="patent-full-image" alt="Figure CN103207908AD00092"> </a> </div>
    <p>其中建立网络连接和数据在网络上传输的时间为Λ tj，则CXj = 。b (j，z)指出</p>
    <p>                                                     了在第j个数据源中，分配时间片h进行查询，能成功匹配W的可能性，其中h的最优取值&lt;确定按下面的步骤进行。</p>
    <p>[0096]	(2)设关键字W在数据源j中的先验概率为P (j)，P (j)的取值可事先根据经验或其它环境条件进行预估。对N个数据源进行编号，使得满足:</p>
    <p>[0097]</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AD00093.png"> <img id="idf0004" file="CN103207908AD00093.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AD00093.png" class="patent-full-image" alt="Figure CN103207908AD00093"> </a> </div>
    <p>[0100]则:</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AD00094.png"> <img id="idf0005" file="CN103207908AD00094.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103207908A/CN103207908AD00094.png" class="patent-full-image" alt="Figure CN103207908AD00094"> </a> </div>
    <p>[0102]	通过(2)、⑶和(4)式，可求出&lt;。</p>
    <p>[0103]	完成步骤4)后，将得到:在给定最大时间容忍度K的条件下，在N个数据源中查询关键字W的最优方案是对第j个数据源分配的时间片长度为=,，将有最大概率匹配成功W，该概率为b(j，z)。</p>
    <p>[0104]	5)采用上一步的方法，如果找到包含W的数据源，根据该数据源连接C获得其对应的会话，由该会话生成ORM对象X，该过程由Hibernate完成。X的属性值中包含了 W，软件程序可利用X，修改或更新数据值。</p>
    <p>[0105]	6)若未能找到包含W的数据源，则返回空值(NULL)。</p>
    <p>[0106]	3、多数据源隔离存储</p>
    <p>[0107]	该阶段的目的是将数据对象X保存回其来源数据库，在存储过程中利用事务操作保证多数据的隔离性，防止存入其它数据库中，具体包括以下步骤:</p>
    <p>[0108]	I)根据该数据源连接组件C，在会话队列中查询得到C对应的会话。</p>
    <p>[0109]	2)调用会话的开始事务(beginTransaction)方法获取对应的事务T。</p>
    <p>[0110]	3)使用T的Isolation(隔离)属性，实现C与其它数据源连接的隔离。</p>
    <p>[0111]	4)执行存储操作，该操作可以是增加新数据、删除旧数据或修改现有数据。</p>
    <p>[0112]	5)提交(commit)存储操作，如果操作成功，则完成存储任务；如果操作失败，如网络错误、数据库异常等，则回滚，将数据库重置为提交之前的状态，此时，可再次尝试提交操作。</p>
    <p>[0113]	终上所述:本领域的普通技术人员将会意识到，这里所述的实施例是为了帮助读者理解本发明的原理，应被理解为本发明的保护范围并不局限于这样的特别陈述和实施例。本领域的普通技术人员可以根据本发明公开的这些技术启示做出各种不脱离本发明实质的其它各种具体变形和组合，这些变形和组合仍然在本发明的保护范围内。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101777047A?cl=zh">CN101777047A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年1月8日</td><td class="patent-data-table-td patent-date-value">2010年7月14日</td><td class="patent-data-table-td ">国际商业机器公司</td><td class="patent-data-table-td ">多租户环境下访问数据库的系统、设备和方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102447620A?cl=zh">CN102447620A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年11月10日</td><td class="patent-data-table-td patent-date-value">2012年5月9日</td><td class="patent-data-table-td ">江苏德意软件科技有限公司</td><td class="patent-data-table-td ">一种关联型数据库实时交换管理方法、装置以及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2009116028A2?cl=zh">WO2009116028A2</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年3月10日</td><td class="patent-data-table-td patent-date-value">2009年9月24日</td><td class="patent-data-table-td ">Dbsophic Ltd</td><td class="patent-data-table-td ">Method and apparatus for enhancing performance of database and environment thereof</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="npl-citations"></a><div class="patent-section-header"><span class="patent-section-title">非专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th colspan="3"class="patent-data-table-th">参考文献</th></tr></thead><tr><td class="patent-data-table-td ">1</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">任俊国: "<a href='http://scholar.google.com/scholar?q="%E3%80%8A%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E5%8F%AF%E6%8E%A7%E6%9F%A5%E8%AF%A2%E6%8A%80%E6%9C%AF%E7%9A%84%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%BA%94%E7%94%A8%E3%80%8B"'>《多数据源可控查询技术的研究与应用》</a>", 《中国优秀硕士学位论文全文数据库》, 31 May 2012 (2012-05-31)</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=T5fGCAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年7月17日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年8月14日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年10月16日</td><td class="patent-data-table-td ">C53</td><td class="patent-data-table-td ">Change or modification</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年10月16日</td><td class="patent-data-table-td ">COR</td><td class="patent-data-table-td ">Bibliographic change or correction in the description</td><td class="patent-data-table-td "><div class="nested-key-value"><span class="nested-key">Free format text: </span><span class="nested-value">CORRECT: INVENTOR; FROM: TANG XUEFEI CHEN KE TO: TANG XUEFEI CHEN KE HU MAOQIU</span></div><div class="nested-key-value"><span class="nested-key">Free format text: </span><span class="nested-value">CORRECT: APPLICANT; FROM: CHENGDU KANGSAI INFORMATION TECHNOLOGY CO., LTD. OF UESTC TO: CHENGDU COMSYS INFORMATION TECHNOLOGY CO., LTD.</span></div></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/759ea364797a0528f89b/CN103207908A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_6e802a6b2b28d51711baddc2f3bec198.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E5%8A%A8%E6%80%81%E9%9A%94%E7%A6%BB%E8%AE%BF%E9%97%AE%E6%96%B9%E6%B3%95.pdf?id=T5fGCAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U0yR4Eu68QegVEbBFOc1ufpiuYwKA"},"sample_url":"https://www.google.com/patents/reader?id=T5fGCAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>