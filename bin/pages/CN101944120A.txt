<!DOCTYPE html><html><head><title>专利 CN101944120A - 一种无线标记语言脚本的执行方法及装置 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_6e802a6b2b28d51711baddc2f3bec198/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_6e802a6b2b28d51711baddc2f3bec198__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种无线标记语言脚本的执行方法及装置"><meta name="DC.contributor" content="王勇" scheme="inventor"><meta name="DC.contributor" content="青岛海信移动通信技术股份有限公司" scheme="assignee"><meta name="DC.date" content="2010-9-19" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种WMLScript脚本的执行方法，用于在WebKit浏览器中实现对WMLScript脚本的支持，从而使WebKit浏览器支持WMLScript脚本语言，使WebKit浏览器功能更加完善。所述方法包括：当无线应用协议wap网页中包含WMLScript脚本的url时，加载WMLScript脚本；受到点击链接的触发时，调用WMLScript引擎；通过WMLScript引擎调用WMLScript脚本，并获得WMLScript脚本的内容；执行WMLScript脚本的内容。本发明还公开了用于实现所述方法的装置。"><meta name="DC.date" content="2011-1-12"><meta name="DC.relation" content="CN:1997963:A" scheme="references"><meta name="citation_reference" content="《电脑知识与技术》 20090228 陈军 嵌入式WAP浏览器的架构及实现 论文794页第15行-795页倒数第1行，图1-2 1-10 第5卷, 第4期 2"><meta name="citation_patent_publication_number" content="CN:101944120:A"><meta name="citation_patent_application_number" content="CN:201010288943"><link rel="canonical" href="https://www.google.com/patents/CN101944120A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN101944120A?cl=zh"/><meta name="title" content="专利 CN101944120A - 一种无线标记语言脚本的执行方法及装置"/><meta name="description" content="本发明公开了一种WMLScript脚本的执行方法，用于在WebKit浏览器中实现对WMLScript脚本的支持，从而使WebKit浏览器支持WMLScript脚本语言，使WebKit浏览器功能更加完善。所述方法包括：当无线应用协议wap网页中包含WMLScript脚本的url时，加载WMLScript脚本；受到点击链接的触发时，调用WMLScript引擎；通过WMLScript引擎调用WMLScript脚本，并获得WMLScript脚本的内容；执行WMLScript脚本的内容。本发明还公开了用于实现所述方法的装置。"/><meta property="og:title" content="专利 CN101944120A - 一种无线标记语言脚本的执行方法及装置"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN101944120A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN101944120A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=4kiNBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN101944120A&amp;usg=AFQjCNE701Kw-0n3MWT3HTAFpNLvQ6-GNw" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/83eaae8e05596b47a27b/CN101944120A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/83eaae8e05596b47a27b/CN101944120A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN101944120A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN101944120A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN101944120A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN101944120B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN101944120A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种WMLScript脚本的执行方法，用于在WebKit浏览器中实现对WMLScript脚本的支持，从而使WebKit浏览器支持WMLScript脚本语言，使WebKit浏览器功能更加完善。所述方法包括：当无线应用协议wap网页中包含WMLScript脚本的url时，...</span><span itemprop="url">https://www.google.com/patents/CN101944120A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN101944120A - 一种无线标记语言脚本的执行方法及装置</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN101944120A - 一种无线标记语言脚本的执行方法及装置" title="专利 CN101944120A - 一种无线标记语言脚本的执行方法及装置"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN101944120 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201010288943</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2011年1月12日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2010年9月19日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2010年9月19日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN101944120B?hl=zh-CN&amp;cl=zh">CN101944120B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201010288943.0, </span><span class="patent-bibdata-value">CN 101944120 A, </span><span class="patent-bibdata-value">CN 101944120A, </span><span class="patent-bibdata-value">CN 201010288943, </span><span class="patent-bibdata-value">CN-A-101944120, </span><span class="patent-bibdata-value">CN101944120 A, </span><span class="patent-bibdata-value">CN101944120A, </span><span class="patent-bibdata-value">CN201010288943, </span><span class="patent-bibdata-value">CN201010288943.0</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%8E%8B%E5%8B%87%22">王勇</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E9%9D%92%E5%B2%9B%E6%B5%B7%E4%BF%A1%E7%A7%BB%E5%8A%A8%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">青岛海信移动通信技术股份有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN101944120A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN101944120A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN101944120A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (1),</span> <span class="patent-bibdata-value"><a href="#npl-citations">非专利引用</a> (1),</span> <span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (2),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=4kiNBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201010288943&amp;usg=AFQjCNFKGhef7z6RgvxvnVZwlJUVrJrcfA"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=4kiNBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D101944120A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNHjxrWyGVfZRj0r7CZelgLOfWTT1Q"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT100029721" lang="ZH" load-source="patent-office">一种无线标记语言脚本的执行方法及装置</invention-title>
      </span><br><span class="patent-number">CN 101944120 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA82294572" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种WMLScript脚本的执行方法，用于在WebKit浏览器中实现对WMLScript脚本的支持，从而使WebKit浏览器支持WMLScript脚本语言，使WebKit浏览器功能更加完善。所述方法包括：当无线应用协议wap网页中包含WMLScript脚本的url时，加载WMLScript脚本；受到点击链接的触发时，调用WMLScript引擎；通过WMLScript引擎调用WMLScript脚本，并获得WMLScript脚本的内容；执行WMLScript脚本的内容。本发明还公开了用于实现所述方法的装置。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(10)</span></span></div><div class="patent-text"><ol mxw-id="PCLM34275102" lang="ZH" load-source="patent-office" class="claims">
    <li class="claim"> <div num="1" class="claim">
      <div class="claim-text">一种无线标记语言脚本WMLScript脚本的执行方法，其特征在于，包括以下步骤：当无线应用协议wap网页中包含WMLScript脚本的统一资源定位url时，加载WMLScript脚本；受到点击链接的触发时，调用WMLScript引擎；通过WMLScript引擎调用WMLScript脚本，并获得WMLScript脚本的内容；执行WMLScript脚本的内容。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.如权利要求1所述的方法，其特征在于，在当wap网页中包含WMLScript脚本的url 时，加载WMLScript脚本之前还包括步骤：判断需执行的任务是否为链接属性；当wap网页中包含WMLScript脚本的url时，加载WMLScript脚本的步骤包括：当判断 结果为是时，获取当前网页中的数据及当前网页中的下载类，以加载WMLScript脚本。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.如权利要求1所述的方法，其特征在于，执行wmlscript引擎的步骤包括：获取 WMLScript脚本文件名、WMLScript脚本的url中的函数名称和WMLScript脚本长度。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.如权利要求3所述的方法，其特征在于，调用WMLScript脚本，并获得WMLScript脚 本的内容的步骤包括：根据所述WMLScript脚本文件名、WMLScript脚本的url中的函数名 称和WMLScript脚本长度，获取WMLScript脚本的内容。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.如权利要求1所述的方法，其特征在于，在执行WMLScript脚本的内容之前还包括步 骤：判断所述获取的WMLScript脚本的内容是否为二进制字节码文件，当判断结果为否时， 将所述获取的WMLScript脚本的内容编译为二进制字节码文件。</div>
    </div>
    </li> <li class="claim"> <div num="6" class="claim">
      <div class="claim-text">6.	一种无线标记语言WMLScript脚本的执行装置，其特征在于，包括：获取模块，用于当wap网页中包含WMLScript脚本的url时，加载WMLScript脚本；执行模块，用于当受到点击链接的触发时，调用WMLScript引擎；通过WMLScript引擎 调用WMLScript脚本，并获得WMLScript脚本的内容；执行WMLScript脚本的内容。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.如权利要求6所述的装置，其特征在于，还包括：解析模块，用于判断需执行的任务 是否为链接属性；当判断结果为是时，所述获取模块获取当前网页中的数据及当前网页中的下载类，以 加载WMLScript脚本。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.如权利要求6所述的装置，其特征在于，所述执行模块用于获取WMLScript脚本文件 名、WMLScript脚本的url中的函数名称和WMLScript脚本长度。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.如权利要求8所述的装置，其特征在于，所述执行模块用于根据所述WMLScript脚本 文件名、WMLScript脚本的url中的函数名称和WMLScript脚本长度，获取WMLScript脚本 的内容。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.如权利要求6所述的装置，其特征在于，所述执行模块还用于判断所述获取的 WMLScript脚本的内容是否为二进制字节码文件；当判断结果为否时，还包括：编译模块，用于将所述获取的WMLScript脚本的内容编译 为二进制字节码文件。</div>
    </div>
  </li> </ol>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES40150832" lang="ZH" load-source="patent-office" class="description">
    <p>一种无线标记语言脚本的执行方法及装置</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及计算机及嵌入式领域，特别涉及一种WMLScript脚本的执行方法及装置。</p>
    <p>背景技术</p>
    <p>[0002]	在2G (second generation，第二代移动通讯技术）时代，由于受到制约无线网络 的带宽的限制，因此移动设备上主要是wap (Wireless ApplicationProtocol，无线应用协 议）浏览器。随着第三代移动网络的普及，制约无线网络的带宽问题不复存在，另外随着移 动终端智能化的发展，CPU主频越来越高，及终端屏幕尺寸越来越大，移动终端已经有足够 的能力解析和显示web (环球网）网页。</p>
    <p>[0003]	在此背景下，移动运营商提出了全功能浏览器的要求，即通过一个浏览器既能访 问WWW(World Wide Web，万维网）网页，也能访问wap网页，这就需要浏览器内部有不同的 引擎。</p>
    <p>[0004]	Android 一词的本义指“机器人”，同时也是一种基于Linux ( &#8212;种操作系统）平台 的开源移动终端操作系统的名称。该操作系统由操作系统内核、中间件、用户界面和应用软 件组成，采用软件堆层（Software Stack，又名软件叠层）的架构，主要分为三部分。底层以 Linux内核工作为基础，由C ( 一种编程语言）语言开发，只提供基本功能；中间层包括函数 库(Library)和虚拟机(Virtual Machine)，由C++(&#8212;种编程语言)语言开发。最上层是 各种应用软件，包括通话程序，短信程序等，由各公司自行开发，以Java(&#8212;种编程语言）语 言作为编写程序的一部分语言。</p>
    <p>[0005]	WebKit是一个开源的浏览器内核，Android操作系统使用它作为内置浏览器的 内核，并且将采用该内核的浏览器称为WebKit浏览器。WebKit浏览器高效稳定，兼容性 好，并且源码结构清晰，易于维护。然而WebKit浏览器内部只有javascript ( 一种脚本语 言）引擎，因此仅支持www网页的访问，WebKit浏览器中没有WMLscript (Wireless Markup Language script，无线标记语言脚本）引擎，不支持wap网页中的WMLScript脚本。然而， 要在Android系统中使用其它的全功能浏览器，开发过程比较费时费力，且必须支付一定 的开发费用。某些浏览器的性能也不是很好，运行比较慢，布局不美观，并且，这些浏览器均 不开放源代码，在浏览器出现问题后，也不方便进行调试以解决问题。</p>
    <p>发明内容</p>
    <p>[0006]	本发明实施例提供一种WMLscript引擎的实现方法及装置，用于在WebKit浏览 器中实现对WMLScript脚本的支持，从而使WebKit浏览器支持WMLScript脚本语言，使 WebKit浏览器功能更加完善。</p>
    <p>[0007]	一种无线标记语言脚本WMLScript脚本的执行方法，包括以下步骤：</p>
    <p>[0008]	当wap网页中包含WMLScript脚本的url时，加载WMLScript脚本；</p>
    <p>[0009]	受到点击链接的触发时，调用WMLScript引擎；</p>
    <p>3[0010]	通过WMLScript引擎调用WMLScript脚本，并获得WMLScript脚本的内容；</p>
    <p>[0011]	执行WMLScript脚本的内容。</p>
    <p>[0012]	一种无线标记语言WMLScript脚本的执行装置，包括：</p>
    <p>[0013]	获取模块，用于当wap网页中包含WMLScript脚本的url时，加载WMLScript脚 本；</p>
    <p>[0014]	执行模块，用于当受到点击链接的触发时，调用WMLScript引擎；通过WMLScript 引擎调用WMLScript脚本，并获得WMLScript脚本的内容；执行WMLScript脚本的内容。</p>
    <p>[0015]	本发明实施例当wap网页中包含WMLScript脚本的url时，加载WMLScript脚本； 受到点击链接的触发时，执行WMLScript引擎；通过WMLScript引擎调用WMLScript脚本， 并获得WMLScript脚本的内容；执行WMLScript脚本的内容。从而在WebKit浏览器中加入 了 WMLscript引擎，以使WebKit浏览器支持WMLScript脚本，从而支持wap网页的访问。</p>
    <p>附图说明</p>
    <p>[0016]	图1为本发明实施例中WMLScript脚本的执行装置的主要结构图；</p>
    <p>[0017]	图2为本发明实施例中带有解析模块的WMLScript脚本的执行装置的主要结构 图；</p>
    <p>[0018]	图3为本发明实施例中WMLScript脚本的执行装置的详细结构图；</p>
    <p>[0019]	图4为本发明实施例中WMLScript脚本的执行方法的主要流程图；</p>
    <p>[0020]	图5A为本发明实施例中WMLScript脚本的执行方法的详细流程图；</p>
    <p>[0021]	图5B为本发明实施例中加入判断过程后WMLScript脚本的执行方法的详细流程 图。</p>
    <p>具体实施方式</p>
    <p>[0022]	本发明实施例当wap网页中包含WMLScript脚本的url时，加载WMLScript脚本； 受到点击链接的触发时，执行WMLScript引擎；通过WMLScript引擎调用WMLScript脚本， 并获得WMLScript脚本的内容；执行WMLScript脚本的内容。从而在WebKit浏览器中加入 了 WMLscript引擎，以使WebKit浏览器支持WMLScript脚本，从而支持wap网页的访问。</p>
    <p>[0023]	参见图1，本发明实施例中WMLscript引擎的实现装置包括获取模块101及执行模 块102。其中，所述装置位于WebKit浏览器中。</p>
    <p>[0024]	获取模块101用于获取WMLScript脚本。获取模块101具体用于在解析模块确定 网页中go (执行）语句为链接属性时，根据获取WMLScript脚本的函数加载WMLScript脚本 及获取WMLScript脚本的内容。例如，获取WMLScript脚本的函数可以是IoadWMLScript。 WebKit浏览器中设置一个类，用于根据获取WMLScript脚本的函数获取WMLScript脚本、获 取该WMLScript脚本的内容及执行该WMLScript脚本，例如，该类为WMLGoElement (wml执 行要素），获取WMLScript脚本的函数就位于WMLGoElement类中，其中，本发明实施例中获 取WMLScript脚本的函数IoadWMLScript可以如下：</p>
    <p>[0025]	void IoadWMLScript(String url)</p>
    <p>[0026]	其中，IoadWMLScript函数的具体内容如下：</p>
    <p>[0027]	void WMLGoElement ： ： IoadWMLScript (String url) //IoadWMLScript 函数定义在WMLGoElement 类中； [0028] {</p>
    <p>[0029]	if ( ！ isNeedRunWmlScript((char*)url. Iatinl ()&#183; data()))//判断是否需要运 行WMLScript脚本，以解析url ；</p>
    <p>[0030]	return ；</p>
    <p>[0031]	Document^doc = document () -J/将当前网页的数据赋给变量；</p>
    <p>[0032]	if( ！ doc)</p>
    <p>[0033]	return ；</p>
    <p>[0034]	DocLoader^docLoader = doc- &gt; docLoader () ；// 获取当前网页的下载类，以方 便下载WMLScript脚本文件；</p>
    <p>[0035]	if( ！ docLoader)</p>
    <p>[0036]	return ；</p>
    <p>[0037]	if (NULL = = m_pCacheWMLScript)//判断 m_pCacheWMLScript 变量是否为空。这 是出于安全考虑的步骤，以防nupCacheWMLScript变量不为空时影响执行过程。也可以不 执行本步骤，直接执行下一步；</p>
    <p>[0038]	m_pCacheWMLScript = docLoader- &gt; requestScript (url, ‘‘ IS0-8859-1 “)； //将WMLScript脚本的内容赋给m_pCacheWMLScript变量，相当于获得了 WMLScript脚本 的内容；</p>
    <p>[0039]	if(m_pCacheWMLScript){</p>
    <p>[0040]	m_pCacheWMLScript- &gt; addClient (this) ；// 为下载功能增加一个客户端，在下 载完成后通知该客户端。其中，一个WMLScript脚本只需下载一次。</p>
    <p>[0041]	return ；</p>
    <p>[0042]	}</p>
    <p>[0043]	}</p>
    <p>[0044]其中，WMLScript	脚本的 url 指的是指向 WMLScript 脚本的 url，IoadWMLScript 函数用于获取WMLScript脚本的内容。</p>
    <p>[0045]	WMLGoElement中还可以有一个变量，用于保存所述WMLScript脚本的内 容，例如，本发明实施例中该变量可以为CachedResourceHandle&lt;CachedScript&gt;m_ pCacheWMLScript。</p>
    <p>[0046]	参见图2，所述装置还包括解析模块103。</p>
    <p>[0047]	解析模块103用于解析wap网页。解析模块103具体用于解析wap网页中调用 的url，调用的函数名称、调用的函数参数等。解析模块103在解析wap网页时，解析到go 语句的时候，会首先根据WMLGoElement类创建对象，在创建完后会调用相应函数来解析go 语句的属性，例如，本发明实施例中该函数可以是WMLGoElement ： :parseMappedAttribute ( 解析映射属性)函数，该函数位于WMLGoElement类中，即判断go语句是否为链接属性，也 就是判断需执行的任务是否为链接属性，如果解析模块103解析出的go语句的属性为链接 属性，则调用获取模块101中的IoadWMLScript函数，以获取WMLScript脚本，并可以将该 WMLScript HP*白勺内胃#入 CachedResourceHandle&lt;CachedScript&gt;m_pCacheWMLScript ^ 量中。定义全局变量；</p>
    <p>定义url链接为字符串格式；</p>
    <p>[0048]	执行模块102用于执行WMLScript脚本的内容。当执行模块102受到点击 链接的触发时，会调用相应执行函数来执行WMLScript引擎例如，该执行函数可以是 WMLGoElement ： ： executetask 函数，该函数定义在 WMLGoElement 类中，用于执行 WMLScript引擎。</p>
    <p>[0049]	在本发明实施例中，需对相应执行函数进行扩展后该执行函数才能完成执行 WMLScript引擎的任务。例如，对该executetask(执行任务)函数进行如下扩展：</p>
    <p>[0050]	if (isNeedRunWmlScript( (char*) href. Iatinl ()&#183; data ())&amp;&amp;NULL ！ = m_ pCacheWMLScript)	//判断此链接是否为有效的WMLScript脚本链接；</p>
    <p>[0051]	{</p>
    <p>[0052]	extern Document&#27706;gdoc ；</p>
    <p>[0053]	gdoc = doc ；</p>
    <p>[0054]	String str = url. string ()；</p>
    <p>[0055]	String strScriptFun ；</p>
    <p>[0056]	int pos = 0 ；</p>
    <p>[0057]	pos = str. reverseFindC /'</p>
    <p>[0058]	pos++ ；</p>
    <p>[0059]	strScriptFun = str. substring (pos, str. length () -pos) ；// 获取 WMLScript 链 接中的函数名称；</p>
    <p>[0060]	strScriptFun. r印Iace (〃 % 20 “, 〃 〃）；</p>
    <p>[0061]	strScriptFun = strScriptFun. stripWhiteSpace()；</p>
    <p>[0062]	calIWMLScriptFunc (strScriptFun. Iatinl (). data (), WMLscript 引擎；</p>
    <p>[0063]	m_pCacheWMLScript- &gt; script (). Iatinl (). data ()， 以参数的方式传递给引擎执行；</p>
    <p>[0064]	m_pCacheWMLScript- &gt; script (). length ())；</p>
    <p>[0065]	gdoc = NULL ；</p>
    <p>获取脚本文件名；</p>
    <p>替换多余空格； 替换多余空格； //开始执行</p>
    <p>获取脚本的内容，</p>
    <p>传入脚本长度</p>
    <p>[0066]	m_pCacheWMLScript-&gt; destroyDecodedData() ；	//释放据口本内容，以 免该内容继续占用内存，造成内存泄露；</p>
    <p>[0067]	return ；</p>
    <p>[0068]	}</p>
    <p>[0069]	在WebKit浏览器中引入了 WMLscript引擎，从而使WebKit浏览器支持。其中， calIWMLScriptFunc是实现WMLscript引擎的入口函数，用于调用WMLScript脚本、获得 WMLScript脚本内容及执行WMLScript脚本内容。所有执行WMLScript脚本的过程都是从 此函数开始。calIWMLScriptFunc函数的具体内容如下：</p>
    <p>[0070]	int calIWMLScriptFunc (const char&#27706;uri, const char&#27706;pScript, int scrit&#8212; Ien)// 定义 calIWMLScriptFunc 函数的三个参数，包括 uri、WMLScript 脚本及 WMLScript</p>
    <p>脚本的长度；</p>
    <p>[0071]	{</p>
    <p>[0072]</p>
    <p>WMLScriptSlot result = {0}[0073]	unsigned short numApps = 0 ；</p>
    <p>[0074]	int byteCodeLen = 0 ；</p>
    <p>[0075]	int freeFlag = 0 ； //初始化，先将参数的值均置零；</p>
    <p>[0076]	if( (NULL = = pScript) | | (scrit_len 彡=0)) {// 判断脚本长度是否为 0 ；</p>
    <p>[0077]	return 0 ；</p>
    <p>[0078]	}</p>
    <p>[0079]	if( ！ isValidByteCode(pScript, scrit_len)){</p>
    <p>[0080]	if(WMLS_0K ！ = compilerffmlScript((char*)pScript, scrit_ len, &amp;gpWmlScriptCode，&amp;byteCodeLen)) // 判断脚本的内容是否为有效的 WMLScript 的二进制格式，否则有可能是文本方式的脚本，需要先把文本方式的脚本编译为二进制的 脚本；</p>
    <p>[0081]	return 0 ；</p>
    <p>[0082]	if ((NULL = = gpffmlScriptCode) | | (byteCodeLen &lt; = 0))</p>
    <p>[0083]	return 0 ；</p>
    <p>[0084]	freeFlag = 1 ；</p>
    <p>[0085]	}else</p>
    <p>[0086]	{gpffmlScriptCode = (char*)malIoc(scrit_len+l)；</p>
    <p>[0087]	memset(gpffmlScriptCode,0, scrit_len+l)；</p>
    <p>[0088]	memcpy (gpffmlScriptCode, pScript, scrit_len) ；// WMLScript HP HiSi WMLScript脚本的内容传递到执行变量中，以执行WMLScript脚本的内容；</p>
    <p>[0089]	}</p>
    <p>[0090]	//execute script</p>
    <p>[0091]	WMLScriptExecute (gScriptRef, uri, &amp;result) ；// Jfiu^Mf WMLScript	VX 下均为执行过程；</p>
    <p>[0092]	if((freeFlag)&amp;&amp;(NULL ！ = gpffmlScriptCode)) {</p>
    <p>[0093]	ws_free_byte_code((unsigned char*)gpffmlScriptCode)；</p>
    <p>[0094]	gpffmlScriptCode = NULL ；</p>
    <p>[0095]	freeFlag = 0 ；</p>
    <p>[0096]	}else{</p>
    <p>[0097]	if(NULL ！ = gpffmlScriptCode){</p>
    <p>[0098]	free (gpffmlScriptCode)；</p>
    <p>[0099]	gpffmlScriptCode = NULL ；</p>
    <p>[0100]	} [0101]	}</p>
    <p>[0102]	return 1 ；</p>
    <p>[0103]	}</p>
    <p>[0104]	int WMLScriptExecute (WMLScriptLibGlobals*gP, const char*uri, WMLScriptSlot*rs)</p>
    <p>[0105]	{[0106]	short findex = 0 ；</p>
    <p>[0107]	unsigned char argc = 0 ；</p>
    <p>[0108]	char&#27706;str = *ptr = NULL ；</p>
    <p>[0109]	WMLScriptModule^m ；</p>
    <p>[0110]	WMLScriptSlot&#27706;stack ；</p>
    <p>[0111]	WMLScriptFunction&#27706;fp ；</p>
    <p>[0112]	str = strchr((char*)uri, ‘ #')；</p>
    <p>[0113]	if (str == NULL) return WMLScriptErrInval idURI ；</p>
    <p>[0114]	m = WMLScriptLoadModule (gP, uri, str-uri，&amp;err)；</p>
    <p>[0115]	if (m == NULL)</p>
    <p>[0116]	return-1 ；</p>
    <p>[0117]	ptr = strchr(++str,'(')；</p>
    <p>[0118]	if (ptr == NULL)</p>
    <p>[0119]	return WMLScriptErrInvalidURI ；</p>
    <p>[0120]	findex = WMLScriptFindFunc (m, str, ptr-str)；</p>
    <p>[0121]	if (findex &lt; 0)return WMLScriptErrFunctionNotFound ；</p>
    <p>[0122]	当在获取模块101中加入获取WMLScript脚本的函数，并对执行模块102中相 应执行函数作出扩展后，就在WebKit浏览器中实现了 WMLscript引擎。当将WMLscript 引擎移植入WebKit浏览器后，可由解析模块103解析wap网页中调用的url、调用的函数 名称、调用的函数参数等，解析模块103若解析到go (语句）为链接属性，则获取模块101 加载WMLScript脚本及WMLScript脚本的内容，执行模块102调用WMLscript引擎，通过 WMLscript引擎调用WMLScript脚本，获得并执行WMLScript脚本的内容。具体的，解析模块 103 解析网页中调用的 url，例如，该 url 可以为 getCapital.wmls#getCapital (‘capital，， $(C0Untry_name)’），是一个用于根据国家名称获取该国家首都名称的函数。解析模 块103解析调用的函数名称getcapital (获知首都），解析调用的函数的参数，参数 1 ：'capital’（首都），参数 2 ：，country_name，（国家名）。获取模块 101 加载该 WMLScript 脚本及该WMLScript脚本的内容,执行模块102调用WMLscript引擎，WMLscript引擎通过 函数名称getcapital获取到函数代码开始处的地址，将此地址设置为程序执行的入口点。 把函数调用的参数（参数1 ：，capital’，参数2 ：，country_name')传入给函数使用，较 佳的，可以通过压栈的方式传入给函数使用，其中，压栈的特征是先入后出，后入先出。然后 开始根据调用的函数取指令，根据不同的0pc0de(操作码）值，跳转到相应位置执行流程。 依次解析执行指令，每解析完一个指令即修改IP (指针），使其指向下一个地址，一直到函 数的结束。其中，如果指令中有call (调用）指令，则还需调用库函数。库函数主要分为两 大类：标准库函数和浏览器相关的库函数。标准库函数主要涉及到浮点数（Float)及字符 串（String)等的相关功能，浏览器相关的函数主要涉及到网页中变量的获取及赋值、url 的解析等等，例如WTAPublic函数主要涉及到打电话等相关功能。这些库函数的功能都是 wmlscript预先规范定义好的，但具体的实现过程却与平台及使用的浏览器相关。</p>
    <p>[0123]	参见图3，所述装置还包括编译模块104。</p>
    <p>[0124]	WMLScript脚本的内容的形式一般分为文本文件或编译好的二进制字节码文件。对于文本文件形式的WMLScript脚本的内容，目前浏览器无法执行，因此必须将其转换为 二进制字节码文件方可执行。</p>
    <p>[0125]	执行模块102还用于判断获取的WMLScript脚本的内容是否是二进制字节码文 件。如果判断结果为否，所获取的WMLScript脚本的内容不是二进制字节码文件而是文本 文件，则需编译模块104先将其编译为二进制字节码文件，再由执行模块102执行；如果判 断结果为是，所获取的WMLScript脚本的内容是二进制字节码文件，则由执行模块102直接 执行。</p>
    <p>[0126]	编译模块104用于将文本文件形式的WMLScript脚本的内容编译为二进制字节码 文件。执行模块102开始执行WMLScript脚本的内容时，获取模块101需首先WMLScript 脚本的内容，根据使用不同的apn(Access Point Name，接入点名称），WMLScript脚本的内 容分为文本文件或编译好的二进制字节码文件，编译模块104当加载的WMLScript脚本的 内容文件为文本文件时，将其编译为二进制字节码文件，再由执行模块102调用WMLscript 引擎来执行。这样可以使WebKit浏览器功能更加优化，无论使用何种网关，WebKit浏览器 都能够支持WMLScript脚本。</p>
    <p>[0127]	下面通过实现流程来介绍WMLscript引擎的实现方法。</p>
    <p>[0128]	参见图4，本发明实施例介绍WMLscript引擎的主要实现方法。方法流程如下：</p>
    <p>[0129]	步骤401 ：当wap网页中包含WMLScript脚本的url时，加载WMLScript脚本。其 中，WMLScript脚本的url指的是指向WMLScript脚本的url</p>
    <p>[0130]	步骤402 ：受到点击链接的触发时，执行WMLScript引擎。</p>
    <p>[0131]	步骤403 ：通过wmlscript引擎调用WMLScript脚本，并获得WMLScript脚本的内容。</p>
    <p>[0132]	步骤404 ：执行WMLScript脚本的内容。</p>
    <p>[0133]	参见图5A，本发明实施例介绍WMLscript引擎的详细实现方法。方法流程如下：</p>
    <p>[0134]	首先需在WebKit浏览器中加入获取WMLScript脚本的函数。其中，该获取 WMLScript脚本的函数可以定义在WMLGoElement类中，函数名可以是IoadWMLScript。还 可以同时定义一个用于保存WMLScript脚本的内容的变量，例如该变量为CachedResource Handle&lt;CachedScript&gt;m_pCacheWMLScript。</p>
    <p>[0135]	还需扩展WebKit浏览器中相关执行函数的内容。例如，在本发明实施例中，该 函数可以是WMLGoElement: :executetask，该函数定义在WMLGoElement类中，用于执行 WMLscript引擎，通过获得WMLscript引擎的入口函数，实现WMLscript引擎。</p>
    <p>[0136]	步骤501 ：解析wap网页。</p>
    <p>[0137]	步骤502 ：判断go语句是否为链接属性。当判断结果为是时，继续步骤503，否则 结束流程。</p>
    <p>[0138]	步骤503 ：调用获取WMLScript脚本的函数，加载WMLScript脚本及该WMLScript 脚本的内容。其中，可以用IoadWMLScript函数获取WMLScript脚本。</p>
    <p>[0139]	步骤504:将加载的WMLScript脚本的内容存入变量中。其中，该变量可以是Cac hedResourceHandle&lt;CachedScript&gt;m_pCacheWMLScript。</p>
    <p>[0140]	解析模块103在解析wap网页时，解析到go (执行）语句的时候，会先根据 WMLGoElement 类创建对象，在创建完毕后调用 WMLGoElement: :parseMappedAttribute 函</p>
    <p>9数来解析go语句的属性，如果解析模块103解析出的go语句的属性为链接属性，则会调用 获取模块103中的IoadWMLScript函数，以加载WMLScript脚本及该WMLScript脚本的内 &#8226;，以亥内&#183;#入 CachedResourceHandle&lt;CachedScript&gt;m_pCacheWMLScript ^M 中。</p>
    <p>[0141]	步骤505 ：受到点击链接事件的触发。</p>
    <p>[0142]步骤	506 ：调用 WMLGoElement: :executetask 函数以执行 WMLScript 引擎。</p>
    <p>[0143]	步骤507 ：通过WMLScript引擎调用WMLScript脚本并执行WMLScript脚本的内容。</p>
    <p>[0144]	参见图5B，本发明实施例中加入了判断过程，以判断WMLScript脚本是文本文件 还是二进制字节码文件。详细方法流程如下：</p>
    <p>[0145]	步骤511 ：解析wap网页。</p>
    <p>[0146]	WebKit浏览器受到点击链接事件的触发。</p>
    <p>[0147]	步骤512:判断go语句是否为链接属性。当判断结果为是时，继续步骤513，否则 结束流程。</p>
    <p>[0148]	步骤513 ：调用获取WMLScript脚本的函数，加载WMLScript脚本及该WMLScript 脚本的内容。其中，可以用IoadWMLScript函数获取WMLScript脚本。</p>
    <p>[0149]	步骤514:将加载的WMLScript脚本的内容存入变量中。其中，该变量可以是Cac hedResourceHandle&lt;CachedScript&gt;m_pCacheWMLScript。</p>
    <p>[0150]	步骤515 ：受到点击链接事件的触发。</p>
    <p>[0151]	步骤516 ：判断获取的WMLScript脚本的内容是否为二进制字节码文件。当判断 结果为否，继续步骤517，否则继续步骤518。</p>
    <p>[0152]	步骤517 ：将获取的文本文件形式的WMLScript脚本的内容编译为二进制字节码 文件形式。</p>
    <p>[0153]步骤	518 ：调用 WMLGoElement: :executetask 函数以执行 WMLScript 引擎。</p>
    <p>[0154]	步骤519 ：通过WMLscript引擎调用WMLScript脚本并执行WMLScript脚本的内容。</p>
    <p>[0155]	本发明实施例当wap网页中包含WMLScript脚本的url时，加载WMLScript脚本； 受到点击链接的触发时，执行WMLScript引擎；通过WMLScript引擎调用WMLScript脚本， 并获得WMLScript脚本的内容；执行WMLScript脚本的内容。从而在WebKit浏览器中加 入了 WMLscript引擎，以使WebKit浏览器支持WMLScript脚本，从而支持wap网页的访问。 本发明实施例还在 WMLGoElement 类中增加了 CachedResourceHandle&lt;CachedScript&gt;m_ pCacheWMLScript变量，用于保存加载的WMLScript脚本的内容。只需在WebKit浏览器中 加入相关函数即可实现将WMLscript引擎植入WebKit浏览器中，实现过程简单，便于操作。 并且本发明实施例还加入了编译模块104，用于将文本文件形式的WMLScript脚本的内容 编译为WebKit浏览器可执行的二进制字节码文件，以避免当apn不同时，因WMLScript脚 本的内容为文本文件形式而导致该脚本无法执行，使WebKit浏览器的功能更加优化，保证 无论在使用何种网关的情况下WebKit浏览器都能够支持WMLScript脚本。</p>
    <p>[0156]	本领域内的技术人员应明白，本发明的实施例可提供为方法、系统、或计算机程序 产品。因此，本发明可采用完全硬件实施例、完全软件实施例、或结合软件和硬件方面的实施例的形式。而且，本发明可采用在一个或多个其中包含有计算机可用程序代码的计算机 可用存储介质（包括但不限于磁盘存储器和光学存储器等）上实施的计算机程序产品的形 式。</p>
    <p>[0157]	本发明是参照根据本发明实施例的方法、设备（系统)、和计算机程序产品的流程 图和/或方框图来描述的。应理解可由计算机程序指令实现流程图和/或方框图中的每一 流程和/或方框、以及流程图和/或方框图中的流程和/或方框的结合。可提供这些计算 机程序指令到通用计算机、专用计算机、嵌入式处理机或其他可编程数据处理设备的处理 器以产生一个机器，使得通过计算机或其他可编程数据处理设备的处理器执行的指令产生 用于实现在流程图一个流程或多个流程和/或方框图一个方框或多个方框中指定的功能 的装置。</p>
    <p>[0158]	这些计算机程序指令也可存储在能引导计算机或其他可编程数据处理设备以特 定方式工作的计算机可读存储器中，使得存储在该计算机可读存储器中的指令产生包括指 令装置的制造品，该指令装置实现在流程图一个流程或多个流程和/或方框图一个方框或 多个方框中指定的功能。</p>
    <p>[0159]	这些计算机程序指令也可装载到计算机或其他可编程数据处理设备上，使得在计 算机或其他可编程设备上执行一系列操作步骤以产生计算机实现的处理，从而在计算机或 其他可编程设备上执行的指令提供用于实现在流程图一个流程或多个流程和/或方框图 一个方框或多个方框中指定的功能的步骤。</p>
    <p>[0160]	显然，本领域的技术人员可以对本发明进行各种改动和变型而不脱离本发明的精 神和范围。这样，倘若本发明的这些修改和变型属于本发明权利要求及其等同技术的范围 之内，则本发明也意图包含这些改动和变型在内。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN1997963A?cl=zh">CN1997963A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2005年5月25日</td><td class="patent-data-table-td patent-date-value">2007年7月11日</td><td class="patent-data-table-td ">亚历山大&#183;索雷斯&#183;皮&#183;法里亚斯</td><td class="patent-data-table-td ">访问pos终端的系统、下载和更新应用的方法以及使用这种系统执行电子操作的方法</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="npl-citations"></a><div class="patent-section-header"><span class="patent-section-title">非专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th colspan="3"class="patent-data-table-th">参考文献</th></tr></thead><tr><td class="patent-data-table-td ">1</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">《电脑知识与技术》 20090228 陈军 嵌入式WAP浏览器的架构及实现 论文794页第15行-795页倒数第1行，图1-2 1-10 第5卷, 第4期 2</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102724169A?cl=zh">CN102724169A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年3月30日</td><td class="patent-data-table-td patent-date-value">2012年10月10日</td><td class="patent-data-table-td ">上海亿动信息技术有限公司</td><td class="patent-data-table-td ">一种用于移动广告系统的后台架构及控制系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102955694A?cl=zh">CN102955694A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年8月31日</td><td class="patent-data-table-td patent-date-value">2013年3月6日</td><td class="patent-data-table-td ">中国电信股份有限公司</td><td class="patent-data-table-td ">基于WebKit 浏览器的客户端实现方法以及客户端</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=4kiNBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2011年1月12日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2011年3月9日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年5月30日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Granted</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/83eaae8e05596b47a27b/CN101944120A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_6e802a6b2b28d51711baddc2f3bec198.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E6%97%A0%E7%BA%BF%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%E8%84%9A%E6%9C%AC%E7%9A%84%E6%89%A7%E8%A1%8C.pdf?id=4kiNBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U1SzEHl2hdDgUmQf_4WHdHZyOcNhQ"},"sample_url":"https://www.google.com/patents/reader?id=4kiNBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>