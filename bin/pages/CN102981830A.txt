<!DOCTYPE html><html><head><title>专利 CN102981830A - 一种可配置的文件快速识别和已损坏文件智能修复的方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种可配置的文件快速识别和已损坏文件智能修复的方法"><meta name="DC.contributor" content="闫光荣" scheme="inventor"><meta name="DC.contributor" content="刘岭" scheme="inventor"><meta name="DC.contributor" content="袁轲" scheme="inventor"><meta name="DC.contributor" content="陶金库" scheme="inventor"><meta name="DC.contributor" content="纪长刚" scheme="inventor"><meta name="DC.contributor" content="北京航空航天大学" scheme="assignee"><meta name="DC.contributor" content="中航沈飞民用飞机有限责任公司" scheme="assignee"><meta name="DC.date" content="2012-11-2" scheme="dateSubmitted"><meta name="DC.description" content="本发明一种可配置的文件快速识别和已损坏文件智能修复的方法，该方法有十四个步骤；本方法可以依据自定义文件格式数据库实现文件的快速识别，可以多次自动、循环地尝试对已损坏文件进行智能修复，直至获得满意的结果；本方法设计的文件格式数据库可以不断的更新和修改，从而实现可配置的功能。它具有程序实现简单，功能强大，资源占用少，识别和修复效率高等优点，这为文件快速识别和已损坏文件智能修复提供了一种自动、简便、高效、可靠的解决方案，极大地提高了用户工作效率。"><meta name="DC.date" content="2013-3-20"><meta name="DC.relation" content="CN:101271419:A" scheme="references"><meta name="DC.relation" content="CN:102663067:A" scheme="references"><meta name="DC.relation" content="CN:1794221:A" scheme="references"><meta name="DC.relation" content="WO:2001053938:A1" scheme="references"><meta name="citation_patent_publication_number" content="CN:102981830:A"><meta name="citation_patent_application_number" content="CN:201210433363"><link rel="canonical" href="https://www.google.com/patents/CN102981830A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102981830A?cl=zh"/><meta name="title" content="专利 CN102981830A - 一种可配置的文件快速识别和已损坏文件智能修复的方法"/><meta name="description" content="本发明一种可配置的文件快速识别和已损坏文件智能修复的方法，该方法有十四个步骤；本方法可以依据自定义文件格式数据库实现文件的快速识别，可以多次自动、循环地尝试对已损坏文件进行智能修复，直至获得满意的结果；本方法设计的文件格式数据库可以不断的更新和修改，从而实现可配置的功能。它具有程序实现简单，功能强大，资源占用少，识别和修复效率高等优点，这为文件快速识别和已损坏文件智能修复提供了一种自动、简便、高效、可靠的解决方案，极大地提高了用户工作效率。"/><meta property="og:title" content="专利 CN102981830A - 一种可配置的文件快速识别和已损坏文件智能修复的方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102981830A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102981830A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=8zToBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102981830A&amp;usg=AFQjCNHt_tGZVVoMVPdmhnPrSTrjGADvLQ" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/87a72a71ed0a4c3b2abf/CN102981830A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/87a72a71ed0a4c3b2abf/CN102981830A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102981830A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102981830A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102981830A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102981830B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102981830A?cl=zh" style="display:none"><span itemprop="description">本发明一种可配置的文件快速识别和已损坏文件智能修复的方法，该方法有十四个步骤；本方法可以依据自定义文件格式数据库实现文件的快速识别，可以多次自动、循环地尝试对已损坏文件进行智能修复，直至获得满意的结果...</span><span itemprop="url">https://www.google.com/patents/CN102981830A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102981830A - 一种可配置的文件快速识别和已损坏文件智能修复的方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102981830A - 一种可配置的文件快速识别和已损坏文件智能修复的方法" title="专利 CN102981830A - 一种可配置的文件快速识别和已损坏文件智能修复的方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102981830 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210433363</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年3月20日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年11月2日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年11月2日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102981830B?hl=zh-CN&amp;cl=zh">CN102981830B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210433363.5, </span><span class="patent-bibdata-value">CN 102981830 A, </span><span class="patent-bibdata-value">CN 102981830A, </span><span class="patent-bibdata-value">CN 201210433363, </span><span class="patent-bibdata-value">CN-A-102981830, </span><span class="patent-bibdata-value">CN102981830 A, </span><span class="patent-bibdata-value">CN102981830A, </span><span class="patent-bibdata-value">CN201210433363, </span><span class="patent-bibdata-value">CN201210433363.5</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%97%AB%E5%85%89%E8%8D%A3%22">闫光荣</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%88%98%E5%B2%AD%22">刘岭</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%A2%81%E8%BD%B2%22">袁轲</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%99%B6%E9%87%91%E5%BA%93%22">陶金库</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%BA%AA%E9%95%BF%E5%88%9A%22">纪长刚</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E5%8C%97%E4%BA%AC%E8%88%AA%E7%A9%BA%E8%88%AA%E5%A4%A9%E5%A4%A7%E5%AD%A6%22">北京航空航天大学</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E4%B8%AD%E8%88%AA%E6%B2%88%E9%A3%9E%E6%B0%91%E7%94%A8%E9%A3%9E%E6%9C%BA%E6%9C%89%E9%99%90%E8%B4%A3%E4%BB%BB%E5%85%AC%E5%8F%B8%22">中航沈飞民用飞机有限责任公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102981830A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102981830A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102981830A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (2),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=8zToBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210433363&amp;usg=AFQjCNFd4EdDkIA4bd1VRujCcxdiJ1K91A"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=8zToBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102981830A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNFE4nsjMFtYU1LGsUiVvzLtG-9UMQ"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT122842773" lang="ZH" load-source="patent-office">一种可配置的文件快速识别和已损坏文件智能修复的方法</invention-title>
      </span><br><span class="patent-number">CN 102981830 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA109722911" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明一种可配置的文件快速识别和已损坏文件智能修复的方法，该方法有十四个步骤；本方法可以依据自定义文件格式数据库实现文件的快速识别，可以多次自动、循环地尝试对已损坏文件进行智能修复，直至获得满意的结果；本方法设计的文件格式数据库可以不断的更新和修改，从而实现可配置的功能。它具有程序实现简单，功能强大，资源占用少，识别和修复效率高等优点，这为文件快速识别和已损坏文件智能修复提供了一种自动、简便、高效、可靠的解决方案，极大地提高了用户工作效率。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(1)</span></span></div><div class="patent-text"><div mxw-id="PCLM52161035" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种可配置的文件快速识别和已损坏文件智能修复的方法，其特征在于：该方法具体步骤如下：  步骤一 ：Windows操作系统下用户选择要操作的文件；  步骤二 ：通过钩子程序获取用户选取文件的路径和文件全名，并判断该文件是否有文件类型扩展名；钩子程序的实现要调用Win32的API函数，具体实现过程如下：   ①调用	int SetffindowsHookEx(int idHook, HookProcess lpfn,IntPtrhMod, intdwThreadld)安装钩子；   ②调用	UnHookWindowsEx (int idHook)卸载钩子；  依据用户选取文件的全路径和文件名调用Path. HasExtensionO判断文件是否有文件类型扩展名；如果有文件类型扩展名，则转步骤三；  步骤三：软件遍历程序模块遍历文件系统中安装的所用应用软件，获取软件名及安装路径；其具体实现的过程为：    ①调用	Registry. LocalMachine. OpenSubKey ()打开 Software\Microsof\Windows\CurrentVersion\Uninstall 位置的注册表；   ②通过	foreach 循环遍历 Software\Microsof\ffindows\Current Version\Uninstall遍历子项名称的字符串数组；  ③通过foreach循环遍历子项节点；   ④再调用	RegistryKey. GetValue (〃DisplayName〃，〃〃）. ToStringO 获取系统所安装的所用应用软件的名称；   ⑤再调用	RegistryKey. GetValue (〃DisplayIcon〃，〃〃）. ToStringO 获取系统所安装的所用应用软件的安装路径和文件名；  ⑥同理通过foreach循环遍历Software\Microsof遍历子项获取是否已安装office,Sql Server, Visual Studio其他软件及其安装路径；  步骤四：根据文件扩展名和应用软件的对应关系，调用Process. Start (stringfileName, string argument)找到并启动对应的应用软件加载用户选择的文件内容；其中fi IeName 指步骤三中的 RegistryKey. GetValue ("Di splay I con", ""). ToString ()的值，argument指步骤二中获取的用户选取文件的路径+文件全名；  步骤五：判断文件是否加载成功，如果加载成功就用对应的应用软件显示并操作用户所选择的文件内容；  步骤六：如果用户所选择的文件加载不成功，则通过文件修复程序模块来修复文件内容，然后继续尝试加载，如此循环，直到满足要求为止；  步骤七：当步骤二调用Path. HasExtensionO判断文件无文件类型扩展名时，此时需要通过文件流的方式读取文件字节流，其具体实现的过程为；   ①实例化一个文件流：FileStream	unknownfs=new FileStream unknownfs (0 文件全路径 + 文件名，FileMode. Open, FileAccess. Read)；   ②声明并实例化一个缓冲区：byte[Junknownfsbytes=new	byte[unknownfs.Length]；  ③通过文件流实例化一个二进制文件读取器：BinaryReader	unknownfsbr=newBinaryReader (unknownf s),至此用户所选的文件的内容就被加载到了二进制文件读取器，对文件内容就进行操作了； 步骤八：获取用户选择的字节流后就用文件格式识别程序模块快速识别出其文件格式，文件格式识别程序模块是通过读取未知文件的文件头标示，并依据文件格式数据库中文件头标示和文件格式的对应关系确定文件的格式，并通过该数据库中文件格式和打开该文件所需要的应用程序之间的对应关系找到打开该文件所需要的应用程序；文件格式数据库的xml文件格式如下：      <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102981830A/CN102981830AC00031.png"> <img id="icf0001" file="CN102981830AC00031.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102981830A/CN102981830AC00031.png" class="patent-full-image" alt="Figure CN102981830AC00031"> </a> </div>能；步骤九：通过步骤八识别出未知文件类型后，软件遍历程序模块遍历文件系统中安装的所用应用软件，获取软件名及安装路径；  步骤十：通过步骤九获取系统安装的应用软件，遍历系统安装的应用软件，检查是否存在能打开步骤八中识别出来的未知类型文件所要的应用软件；  步骤十一：经步骤十判断，如果系统没用安装能打开步骤八中识别出来的未知类型文件所要的应用软件，则提示用户安装对应的应用软件，同时给步骤八中识别出来的未知类型文件添加文件类型扩展名，便于下次用户安装完对应的软件后能识别并打开该文件；步骤十二：经步骤十判断，如果系统已安装能打开步骤八中识别出来的未知类型文件所要的应用软件，则调用Process. Start (string fileName, string argument)找到并启动系统已经安装的对应应用软件加载用户选择的文件内容；  步骤十三：判断步骤十二中用户选择的文件是否加载成功，若加载不成功则说明用户选择的文件无文件类型扩展名且文件内容也已损坏，此时首先对Fil e. Copy ()函数对文件进行备份，然后通过文件修复程序模块对文件内容进行修复，对文件修复后，返回步骤八读取文件字节流，继续执行步骤九及其下面的步骤，如此循环，直到满足要求为止；  步骤十四：经步骤十三判断，如果用户选择的文件加载成功，则利用对应的应用程序加载用户所选文件内容，并给用户选择的文件添加步骤九中识别出来的文件类型扩展名，便于下次用户进行文件操作时能快速识别并打开该文件。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES59232504" lang="ZH" load-source="patent-office" class="description">
    <p>一种可配置的文件快速识别和已损坏文件智能修复的方法技术领域[0001]	本发明涉及计算机软件领域，特别是涉及Windows操作系统下一种可配置的文件快速识别和已损坏文件智能修复的方法。背景技术[0002]日常进行文件打开、浏览、修改和保存等操作时，常会遇到要操作的文件没有扩展名，有扩展名但文件内容遭到破坏，没有扩展名同时内容又遭到破坏等情况。Windows操作系统下双击未知类型文件会弹出“打开方式”对话框，让用户选择安装的软件来打开未知文件。文件缺少扩展名时，若文件是自己创建的或处理过的文件时，自己可能知道文件类型， 可以通过Windows操作系统提供的“打开方式”对话框选择相应的软件打开并处理文件，如果是别人的就会因无法知道文件类型而无法对文件进行打开并处理操作。若出现文件有扩展名但文件内容遭到破坏或没有扩展名同时内容又遭到破坏的情况，在未经过特殊修复之前，Windows操作系统无法对文件进行打开和处理操作。此时我们的通常做法是丢弃并删除该文件，这样往往会导致数据完整性的破坏和数据信息的丢失，进而给企业或个人造成重大损失。[0003]	Windows操作系统长期雄踞全球操作系统霸主地位，是当今主流操作系统的代表，研究Windows操作系统文件操作机制具有很好的代表性和通用性。对没有扩展名、有扩展名但文件内容遭到破坏或没有扩展名同时内容又遭到破坏的文件进行打开和处理时， Windows操作系统没有对未知类型文件进行自动识别和对已损坏文件简单修复的功能提供完美的解决方案。要打开和操作上述文件，需要专业人士首先对文件进行专业处理，费时费力又费钱，影响与用户交互的友好性，增加了普通用户操作未知类型文件和已损坏文件的难度，给用户日常文件操作带来了很大麻烦。发明内容[0004]	本发明的目的是针对现有技术的不足，提供Windows操作系统下一种可配置的文件快速识别和已损坏文件智能修复的方法，能方便快捷地实现Windows操作系统下对未知类型文件的快速识别和对已损坏文件的智能修复。[0005]	为达到上述目的，本发明的技术方案提供一种Windows操作系统下未知类型文件快速识别和已损坏文件进行智能修复的方法，它包括以下内容：[0006]	当用户选取要打开的文件后，首先判断用户要打开的文件是否有文件扩展名，如果用户选择的文件有文件扩展名，则软件遍历程序模块（注：此程序模块是由专利发明人利用C#语言基于微软.NET平台开发的程序，具体实现详见后面介绍）遍历当前系统安装的所有应用软件，并根据文件扩展名和应用软件的对应关系，找到并启动对应的应用软件加载用户选择的文件内容，若加载成功就显示文件内容。若加载不成功，说明该文件有文件扩展名，但文件内容遭到破坏，文件修复程序模块（注：此程序模块是由专利发明人利用C# 语言基于微软.NET平台开发的程序，具体实现详见后面介绍）启动并修复受损坏的文件，文件修复后继续利用系统安装的对应软件加载该文件，若成功，就显示文件内容，不成功继续修复，如此循环，直到满足要求为止。[0007]	当用户选取操作的文件无文件类型扩展名时，文件内容的字节流将被读取到内存，然后文件格式识别程序模块（注：此程序模块是由专利发明人利用C#语言基于微软.NET平台开发的程序，具体实现详见后面介绍）访问文件格式数据库(注：此文件格式数据库是专利发明人为存储文件头标识，文件格式，打开此种文件所需要的应用程序和他们之间的对应关系等数据所建立的Xml文件，具体实现详见后面介绍)，通过用户操作的文件的文件头标识和数据库中文件头标识的比对得到文件的类型和打开文件所需要的应用软件。然后软件遍历程序模块遍历当前系统安装的所有应用软件，判断系统中是否安装了所需要的软件，如果没安装，则提示用户安装对应的应用软件，并自动完成给该位置文件添加类型扩展名的操作，如果安装了对应的应用软件，则根据文件格式识别程序模块识别出来的文件类型和打开该类型文件所需要的应用软件，找到并启动对应软件加载用户选择的文件内容，若加载成功则显示文件内容并接受用户操作，在用户保存该文件时自动给文件加上文件类型扩展名，以便下次进行文件操作时能快速识别文件类型。若加载不成功，文件修复程序模块启动并修复受损坏的文件，文件修复后继续识别文件类型，遍历系统软件，加载文件内容，若成功，就显示文件内容并接受用户操作，在用户保存该文件时自动给文件加上文件类型扩展名，不成功继续修复，如此循环，直到满足要求为止。[0008]	综上所述，本发明一种可配置的文件快速识别和已损坏文件智能修复的方法，该方法具体步骤如下：[0009]	步骤一 ：Windows操作系统下用户选择要操作的文件；[0010]	步骤二 ：通过钩子程序获取用户选取文件的路径和文件全名，并判断该文件是否有文件类型扩展名。钩子程序的实现要调用Win32的API函数，具体过程如下：[0011]①调用	int SetffindowsHookEx (int idHook, HookProcess lpfn, IntPtr hMod, int dwThreadld)安装钩子；[0012]②调用	UnHookWindowsEx (int idHook)卸载钩子；[0013]	依据用户选取文件的全路径和文件名调用Path. HasExtensionO判断文件是否有文件类型扩展名；如果有文件类型扩展名，则转步骤三。[0014]	步骤三：软件遍历程序模块遍历文件系统中安装的所用应用软件，获取软件名及安装路径。其实现的具体过程为：[0015]①调用	Registry. LocalMachine. OpenSubKey ()打开 Software\Microsof\ Windows\CurrentVersion\Uninstall 位置的注册表；[0016]②通过	foreach 循环遍历 Software\Microsof\Windows\Current Version\ Uninstall遍历子项名称的字符串数组；[0017]	③通过foreach循环遍历子项节点；[0018]④再调用	RegistryKey. GetValue (〃DisplayName〃，〃〃）&#183; ToStringO 获取系统所安装的所用应用软件的名称；[0019]⑤再调用	RegistryKey. GetValue (〃DisplayIcon〃，〃〃）&#183; ToStringO 获取系统所安装的所用应用软件的安装路径和文件名。[0020]	⑥同理通过foreach循环遍历Software\Microsof遍历子项获取是否已安装office, Sql Server, Visual Studio等其他软件及其安装路径。[0021]	步骤四：根据文件扩展名和应用软件的对应关系，调用Process. Start(string fileName, string argument)找到并启动对应的应用软件加载用户选择的文件内容；其中 fiIeName 指步骤三中的 RegistryKey. GetValue ("DisplayIcon", ""). ToString O 的值， argument指步骤二中获取的用户选取文件的路径+文件全名。[0022]	步骤五：判断文件是否加载成功，如果加载成功就用对应的应用软件显示并操作用户所选择的文件内容。[0023]	步骤六：如果用户所选择的文件加载不成功，则通过文件修复程序模块来修复文件内容，然后继续尝试加载，如此循环，直到满足要求为止。[0024]	步骤七：当步骤二调用Path. HasExtensionO判断文件无文件类型扩展名时，此时需要通过文件流的方式读取文件字节流。其实现的具体过程为；[0025]①实例化一个文件流：FileStream	unknownfs=new FileStream unknownfs(@ 文件全路径 + 文件名，FileMode. Open, FileAccess. Read)；[0026]②声明并实例化一个缓冲区：byte	[] unknownf sbytes=new byte [unknownfs. Length]；[0027]	③通过文件流实例化一个二进制文件读取器：BinaryReader unknownfsbr=new BinaryReader (unknownfs)。至此用户所选的文件的内容就被加载到了二进制文件读取器, 就可以对文件内容进行操作了。[0028]	步骤八：获取用户选择的字节流后就可以用文件格式识别程序模块快速识别出其文件格式，文件格式识别程序模块是通过读取未知文件的文件头标示，并依据文件格式数据库中文件头标示和文件格式的对应关系确定文件的格式，并通过该数据库中文件格式和打开该文件所需要的应用程序之间的对应关系找到打开该文件所需要的应用程序。文件格式数据库的xml文件格式如下：[0029]</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102981830A/CN102981830AD00071.png"> <img id="idf0001" file="CN102981830AD00071.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102981830A/CN102981830AD00071.png" class="patent-full-image" alt="Figure CN102981830AD00071"> </a> </div>
    <p>[0030]CFileMark HeadMark= “89 50 4E 47 OD IA 0A” EnclMark= “、 &lt;F i Ie F ormat&gt; PNG &lt;/F ileF ormat&gt; &lt;App]ication&gt;Picasa&lt;/Application&gt;&lt;Application&gt;ACDSee〈/Application:〉 &lt;App]ication&gt;PhotoShop&lt;/Appiication&gt;&lt;	/FiieMark &gt;&lt;FileMark HeadMark= “FF D8” EndMark= “FF D9 ”&gt; &lt;Fi leFormat&gt;JPG&lt;/F ileFormat&gt; &lt;Application&gt;Picasa&lt;/Application&gt; &lt;Application&gt;ACDSee &lt;/Application&gt; &lt;Application&gt;PhotoShop&lt;/Application&gt;&lt;	/FiieMark &gt;&lt;/Root&gt;[0031]	其中文件格式数据库的xml文件格式可以不断的更新和修改，从而达到可配置的功能。[0032]	步骤九：通过步骤八识别出未知文件类型后，软件遍历程序模块遍历文件系统中安装的所用应用软件，获取软件名及安装路径。[0033]	步骤十：通过步骤九获取系统安装的应用软件，遍历系统安装的应用软件，检查是否存在能打开步骤八中识别出来的未知类型文件所要的应用软件。[0034]	步骤十一：经步骤十判断，如果系统没用安装能打开步骤八中识别出来的未知类型文件所要的应用软件，则提示用户安装对应的应用软件，同时给步骤八中识别出来的未知类型文件添加文件类型扩展名，便于下次用户安装完对应的软件后能识别并打开该文件。[0035]	步骤十二 ：经步骤十判断，如果系统已安装能打开步骤八中识别出来的未知类型文件所要的应用软件，则调用Process. Start (string fileName, string argument)找到并启动系统已经安装的对应应用软件加载用户选择的文件内容。[0036]	步骤十三：判断步骤十二中用户选择的文件是否加载成功，若加载不成功则说明用户选择的文件无文件类型扩展名且文件内容也已损坏，此时首先对File. CopyO函数对文件进行备份，然后通过文件修复程序模块对文件内容进行修复，对文件修复后，返回步骤八读取文件字节流，继续执行步骤九及其下面的步骤，如此循环，直到满足要求为止。[0037]	步骤十四：经步骤十三判断，如果用户选择的文件加载成功，则利用对应的应用程序加载用户所选文件内容，并给用户选择的文件添加步骤九中识别出来的文件类型扩展名，便于下次用户进行文件操作时能快速识别并打开该文件。[0038]	至此，本发明提出的文件快速识别和已损坏文件智能修复过程结束。[0039]	优点及功效：上述技术方案具有如下优点：本发明可以依据自定义文件格式数据库实现文件的快速识别，可以多次自动、循环地尝试对已损坏文件进行智能修复，直至获得满意的结果；本发明设计的文件格式数据库可以不断的更新和修改，从而实现可配置的功能。本发明具有程序实现简单，功能强大，资源占用少，识别和修复效率高等优点，这为文件快速识别和已损坏文件智能修复提供了一种自动、简便、高效、可靠的解决方案，极大地提高了用户工作效率。附图说明[0040]	图I是本发明实施例的一种Windows操作系统下可配置的文件快速识别和已损坏文件智能简单修复的方法的流程图；具体实施方式[0041]	下面结合附图1，对本发明的具体实现过程作进一步详细描述。其基本实现过程如下：[0042]	(I)Windows操作系统下用户选择要操作的文件(程序I)；[0043]	(2)通过钩子程序(钩子是Windows提供的一种消息处理机制平台，指应用程序在正常运行中接受消息之前预先启动的函数，用来检查和修改传给该程序的消息，钩子程序实际上是一个处理消息的程序段，通过系统调用，把他挂入系统。每当特定消息发出，在没有到达目的窗口之前，钩子程序就先捕获该消息，也就是钩子函数先得到控制权，此时钩子函数可以加工处理(改变）该消息，也可以不作处理而继续传递该消息，还可以强制结束该消息的传递）获取用户选取文件的路径和文件全名，并判断该文件是否有文件类型扩展名。 (程序2);钩子的程序实现要调用Win32的API函数，具体过程如下：[0044]①调用	int SetffindowsHookEx (int idHook, HookProcess lpfn, IntPtr hMod, int dwThreadld)安装钩子；[0045]②调用	UnHookWindowsEx (int idHook)卸载钩子；[0046]	依据用户选取文件的全路径和文件名调用Path. HasExtensionO判断文件是否有文件类型扩展名（程序2);如果有文件类型扩展名，则转(程序3)。[0047]	(3)软件遍历程序模块遍历文件系统中安装的所用应用软件(程序3)，获取软件名及安装路径。其实现的具体过程为：[0048]①调用	Registry. LocalMachine. OpenSubKey ()打开 Software\Microsof\ Windows\CurrentVersion\Uninstall 位置的注册表；[0049]②通过	foreach 循环遍历 Software\Microsof\Windows\Cu;rrent Version\ Uninstall遍历子项名称的字符串数组；[0050]	③通过foreach循环遍历子项节点；[0051]④再调用	RegistryKey. GetValue (〃DisplayName〃，〃〃）&#183; ToStringO 获取系统所安装的所用应用软件的名称；[0052]⑤再调用	RegistryKey. GetValue (〃DisplayIcon〃，〃〃）&#183; ToString O 获取系统所安装的所用应用软件的安装路径和文件名。[0053]	⑥同理通过foreach循环遍历Software\Microsof遍历子项获取是否已安装 office, Sql Server, Visual Studio等其他软件及其安装路径[0054]	(4)根据文件扩展名和应用软件的对应关系，调用Process. Start (string fileName, string argument)找到并启动对应的应用软件加载用户选择的文件内容(程序 4)。其中 fileName 指步骤 3 中的 RegistryKey. GetValue ("DisplayIcon", ""). ToString O 的值，argument指程序2中获取的用户选取文件的路径+文件全名。[0055]	(5)判断文件是否加载成功（程序5)。如果加载成功就用对应的应用软件显示并操作用户所选择的文件内容(程序6 )。[0056]	(6)如果用户所选择的文件加载不成功，则通过文件修复程序模块来修复文件内容(程序7)，然后继续尝试加载，如此循环，直到满足要求为止。关于文件修复程序模块的具体实现过程参看后面的程序16，这里不再详述。[0057]	(7)当程序2调用Path. HasExtensionO判断文件无文件类型扩展名时，此时需要通过文件流的方式读取文件字节流(程序8)。其实现的具体过程为；[0058]①实例化一个文件流：FileStream	unknownfs=new FileStream unknownfs (O 文件全路径 + 文件名，FileMode. Open, FileAccess. Read)；[0059]②声明并实例化一个缓冲区：byte	[] unknownfsbytes=new byte [unknownfs. Length]；[0060]	③通过文件流实例化一个二进制文件读取器：BinaryReader unknownfsbr=new BinaryReader (unknownfs)。至此用户所选的文件的内容就被加载到了二进制文件读取器， 就可以对文件内容进行操作了。[0061]	(8)获取用户选择的字节流后就可以用文件格式识别程序模块快速识别出其文件格式(程序9)，其工作原理是通过读取未知文件的文件头标示，并依据文件格式数据库(文件格式数据库是专利发明人为存储文件头标识、文件格式、打开此种文件所需要的应用程序和他们之间的对应关系等数据所建立的Xml文件）中文件头标示和文件格式的对应关系确定文件的格式，并通过该数据库中文件格式和打开该文件所需要的应用程序之间的对应关系找到打开该文件所需要的应用程序。文件格式数据库中xml文件格式如下：[0062]10</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102981830A/CN102981830AD00111.png"> <img id="idf0002" file="CN102981830AD00111.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102981830A/CN102981830AD00111.png" class="patent-full-image" alt="Figure CN102981830AD00111"> </a> </div>
    <p>[0064]	其中文件格式数据库的xml文件格式可以不断的更新和修改，从而达到可配置的目的。[0065]	(9)通过程序9识别出未知文件类型后，软件遍历程序模块遍历文件系统中安装的所用应用软件，获取软件名及安装路径(程序10)。[0066]	(10)通过程序10获取系统安装的应用软件，遍历系统安装的应用软件，检查是否存在能打开程序9中识别出来的未知类型文件所要的应用软件。判断系统中是否已经安装了打开步骤9中识别出来的未知类型文件所要的应用软件(步骤程序11)[0067]	(11)经程序11判断后，如果系统没用安装打开程序9中识别出来的未知类型文件所要的应用软件，则提示用户安装对应的应用软件(程序12)，同时给程序9中识别出来的未知类型文件添加文件类型扩展名（程序13)，便于下次用户安装完对应的软件后能识别并打开该文件。[0068]	(12)根据程序9识别出来的文件类型和应用软件的对应关系，调用Process. Start (string fileName, string argument)找到并启动系统已经安装的对应应用软件加载用户选择的文件内容(程序14)。[0069]	(13)判断程序14中用户选择的文件是否加载成功(程序15)，若加载不成功则说明用户选择的文件无文件类型扩展名且文件内容也已损坏，此时首先使用File. CopyO函数对文件进行备份，然后通过文件修复程序模块对文件内容进行修复(程序16)，对文件修复后，返回程序8读取文件字节流，继续执行程序9至程序15之间的过程，如此循环，直到满足要求为止。[0070]	文件修复程序模块的实现原理是通过读取文件的前2个字节，并将每个字节的内容转化为16进制的字符，可得到2个字符，然后将这两个字节依次与文件格式数据库中的 FileMark字段中具有两个字符的所有HeadMark属性值相类比。如果有一个字符相同，则读取文件的前2个字节，并将每个字节的内容转化为16进制的字符，可得到2个字符，若 FileMark的EndMark属性为空，则不做处理。若FileMark的EndMark属性不为空，则将这两个字节与依次文件格式数据库中的FileMark的具有两个字符的EndMark属性相类比，如果比较结果是相似，则将该文件的前两个字符变为FileMark的HeadMark属性中的字符，变换后保存文件，并给该文件添加文件类型扩展名。[0071]	如果取文件的前2个字节不符合上面的条件，则取三个字节，类比上述两个字节时的比较方法进行比较。像这样取得文件的前面字节数依次增加，然后再进行对比，以此类推，直到有满足条件的为止。[0072]	一般情况下，所取的最大字节数为25个。[0073]	(14)若程序15用户选择的文件加载成功，则利用对应的应用程序加载用户所选文件内容(程序17)，并给用户选择的文件添加程序9中识别出来的文件类型扩展名，便于下次用户进行文件操作时能快速识别并打开该文件。（程序18)[0074]	以上所述仅是本发明的优选实现方式，应当指出，对于本技术领域的普通技术人员来说，在不脱离本发明技术原理的前提下，还可以做出若干改进和润饰，这些改进和润饰也应视为本发明的保护范围。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN1794221A?cl=zh">CN1794221A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2005年12月12日</td><td class="patent-data-table-td patent-date-value">2006年6月28日</td><td class="patent-data-table-td ">无锡永中科技有限公司</td><td class="patent-data-table-td ">一种电子表格中插入/打开应用文件的方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101271419A?cl=zh">CN101271419A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2008年4月3日</td><td class="patent-data-table-td patent-date-value">2008年9月24日</td><td class="patent-data-table-td ">华为技术有限公司</td><td class="patent-data-table-td ">随机存储器失效的检测处理方法、装置和系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102663067A?cl=zh">CN102663067A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年3月31日</td><td class="patent-data-table-td patent-date-value">2012年9月12日</td><td class="patent-data-table-td ">中标软件有限公司</td><td class="patent-data-table-td ">一种基于Linux操作系统终端的文件打开方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2001053938A1?cl=zh">WO2001053938A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2001年1月23日</td><td class="patent-data-table-td patent-date-value">2001年7月26日</td><td class="patent-data-table-td ">Altiris, Inc.</td><td class="patent-data-table-td ">Method and system for describing and extracting application information</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=8zToBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0009445000">G06F9/445</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=8zToBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0009440000">G06F9/44</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年3月20日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年4月17日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2016年2月3日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/87a72a71ed0a4c3b2abf/CN102981830A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E5%8F%AF%E9%85%8D%E7%BD%AE%E7%9A%84%E6%96%87%E4%BB%B6%E5%BF%AB%E9%80%9F%E8%AF%86%E5%88%AB%E5%92%8C.pdf?id=8zToBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U3eGuZJDxgJTEMZEgopG047zMD1eA"},"sample_url":"https://www.google.com/patents/reader?id=8zToBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>