<!DOCTYPE html><html><head><title>专利 CN102447642A - 一种基于im客户端实现消息图片管理的方法和装置 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种基于im客户端实现消息图片管理的方法和装置"><meta name="DC.contributor" content="张丽" scheme="inventor"><meta name="DC.contributor" content="腾讯科技（深圳）有限公司" scheme="assignee"><meta name="DC.date" content="2010-9-30" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种基于即时通讯(IM)客户端实现消息图片管理的方法和装置，方法包括：当IM的用户需要下载图片时，IM客户端的下载组件根据所需下载图片的统一资源定位符(URL)和类型查询本地保存路径中是否有所需下载图片，如果有，则直接返回所需下载图片在本地保存的路径；如果没有，则执行相应图片的下载，并将下载的图片保存到本地。通过本发明，快速有效的实现类似微博这种大消息量应用中的图片上传和下载管理与展现。"><meta name="DC.date" content="2012-5-9"><meta name="DC.relation" content="CN:101221580:A" scheme="references"><meta name="DC.relation" content="CN:101246476:A" scheme="references"><meta name="DC.relation" content="CN:101458693:A" scheme="references"><meta name="DC.relation" content="CN:101465953:A" scheme="references"><meta name="DC.relation" content="US:7054917" scheme="references"><meta name="citation_reference" content="永辉: &quot;《哈娜现身 腾讯微薄Android手机客户端试用》&quot;, 《HTTP://NEWS.MYDRIVERS.COM/1/163/163575_ALL.HTM》, 7 May 2010 (2010-05-07)"><meta name="citation_patent_publication_number" content="CN:102447642:A"><meta name="citation_patent_application_number" content="CN:201010503345"><link rel="canonical" href="https://www.google.com/patents/CN102447642A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102447642A?cl=zh"/><meta name="title" content="专利 CN102447642A - 一种基于im客户端实现消息图片管理的方法和装置"/><meta name="description" content="本发明公开了一种基于即时通讯(IM)客户端实现消息图片管理的方法和装置，方法包括：当IM的用户需要下载图片时，IM客户端的下载组件根据所需下载图片的统一资源定位符(URL)和类型查询本地保存路径中是否有所需下载图片，如果有，则直接返回所需下载图片在本地保存的路径；如果没有，则执行相应图片的下载，并将下载的图片保存到本地。通过本发明，快速有效的实现类似微博这种大消息量应用中的图片上传和下载管理与展现。"/><meta property="og:title" content="专利 CN102447642A - 一种基于im客户端实现消息图片管理的方法和装置"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102447642A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102447642A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=GVdwBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102447642A&amp;usg=AFQjCNF87tXYKhJlDA2PEwW37tV-wsyOqQ" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/1f093b8719428e1ec149/CN102447642A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/1f093b8719428e1ec149/CN102447642A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102447642A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102447642A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102447642A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102447642B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102447642A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种基于即时通讯(IM)客户端实现消息图片管理的方法和装置，方法包括：当IM的用户需要下载图片时，IM客户端的下载组件根据所需下载图片的统一资源定位符(URL)和类型查询本地保存路径中是否有所需下载图片， ...</span><span itemprop="url">https://www.google.com/patents/CN102447642A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102447642A - 一种基于im客户端实现消息图片管理的方法和装置</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102447642A - 一种基于im客户端实现消息图片管理的方法和装置" title="专利 CN102447642A - 一种基于im客户端实现消息图片管理的方法和装置"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102447642 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201010503345</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2012年5月9日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2010年9月30日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2010年9月30日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102447642B?hl=zh-CN&amp;cl=zh">CN102447642B</a>, </span><span class="patent-bibdata-value"><a href="/patents/WO2012041177A1?hl=zh-CN&amp;cl=zh">WO2012041177A1</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201010503345.0, </span><span class="patent-bibdata-value">CN 102447642 A, </span><span class="patent-bibdata-value">CN 102447642A, </span><span class="patent-bibdata-value">CN 201010503345, </span><span class="patent-bibdata-value">CN-A-102447642, </span><span class="patent-bibdata-value">CN102447642 A, </span><span class="patent-bibdata-value">CN102447642A, </span><span class="patent-bibdata-value">CN201010503345, </span><span class="patent-bibdata-value">CN201010503345.0</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BC%A0%E4%B8%BD%22">张丽</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E8%85%BE%E8%AE%AF%E7%A7%91%E6%8A%80%EF%BC%88%E6%B7%B1%E5%9C%B3%EF%BC%89%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">腾讯科技（深圳）有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102447642A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102447642A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102447642A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (5),</span> <span class="patent-bibdata-value"><a href="#npl-citations">非专利引用</a> (1),</span> <span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (2),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (6),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=GVdwBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201010503345&amp;usg=AFQjCNEogGtTHAyD8hCSRh3c3JijCmjf3w"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=GVdwBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102447642A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNG8LXRLphyaP-RwpgYsYY9YyhiH9w"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT112407882" lang="ZH" load-source="patent-office">一种基于im客户端实现消息图片管理的方法和装置</invention-title>
      </span><br><span class="patent-number">CN 102447642 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA95912856" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种基于即时通讯(IM)客户端实现消息图片管理的方法和装置，方法包括：当IM的用户需要下载图片时，IM客户端的下载组件根据所需下载图片的统一资源定位符(URL)和类型查询本地保存路径中是否有所需下载图片，如果有，则直接返回所需下载图片在本地保存的路径；如果没有，则执行相应图片的下载，并将下载的图片保存到本地。通过本发明，快速有效的实现类似微博这种大消息量应用中的图片上传和下载管理与展现。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(14)</span></span></div><div class="patent-text"><div mxw-id="PCLM41113866" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种基于即时通讯（IM)客户端实现消息图片管理的方法，其特征在于，该方法包括：当IM的用户需要下载图片时，IM客户端的下载组件根据所需下载图片的统一资源定位符（URL)和类型查询本地保存路径中是否有所需下载图片，如果有，则直接返回所需下载图片在本地保存的路径；如果没有，则执行相应图片的下载，并将下载的图片保存到本地。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述基于IM客户端实现消息图片管理的方法，其特征在于，所述当 IM的用户需要下载图片时，IM客户端的下载组件根据所需下载图片的URL和类型查询本地保存路径中是否有所需下载图片，具体为：当用户触发所需下载图片的缩略图或链接时，根据所述缩略图或链接获取所需下载图片的URL和类型；将获取到的URL和类型与所述IM客户端本地保存路径中的图片的URL和类型进行匹配，如果匹配到相同的URL和类型，则判断所述本地保存路径中有所需下载图片；否则，判断所述本地保存路径中没有所需下载图片。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求1或2所述基于IM客户端实现消息图片管理的方法，其特征在于，该方法进一步包括：在下载成功时，将以URL和类型命名的图片保存到IM客户端本地。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求1或2所述基于IM客户端实现消息图片管理的方法，其特征在于，该方法进一步包括：在下载失败时，判断对应图片是否为第一次下载失败，如果是第一次下载失败，则将对应图片的状态修改为第一次下载失败并重新下载；否则，结束下载。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求1所述基于IM客户端实现消息图片管理的方法，其特征在于，该方法进一步包括：当IM的用户需要上传图片时，IM客户端的上传组件通过对批量上传接口的调用，将等待批量上传的图片加入等待上传队列中，并通过对等待上传队列的扫描，对所述等待上传队列中的图片进行上传。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求5所述基于IM客户端实现消息图片管理的方法，其特征在于，在上传完成后该方法进一步包括：解析生成的上传结果文件，如果解析显示上传成功，则进一步解析得到所上传图片的 URL和类型；根据解析得到URL和类型命名图片并保存到所述IM客户端本地。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求5或6所述基于IM客户端实现消息图片管理的方法，其特征在于，该方法进一步包括：所述图片的上传还需调用底层组件，负责创建上传的传输控制协议（TCP)通道，并建立连接；所述IM客户端采用底层组件的管理池，负责多个底层组件的提供以及管理多个底层组件的状态。</div>
    </div>
    </div> <div class="claim"> <div num="8" class="claim">
      <div class="claim-text">8.	一种基于IM客户端实现消息图片管理的装置，其特征在于，该装置包括：下载组件， 用于在IM的用户需要下载图片时，根据所需下载图片的URL和类型查询本地保存路径中是否有所需下载图片，如果有，则直接返回所需下载图片在本地保存的路径；如果没有，则执行相应图片的下载，并将下载的图片保存到本地。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.根据权利要求8所述基于IM客户端实现消息图片管理的装置，其特征在于，所述下载组件进一步用于，当用户触发所需下载图片的缩略图或链接时，根据所述缩略图或链接获取所需下载图片的URL和类型；将获取到的URL和类型与所述IM客户端本地保存路径中的图片的URL和类型进行匹配，如果匹配到相同的URL和类型，则判断所述本地保存路径中有所需下载图片；否则，判断所述本地保存路径中没有所需下载图片。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.根据权利要求8或9所述基于IM客户端实现消息图片管理的装置，其特征在于，所述下载组件进一步用于，在下载成功时，将以URL和类型命名的图片保存到IM客户端本地。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="11" class="claim">
      <div class="claim-text">11.根据权利要求8或9所述基于IM客户端实现消息图片管理的装置，其特征在于，所述下载组件进一步用于，在下载失败时，判断对应图片是否为第一次下载失败，如果是第一次下载失败，则将对应图片的状态修改为第一次下载失败并重新下载；否则，结束下载。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="12" class="claim">
      <div class="claim-text">12.根据权利要求8所述基于IM客户端实现消息图片管理的装置，其特征在于，该装置还包括：上传组件，用于在IM的用户需要上传图片时，通过对批量上传接口的调用，将等待批量上传的图片加入等待上传队列中，并通过对等待上传队列的扫描，对所述等待上传队列中的图片进行上传。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="13" class="claim">
      <div class="claim-text">13.根据权利要求12所述基于IM客户端实现消息图片管理的装置，其特征在于，所述上传组件进一步用于，在上传完成后，解析生成的上传结果文件，在解析显示上传成功时， 进一步解析得到所上传图片的URL和类型，并根据解析得到URL和类型命名图片并保存到所述IM客户端本地。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="14" class="claim">
      <div class="claim-text">14.根据权利要求12或13所述基于IM客户端实现消息图片管理的装置，其特征在于， 该装置还包括底层组件，用于负责创建上传的TCP通道，并建立连接；底层组件的管理池，负责多个底层组件的提供以及管理多个底层组件的状态。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES46575419" lang="ZH" load-source="patent-office" class="description">
    <p>一种基于IM客户端实现消息图片管理的方法和装置</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及计算机技术领域，尤其涉及一种基于即时通讯（IM)客户端实现消息图片管理的方法和装置。</p>
    <p>背景技术</p>
    <p>[0002]	网络即时通讯（IM，Instant Messaging)工具发展至今，已经被众多的网民所接受，并已成为用户必不可少的软件工具，IM不但在平时的休闲娱乐中，而且在用户的工作中得到广泛的使用。因此，在实际应用过程中，用户对IM的易用性、稳定性、安全性等方面提出了较高的要求。在IM软件中，主要实现的是一对一的好友单独聊天模式、以及一对多的群或者讨论组的消息聊天模式。随着互联网应用的不断发展，类似推特（twitter)的微博应用作为一种扩展IM消息传播机制的新工具也不断发展壮大，这类微型博客使用户通过 140个字左右的信息量来表达自己，这种方式可以非常快速的进行传播，实现用户消息聊天模式从一对一、一对多到一对无穷的跨越；这种一对无穷的消息聊天模式也意味着一个用户可以对无穷多个用户进行消息的传播，同时一个用户同时也可以收取万级以上的用户消息，从而，这也就对大用户量的应用提出了新的要求。</p>
    <p>[0003]	微博作为一种扩展IM消息传播机制的新应用得到了快速的发展，但是原有IM工具中的好友数量（最多几百个）与微博的收听用户量显然不在同一个等级上（万级以上）； 由于微博收听的用户量非常巨大，这就造成IM客户端收到微博消息的消息量会非常大，然而，目前在IM客户端中缺少一种能够针对这种大消息量的图片进行上传以及下载拉取管理的技术方案，从而无法快速有效的实现类似微博这种大消息量应用中的图片上传和下载管理与展现。</p>
    <p>发明内容</p>
    <p>[0004]	有鉴于此，本发明的主要目的在于提供一种基于IM客户端实现消息图片管理的方法和装置，以快速有效的实现类似微博这种大消息量应用中的图片上传和下载管理与展现。</p>
    <p>[0005]	为达到上述目的，本发明的技术方案是这样实现的：</p>
    <p>[0006]	本发明提供了一种基于即时通讯（IM)客户端实现消息图片管理的方法，该方法包括：</p>
    <p>[0007]	当IM的用户需要下载图片时，IM客户端的下载组件根据所需下载图片的统一资源定位符（URL)和类型查询本地保存路径中是否有所需下载图片，如果有，则直接返回所需下载图片在本地保存的路径；如果没有，则执行相应图片的下载，并将下载的图片保存到本地。</p>
    <p>[0008]	所述当IM的用户需要下载图片时，IM客户端的下载组件根据所需下载图片的URL 和类型查询本地保存路径中是否有所需下载图片，具体为：</p>
    <p>[0009]	当用户触发所需下载图片的缩略图或链接时，根据所述缩略图或链接获取所需下载图片的URL和类型；</p>
    <p>[0010]	将获取到的URL和类型与所述IM客户端本地保存路径中的图片的URL和类型进行匹配，如果匹配到相同的URL和类型，则判断所述本地保存路径中有所需下载图片；否则，判断所述本地保存路径中没有所需下载图片。</p>
    <p>[0011]	该方法进一步包括：</p>
    <p>[0012]	在下载成功时，将以URL和类型命名的图片保存到IM客户端本地。</p>
    <p>[0013]	该方法进一步包括：</p>
    <p>[0014]	在下载失败时，判断对应图片是否为第一次下载失败，如果是第一次下载失败，则将对应图片的状态修改为第一次下载失败并重新下载；否则，结束下载。</p>
    <p>[0015]	该方法进一步包括：</p>
    <p>[0016]	当IM的用户需要上传图片时，IM客户端的上传组件通过对批量上传接口的调用， 将等待批量上传的图片加入等待上传队列中，并通过对等待上传队列的扫描，对所述等待上传队列中的图片进行上传。</p>
    <p>[0017]	在上传完成后该方法进一步包括：</p>
    <p>[0018]	解析生成的上传结果文件，如果解析显示上传成功，则进一步解析得到所上传图片的URL和类型；</p>
    <p>[0019]	根据解析得到URL和类型命名图片并保存到所述IM客户端本地。</p>
    <p>[0020]	该方法进一步包括：</p>
    <p>[0021]	所述图片的上传还需调用底层组件，负责创建上传的传输控制协议（TCP)通道， 并建立连接；</p>
    <p>[0022]	所述IM客户端采用底层组件的管理池，负责多个底层组件的提供以及管理多个底层组件的状态。</p>
    <p>[0023]	本发明还提供了一种基于IM客户端实现消息图片管理的装置，该装置包括：下载组件，用于在IM的用户需要下载图片时，根据所需下载图片的URL和类型查询本地保存路径中是否有所需下载图片，如果有，则直接返回所需下载图片在本地保存的路径；如果没有，则执行相应图片的下载，并将下载的图片保存到本地。</p>
    <p>[0024]	所述下载组件进一步用于，当用户触发所需下载图片的缩略图或链接时，根据所述缩略图或链接获取所需下载图片的URL和类型；将获取到的URL和类型与所述IM客户端本地保存路径中的图片的URL和类型进行匹配，如果匹配到相同的URL和类型，则判断所述本地保存路径中有所需下载图片；否则，判断所述本地保存路径中没有所需下载图片。</p>
    <p>[0025]	所述下载组件进一步用于，在下载成功时，将以URL和类型命名的图片保存到IM 客户端本地。</p>
    <p>[0026]	所述下载组件进一步用于，在下载失败时，判断对应图片是否为第一次下载失败， 如果是第一次下载失败，则将对应图片的状态修改为第一次下载失败并重新下载；否则，结束下载。</p>
    <p>[0027]	该装置还包括：上传组件，用于在IM的用户需要上传图片时，通过对批量上传接口的调用，将等待批量上传的图片加入等待上传队列中，并通过对等待上传队列的扫描，对所述等待上传队列中的图片进行上传。</p>
    <p>[0028]	所述上传组件进一步用于，在上传完成后，解析生成的上传结果文件，在解析显示上传成功时，进一步解析得到所上传图片的URL和类型，并根据解析得到URL和类型命名图片并保存到所述IM客户端本地。</p>
    <p>[0029]	该装置还包括底层组件，用于负责创建上传的TCP通道，并建立连接；</p>
    <p>[0030]	底层组件的管理池，负责多个底层组件的提供以及管理多个底层组件的状态。</p>
    <p>[0031]	本发明所提供的一种基于IM客户端实现消息图片管理的方法和装置，在微博应用中由于消息传播的特点以及泛关系链的用户模型，可以非常方便的实现大消息量中图片信息的上传与下载拉取管理；另外，本发明通过URL和图片的类型来唯一确认图片，并将已下载过的图片用URL和类型命名后保存到IM客户端本地，这可以有效避免重复下载。</p>
    <p>附图说明</p>
    <p>[0032]	图1为本发明中微博消息图片的上传和下载组件的结构示意图；</p>
    <p>[0033]	图2为本发明实施例中基于IM客户端实现微博消息图片上传的方法流程图一；</p>
    <p>[0034]	图3为本发明实施例中基于IM客户端实现微博消息图片上传的方法流程图二 ；</p>
    <p>[0035]	图4为本发明实施例中基于IM客户端实现微博消息图片下载的方法流程图。</p>
    <p>具体实施方式</p>
    <p>[0036]	下面结合附图和具体实施例对本发明的技术方案进一步详细阐述。</p>
    <p>[0037]	本发明基于IM客户端，为快速有效的实现类似微博这种大消息量应用中的图片上传和下载管理与展现。在IM客户端中，图片上传和下载作为一个全局服务Service)模型提供给上层调用，IM客户端对外根据具体的应用提供图片上传和下载功能，并封装了上传下载的细节。</p>
    <p>[0038]	对于图片上传，根据类似微博这种大消息量应用的具体应用场景且考虑以后的扩展性，IM客户端对外提供了批量上传的接口，即IM客户端的外部可以调用一次该接口上传多张图片；IM客户端的上传下载组件将这一批要上传的图片作为一个任务去完成，并在上传完毕后通知IM客户端的应用层已经上传完毕。</p>
    <p>[0039]	对于图片下载，IM客户端对外提供根据统一资源定位符（URI^UniversalResource Locator)下载单张图片的接口。考虑到由于类似微博这种大消息量应用的图片的数量巨大，为了减少对下载的压力和提高IM客户端显示图片的性能，下载的图片会保存到IM客户端的本地；如果下次再有下载该图片的请求时，则可以直接返回IM客户端本地保存的图片。</p>
    <p>[0040]	如图1所示，为IM客户端的微博消息的上传下载组件的结构示意图，IM客户端的上传下载组件对外提供接口 ITXWBloglmageMgr，该接口中提供批量上传图片 (UploadImageList)、取消上传（CancelUploadImageList)、获取图片路径(GetImagePath) 和取消下载（CancelDownloadImage)这四个模块；其中，模块UploadlmageList、 CancelUploadImageList用于实现微博消息的图片上传功能；模块Getlmagel^ath、 CancelDownloadImage用于实现微博消息的图片下载功能。该ITXWBlogImageMgr接口由 CWBlogImageMgr (CWBlogImageMgr 作为一个类）来实现，CWBlogImageMgr 的内部包含了以下模块：</p>
    <p>[0041]	UploadImageListλ CancelUploadImageList、GetlmagePath、QueryImagePath 禾口CancelDownloadImage,</p>
    <p>[0042]	其中，QueryImagePath为查询本地路径的模块。</p>
    <p>[0043]	CffBlogImageMgr 的内部聚合了 CffBlogImageUpload 对象禾口 CffBlogImageDownload对象，上传功能由CWBloglmageUpload对象来实现，下载功能由 CWBloglmageDownload对象来实现。其中，CWBloglmageUpload对象中包含以下模块： UploadImageList&gt; CancelUpIoadImageList&gt; OnUploadComplete、Up 1 oadffaitingQueue&gt; InternelUploadlmage、GetlnfoFromResultFile 禾口 CheckNeedCallback,</p>
    <p>[0044]	其中，模块OnUploadComplete用于上传完成的处理；模块UploadWaitingQueue 用于选取等待队列中的图片上传；模块hternelUploadlmage用于上传图片；模块 GethfoFromResultFile用于上传完毕解析服务器返回的结果文件，该结果文件中包含所上传图片的URL;模块CheckNeedCallback用于检查一批图片是否都上传，上传后需要告知用户这批图片已上传完毕。</p>
    <p>[0045]	CffBlogImageDownload 对象中包含以下模块:DownloadImage&gt; OnDown1oadComp1ete&gt;DoDownload 禾口 CancelDownloadImage,</p>
    <p>[0046]	其中，模块Downloadlmage用于用户调用该接口下载图片，将任务加入到下载的等待队列中；模块OnDownloadComplete用于下载完成的处理；模块DoDownload用于下载操作；模块CancelDownloadlmage用于取消下载的操作。</p>
    <p>[0047]	此外，WBlogImageHelper是图片上传下载的一个帮助类，WBlogImageHelper 中提供了图片上传下载相关的帮助模块，主要包括KetlmageHash、GetImageSize, AddImagePostfiχ、GetFullUrl、GetUr1AndSiζe、GetFileNameFromUrl 禾口 Gtelmage&amp;ivel^th。其中，模块GetImageHash用于获取图片散列的操作；模块 GetlmageSize用于获取图片大小的操作；模块AddlmagePostfix用于添加图片后缀的操作；模块GetFulltol用于获取URL的操作；模块GettolAndSize用于获取URL和图片大小的操作；模块GetFileNameFromUrl用于从URL获取文件名的操作；模块GteImageSavePath 用于获取图片保存路径的操作。</p>
    <p>[0048]	需要说明的是，上述图1所示的上传下载组件对于类似微博这种大消息量的应用，都是适用的。基于上述图1所示IM客户端的上传下载组件，本发明所实现的消息图片管理的方法，包括图片的上传和下载管理两个方面，上传管理部分由上传组件来完成，下载管理部分由下载组件来完成；当然，本发明中也可以将上传组件和下载组件合设，组成上传下载组件，实现上传和下载管理。以微博消息的图片管理为例，其中，微博消息图片的上传流程如图2所示，主要包括以下步骤：</p>
    <p>[0049]	步骤201，IM客户端调用批量上传接口，即调用接口 ITXWBloglmageMgr中的 UploadImageList 模块。</p>
    <p>[0050]	当IM的用户需要利用IM客户端上传图片至微博中时，通过手动操作触发IM客户端调用批量上传接口，即接口 ITXWBloglmageMgr中的UploadImageList模块被调用。</p>
    <p>[0051]	步骤202，IM客户端向调用的批量上传接口中加入任务队列m_mapTaSk_C00kie_ Array0该任务即为图片批量上传的任务。</p>
    <p>[0052]	步骤203，IM客户端初始化该任务（即图片批量上传任务)完成数量m_mapTaSk_ Cookie_CompleteNum。该 m_mapTask_Cookie_CompleteNum 用于限制图片批量上传的数量</p>
    <p>7上限。</p>
    <p>[0053]	步骤204，IM客户端对待上传的图片进行压缩和格式转换处理。</p>
    <p>[0054]	步骤205，IM客户端将需要批量上传的每一个图片加入等待上传队列m_ mapffaiting_Cookie_tagImage 中。</p>
    <p>[0055]	步骤206，IM客户端将回调指针m_SinkMgr_UploadImage加入等待上传队列中。 加入回调指针的目的是，当批量上传完成后，通过该回调指针通知应用层，进而让用户获知批量上传的操作完成。</p>
    <p>[0056]	步骤207，触发UploadWaitingQueue模块开始执行图片上传的操作。</p>
    <p>[0057]	UploadWaitingQueue模块被触发后，扫描等待上传队列，每次调用队首的一个图片进行上传。该UploadWaitingQueue模块的调用时机可以是图片加入等待上传队列后、调用一个图片完成后或上传一个图片完成后。</p>
    <p>[0058]	此外，图片的上传还需调用底层组件CTXHttpDownload，由底层组件 CTXHttpDownload 负责创建上传的传输控制协议(TCP, Transmission ControlProtocol) 通道、建立连接、发送图片等处理。</p>
    <p>[0059]	进一步的，为了保证上传效率，本发明还可以采用一个CTXHttpDownload的管理池 CHttpUploadPool，负责提供 CTXHttpDownload 对象及管理 CTXHttpDownload 对象的状态。较佳的，CTXHttpDownload的管理池最大管理5个CTXHttpDownload对象，以及可以支持5张图片的同时上传。</p>
    <p>[0060]	在上传完成后，上传组件会返回一个JSON(JavaScript Object Notation)格式的文件（作为上传结果文件），文件中包含批量上传的结果信息JSON是一种轻量级的数据交换格式。IM客户端通过解析该结果信息，可以得到批量上传成功或失败的信息，如果上传结果为成功，则会进一步解析得到所上传图片的URL;也就是说，上传成功时，上述结果信息中还包含有所上传图片的URL。</p>
    <p>[0061]	下面再结合图3所示的具体实例，对微博消息图片的上传流程做进一步的详细阐述，如图3所示，主要包括以下步骤：</p>
    <p>[0062]步骤	301，IM 客户端从 ChttpUploadPool 中获取 CTXHttpDownload 对象。</p>
    <p>[0063]	步骤302，取等待上传队列m_mapWaiting_Cookie_tagImage中的第一个等待上传项，该上传项中即包含m_mapWaiting_Cookie_tagImage中第一个等待上传的图片。</p>
    <p>[0064]	步骤303，按上传图片的超文本传输协议(HTTP, HyperText TransferProtocol) 组装上传数据。</p>
    <p>[0065]	步骤304，调用CTXHttpDownload对象的接口 UploadFormData上传图片，调用失败时执行步骤309，调用成功时执行步骤305。</p>
    <p>[0066]	步骤305，该任务完成数量m_mapTask_Cookie_CompleteNum加1，在上传成功时执行步骤306，上传错误时执行步骤309。</p>
    <p>[0067]	步骤306，解析上传结果文件，如果结果显示为成功，则执行步骤307 ；如果结果显示为失败，则执行步骤309。</p>
    <p>[0068]	步骤307，解析上传结果文件得到所上传图片的URL和类型。</p>
    <p>[0069]	步骤308，根据解析得到的URL和类型命名图片并保存到IM客户端本地。</p>
    <p>[0070]	步骤309，检查该批量任务是否已完成，如果完成，则通过回调指针!11_3^110%1~_</p>
    <p>8UploadImage通知应用层；如果未完成，则下载下一个UploadWaitingQueue，并返回步骤 301继续执行。</p>
    <p>[0071]	在实际应用中，微博的底层并没有直接暴露下载接口给应用层，而是提供 GetImageI^th接口，即查询本地，如果图片存在，则返回成功并带上图片的路径；如果本地不存在，则返回失败且启动下载，下载完成后通知应用层。</p>
    <p>[0072]	另外，图片是根据其URL和图片的类型来命名的，那么在根据URL和类型查询图片时，可以根据该URL和类型得到图片的文件名，从而在本地的微博图片保存路径查询该图片是否存在，例如：微博图片的保存路径为Util: :Dir: ：UserData: ：GteImageDir() +L "WBl og\\，，。</p>
    <p>[0073]	基于此，本发明实施例所提供的微博消息图片下载流程如图4所示，主要包括以下步骤：</p>
    <p>[0074]	步骤401，IM客户端调用GetImageI^ath模块。</p>
    <p>[0075]	步骤402，根据所需下载图片的URL和类型查询本地保存路径中是否有该图片，如果有，则向应用层返回所查询到的图片在本地保存的路径；如果没有，则执行步骤403。</p>
    <p>[0076]	微博消息中的图片通常是以缩略图或链接的形式显示的，用户要下载对应的图片，需要触发（如鼠标点击）该缩略图或链接。</p>
    <p>[0077]	当用户触发所需下载图片的缩略图或链接时，GetImageI^th模块根据所述缩略图或链接获取所需下载图片的URL和类型；将获取到的URL和类型与IM客户端本地保存路径中的图片的URL和类型进行匹配，如果匹配到相同的URL和类型，则判断本地保存路径中有所需下载图片；否则，判断本地保存路径中没有所需下载图片。</p>
    <p>[0078]步骤	403，调用 DownloadImage 模块。</p>
    <p>[0079]	步骤404，将下载任务的Downloadlmage模块加入下载map中，并设置下载状态为等待。</p>
    <p>[0080]	其中，下载map是内存中的一个数据结构，其保存下载任务的相关信息。</p>
    <p>[0081]	步骤405，触发DoDownload模块进行下载。</p>
    <p>[0082]	步骤406，在等待队列中取一个等待的或第一次下载失败的下载任务。</p>
    <p>[0083]	步骤407，下载完成，如果下载成功，则执行步骤408 ；如果下载失败，则执行步骤 411。</p>
    <p>[0084]	步骤408，根据所下载图片的URL和类型生成下载文件名。</p>
    <p>[0085]	步骤409，拷贝下载文件到Image文件中，删除原临时下载文件。</p>
    <p>[0086]	由于步骤407中下载成功的图片是首先存储到临时下载文件目录中的，因此，步骤409的操作即是将该临时下载文件拷贝到步骤408中的下载文件名所对应的Image文件夹中，而原临时下载文件则需要相应删除。</p>
    <p>[0087]	步骤410，抛下载完成事件，执行完后转到步骤412。</p>
    <p>[0088]	下载完成后，DoDownload模块将下载完成事件抛给应用层，通知用户该图片的下载完成。</p>
    <p>[0089]	步骤411，在下载失败时，如果判断是第一次下载失败，则修改状态后返回步骤 405 ；如果是第二次下载失败，则执行步骤412。</p>
    <p>[0090]	在下载失败时，如果判断是第一次下载失败，则将该图片的下载状态修改为第一次下载失败，从而该图片的状态即从最开始的等待状态，到正在下载状态，再到了现在的第一次下载状态。</p>
    <p>[0091]	步骤412，将该下载任务从下载map移出，如果还有其他的下载任务，则返回步骤 405继续执行；如果没有下载任务，则结束整个流程。</p>
    <p>[0092]	对应上述基于IM客户端实现微博消息图片管理的方法，本发明还提供了一种基于IM客户端实现微博消息图片管理的装置，适用于IM客户端中，该装置包括：上传组件和下载组件。</p>
    <p>[0093]	其中，上传组件用于在IM的用户需要上传图片时，通过对批量上传接口的调用， 将等待批量上传的图片加入等待上传队列中，并通过对等待上传队列的扫描，对等待上传队列中的图片进行上传。</p>
    <p>[0094]	下载组件，用于在IM的用户需要下载图片时，根据所需下载图片的URL和类型查询本地保存路径中是否有所需下载图片，如果有，则直接返回所需下载图片在本地保存的路径；如果没有，则执行相应图片的下载，并将下载的图片保存到本地。具体的：当用户触发所需下载图片的缩略图或链接时，根据所述缩略图或链接获取所需下载图片的URL和类型；将获取到的URL和类型与IM客户端本地保存路径中的图片的URL和类型进行匹配，如果匹配到相同的URL和类型，则判断本地保存路径中有所需下载图片；否则，判断本地保存路径中没有所需下载图片。</p>
    <p>[0095]	进一步的，上传组件还用于在上传完成后，解析生成的上传结果文件，在解析显示上传成功时，进一步解析得到所上传图片的URL和类型，并根据解析得到URL和类型命名图片并保存到IM客户端本地。</p>
    <p>[0096]	进一步的，该装置还包括底层组件，用于负责创建上传的TCP通道，并建立连接； 底层组件的管理池，负责多个底层组件的提供以及管理多个底层组件的状态。</p>
    <p>[0097]	进一步的，下载组件还用于，在下载成功时，将以URL和类型命名的图片保存到IM 客户端本地。在下载失败时，判断对应图片是否为第一次下载失败，如果是第一次下载失败，则将对应图片的状态修改为第一次下载失败并重新下载；否则，结束下载。</p>
    <p>[0098]	综上所述，本发明一方面在微博应用中由于消息传播的特点以及泛关系链的用户模型，可以非常方便的实现大消息量中图片信息的上传与下载拉取管理；而且，本发明通过 URL和图片的类型来唯一确认图片，并将已下载过的图片用URL和类型命名后保存到IM客户端本地，这可以有效避免重复下载。另一方面也可以非常方便的将这类模型复用在类似大消息量中图片信息的管理产品中，实现消息图片信息的有效管理和展现。本发明基于IM 客户端实现的图片管理方法和装置，不仅限于在微博消息中的应用，对于类似微博这种大消息量的应用都是适用的。</p>
    <p>[0099]	以上所述，仅为本发明的较佳实施例而已，并非用于限定本发明的保护范围。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101221580A?cl=zh">CN101221580A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2008年1月3日</td><td class="patent-data-table-td patent-date-value">2008年7月16日</td><td class="patent-data-table-td ">中兴通讯股份有限公司</td><td class="patent-data-table-td ">一种提高嵌入式浏览器页面显示性能的方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101246476A?cl=zh">CN101246476A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2007年2月15日</td><td class="patent-data-table-td patent-date-value">2008年8月20日</td><td class="patent-data-table-td ">北京腾瑞万里信息技术有限公司</td><td class="patent-data-table-td ">地图数据的下载方法及下载装置和服务器</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101458693A?cl=zh">CN101458693A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2007年12月13日</td><td class="patent-data-table-td patent-date-value">2009年6月17日</td><td class="patent-data-table-td ">鸿富锦精密工业（深圳）有限公司;鸿海精密工业股份有限公司</td><td class="patent-data-table-td ">网页下载解析系统及方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101465953A?cl=zh">CN101465953A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年1月15日</td><td class="patent-data-table-td patent-date-value">2009年6月24日</td><td class="patent-data-table-td ">深圳市茁壮网络技术有限公司</td><td class="patent-data-table-td ">图片显示方法和数字电视图片浏览系统以及电视机顶盒</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US7054917">US7054917</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2002年8月7日</td><td class="patent-data-table-td patent-date-value">2006年5月30日</td><td class="patent-data-table-td ">Propel Software Corporation</td><td class="patent-data-table-td ">Method for accelerating delivery of content in a computer network</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="npl-citations"></a><div class="patent-section-header"><span class="patent-section-title">非专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th colspan="3"class="patent-data-table-th">参考文献</th></tr></thead><tr><td class="patent-data-table-td ">1</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">永辉: "<a href='http://scholar.google.com/scholar?q="%E3%80%8A%E5%93%88%E5%A8%9C%E7%8E%B0%E8%BA%AB+%E8%85%BE%E8%AE%AF%E5%BE%AE%E8%96%84Android%E6%89%8B%E6%9C%BA%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AF%95%E7%94%A8%E3%80%8B"'>《哈娜现身 腾讯微薄Android手机客户端试用》</a>", 《HTTP://NEWS.MYDRIVERS.COM/1/163/163575_ALL.HTM》, 7 May 2010 (2010-05-07)</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102760070A?cl=zh">CN102760070A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年6月8日</td><td class="patent-data-table-td patent-date-value">2012年10月31日</td><td class="patent-data-table-td ">华为终端有限公司</td><td class="patent-data-table-td ">一种对下载文件的保存方法及移动终端</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103390012A?cl=zh">CN103390012A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年9月13日</td><td class="patent-data-table-td patent-date-value">2013年11月13日</td><td class="patent-data-table-td ">爱乐活（北京）科技有限公司</td><td class="patent-data-table-td ">一种基于访问的展示图片生成方法和装置</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=GVdwBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0012580000">H04L12/58</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=GVdwBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029080000">H04L29/08</a></span></td></tr><tr><td class="patent-data-table-td "> 合作分类</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=GVdwBwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=H04L12/581">H04L12/581</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=GVdwBwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=H04L51/04">H04L51/04</a></span></td></tr><tr><td class="patent-data-table-td "> 欧洲专利分类号</td><td class="patent-data-table-td "><span class="nested-value">H04L51/04</span>, <span class="nested-value">H04L12/58B</span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2012年5月9日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年6月27日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2015年4月15日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/1f093b8719428e1ec149/CN102447642A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8Eim%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E5%9B%BE.pdf?id=GVdwBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U3vzhDI_bHWiEirmEtPGgeTOyIUyQ"},"sample_url":"https://www.google.com/patents/reader?id=GVdwBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>