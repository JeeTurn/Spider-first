<!DOCTYPE html><html><head><title>专利 CN103440289A - 基于MapReduce的网页不兼容标签并行查找方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="基于MapReduce的网页不兼容标签并行查找方法"><meta name="DC.contributor" content="李睿" scheme="inventor"><meta name="DC.contributor" content="马世龙" scheme="inventor"><meta name="DC.contributor" content="北京航空航天大学" scheme="assignee"><meta name="DC.date" content="2013-8-16" scheme="dateSubmitted"><meta name="DC.description" content="本发明提供了一种基于MapReduce的网页不兼容标签并行查找方法，用于对不兼容标签快速定位。本方法将要扫描的代码分为n块，在m个计算机上使用Map函数并行查找代码块中的不兼容标签，所使用的不兼容标签库为Trie结构组织；当查找到不兼容标签时，记录标签所在的行数、列数和代码块号；最后通过Reduce操作对所记录的结果进行汇总处理，将中所有不兼容标签的位置返回给用户。本方法可用于大型Web应用程序的多平台部署，能快速定位不兼容标签，以辅助工程师快速定位源代码中需要进行处理的不兼容标签，使部署的Web应用能在不同浏览器上正常显示。"><meta name="DC.date" content="2013-12-11"><meta name="DC.relation" content="CN:102541533:A" scheme="references"><meta name="DC.relation" content="CN:102567366:A" scheme="references"><meta name="DC.relation" content="CN:102637135:A" scheme="references"><meta name="DC.relation" content="US:20090049391:A1" scheme="references"><meta name="citation_reference" content="游强华等: &quot;高校图书馆网站对浏览器兼容性测试&quot;, 《图书馆杂志》, vol. 30, no. 10, 31 October 2011 (2011-10-31)"><meta name="citation_reference" content="陈耀森: &quot;基于模型的万维应用软件网页自动规范化的重构工具的设计与实现&quot;, 《中国优秀硕士学位论文全文数据库（电子期刊）》, 15 April 2012 (2012-04-15)"><meta name="citation_patent_publication_number" content="CN:103440289:A"><meta name="citation_patent_application_number" content="CN:201310359420"><link rel="canonical" href="https://www.google.com/patents/CN103440289A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN103440289A?cl=zh"/><meta name="title" content="专利 CN103440289A - 基于MapReduce的网页不兼容标签并行查找方法"/><meta name="description" content="本发明提供了一种基于MapReduce的网页不兼容标签并行查找方法，用于对不兼容标签快速定位。本方法将要扫描的代码分为n块，在m个计算机上使用Map函数并行查找代码块中的不兼容标签，所使用的不兼容标签库为Trie结构组织；当查找到不兼容标签时，记录标签所在的行数、列数和代码块号；最后通过Reduce操作对所记录的结果进行汇总处理，将中所有不兼容标签的位置返回给用户。本方法可用于大型Web应用程序的多平台部署，能快速定位不兼容标签，以辅助工程师快速定位源代码中需要进行处理的不兼容标签，使部署的Web应用能在不同浏览器上正常显示。"/><meta property="og:title" content="专利 CN103440289A - 基于MapReduce的网页不兼容标签并行查找方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN103440289A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN103440289A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=QxHnCAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN103440289A&amp;usg=AFQjCNHDSjn_1N2G2Nu6rcxEpKrpoRuuTQ" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/cc96234c960e9797438b/CN103440289A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/cc96234c960e9797438b/CN103440289A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN103440289A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN103440289A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN103440289A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN103440289B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN103440289A?cl=zh" style="display:none"><span itemprop="description">本发明提供了一种基于MapReduce的网页不兼容标签并行查找方法，用于对不兼容标签快速定位。本方法将要扫描的代码分为n块，在m个计算机上使用Map函数并行查找代码块中的不兼容标签，所使用的不兼容标签库为Trie结构组织；当...</span><span itemprop="url">https://www.google.com/patents/CN103440289A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN103440289A - 基于MapReduce的网页不兼容标签并行查找方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN103440289A - 基于MapReduce的网页不兼容标签并行查找方法" title="专利 CN103440289A - 基于MapReduce的网页不兼容标签并行查找方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN103440289 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201310359420</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年12月11日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2013年8月16日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2013年8月16日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103440289B?hl=zh-CN&amp;cl=zh">CN103440289B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201310359420.4, </span><span class="patent-bibdata-value">CN 103440289 A, </span><span class="patent-bibdata-value">CN 103440289A, </span><span class="patent-bibdata-value">CN 201310359420, </span><span class="patent-bibdata-value">CN-A-103440289, </span><span class="patent-bibdata-value">CN103440289 A, </span><span class="patent-bibdata-value">CN103440289A, </span><span class="patent-bibdata-value">CN201310359420, </span><span class="patent-bibdata-value">CN201310359420.4</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%9D%8E%E7%9D%BF%22">李睿</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%A9%AC%E4%B8%96%E9%BE%99%22">马世龙</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E5%8C%97%E4%BA%AC%E8%88%AA%E7%A9%BA%E8%88%AA%E5%A4%A9%E5%A4%A7%E5%AD%A6%22">北京航空航天大学</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103440289A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103440289A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103440289A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#npl-citations">非专利引用</a> (2),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (2),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (2)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=QxHnCAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201310359420&amp;usg=AFQjCNHWHZlXd0M6iyAroLK5wAqM4PI0Eg"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=QxHnCAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D103440289A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNG39Oz66u8ekAzLxWXbVg3ene9dxQ"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT131927534" lang="ZH" load-source="patent-office">基于MapReduce的网页不兼容标签并行查找方法</invention-title>
      </span><br><span class="patent-number">CN 103440289 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA127136432" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明提供了一种基于MapReduce的网页不兼容标签并行查找方法，用于对不兼容标签快速定位。本方法将要扫描的代码分为n块，在m个计算机上使用Map函数并行查找代码块中的不兼容标签，所使用的不兼容标签库为Trie结构组织；当查找到不兼容标签时，记录标签所在的行数、列数和代码块号；最后通过Reduce操作对所记录的结果进行汇总处理，将中所有不兼容标签的位置返回给用户。本方法可用于大型Web应用程序的多平台部署，能快速定位不兼容标签，以辅助工程师快速定位源代码中需要进行处理的不兼容标签，使部署的Web应用能在不同浏览器上正常显示。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(3)</span></span></div><div class="patent-text"><div mxw-id="PCLM57157995" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.一种基于MapReduce的网页不兼容标签并行查找方法，其特征在于，所述查找方法包括如下步骤:步骤一:确定Web应用的源代码中需要进行不兼容标签定位的代码边界；步骤二:将需要扫描的代码近均匀地等分成η块，η为整数，每份代码用一个三元组描述〈R，B，F〉，其中R表示该代码块的总代码行数，B表示代码块号，F表示代码块当前状态，F取值O或1，O为未进行扫描或正在进行扫描，I为扫描结束；步骤三:将分割后的代码随机分配到m台机器上进行处理；步骤四:初始化结构体IabelContext,结构体IabelContext中包含源代码路径，中间文件的保存路径，map函数的个数，reduce函数的个数，以及不兼容标签库的路径；步骤五:为每个代码块创建map函数,并设置代码块的三元组中的FSo;步骤六:每台机器对所分配的代码块，开始向下扫描标签；步骤七:根据不兼容标签库，判断扫描到的标签是否为不兼容标签，若是，执行步骤八，否则，执行步骤九；步骤八:在中间文件中记录不兼容标签所在的位置，标签所在的位置用三个参数表示:标签所在的行数r、列数c以及标签所在的代码块号b，然后执行步骤九；步骤九:判断当前代码块是否扫描结束，若结束，将该代码块三元组中的参数F置为I ;若没有，返回步骤六，继续执行；步骤十:判断所有代码块是否都已结束扫描，若结束，执行步骤十一，否则等待其它代码块的扫描结束，然后再执行步骤十一；步骤十一:所有中间文件通过Reduce函数，根据记录的不兼容标签所在的位置，计算各不兼容标签的实际位置；步骤十二:合并同一标签的信息；步骤十三:将合并后的不兼容标签及标签所在的位置放入哈希集合容器中，并返回给用户。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的基于MapReduce的网页不兼容标签并行查找方法，其特征在于，所述的步骤七中的不兼容标签库，按照单词查找树的结构组织。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求1所述的基于MapReduce的网页不兼容标签并行查找方法，其特征在于，所述的步骤十一中，各不兼容标签的实际位置的计算方法为:设某个不兼容标签的位置为(r，c，b)，则该不兼容标签的实际位置为(SUM(R1, R2,…，Rb1, r)，c);其中，SUM表示求和，R1, R2,…，Rb1分别表示第I个代码块、第2个代码块、…、第b-Ι个代码块的代码行数。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES64127308" lang="ZH" load-source="patent-office" class="description">
    <p>基于MapReduce的网页不兼容标签并行查找方法</p>
    <p>技术领域</p>
    <p>[0001]	本发明属于应用软件跨平台迁移领域，尤其是一种基于MapReduce的网页不兼容标签并行查找方法。</p>
    <p>背景技术</p>
    <p>[0002]	Web系统客户端的迁移相对于其他系统客户端的迁移具有其独特的特点。Web系统中开发网页使用的javascript等脚本语言具有跨平台性，开发的程序符合W3C的技术规范，Linux、Windows操作系统上的浏览器对WEB应用系统均能较好的支持。但由于使用的浏览器不同，因此在浏览器引擎对WEB应用系统网页进行解析后，会在用户界面上呈现出不同的显示效果。例如，某些在微软IE浏览器能正常显示的标签和属性，在使用FireFox浏览器的解析时，会出现显示异常或错误等问题。</p>
    <p>[0003]	一般来说，浏览器是由浏览器的解释引擎和用户界面组成的。用户界面，也就是常说的浏览器外壳，是用户和浏览器进行交互的平台。而作为浏览器的核心的解释引擎，负责对网页语法的解释(如HTML、JavaScript、XML、图像等等)、整理信息(例如加入CSS(Cascading Style Sheet,级联样式表)等)、以及计算网页的显示方式,最后会输出至显示器或打印机。解释引擎直接决定了网页文件的解析方式，所以也被称为浏览器的内核。解释引擎的不同，直接导致了相同网页在不同引擎下呈现不同的显示方式。以Windows的IE浏览器中使用的Trident解释引擎和Linux下的FireFox浏览器使用的Gecko解释引擎为例进行说明:</p>
    <p>[0004]	Trident是微软开发的一种解释引擎，它的第一个版本是随着1997年10月的Windows internet explorer第四版的发布而发布。随后,trident引擎随着浏览器版本的IE浏览器的版本更新而不断地被更新和完善，并沿用到目前的IE9。Trident引擎的主要工作流程如下:用户在浏览器的地址栏输入地址后，通过向浏览器请求后获得html文件。浏览器加载html文件时，对于外部链接CSS文件，浏览器再发出CSS文件的请求从而获得相应的CSS文件。在此之后，浏览器开始渲染页面，渲染的过程是顺序执行的，但是渲染并不都是一遍就完成的，有时后面遇到的内容导致前面渲染的结果要做出相应的改变，此时就要回到相应的位置重新渲染页面，这也就是reflow过程。</p>
    <p>[0005]	Gecko是一套开放源代码的、以C++编写的网页解释引擎。这个软件原本是由网景通讯公司开发的，现在则由Mozilla基金会维护。Gecko引擎的工作流程和Trident引擎完全相同。但是，在Trident引擎中，javascript的处理功能集成在Trident引擎之中。而对于包括Gecko在内的大多数引擎来说，由于效率的问题，在引擎之外又开发了一个javascript引擎来进行处理，以提高处理速度。</p>
    <p>[0006]	虽然解析引擎的工作流程大同小异，但是不同的解析引擎对标签的解析却不尽相同，这样便使得存在某些标签能被某些浏览器正确识别，却不能被另外一些浏览器所识别的现象，这也就是所谓的浏览器不兼容的问题。</p>
    <p>[0007]	浏览器的兼容性问题在确定使用不同的解释引擎时就已经确定下来了，之后也无法改变，除非重写内核。这也就为开发者提出了要求，要求他们在开发的Web应用的时候要兼顾到不同浏览器内核之间的差异性，尽可能的确保所编写的网页文件能在不同浏览器中正常显示。</p>
    <p>[0008]	由于需要进行迁移的WEB应用系统往往规模都较大，例如公共资源交易、人防应急指挥、财政协同办公、政协业务办公等系统，每个系统包含若干个子系统，每个子系统包含若干模块，整个需要被迁移的系统，客户端网页的数量庞大，若是手动来完成对标签的查找和修改，所面对的工作量是非常巨大的，同时也非常容易出现遗漏或误判等情况。如何在跨平台迁移Web应用系统时，保证其中网页显示的内容在迁移后能够正确的被不同的浏览器解析并正确显示，是一个亟待解决的问题。</p>
    <p>发明内容</p>
    <p>[0009]	本发明针对跨平台迁移Web应用系统存在的问题,提出了一种基于MapReduce的网页不兼容标签并行查找方法，用于对不兼容标签快速定位，以辅助工程师快速定位源代码中需要进行处理的不兼容标签，使部署的Web应用能在不同浏览器上正常显示。</p>
    <p>[0010]	本发明的基于MapReduce的网页不兼容标签并行查找方法，包括如下步骤:</p>
    <p>[0011]	步骤一:确定Web应用的源代码中需要进行不兼容标签定位的代码边界；</p>
    <p>[0012]	步骤二:将 需要扫描的代码近均匀地等分成η块，η为整数，每份代码用一个三元组描述〈R，B, F〉，其中R表示该代码块的总代码行数，B表示代码块号，F表示代码块当前状态，F取值O或1，O为未进行扫描或正在进行扫描，I为扫描结束；</p>
    <p>[0013]	步骤三:将分割后的代码随机分配到m台机器上进行处理；</p>
    <p>[0014]	步骤四:初始化结构体IabelContext,结构体IabelContext中包含源代码路径,中间文件的保存路径，map函数的个数，reduce函数的个数，以及不兼容标签库的路径；</p>
    <p>[0015]	步骤五:为每个代码块创建map函数，并设置代码块的三元组中的F为O ;</p>
    <p>[0016]	步骤六:每台机器对所分配的代码块，开始向下扫描标签；</p>
    <p>[0017]	步骤七:根据不兼容标签库，判断扫描到的标签是否为不兼容标签，若是，执行步骤八，否则，执行步骤九；</p>
    <p>[0018]	步骤八:在中间文件中记录不兼容标签所在的位置，标签所在的位置用三个参数表示:标签所在的行数r、列数c以及标签所在的代码块号b，然后执行步骤九；</p>
    <p>[0019]	步骤九:判断当前代码块是否扫描结束，若结束，将该代码块三元组中的参数F置为I ;若没有，返回步骤六，继续执行；</p>
    <p>[0020]	步骤十:判断所有代码块是否都已结束扫描，若结束，执行步骤十一，否则等待其它代码块的扫描结束，然后再执行步骤十一；</p>
    <p>[0021]	步骤--一:所有中间文件通过Reduce函数，根据记录的不兼容标签所在的位置，计算各不兼容标签的实际位置；</p>
    <p>[0022]	步骤十二:合并同一标签的信息；</p>
    <p> [0023]	步骤十三:将合并后的不兼容标签及标签所在的位置放入哈希集合容器中，并返回给用户。</p>
    <p>[0024]	本发明一种基于MapReduce的网页不兼容标签并行查找方法的优点在于:</p>
    <p>[0025]	(I)本发明查找方法基于MapReduce,MapReduce是一种能处理海量数据的并行编程模式，对于代码量大的Web应用，快速定位效果更为显著，适合用于大型Web应用程序的多平台部署；</p>
    <p>[0026]	(2)由于Web网页代码量繁杂，查找时间长，各个不兼容标签相互独立，相互之间不依赖，因此，非常适合使用并行查找方法，本发明在进行不兼容标签定位的时候，将MapReduce的模式用在标签查找过程中，不兼容标签的查找效率将提高；</p>
    <p>[0027]	(3)本发明方法所使用的不兼容标签库，是按照Trie结构组织，可以最大限度地减少无谓的字符串比较，查找效率高于哈希表。同时这种组织结构更易于扩展。</p>
    <p>附图说明</p>
    <p>[0028]	图1是本发明提供的并行查找方法的整体流程图；</p>
    <p>[0029]	图2是不兼容标签库的结构示意图；</p>
    <p>[0030]	图3是本发明运行实例的参数信息设置示意图；</p>
    <p>[0031]	图4是本发明运行实例在执行期间的部分运行日志信息图；</p>
    <p>[0032]	图5是本发明运行实例的运行结果示意图。</p>
    <p>具体实施方式</p>
    <p>[0033]	下面将结合附图和实施例对本发明作进一步的详细说明。</p>
    <p>[0034]	本发明是基于MapReduce设计实现的快速网页不兼容标签快速并行查找方法，在实践中可以快速定位不兼容标签，提示工程师需要对此进行相应处理，使部署的Web应用能在不同浏览器上正常显示。</p>
    <p>[0035]	本发明的基于MapReduce的网页不兼容标签并行查找方法，首先将待进行分析的Web界面的源代码进行分割，近均匀地等分为η块，然后，针对分割后的每个代码块使用Map函数，判断源代码中所用到的标签是否为不兼容标签，如果是，记录该标签所在的位置(行数r、列数C)，以及标签所在的代码块b ;最后通过Reduce操作对所记录的结果进行汇总处理，得到源代码中所有的不兼容标签，以及每个标签出现的所有位置(行数r、列数C)。本发明的网页不兼容标签并行查找方法，用于大型Web应用程序的多平台部署。而Web网页代码量繁杂，查找时间长，各个不兼容标签相互独立，相互之间不依赖，非常适合使用并行查找方法，因此，在进行不兼容标签定位的时候，将MapReduce的模式用在标签查找过程中，不兼容标签的查找效率将提高。MapReduce是一种编程模型，可用于大规模数据集(大于1TB)的并行运算。MapReduce是一种编程模型，可用于大规模数据集(大于1TB)的并行运算，指定了 Map (映射)函数,用来把一组键值对映射成一组新的键值对,指定了并发的Reduce (化简)函数，用来保证所有映射的键值对中的每一个共享相同的键组。</p>
    <p>[0036]	如图1所示，本发明提供的基于MapReduce的网页不兼容标签并行查找方法，包括如下步骤:</p>
    <p>[0037]	步骤一:确定Web应用的源代码中需要进行不兼容标签定位的代码边界。</p>
    <p>[0038]	步骤二:将需要扫描的代码等分或近均匀地等分成η块，η为整数，具体值可由用户指定。</p>
    <p>[0039]	第b个代码块分别用一个三元组来描述&lt;Rb，b, Fb&gt;，其中Rb表示的是该代码块的总代码行数，b表示的是代码块号，F表示代码块当前状态，取值O或I，O为未进行扫描或正在进行扫描，I为扫描结束。</p>
    <p>[0040]	例如一个段总行数为378行的代码，根据指定现需要分割成10份，那么前9份代码块的代码行均为38行，最后I个代码块的代码总行数为36行。对于最后I个代码块，总代码行数Rltl为36，代码块号b为10。</p>
    <p>[0041]	步骤三:将分割后的代码随机分配到m台机器上进行处理。</p>
    <p>[0042]	步骤四:初始化结构体IabelContext,用来保存本发明方法所需要的参数,包括源代码路径，中间文件的保存路径，map函数的个数，reduce函数的个数，不兼容标签库的路径等。中间文件用来保存每台机器上运行代码得到的结果，最后还需要汇总中间文件的结果。</p>
    <p>[0043]	结构体IabelContext的关键数据结构如下所示:</p>
    <p>[0044]</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103440289A/CN103440289AD00061.png"> <img id="idf0001" file="CN103440289AD00061.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103440289A/CN103440289AD00061.png" class="patent-full-image" alt="Figure CN103440289AD00061"> </a> </div>
    <p>[0045]	LPVOID是一个没有类型的指针类型，DWORD是双字节的数据类型。</p>
    <p>[0046]	步骤五:为每个代码块创建map函数，此时代码块的三元组中的F均设置为O。</p>
    <p>[0047]	步骤六:每台机器对所分配的代码块，向下扫描标签。</p>
    <p>[0048]	步骤七:根据不兼容标签库，判断扫描到的标签是否为不兼容标签，若是，执行步骤八，否则，执行步骤九。</p>
    <p>[0049]	不兼容标签库，按照Trie (单词查找树)结构组织，可以最大限度地减少无谓的字符串比较，查找效率高于哈希表。同时这种组织结构是利用了字符串的公共前缀，节约存储空间，而且对于不兼容标签的新增、删除和查找都非常简单，有利于不兼容标签库的扩展。</p>
    <p>[0050]	以IE浏览器IE6.0和FireFox4.0为例，根据现有的W3C规范、公开资料、文档等，在前人工作的基础上总结的不兼容标签，部分典型不兼容标签列举如下:</p>
    <p>[0051]</p>
    <p>[0052]</p>
    <p>[0053]</p>
    <p>[0054]</p>
    <p>[0055]</p>
    <p>[0056]</p>
    <p>[0057]</p>
    <p>[0058]</p>
    <p>标签! important, FireFox可以识别，而IE不能识别；</p>
    <p>标签innerText, FireFox可以识别，而IE不能正确识别；</p>
    <p>FireFox中对象文字常量允许出现多余的逗号，这在IE中是不允许标签Rgba, FireFox能识别，而IE不能识别；</p>
    <p>标签HSLT，FireFox能识别，而IE不能识别；</p>
    <p>标签 Multiple backgrounds, FireFox 能识别，而 IE 不能识别；标签Opacity, FireFox能识别，而IE不能识别；</p>
    <p>标签Canvas, FireFox能识别，而IE不能识别；[0059]	9.event, x 与 event, y 在 IE 中可识别，而在 FireFox 中只能识别 event.pageX 与event.pageY ；</p>
    <p>[0060]	10.同一用途的标签,在FireFox中只能识别XMLHttpRequest,而在IE中却只能识别 ActiveXObject ；</p>
    <p>[0061]	11.标签attributes, IE和FireFox的解析结果不同；</p>
    <p>[0062]	12.其它 IE 中可识别的标签 oncopy、oncut、onpasteondragenter、ondragover、ondragleave、ondrop等等，在FireFox中都不能被识别；</p>
    <p>[0063]	不兼容标签库的组织结构如图2所示，是一个树形结构。例如，这里所列的是提到的标签! important、oncopy 和 opacity。</p>
    <p>[0064]	判断标签是否为不兼容标签，具体方法是:遍历代码，找到代码中的标签，与已建立的不兼容标签库中的标签进行比对，比对一致的为不兼容标签，若比对不成功，则标签兼容。</p>
    <p>[0065]	本发明所述的不兼容标签，指的是由于浏览器的解析引擎的不同，导致Web应用在不同平台上进行迁移时，不同浏览器有不同的解释，甚至存在部分标签不为部分浏览器所识别的情况，从而导致同一个界面在不同浏览器上会有不同的显示效果。</p>
    <p>[0066]	步骤八:如果是不兼容标签，则在中间文件中记录该不兼容标签所在的位置，标签所在的位置用三个参数表示:标签所在的行数r、列数c以及标签所在的代码块号b ;然后执行步骤九。</p>
    <p>[0067]	步骤九:判断当前代码块是否扫描结束，若结束，将该代码块三元组中的参数F置为I ;若没有，返回步骤六，继续执行。</p>
    <p>[0068]	步骤十:判断所有代码块是否都已结束扫描，若结束，进入步骤十一，否则等待其它代码块的扫描结束，然后再执行步骤十一。</p>
    <p>[0069]	步骤 一:所有中间文件通过Reduce函数，根据记录的标签所在的位置，计算标签的实际位置。</p>
    <p>[0070]	各不兼容标签的实际位置计算方法为:设某个不兼容标签的位置为(r，c，b)，则该不兼容标签的实际位置为(SUM(R1, R2,…，Rb r), c)。SUM表示求和，R1, R2,…，Rlrf分别表示第I个代码块、第2个代码块、…、第b-Ι个代码块的代码行数。</p>
    <p>[0071]	步骤十二:合并同一标签的信息；</p>
    <p>[0072]	步骤十三:将合并后的不兼容标签及标签所在的位置放入哈希集合容器hash_set中，并返回给用户。</p>
    <p>[0073]	下面通过一个运行实例对本发明的方法进行进一步说明和验证。</p>
    <p>[0074]	如图3所示，首先设置所需的必要的参数信息，获得参数信息后，程序开始执行，图4是执行期间的部分运行日志(log)信息截图。下面对图4所示的部分日志进行说明。</p>
    <p>[0075]</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103440289A/CN103440289AD00071.png"> <img id="idf0002" file="CN103440289AD00071.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103440289A/CN103440289AD00071.png" class="patent-full-image" alt="Figure CN103440289AD00071"> </a> </div>
    <p>flush</p>
    <p>[0077]信息！Starting	flush of map output</p>
    <p>[0078]	//将缓存中的信息写入map的输出中</p>
    <p>[0079]	2011-11 &#8212; 26	17:46:56	org.apache, hadoop.mapred.MapTask$MapOutputBuffer writeIndexRecord</p>
    <p>[0080]信息:Index:(0，2，6)</p>
    <p>[0081]	//标签信息</p>
    <p>[0082]	2011-11-26 17:46:56 org.apache, hadoop.mapred.Task done</p>
    <p>[0083]信息:Task:attempt&#8212;local&#8212;0001&#8212;m&#8212;000033&#8212;Ois	done.And is in the processof commiting</p>
    <p>[0084]	Il任务attempt&#8212;local&#8212;0001&#8212;m&#8212;000033&#8212;0 (注:即对分割的某一块代码的不兼容标签进行查找)完成，处于提交状态</p>
    <p>[0085]	2011-11-26 17:46:56 org.apache.hadoop.mapred.LocalJobRunner$JobstatusUpdate</p>
    <p>[0086]	信息:file:/home/administrator/input/da0.html:0+1031</p>
    <p>[0087]	//更新文件状态`</p>
    <p>[0088]	2011-11-26 17:46:56 org.apache, hadoop.mapred.Task sendDone</p>
    <p>[0089]信息:Task，attempt&#8212;local&#8212;0001&#8212;m&#8212;000033&#8212;0，done</p>
    <p>[0090]	Il 任务 attempt&#8212;local&#8212;0001&#8212;m&#8212;000033&#8212;0 结束</p>
    <p>[0091]	以上所示为一个代码块的执行完成。</p>
    <p>[0092]	程序执行完毕后，由于最终结果是HDFS (Hadoop Distributed File System)格式的数据格式，需要使用HDFS命令，使用Linux下的Shell进行数据查看。</p>
    <p>[0093]	图5所示的是运行结果。运行结果文档存储在结果文件夹下的part-00000文档下，储格式是HDFS文件系统的SequenceFile格式，是一种二进制的格式。可以借助于HDFS的文档查看命令:/bin/hadoop dfs - cat/目标文件夹/part-00000，来查看文档。通过调用HDFS的解析能力，对目标文档进行解析，使之以可阅读的形式显示在shell下。</p>
    <p>[0094]	Shell中的文档的格式为:Label 行信息(行号，列号)。其中label是标签的信息，行信息为该label所在的行的文字内容。</p>
    <p>[0095]	例如，[&lt;event&gt;〈/event&gt;]xxx[572，16]，其中xxx信息可以忽略，该行内容表示的信息是，不兼容的标签event出现的位置是第572行的第16列。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102541533A?cl=zh">CN102541533A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年12月27日</td><td class="patent-data-table-td patent-date-value">2012年7月4日</td><td class="patent-data-table-td ">北京方正阿帕比技术有限公司</td><td class="patent-data-table-td ">页面显示方法和设备</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102567366A?cl=zh">CN102567366A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年12月27日</td><td class="patent-data-table-td patent-date-value">2012年7月11日</td><td class="patent-data-table-td ">盛乐信息技术（上海）有限公司</td><td class="patent-data-table-td ">实现对网页重新排版的方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102637135A?cl=zh">CN102637135A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年2月9日</td><td class="patent-data-table-td patent-date-value">2012年8月15日</td><td class="patent-data-table-td ">北京千橡网景科技发展有限公司</td><td class="patent-data-table-td ">用于编译层叠样式表的方法和设备</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20090049391">US20090049391</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2007年8月16日</td><td class="patent-data-table-td patent-date-value">2009年2月19日</td><td class="patent-data-table-td ">Abuelsaad Tamer E</td><td class="patent-data-table-td ">method and system for internally identifying a specific web browser for displaying a specific web page</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="npl-citations"></a><div class="patent-section-header"><span class="patent-section-title">非专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th colspan="3"class="patent-data-table-th">参考文献</th></tr></thead><tr><td class="patent-data-table-td ">1</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">游强华等: "<a href='http://scholar.google.com/scholar?q="%E9%AB%98%E6%A0%A1%E5%9B%BE%E4%B9%A6%E9%A6%86%E7%BD%91%E7%AB%99%E5%AF%B9%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7%E6%B5%8B%E8%AF%95"'>高校图书馆网站对浏览器兼容性测试</a>", 《图书馆杂志》, vol. 30, no. 10, 31 October 2011 (2011-10-31)</td></tr><tr><td class="patent-data-table-td ">2</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">陈耀森: "<a href='http://scholar.google.com/scholar?q="%E5%9F%BA%E4%BA%8E%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%87%E7%BB%B4%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6%E7%BD%91%E9%A1%B5%E8%87%AA%E5%8A%A8%E8%A7%84%E8%8C%83%E5%8C%96%E7%9A%84%E9%87%8D%E6%9E%84%E5%B7%A5%E5%85%B7%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0"'>基于模型的万维应用软件网页自动规范化的重构工具的设计与实现</a>", 《中国优秀硕士学位论文全文数据库（电子期刊）》, 15 April 2012 (2012-04-15)</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=QxHnCAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=QxHnCAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0009440000">G06F9/44</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年12月11日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2014年1月8日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/cc96234c960e9797438b/CN103440289A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E5%9F%BA%E4%BA%8EMapReduce%E7%9A%84%E7%BD%91%E9%A1%B5%E4%B8%8D%E5%85%BC%E5%AE%B9%E6%A0%87%E7%AD%BE.pdf?id=QxHnCAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U3ZVswt2K7D4e3uoxYAXfa_JXFO8Q"},"sample_url":"https://www.google.com/patents/reader?id=QxHnCAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>