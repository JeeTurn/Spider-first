<!DOCTYPE html><html><head><title>专利 CN102387026A - 基于泛关系链模型的系统中用户资料的管理方法及装置 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="基于泛关系链模型的系统中用户资料的管理方法及装置"><meta name="DC.contributor" content="张丽" scheme="inventor"><meta name="DC.contributor" content="腾讯科技（深圳）有限公司" scheme="assignee"><meta name="DC.date" content="2010-9-1" scheme="dateSubmitted"><meta name="DC.description" content="本发明实施例提供了基于泛关系链模型的系统中用户资料的管理方法和装置。该系统以客户端为载体且包括用于向系统用户提供服务的服务器。该管理方法包括以下步骤：位于客户端内部或与客户端相连的管理装置根据登录客户端的用户的需求从服务器拉取系统的用户资料，并将不同类型的用户资料采用不同的保存方式保存于客户端本地；管理装置根据预定的策略，对保存的用户资料进行管理。拉取的用户资料包括登录该客户端的用户的资料，还可以包括其他用户的资料。通过本发明实施例，可以实现用户资料的有效管理和快速展现。"><meta name="DC.date" content="2012-3-21"><meta name="DC.relation" content="CN:101075939:A" scheme="references"><meta name="DC.relation" content="CN:101083631:A" scheme="references"><meta name="DC.relation" content="CN:101764868:A" scheme="references"><meta name="DC.relation" content="US:20060015626:A1" scheme="references"><meta name="citation_patent_publication_number" content="CN:102387026:A"><meta name="citation_patent_application_number" content="CN:201010276127"><link rel="canonical" href="https://www.google.com/patents/CN102387026A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102387026A?cl=zh"/><meta name="title" content="专利 CN102387026A - 基于泛关系链模型的系统中用户资料的管理方法及装置"/><meta name="description" content="本发明实施例提供了基于泛关系链模型的系统中用户资料的管理方法和装置。该系统以客户端为载体且包括用于向系统用户提供服务的服务器。该管理方法包括以下步骤：位于客户端内部或与客户端相连的管理装置根据登录客户端的用户的需求从服务器拉取系统的用户资料，并将不同类型的用户资料采用不同的保存方式保存于客户端本地；管理装置根据预定的策略，对保存的用户资料进行管理。拉取的用户资料包括登录该客户端的用户的资料，还可以包括其他用户的资料。通过本发明实施例，可以实现用户资料的有效管理和快速展现。"/><meta property="og:title" content="专利 CN102387026A - 基于泛关系链模型的系统中用户资料的管理方法及装置"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102387026A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102387026A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=MAWHBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102387026A&amp;usg=AFQjCNFXbF2qSZOoPjUkxo16sPeU4UcNlw" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/faa00de4c29265a92b3b/CN102387026A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/faa00de4c29265a92b3b/CN102387026A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102387026A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102387026A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102387026A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102387026B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102387026A?cl=zh" style="display:none"><span itemprop="description">本发明实施例提供了基于泛关系链模型的系统中用户资料的管理方法和装置。该系统以客户端为载体且包括用于向系统用户提供服务的服务器。该管理方法包括以下步骤：位于客户端内部或与客户端相连的管理装置根据登录客户...</span><span itemprop="url">https://www.google.com/patents/CN102387026A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102387026A - 基于泛关系链模型的系统中用户资料的管理方法及装置</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102387026A - 基于泛关系链模型的系统中用户资料的管理方法及装置" title="专利 CN102387026A - 基于泛关系链模型的系统中用户资料的管理方法及装置"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102387026 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201010276127</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2012年3月21日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2010年9月1日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2010年9月1日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102387026B?hl=zh-CN&amp;cl=zh">CN102387026B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201010276127.8, </span><span class="patent-bibdata-value">CN 102387026 A, </span><span class="patent-bibdata-value">CN 102387026A, </span><span class="patent-bibdata-value">CN 201010276127, </span><span class="patent-bibdata-value">CN-A-102387026, </span><span class="patent-bibdata-value">CN102387026 A, </span><span class="patent-bibdata-value">CN102387026A, </span><span class="patent-bibdata-value">CN201010276127, </span><span class="patent-bibdata-value">CN201010276127.8</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BC%A0%E4%B8%BD%22">张丽</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E8%85%BE%E8%AE%AF%E7%A7%91%E6%8A%80%EF%BC%88%E6%B7%B1%E5%9C%B3%EF%BC%89%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">腾讯科技（深圳）有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102387026A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102387026A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102387026A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=MAWHBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201010276127&amp;usg=AFQjCNHxjLYKe7WB4ltl_Q_FhN2bXFJvqA"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=MAWHBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102387026A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNGuoEuPWZQJi07h11CbfIKLx7Eu4g"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT112060750" lang="ZH" load-source="patent-office">基于泛关系链模型的系统中用户资料的管理方法及装置</invention-title>
      </span><br><span class="patent-number">CN 102387026 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA95528766" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明实施例提供了基于泛关系链模型的系统中用户资料的管理方法和装置。该系统以客户端为载体且包括用于向系统用户提供服务的服务器。该管理方法包括以下步骤：位于客户端内部或与客户端相连的管理装置根据登录客户端的用户的需求从服务器拉取系统的用户资料，并将不同类型的用户资料采用不同的保存方式保存于客户端本地；管理装置根据预定的策略，对保存的用户资料进行管理。拉取的用户资料包括登录该客户端的用户的资料，还可以包括其他用户的资料。通过本发明实施例，可以实现用户资料的有效管理和快速展现。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(30)</span></span></div><div class="patent-text"><div mxw-id="PCLM40873591" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.基于泛关系链模型的系统中用户资料的管理方法，其特征在于，所述系统以客户端为载体且包括用于向系统用户提供服务的服务器，所述方法包括以下步骤：位于所述客户端内部或与所述客户端相连的管理装置根据登录所述客户端的用户的需求从服务器拉取系统的用户资料，并将不同类型的用户资料采用不同的保存方式保存于客户端本地，其中所述用户资料至少包括所述用户的资料；所述管理装置根据预定的策略，对保存的用户资料进行管理。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.如权利要求1所述的方法，其特征在于，所述用户资料还包括其他用户的资料；所述用户资料至少包括文字资料和图片资料两种类型；其中文字资料至少包括用户标识码UIN 或用户标识ID，所述图片资料包括图片文件的URL信息以及图片文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.如权利要求2所述的方法，其特征在于，所述管理装置根据登录该客户端用户的需求从系统的服务器拉取系统的用户资料包括：管理装置收到所述用户的用户资料拉取指令后，向服务器发送用户资料拉取请求，该用户资料拉取请求携带与用户资料对应的UIN或ID ；管理装置接收服务器根据该用户资料拉取请求中的UIN或ID向管理装置返回的响应， 该响应中携带与所述UIN或ID对应的用户资料。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.如权利要求3所述的方法，其特征在于，还包括：当响应中携带的用户资料类型为文字资料时，所述管理装置从所述响应中直接提取文字资料；当响应中携带的用户资料包括图片文件的统一资源定位URL信息时，管理装置根据所述URL信息从服务器或图像架构部下载图片文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.如权利要求2所述的方法，其特征在于，所述管理装置对本地的用户资料进行管理包括：根据预定的策略，查询、更新和/或删除所述用户资料，和/或向所述用户通知用户资料事件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.如权利要求5所述的方法，其特征在于，所述将拉取的用户资料保存于客户端本地包括：管理装置将文字资料保存在客户端本地内存中；和/或根据不同的场景保存所述图片资料。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.如权利要求6所述的方法，其特征在于，所述管理装置根据预定的策略查询本地的用户资料包括：管理装置接收用户的用户资料查询请求，该用户资料查询请求至少携带待查询用户资料所对应用户的用户标识码UIN或用户标识ID ；管理装置判断所述待查询的用户资料是否包括文字资料和/或图片资料；当所述用户资料只包括文字资料时，则管理装置在客户端本地内存中查找所述文字资料；当找到所述文字资料后，向用户返回所述文字资料；当没找到所述文字资料时，向用户返回查询失败消息；当所述用户资料只包括图片资料时，则管理装置根据所述图片资料在不同场景下的保存方式查找所述图片资料；当找到所述图片资料后，向用户返回所述图片资料；当没找到所述图片资料时，向用户返回查询失败消息；当所述用户资料包括文字资料和图片资料时，则管理装置在客户端本地内存中查找所述文字资料并根据所述图片资料在不同场景下的保存方式查找所述图片资料；当找到所述文字资料和图片资料时，则向用户返回所述文字资料和图片资料；当没找到所述文字资料和图片资料时，则向用户返回查询失败消息。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.如权利要求7所述的方法，其特征在于，还包括：当管理装置返回查询失败消息后，管理装置根据所述用户的用户资料拉取指令从服务器拉取待查询的用户资料；如果所述用户资料为图片资料，在管理装置返回查询失败消息后，判断客户端本地是否有所述图片资料，如果没有，则向用户展现客户端的默认图片文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.如权利要求6所述的方法，其特征在于，所述根据预定的策略更新所述用户资料包括：当所述用户资料包括文字资料时，则每当所述用户使用所述文字资料时，更新一次所述文字资料，并保存更新的文字资料；当所述用户资料包括图片资料时，则根据不同的场景更新所述图片资料。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.如权利要求9所述的方法，其特征在于，所述每当用户查询所述文字资料时更新一次所述文字资料包括：管理装置从服务器拉取与所述UIN或ID对应的用户的文字资料，并判断本地内存保存的文字资料是否与从服务器拉取的文字资料一致；如果不一致，则用拉取的文字资料替换本地保存的文字资料。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="11" class="claim">
      <div class="claim-text">11.如权利要求9所述的方法，其特征在于，所述根据不同的场景更新所述图片资料包括：对于大批量显示和/或频繁使用的图片资料，每当所述用户登录客户端则更新一次图片资料；对于用户当前单个查看的图片资料，则每当所述用户查看一次图片资料更新一次所述图片资料；对于所述用户登录客户端期间只需显示一次的大批量图片资料，则用户请求所述图片资料时从服务器拉取所述图片资料的URL信息并根据拉取的URL信息下载图片文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="12" class="claim">
      <div class="claim-text">12.如权利要求11所述的方法，其特征在于，所述对于大批量显示和/或频繁使用的图片资料，每当用户登录客户端则更新一次图片资料包括：管理装置判断用户此次登录后所述大批量显示和/或频繁使用的图片资料是否更新过，如果更新过一次，则不再更新；否则，更新此次登录后未更新过的图片资料。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="13" class="claim">
      <div class="claim-text">13.如权利要求11或12所述的方法，其特征在于，所述更新一次所述图片资料包括： 管理装置向服务器请求待更新的图片资料的URL信息，并从服务器接收请求的URL信息；管理装置判断请求的URL信息与本地保存的URL信息是否相同； 如果不相同，则根据所请求的URL信息下载新的图片文件，并保存请求的URL信息和新的图片文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="14" class="claim">
      <div class="claim-text">14.如权利要求13所述的方法，其特征在于，所述URL信息包括域名domain和图片标识 key ；所述管理装置判断请求的URL信息与本地保存的URL信息是否相同包括： 判断请求的URL信息的key与本地保存的URL信息的key是否相同，如果相同，则这两个URL信息相同，否则这两个URL信息不同。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="15" class="claim">
      <div class="claim-text">15.如权利要求6或9所述的方法，其特征在于，所述根据不同的场景保存所述图片资料包括：对于大批量显示和/或频繁使用的图片资料，将URL信息和图片文件保存在本地磁盘的特定目录下；对于用户当前单个查看的图片资料，则将URL信息和图片文件保存在本地磁盘的特定目录下；对于只需显示一次的图片资料，将URL信息保存在内存中，并在根据URL信息下载完图片文件后将下载的图片文件保存在本地磁盘的临时目录下，并在用户退出客户端后清除保存的图片文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="16" class="claim">
      <div class="claim-text">16.如权利要求11所述的方法，其特征在于，所述通知所述用户资料包括：当所述文字资料有变化时，管理装置通知文字资料更新事件；当所述图片资料有变化时，管理装置通知图片资料更新事件；当下载完只需显示一次的图片文件后，管理装置通知下载完成事件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="17" class="claim">
      <div class="claim-text">17.如权利要求5所述的方法，其特征在于，所述删除所述用户资料包括：根据用户的请求，删除保存的用户资料。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="18" class="claim">
      <div class="claim-text">18.如权利要求1-5中任一项所述的方法，其特征在于，所述基于泛关系链模型的系统为微博系统，所述客户端为即时通讯IM客户端。</div>
    </div>
    </div> <div class="claim"> <div num="19" class="claim">
      <div class="claim-text">19.基于泛关系链模型的系统中用户资料的管理装置，其特征在于，该系统以客户端为载体且包括用于为系统用户提供服务的服务器，该管理装置位于该系统的客户端侧，包括：拉取模块，用于根据登录该客户端用户的需求从系统的服务器拉取用户资料；保存模块，用于将不同类型的用户资料采用不同的保存方式进行保存；管理模块，用于根据预定的策略，对保存模块保存的用户资料进行管理。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="20" class="claim">
      <div class="claim-text">20.如权利要求19所述的装置，其特征在于，所述管理模块包括：文字资料管理子模块，用于对用户资料中的文字资料根据预定的策略进行管理；和图片资料管理子模块，用于对用户资料中的图片资料根据预定的策略进行管理。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="21" class="claim">
      <div class="claim-text">21.如权利要求20所述的装置，其特征在于，所述管理模块还包括判断子模块，用于判断来自用户或服务器的信息中，所述用户资料包括文字资料还是图片资料，并将涉及文字资料的信息发给文字资料管理子模块进行管理，将涉及图片资料的信息发给图片资料管理子模块进行管理。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="22" class="claim">
      <div class="claim-text">22.如权利要求21所述的装置，其特征在于，所述文字资料管理子模块包括：文字资料查询子模块，用于接收来自所述判断子模块的关于文字资料的用户资料查询请求，在客户端本地内存中查找待查询用户资料中的文字资料；当找到所述文字资料时，向用户返回所述文字资料；当没找到所述文字资料时，向用户返回查询失败消息；所述图片资料管理子模块包括：图片资料查询子模块，用于接收来自所述判断子模块的关于图片资料的用户资料查询请求，用于根据图片资料在不同场景下的保存方式查找所述图片资料；当找到所述图片资料后，向用户返回所述图片资料；当没找到所述图片资料时，向用户返回查询失败消息。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="23" class="claim">
      <div class="claim-text">23.如权利要求22所述的装置，其特征在于，所述文字资料管理子模块包括：文字资料更新子模块，用于当用户使用文字资料时，更新一次所述文字资料；所述图片资料管理子模块包括：图片资料更新子模块，用于根据不同的场景更新所述图片资料。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="24" class="claim">
      <div class="claim-text">24.如权利要求23所述的装置，其特征在于，所述管理模块还包括：拉取触发子模块， 用于每当用户使用所述文字资料时，触发所述拉取模块从服务器拉取所述文字资料，并将拉取的文字资料发给所述文字资料更新子模块；其中，所述文字资料更新子模块还用于判断客户端本地保存的文字资料是否与新拉取的文字资料一致；如果不一致，则通知所述保存模块用新拉取的文字资料替换本地保存的文字资料。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="25" class="claim">
      <div class="claim-text">25.如权利要求23所述的装置，其特征在于，所述图片资料更新子模块包括：场景判断子模块，用于判断待更新的图片资料属于哪种场景；第一更新子模块，用于当待更新的图片资料属于大批量显示和/或频繁使用的场景时，则每当用户登录客户端时更新一次所述图片资料；第二更新子模块，用于当待更新的图片资料属于用户单个查看的图片资料时，则用户查看的一次所述图片资料更新一次所述图片资料；第三更新子模块，用于当待更新的图片资料属于用户登录客户端期间只需显示一次的大批量图片资料时，在用户请求所述图片资料时，触发所述拉取模块从服务器拉取所述只需显示一次的图片资料的URL信息并根据拉取的URL信息下载对应的图片文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="26" class="claim">
      <div class="claim-text">26.如权利要求25所述的装置，其特征在于，所述拉取触发子模块还用于：根据第一更新子模块和/或第二更新子模块的请求，触发所述拉取模块向服务器请求待更新的图片资料的URL信息以及从服务器接收所请求的URL信息，并由所述拉取模块将请求的URL信息发送给第一更新子模块和/或第二更新子模块；所述第一更新子模块和/或第二更新子模块还用于判断所请求的URL信息与客户端本地保存的URL信息是否相同；如果不同，则根据所请求的URL信息下载新的图片文件，并通知保存模块502保存请求的URL信息和新的图片文件；第三更新子模块还用于将下载完的图片文件临时保存，并在用户退出客户端后清除临时保存的图片文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="27" class="claim">
      <div class="claim-text">27.如权利要求沈所述的装置，其特征在于，所述保存模块根据所述第一更新子模块和/或第二更新子模块的通知，将请求的URL信息和新的图片文件保存到本地磁盘的特定目录中。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="28" class="claim">
      <div class="claim-text">28.如权利要求19所述的装置，其特征在于，所述保存模块包括：类型判断子模块，用于判断拉取的用户资料的类型为文字资料还是图片资料；保存子模块，用于当类型判断子模块确定用户资料包括文字资料时，选择将文字资料保存于本地内存中；当类型判断子模块确定用户资料包括图片资料时，选择根据不同场景采用不同保存方式保存图片资料。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="29" class="claim">
      <div class="claim-text">29.如权利要求观所述的方法，其特征在于，所述保存子模块还用于：当待保存的图片资料属于大批量显示和/或频繁使用的场景或属于用户单个查看的图片资料时，将所述图片资料保存在本地磁盘的特定目录下；当待更新的图片资料属于用户登录客户端期间只需显示一次的大批量图片资料时，保存URL信息于本地内存中，并将图片文件保存于本地磁盘临时文件夹中。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="30" class="claim">
      <div class="claim-text">30.如权利要求25所述的装置，还包括：通知子模块，用于当所述文字资料变化时，通知文字资料更新事件；当所述图片资料变化时，通知图片资料更新事件；当下载完所述只需显示一次的图片文件时，通知下载完成事件。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES46335985" lang="ZH" load-source="patent-office" class="description">
    <p>基于泛关系链模型的系统中用户资料的管理方法及装置</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及网络技术领域，具体涉及基于泛关系链模型的系统中用户资料的管理方法及装置。</p>
    <p>背景技术</p>
    <p>[0002]	随着网络技术的不断发展，出现了各种各样的网络通讯系统。其中，基于泛关系链模型的系统受到越来越多网络用户的青睐。在基于泛关系链模型的系统中，系统的用户之间可以不通过请求、验证的方式就能非常容易地建立关系。因此，该系统使得网络聊天模式从一对一、一对N跨越到一对无穷。这种一对无穷的聊天模式意味着一个用户可以向无穷多的其他用户传播消息，并同时可以接收万级以上用户的消息。这种系统中，听众以及讲者的数量非常大，用户发送一条消息可以被无数的其他用户收听。因此，这种系统具有海量的信息，比如具有海量的用户资料。</p>
    <p>[0003]	目前，常用的基于泛关系链模型的系统可以以网页为载体也可以以客户端（如IM 客户端等）为载体，且系统的用户资料都是由系统服务器统一进行维护和管理的。在以客户端为载体的系统中，每当用户通过客户端登录系统时，需要由系统服务器把大量的用户资料通过客户端展现给该用户，且当该用户不断地切换关注对象时，系统服务器则需要通过客户端不断地为用户更新其所关注的用户资料。由此可见，每当用户想查询用户资料时， 都必须经由系统服务器才能得到，而不能在客户端本地查询用户资料，因此导致用户不能快速、方便地获知用户资料，即客户端不能快速地对用户资料进行展现。而且，客户端必须频繁不断地与系统服务器进行交互，从而导致系统服务器的通信压力过大，甚至导致系统服务器瘫痪。因此，急需对基于泛关系链模型的系统的用户资料进行更有效的管理。</p>
    <p>[0004]目前，应用最广泛的基于泛关系链模型的系统为微博系统。在微博系统中，用户通过140字左右的一句话来传播消息。这种通信方式简短、方便，可以快速地进行信息的传播和传递。微博采用的一对无穷的聊天模式使得微博系统具有海量的用户资料。在以客户端为载体的微博中，客户端必须频繁地与微博服务器交互以获取微博的用户资料，而微博的用户资料数量庞大，从而导致客户端不能快速地展现微博的用户资料，并且导致微博服务器通信压力过大，甚至导致微博服务器瘫痪。</p>
    <p>发明内容</p>
    <p>[0005]	有鉴于此，本发明的主要目的是提供基于泛关系链模型的系统中用户资料的管理方法及装置，该方法及装置可以使客户端对海量的用户资料进行有效的管理。</p>
    <p>[0006]	本发明实施例提供基于泛关系链模型的系统中用户资料的管理方法，该系统以客户端为载体且包括向系统用户提供服务的服务器。该方法包括：</p>
    <p>[0007]	位于所述客户端内部或与所述客户端相连的管理装置根据登录该客户端用户的需求从服务器拉取系统的用户资料，并将不同类型的用户资料采用不同的保存方式保存于客户端本地；管理装置根据预定的策略，对保存的用户资料进行管理。其中，用户资料至少包括登录该客户端用户的资料。</p>
    <p>[0008]	本发明实施例还提供基于泛关系链模型的系统中用户资料的管理装置，该系统以客户端为载体且包括用于为系统用户提供服务的服务器，位于该系统的客户端侧。该装置包括：</p>
    <p>[0009]	拉取模块，用于根据登录该客户端用户的需求从系统的服务器拉取用户资料，其中，用户资料至少包括登录该客户端用户的资料；</p>
    <p>[0010]	保存模块，用于将不同类型的用户资料采用不同的保存方式进行保存；</p>
    <p>[0011]	管理模块，用于根据预定的策略，对保存模块保存的用户资料进行管理。</p>
    <p>[0012]	客户端对本地的用户资料进行管理包括：根据预定的策略，查询、更新和/或删除用户资料，和/或向用户通知用户资料事件。</p>
    <p>[0013]	根据本发明实施例，由于不同类型的用户资料采用不同的保存方式，从而可以在客户端本地更加充分合理地利用存储空间。并且，由于用户资料拉取之后保存在客户端本地，则当用户再查询用户资料时，管理装置先在本地查询，而不是直接向微博服务器请求用户资料，因此可以更快速地调用用户资料，并能快速地展现用户资料。另外，在对本地的用户资料进行管理时也会根据不同的用户资料类型以及不同的场景选择不同的管理方式，进而可以更加合理地对用户资料进行管理。比如，在用户登录期间，在用户使用用户资料时 (比如用户查看他人的用户资料时）才更新一次，且此次登录期间已经更新过的用户资料不再更新，避免了重复拉取，减少了与微博服务器的交互次数，降低了微博服务器的通信压力。</p>
    <p>附图说明</p>
    <p>[0014]	在本发明的附图中，</p>
    <p>[0015]	图1为根据本发明实施例的基于泛关系链模型的系统中用户资料的管理方法流程图；</p>
    <p>[0016]	图2示出了根据本发明实施例中拉取和保存用户资料的具体流程图；</p>
    <p>[0017]	图3为本发明实施例中微博系统中用户的文字资料的管理流程图；</p>
    <p>[0018]	图4为本发明实施例中微博系统中用户的图片资料的管理流程图；</p>
    <p>[0019]	图5为根据本发明实施例的基于泛关系链模型的系统中用户资料的管理装置的结构图；</p>
    <p>[0020]	图6为根据本发明实施例的基于泛关系链模型的系统中用户资料的管理装置的一种逻辑结构图。</p>
    <p>具体实施方式</p>
    <p>[0021]	下面结合附图和具体实施例对本发明进行详细说明。</p>
    <p>[0022]	目前，在以客户端为载体的基于泛关系链的系统中，具有海量的用户资料，如何有效地管理海量的用户资料时亟待解决的问题。目前，系统的用户资料大都经由系统服务器管理和维护，而不是在客户端本地进行管理和维护，因而导致客户端不能快速地为用户提供用户资料的查询、展现等。并且，在对用户资料的管理中，没有考虑用户资料的类型以及不同的场景，管理缺乏灵活性。[0023]	为了克服上述问题，本发明实施例提供基于泛关系链模型的系统中用户资料的管理方法，该系统以客户端为载体且用户通过该客户端进入系统，该系统包括服务器，用于为系统用户提供服务。图1为根据本发明实施例的基于泛关系链模型的系统中用户资料的管理方法流程图。如图1所示，在步骤101中，管理装置根据登录该客户端的用户A的需求从系统的服务器拉取用户的资料，并根据不同的用户资料类型采用不同的保存方式在客户端本地保存拉取的用户资料；在步骤102中，管理装置根据预定的策略，对保存的用户资料进行管理。拉取的用户资料包括用户A的资料，还可以包括其他用户的资料。其中，管理装置为位于客户端内部用于实现管理方法的模块或与位于客户端外部且与其相连的用于实现管理方法的管理装置。在以下实施例中，以管理装置位于客户端内部为例进行说明。</p>
    <p>[0024]	在本实施例中，客户端可以在用户A首次登录客户端时从系统服务器拉取用户A 自身的资料，和用户A指定的用户资料，并根据拉取的用户资料的类型采用不同的保存方式在客户端本地保存拉取的用户资料。用户A指定的用户资料可以是用户A感兴趣的或者频繁使用的用户资料，也可以是用户A当前关注的用户的资料。由于用户A感兴趣或频繁使用的用户资料在用户A登录后被保存在客户端本地，并由客户端根据预定的策略进行管理。因而，在后续使用这些用户资料时，客户端可以在本地调用用户资料，从而可以快速地展现用户资料。而且，由于客户端在展现用户资料时，可以在客户端本地调用用户资料，而不用每次都从服务器拉取用户资料，因此客户端与服务器的交互次数减少了，因而可以降低服务器的通信压力，保证服务器更快速、有效地提供服务。</p>
    <p>[0025]	用户资料的类型至少包括文字资料和图片资料。其中文字资料一般用于描述用户的基本信息，比如用户标识码UIN或用户标识ID，用户名，职业，兴趣等。图片资料一般用于显示用户的形象，比如用户的头像，其包括图片文件的URL信息和/或图片文件。</p>
    <p>[0026]	进一步地，客户端对保存的用户资料的管理可以包括用户资料的查询、更新和/ 或删除用户资料、和/或向用户A通知用户资料事件。</p>
    <p>[0027]目前应用较广泛的基于泛关系链模型的系统有微博系统，而以客户端为载体的微博系统中，客户端可以是微博专用客户端，也可以是现有的通讯客户端，如QQ，MSN, ICQ等即时通讯IM客户端或者其他类型的通讯客户端。在以下实施例中，将以IM客户端为载体的微博系统为例说明基于泛关系链模型的系统中用户资料的管理方法。</p>
    <p>[0028]	在以IM客户端为载体的微博系统中，可以在IM客户端的界面添加一个微博Tab 页，用户只要点击微博Tab页即可进入微博系统。用户登录IM客户端，则可以通过微博Tab 页进入微博系统。</p>
    <p>[0029]	在本发明实施例中，微博用户资料独立于IM资料，且其图片资料可以是微博用户的头像。头像可以是自定义头像或者客户端的默认头像。在以IM客户端为载体的微博系统中，微博用户资料与IM资料相互独立，使得海量的微博用户资料的管理更加方便。</p>
    <p>[0030]	图2示出了根据本发明实施例的步骤101中拉取和保存用户资料的具体流程图。 如图2所示，步骤101包括：</p>
    <p>[0031]	步骤201 :IM客户端接收登录IM客户端的用户A的用户资料拉取指令，其中携带需要拉取的用户资料对应的用户标识码UIN或用户标识ID。</p>
    <p>[0032]	在本步骤中，当用户A登录IM客户端则相当于向IM客户端发送了用户资料拉取指令，其中携带用户A的UIN或ID。当然，用户A在登录后可以选择自己感兴趣的或经常访问的用户并向IM客户端发送用户资料拉取指令，其中携带用户A感兴趣的用户的UIN或 ID。步骤202 :IM客户端向微博服务器发送用户资料拉取请求，该用户资料拉取请求携带与用户资料对应的用户标识码UIN或用户标识ID。</p>
    <p>[0033]	步骤203 :IM客户端接收微博服务器根据该用户资料拉取请求中的UIN或ID向IM 客户端返回的响应，该响应中携带与UIN或ID对应的用户资料。</p>
    <p>[0034]	在本步骤中，微博服务器返回响应时，根据不同类型的用户资料类型做不同的处理。对于文字资料，则直接携带在响应中返回IM给客户端；对于头像，则将头像文件的URL 信息携带在响应中返回给IM客户端，IM客户端根据收到的URL信息再从微博服务器或者设置于微博服务器外部的架构部下载头像文件。</p>
    <p>[0035]	较佳地，IM客户端在下周头像文件之前判断本地存储的URL信息是否与收到的 URL信息相同，如果相同，再确认本地是否存储有与URL对应的头像文件，如果有，则不下载头像文件；如果URL信息不同，则下载头像文件。</p>
    <p>[0036]	步骤204 =IM客户端将响应中携带的与UIN或ID对应的用户资料保存在本地。</p>
    <p>[0037]	本步骤中，IM客户端将不同类型的用户资料采用不同的保存方式进行保存。具体地，对于用户资料中的文字资料，由于其占用的空间比较小，从微博服务器下载的速度也就比较快，因此IM客户端可以将文字资料保存在本地内存中。因此，IM客户端可以根据预定的策略管理本地内存中的文字资料，提高了文字资料的调用速度，进而提高了对用户资料的管理效率。当然，文字资料也可以保存在本地磁盘中。但是，文字资料相对图片资料来说， 下载速度比较快，每次用户A登录IM客户端时再从微博服务器下载文字资料对微博服务器的通信压力影响不大。因此，本发明实施例选用了将文字资料保存在本地内存的保存方式。</p>
    <p>[0038]	另外，对于图片资料，则需要根据不同场景采取不同的保存方式。图片资料一般包括图片文件URL信息和图片文件本身，需要占用的空间较大，因此对图片资料的保存还需要考虑不同的场景。</p>
    <p>[0039]	在本发明实施例中，关于图片资料的保存，至少可以考虑以下三种场景：1)大批量显示和/或频繁使用图片文件的需求，如微博首页或@页中的消息发表者的头像，其中微博首页展示用户A收听的人发表的消息，@页中是用户A自己的页面，展示用户A发表的或提及用户A的消息；2)单个查看图片文件的需求，如进入微博客人页查看客人头像的需求； 3)登录期间可能只需显示一次的大批量图片文件的显示需求，比如其他用户的偶像或粉丝列表。</p>
    <p>[0040]	对于第1)种场景，则IM客户端在本地磁盘保存图片文件的URL信息以及图片文件。对于第2、种场景，则IM客户端在查看图片文件之后在本地磁盘保存图片文件的URL 信息以及图片文件。对于第3)种场景，则IM客户端将图片文件的URL信息保存在本地内存，并将图片文件临时保存在本地磁盘，并在用户A退出IM客户端后清除临时保存的图片文件。</p>
    <p>[0041]	由此可见，在本发明实施例中，不同场景下对图片资料的保存方式不同，从而可以在IM客户端本地灵活方便地对图片资料进行管理。</p>
    <p>[0042]	对于第1)种场景中的图片资料，由于大批量显示的图片文件占用带宽多，从微博服务器下载的速度就比较慢，且会占用大量内存，因此采用保存在本地磁盘的保存方式，从而可以在IM客户端快速地调用和展现大批量的图片文文件。另外，对于频繁使用的图片文件，如果每次使用都从微博服务器下载，则需要频繁地与微博服务器交互，从而增加了与微博服务器的交互次数，进而增加微博服务器的通信压力。并且，图片文件的下载速度较慢， IM客户端对图片文件的展现速度也会受影响。因此频繁使用的图片文件也采用保存在本地磁盘的保存方式。由于图片文件在本地保存，则可以方便IM客户端根据预定的策略对用户资料进行管理，比如可以快速、方便地进行查询和展现。</p>
    <p>[0043]	对于第2)种场景，由于用户A需要单个查看的图片文件一般是用户感兴趣的或频繁使用的，因此在查看图片文件之后在本地磁盘保存图片文件的URL信息以及图片文件， 由IM客户端管理本地保存的用户资料，以便后续用户A查看时更加便捷，即可以由IM客户端在本地保存的用户资料中调用该图片文件并展现给用户A，因而展现速度更快。</p>
    <p>[0044]	在第1)和第2、种场景中，IM客户端可以将图片资料保存在本地磁盘的特定目录下。</p>
    <p>[0045]	对于第3)种场景，由于登录期间可能只需显示一次，则可以临时保存或在内存保存；而由于是大批量的图片，需要占用较大空间，保存在内存会增加内存压力，因此较佳的保存方式为临时保存在本地磁盘，比如保存在临时目录下。较佳地，第3)中场景中的图片文件的URL信息可以保存在内存中，而图片文件保存在本地磁盘的临时目录下。</p>
    <p>[0046]	另外，在IM客户端拉取图片文件失败且本地也没有自定义图片文件的情况下，IM 客户端使用默认图片文件作为微博用户的图片文件（如微博用户的头像）。</p>
    <p>[0047]	从以上可以看出，通过对不同类型的用户资料采用不同的保存方式进行保存，可以更充分、合理地利用本地内存以及磁盘空间，并可以方便IM客户端在本地对用户资料进行管理，从而可以给用户A带来更好的体验，并减轻微博服务器的通信压力。</p>
    <p>[0048]	以下将结合附图及具体实施例说明本发明步骤102中对用户资料的管理过程。根据本发明实施例，步骤102中预定的策略会根据用户资料的类型不同而不同。在以下实施例中，将分别说明文字资料和图片资料这两种类型的用户资料的具体管理过程，包括用户资料的查询、更新和/或删除、和/或向用户A通知用户资料事件。</p>
    <p>[0049]	图3为本发明实施例中微博系统中用户的文字资料的管理流程图。如图3所示， IM客户端根据预定的策略，对保存的文字资料进行管理包括：</p>
    <p>[0050]	步骤301 :IM客户端接收用户A的用户资料查询请求。该用户资料查询请求至少携带待查询用户资料所对应用户的用户标识码UIN或用户标识ID，且用户资料类型为文字资料。</p>
    <p>[0051]	步骤302 :IM客户端查找文字资料。具体地，IM客户端判断待查询的用户资料类型为文字资料时，在本地内存中查找文字资料。</p>
    <p>[0052]	步骤303 ：当找到文字资料时，向用户A返回本地的文字资料；当没找到文字资料时，向用户A返回查询失败消息。</p>
    <p>[0053]	在本步骤中，当没找到文字资料时，也可以不返回查询失败消息，而是执行步骤 305和306以拉取本地没有保存的文字资料，并在IM客户端拉取用户A查询的文字资料后保存在内存中，并向用户A返回拉取的文字资料。</p>
    <p>[0054]	或者，IM客户端向用户A返回查询失败消息后，如果收到用户A的针对该UIN或 ID的用户资料拉取指令，再执行步骤305和306以向用户A返回拉取的文字资料。</p>
    <p>[0055]	步骤304 ：当用户A使用文字资料时，则IM客户端触发该文字资料的更新。[0056]	本步骤中，用户A使用文字资料一般指查看某用户的页面。这样在用户A查看的某用户页面时，IM客户端触发更新，从而可以保证用户A查看最新的用户资料，避免不必要的更新。</p>
    <p>[0057]	在本步骤中，也可以是用户A手动更新文字资料。不过，如果用户A过于频繁地手动更新文字资料，则会增加微博服务器的通信压力。因此，可以在此设置一个手动更新的频率限制，一周一次或两周一次等。</p>
    <p>[0058]	步骤305 =IM客户端向微博服务器发送用户资料拉取请求。</p>
    <p>[0059]	本步骤中，IM客户端判断待更新的文字资料在用户A此次登录IM客户端期间是否已经更新过；如果已经更新过，则不发送用户资料拉取请求，如果尚未更新过，则发送用户资料拉取请求以拉取该文字资料。</p>
    <p>[0060]	具体地，可以为更新过的文字资料打上标签，从而可以根据标签判断哪些文字资料更新过哪些还没有更新。</p>
    <p>[0061]	步骤306 ：微博服务器向IM客户端返回响应，其中携带请求的文字资料。</p>
    <p>[0062]	步骤307 :IM客户端进行更新处理。具体，判断本地保存的文字资料与拉取的文字资料是否一致，如果一致，则不保存拉取的文字资料；否则用拉取的文字资料替换本地的文字资料，并执行步骤308。</p>
    <p>[0063]	步骤308 :IM客户端向用户A通知文字资料更新事件。具体地，将文字资料更新事件通知到界面，通过界面向用户A展现更新后的文字资料。</p>
    <p>[0064]	在上述步骤301-308中，可以只执行查询过程（步骤301-30&#190;，而不执行更新过程 (步骤304-307)。步骤308的通知过程也可以不执行，而是在用户A查询时再把更新后的文字资料返回给用户A。</p>
    <p>[0065]	上述管理过程还可以包括删除本地内存中的文字资料。在用户A退出IM客户端后，则删除内存保存的用户资料。</p>
    <p>[0066]	由以上的管理过程可以看出，按照预定的策略管理本地保存的用户资料，比如当用户A查询其他用户的用户资料时，IM客户端先在本地内存查询，而不是直接向微博服务器请求用户资料，因此可以更快速地调用用户A所需要的用户资料，并能快速地展现用户资料。另外，按照预定的策略管理本地保存的用户资料，比如控制更新次数，即在用户A &#8212; 次登录期间，用户A使用用户资料时才进行更新一次，且此次登录期间已经更新过的用户资料不再更新，可以避免重复拉取用户资料，减少了与微博服务器的交互次数，降低了微博服务器的通信压力。</p>
    <p>[0067]	图4为本发明实施例中微博系统中用户的图片资料的管理流程图。如图4所示， IM客户端根据预定的策略，对保存的图片资料进行管理包括：</p>
    <p>[0068]	步骤401 :IM客户端接收用户A的用户资料查询请求。该用户资料查询请求至少携带待查询用户资料所对应用户的用户标识码UIN或用户标识ID，且用户资料类型为图片资料。</p>
    <p>[0069]	步骤402 :IM客户端查找图片资料。具体地，IM客户端判断待查询的用户资料类型为图片资料时，在本地磁盘中查找图片资料。</p>
    <p>[0070]	具体地，由于图片资料根据不同的场景采用不同的保存方式进行保存，即针对场景1)和幻中的图片资料，一般保存在本地磁盘的特定目录下而针对场景幻中的图片资</p>
    <p>12料，则一般保存图片文件在本地临时目录下而保存图片文件的URL信息在本地内存。因此， IM客户端可以根据不同的场景在选择查询范围，从而可以节省查询时间。</p>
    <p>[0071]	步骤403 ：当找到图片资料时，IM客户端向用户A返回本地的图片资料；当没找到图片资料时，向用户A返回查询失败消息。在返回图片资料时，可以通过IM客户端向用户 A展现图片资料中的图片文件，比如微博用户的头像。</p>
    <p>[0072]	与步骤303类似，当没找到图片资料时，也可以不返回查询失败消息，而是执行步骤406和407以拉取本地没有保存的图片资料，并在IM客户端拉取用户A查询的图片字资料后根据不同的场景进行保存，并向用户A返回拉取的图片资料。</p>
    <p>[0073]	或者，IM客户端向用户A返回查询失败消息后，如果收到用户A的针对该UIN或 ID的用户资料拉取指令，再执行步骤406和407以向用户A返回拉取的图片资料。</p>
    <p>[0074]	又或者，IM客户端在返回查询失败消息的同时展现默认的图片文件。</p>
    <p>[0075]	步骤404 ：进行更新触发。</p>
    <p>[0076]	本步骤中，用户A可以手动进行更新触发；也可以由IM客户端根据预定的更新条件进行更新触发。本发明实施例以用IM客户端根据预定的更新条件进行更新触发为例来说明。</p>
    <p>[0077]	步骤405 :IM客户端根据更新条件的场景，判断是否需要拉取图片文件的URL信息。如果需要，则执行步骤406 ；否则结束本更新过程。</p>
    <p>[0078]	在本步骤中，更新请求的场景可以是上述的三种场景，即1)对于大批量显示和/ 或频繁使用图片文件的更新；幻对单个查看图片文件的更新；幻对登录期间可能只需显示一次的大批量图片文件的更新。</p>
    <p>[0079]	根据本发明实施例，不同的场景下采用不同的更新逻辑。具体地，第1)种场景下， 用户A每登录一次IM客户端更新一次图片资料；第2)场景下，只要用户查看某个图片文件，则更新该图片文件，即采用强制更新图片资料的逻辑；在第3)种场景下，则拉取一批的图片资料（如一批微博用户的头像）。</p>
    <p>[0080]	因此在本步骤中，IM客户端首先需要判断待更新的图片资料属于哪种场景的更新条件。如果属于第1)种场景，由于此场景下用户A每登录一次IM客户端更新一次图片资料的方式，因此IM客户端首先判断图片资料在用户A此次登录期间是否已经更新过。如果已经更新过一次，则确定不需要拉取图片文件的URL信息；否则，确定需要拉取图片文件的 URL信息。如果属于第2)和3)种场景，则确定需要拉取图片文件的URL信息。</p>
    <p>[0081 ] 步骤406 ： IM客户端向微博服务器发送用户资料拉取请求用于拉取图片资料。</p>
    <p>[0082]	步骤407 ：微博服务器收到用户资料拉取请求且确定拉取的用户资料包括图片资料，则向IM客户端返回响应，其中携带图片文件的URL信息。</p>
    <p>[0083]	408 =IM客户端比较微博服务器返回的URL信息和本地保存的URL信息。如果微博服务器返回的URL信息与本地保存的URL信息不一致，则执行步骤409 ；否则，不修改本地URL信息，结束本管理过程。</p>
    <p>[0084]	步骤409 =IM客户端将本地URL信息修改为微博服务器返回的URL信息，并根据返回的URL信息向图像架构部请求下载图片文件。</p>
    <p>[0085]	在本实施例中，图片资料为微博用户的头像，而头像又分为自定义头像、系统头像和默认头像。当IM客户端拉取头像失败且没有本地的自定义头像时，IM客户端显示默认头像。</p>
    <p>[0086]	头像的URL格式为：http://Domain/key。其中，Domain为域名，key为图片标识。 对于自定义头像还包含了用户标识码UIN和时间戳等信息，而对于系统头像，比如小秘书头像等，则不含UIN信息。在服务器端，不同用户的自定义头像的key是不同的，而不同用户的相同的小秘书或系统头像的key相同。</p>
    <p>[0087]	IM客户端在比较微博服务器返回的URL信息和本地保存的URL信息时，主要判断其中的key是否改变。如果改变，则准备向图像架构部请求下载头像文件。但是，在下载头像文件之前，IM客户端判断本地是否已经保存有与该URL信息对应的头像（此时的判断与 UIN没有关系）；如果没有保存，则下载该头像文件，否则不再下载。对于不同UIN的URL信息，如果key是相同的且本地有该头像文件，则不再下载该头像。对于相同UIN的URL信息中，如果key没变且本地该URL信息对应的头像文件存在，则不下载头像文件；而如果key 没变但本地头像文件损坏或丢失，则下载头像文件。</p>
    <p>[0088]	客户端中常用的头像尺寸为：40*40和2(^20，所以下载时会在URL后面加上这两种尺寸下载这两种头像，即 http://Domain/key/20 和 http ：//Domain/key/40。</p>
    <p>[0089]	在下载头像时，可以采用HttpP2PDownload组件。</p>
    <p>[0090]	步骤410 ：图像架构部向IM客户端返回新的图片文件。</p>
    <p>[0091]	步骤411 :IM客户端根据不同的场景对返回的URL信息和新的图片文件进行保存。</p>
    <p>[0092]	本步骤可以根据前文描述的保存方式来保存图片资料，即图片文件的URL信息和图片文件。比如对于第1)种场景，则IM客户端在本地磁盘保存图片文件的URL信息以及图片文件。对于第幻种场景，则IM客户端在查看图片文件之后在本地磁盘保存图片文件的URL信息以及图片文件。对于第3)种场景，则IM客户端将URL信息保存于内存，并临时保存图片文件，并在用户A退出IM客户端后清除临时保存的图片文件。不同场景下对图片资料的保存方式不同，可以在IM客户端本地灵活方便地对图片资料进行管理，从而提高用户资料管理的效率。</p>
    <p>[0093]	步骤412 ：IM客户端向用户A通知图片资料更新事件。具体地，对于第1)和2)种场景，在图片资料有变化后，通知图片文件变化事件；对于第3)种场景，则通知图片下载完成事件。</p>
    <p>[0094]	进一步地，该管理过程还可以包括删除本地保存的图片资料。比如删除第幻中场景下的图片资料，或者根据用户A的指令删除某个或某些图片资料。从而可以更合理地利用存储空间，进而提高客户端对图片资料的管理速度。</p>
    <p>[0095]	由以上的管理过程可以看出，当用户A查询其他用户的用户资料时，IM客户端先在本地磁盘查询，而不是直接向微博服务器请求用户资料，因此可以更快速地调用用户A 所需要的用户资料，并能快速地展现用户资料。尤其是对于占用空间较大的图片资料，根据本实施例可以大大提高展现速度快。另外，根据预定的策略对用户资料进行管理，尤其是对图片资料进行管理时，不同的场景使用不同的策略，比如根据不同场景选择更新和保存方式，分而治之，充分、合理地利用了客户端的保存资源，提高了用户资料管理的灵活性。并且，利用预定的策略控制图片资料更新的次数，减少了客户端与服务器的交互次数，减低了服务器的通信压力。</p>
    <p>[0096]	虽然图3和图4的管理过程中分别描述了文字资料和图片资料这两种类型的用户资料的管理过程，但是在实际管理过程中，用户A可以在一条用户资料查询请求中同时查询文字资料和图片，这种情况下，IM客户端的处理也和图3和图4类似，只是微博服务器在向IM客户端返回的响应中要同时携带两种类型的用户资料。</p>
    <p>[0097]	本发明实施例还提供了基于泛关系链模型的系统中用户资料的管理装置，该系统以客户端为载体，用户通过客户端进入该系统，且包括服务器，用于为系统用户提供服务。 该管理装置可以位于客户端内部，也可以是与客户端相连接的一个独立的管理装置，并与系统服务器相连用于对系统的用户资料进行管理。</p>
    <p>[0098]	图5为根据本发明实施例的基于泛关系链模型的系统中用户资料的管理装置的结构图。如图5所述，所述管理装置位于系统的客户端侧，包括：</p>
    <p>[0099]	拉取模块501，用于根据登录该客户端用户A的需求从系统的服务器拉取用户资料；</p>
    <p>[0100]	保存模块502，用于将不同类型的用户资料采用不同的保存方式进行保存；</p>
    <p>[0101]	管理模块503，用于根据预定的策略，对保存模块502保存的用户资料进行管理。</p>
    <p>[0102]	用户资料可以是用户A的用户资料，还可以包括用户A感兴趣或者经常关注的用户的资料。</p>
    <p>[0103]	本实施中，以IM客户端为载体的微博系统为例说明基于泛关系链模型的系统中用户资料的管理装置。根据本发明实施例，用户资料的类型至少包括文字资料和图片资料， 在微博系统中，图片资料可以是用户的头像。具体地，保存模块502可以对文字资料和图片资料采用不同的保存方式进行保存，而管理模块503对保存的用户资料的管理可以包括用户资料的查询、更新和/或删除用户资料、和/或向用户A通知用户资料事件。</p>
    <p>[0104]	根据本发明实施例，拉取模块501根据用户A的需求从系统的服务器拉取用户资料与上述步骤201-203类似，在此不再赘述。</p>
    <p>[0105]	根据本发明实施例，保存模块502包括：</p>
    <p>[0106]	类型判断子模块，用于判断用户资料的类型；和</p>
    <p>[0107]	保存子模块，用于根据类型判断子模块判断的用户资料的类型，选择对应的保存方式来保存拉取模块501拉取的用户资料。具体地，当类型判断子模块判断用户资料的类型为文字资料时，则保存子模块选择保存于本地内存的保存方式，并根据选择的保存方式保存文字资料；当类型判断子模块判断拉取的用户资料的类型为图片资料时，则保存子模块根据不同场景选择不同的保存方式，并根据选择的保存方式保存拉取的图片资料。其中， 根据不同场景选择不同的保存方式与上述步骤204类似，在此不再赘述。</p>
    <p>[0108]	根据本发明实施例，由于文字资料和图片资料的存储需求存在差异，采用两个保存子模块可以减少两类用户资料的耦合性，因此保存子模块还可以包括文字资料保存子模块和图片资料保存子模块。</p>
    <p>[0109]	同理，根据本发明实施例，基本资料和图片资料的管理也存在差异，为了减少两类用户资料的耦合性，管理模块503中的预定的策略分为基于文字资料的策略和基于图片资料的策略，可以包括：</p>
    <p>[0110]	文字资料管理子模块，用于对用户资料中的文字资料根据预定的策略进行管理； 和</p>
    <p>[0111]	图片资料管理子模块，用于对用户资料中的图片资料根据预定的策略进行管理。[0112]	进一步地，管理模块503还包括判断子模块，判断来自用户A或服务器的信息中， 用户资料包括文字资料还是图片资料，并将涉及文字资料的信息发给文字资料管理子模块进行管理，将涉及图片资料的信息发给图片资料管理子模块进行管理。</p>
    <p>[0113]	根据本发明实施例，文字资料管理子模块包括：文字资料查询子模块，用于接收判断子模块的关于文字资料的用户资料查询请求，在客户端本地内存中查找待查询用户资料中的文字资料；当找到所述文字资料时，在客户端向用户A返回所述文字资料；当没找到所述文字资料时，客户端向用户A返回查询失败消息。</p>
    <p>[0114]	根据本发明实施例，所述图片资料管理子模块包括：图片资料查询子模块，用于接收判断子模块的关于图片资料的用户资料查询请求，在本地磁盘中查找所述图片资料；当找到所述图片资料后，客户端向用户A展现所述图片资料；当没找到所述图片资料时，客户端向用户A返回查询失败消息。</p>
    <p>[0115]	根据本发明实施例，文字资料管理子模块还包括：文字资料更新子模块，用于每当文字查询子模块收到关于文字资料的用户资料查询请求时，更新一次文字资料。图片资料管理子模块还包括：图片资料更新子模块，用于根据不同的场景更新图片资料。</p>
    <p>[0116]	根据本发明实施例，管理模块503还包括：拉取触发子模块，用于当用户A使用文字资料时，触发拉取模块501从服务器拉取文字资料，并将拉取的文字资料发给文字资料更新子模块。其中，文字资料更新子模块还用于判断客户端本地保存的文字资料是否与新拉取的文字资料一致；如果一致，则不保存新拉取的文字资料；否则，则通知保存模块502 用新拉取的文字资料替换本地保存的文字资料。</p>
    <p>[0117]	所述图片资料更新子模块包括：</p>
    <p>[0118]	场景判断子模块，用于判断待更新的图片资料属于哪种场景；</p>
    <p>[0119]	第一更新子模块，用于当待更新的图片资料属于大批量显示和/或频繁使用的场景时，则每当用户A登录客户端时更新一次所述图片资料；</p>
    <p>[0120]	第二更新子模块，用于当待更新的图片资料属于用户A单个查看的图片资料时， 则用户A查看一次所述单个图片资料更新一次所述图片资料；</p>
    <p>[0121]	第三更新子模块，用于当待更新的图片资料属于登录期间只需显示一次的大批量图片资料时，通知所述拉取触发子模块触发所述拉取模块从服务器拉取所述只需显示一次的图片资料的URL信息并根据拉取的URL信息下载对应的图片文件。</p>
    <p>[0122]	根据本发明实施例，拉取触发子模块还用于：根据第一更新子模块和/或第二更新子模块的请求，触发拉取模块向服务器请求待更新的图片资料的URL信息以及从服务器接收所请求的URL信息，并由拉取模块将请求的URL信息发送给第一更新子模块和/或第二更新子模块；第一更新子模块和/或第二更新子模块还用于判断所请求的URL信息与客户端本地保存的URL信息是否相同；如果不同，则根据所请求的URL信息下载新的图片文件，并通知保存模块502保存请求的URL信息和新的图片文件。</p>
    <p>[0123]	根据本发明实施例，第三更新子模块还用于将下载完的图片文件临时保存并将对于的URL信息保存内存，在用户退出客户端后清除临时保存的图片文件。</p>
    <p>[0124]	根据本发明实施例，管理模块503还包括通知子模块，用于当本地的文字资料变化时，通知文字资料更新事件；当本地的图片资料变化时，通知图片资料更新事件；当下载完只需显示一次的图片文件时，通知下载完成事件。[0125]	根据本发明实施例，管理模块503还包括删除子模块，用于根据用户的请求，删除本地保存的用户资料。</p>
    <p>[0126]	进一步地，管理装置还包括编解码器，位于服务器和拉取模块501之间，用于对来自服务器的文字资料和图片资料进行编码解码，对拉取模块501发送给服务器的数据进行编码解码。</p>
    <p>[0127]	通过以上的管理装置，当用户A查询其他用户的用户资料时，管理装置可以先在 IM客户端本地查询，而不是直接向微博服务器请求用户资料，因此可以更快速地调用用户 A所需要的用户资料，并能快速地展现用户资料。尤其是对于占用空间较大的图片资料，图片资料的展现速度得到很大的提高。另外，由于利用预定的策略对用户资料进行管理，比如不同的场景下的图片资料使用不同的更新和保存方式，分而治之，充分、合理地利用了客户端的保存资源，突出了用户资料管理的灵活性。并且，可以控制更新次数，从而避免重复拉取，减少与微博服务器的交互次数，进而降低了微博服务器的通信压力。</p>
    <p>[0128]	图6为图5中管理装置的逻辑结构示意图。如图6所示，该管理装置主要包括文字资料管理器和头像资料管理器。</p>
    <p>[0129]	具体地，在实现过程中，文字资料管理器可以定义为CTXWBlogContactlnfoMgr， 其实现文字资料管理器对外接口 ITXWBlogContactInfoMgr，对文字资料进行管理，包括文字资料的拉取Fetchl iStWBlogInfo ()、更新UpdateListffBLogInfo O、供用户查询 QueryffBLogInfo ()，以及文字资料更新时通知用户。</p>
    <p>[0130]	较佳地，管理装置还包括资料更新事件接口 ITXWBlogContactlnfoEvtExt，当 CTXWBlogContactlnfoMgr内部的文字资料更新时调用该接口通知用户，而用户可以通过该接口来注册文字资料更新事件。</p>
    <p>[0131]	较佳地，管理装置还包括文字资料更新事件实现类CTXWBlogContactlnfoEvtExt， 用于实现文字资料更新事件接口 ITXWBlogContac&#171;nfoEvtExt。</p>
    <p>[0132]	在实现过程中，头像管理器可以定义为CWBlogCustomerHeadMgr， 其实现头像管理器对外接口 ITXWBlogCustomHeadMgr，对头像进行管理，包括头像的拉取FetchlistWBlogCustomHeadO、更新（包括：头像信息更新 UpdateffBlogCustomHeadInfo O、头像列表更新 UpdateListWBlogCustomHead O、头像强制更新 ForceUpdateWBlogCustomHead O )、供用户查询 QueryCustomHead O，下载头像文件 DownloadUserHeadImage ()，以及头像更新时通知用户。</p>
    <p>[0133]	较佳地，管理装置还包括头像更新事件接口 ITXWBlogCustomHeadEvtExt，在头像管理器CWBlogCustomerHeadMgr内部头像更新时调用该接口通知用户，而用户可以通过该接口来注册头像更新事件。</p>
    <p>[0134]	较佳地，管理装置还包括头像更新事件实现类CTXWBlogCustomHeadEvtExt，实现头像更新事件接口 ITXWBlogCustomHeadEvtExt。</p>
    <p>[0135]	较佳地，管理装置还包括编解码器CCSWBlogContac&#171;nfoCodec，用于与微博服务器交互数据时的编码和解码。具体地，当CTXWBlogContactlnfoMgr和 CWBlogCustomerHeadMgr向微博服务器发送数据时，调用CCSWBlogContacWnfoCodec中的编码器将发送的数据按微博服务器的要求进行编码，当收到微博服务器返回的数据时，调用CCSWBlogContac&#171;nfoCodec中的解码器进行数据解析。</p>
    <p>[0136] 以上所述仅为本发明的较佳实施例而已，并不用以限制本发明，凡在本发明的精神和原则之内所作的任何修改、等同替换和改进等，均应包含在本发明的保护范围之内。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101075939A?cl=zh">CN101075939A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2006年9月28日</td><td class="patent-data-table-td patent-date-value">2007年11月21日</td><td class="patent-data-table-td ">腾讯科技（深圳）有限公司</td><td class="patent-data-table-td ">一种即时通讯客户端的用户资料获取方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101083631A?cl=zh">CN101083631A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2006年5月31日</td><td class="patent-data-table-td patent-date-value">2007年12月5日</td><td class="patent-data-table-td ">阿里巴巴公司</td><td class="patent-data-table-td ">即时通讯中建立联系人列表、管理联系人信息的方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101764868A?cl=zh">CN101764868A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年12月16日</td><td class="patent-data-table-td patent-date-value">2010年6月30日</td><td class="patent-data-table-td ">惠州Tcl移动通信有限公司</td><td class="patent-data-table-td ">通讯录中加入地图图片的方法及移动通信终端</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20060015626">US20060015626</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2004年10月15日</td><td class="patent-data-table-td patent-date-value">2006年1月19日</td><td class="patent-data-table-td ">Mika Hallamaa</td><td class="patent-data-table-td ">Device management system</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=MAWHBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0012240000">H04L12/24</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2012年3月21日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年5月2日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2014年4月16日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/faa00de4c29265a92b3b/CN102387026A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E5%9F%BA%E4%BA%8E%E6%B3%9B%E5%85%B3%E7%B3%BB%E9%93%BE%E6%A8%A1%E5%9E%8B%E7%9A%84%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%94%A8.pdf?id=MAWHBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U1wNEWt3IATCJ8genkxxu-bGoLicg"},"sample_url":"https://www.google.com/patents/reader?id=MAWHBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>