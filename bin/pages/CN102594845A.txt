<!DOCTYPE html><html><head><title>专利 CN102594845A - 一种基于xmpp协议的即时消息传输方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_5115ea495017d9115e613207d3810e5a/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_5115ea495017d9115e613207d3810e5a__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种基于xmpp协议的即时消息传输方法"><meta name="DC.contributor" content="孙庆庆" scheme="inventor"><meta name="DC.contributor" content="张书强" scheme="inventor"><meta name="DC.contributor" content="张毅峰" scheme="inventor"><meta name="DC.contributor" content="朱光辉" scheme="inventor"><meta name="DC.contributor" content="杨洋" scheme="inventor"><meta name="DC.contributor" content="沈彦真" scheme="inventor"><meta name="DC.contributor" content="王开" scheme="inventor"><meta name="DC.contributor" content="王晓姝" scheme="inventor"><meta name="DC.contributor" content="第伟" scheme="inventor"><meta name="DC.contributor" content="缪瑞华" scheme="inventor"><meta name="DC.contributor" content="裴文江" scheme="inventor"><meta name="DC.contributor" content="詹金狮" scheme="inventor"><meta name="DC.contributor" content="东南大学" scheme="assignee"><meta name="DC.date" content="2012-3-29" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种基于XMPP协议的即时消息传输方法，使用开源的Openfire作为服务器，以Spark客户端作为主要客户端框架，采用Java语言在Smack客户端库编写一个基于XMPP协议的客户端，以Xampp软件中的MySQL作为数据库，采用XMPP技术、SOCKS技术、数据库技术和套接字技术，成功实现企业内部以及企业外部的即时消息之间的数据传输。本发明不仅能很好的满足用户的基本需求、管理需求与功能性需求外，还能达到较高的安全性，可扩展性，实现与其他即时通信系统的互联互通。"><meta name="DC.date" content="2012-7-18"><meta name="DC.relation" content="CN:101068257:A" scheme="references"><meta name="DC.relation" content="CN:101431479:A" scheme="references"><meta name="DC.relation" content="CN:101488926:A" scheme="references"><meta name="DC.relation" content="CN:101500210:A" scheme="references"><meta name="DC.relation" content="US:20090248822:A1" scheme="references"><meta name="citation_patent_publication_number" content="CN:102594845:A"><meta name="citation_patent_application_number" content="CN:201210087194"><link rel="canonical" href="https://www.google.com/patents/CN102594845A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102594845A?cl=zh"/><meta name="title" content="专利 CN102594845A - 一种基于xmpp协议的即时消息传输方法"/><meta name="description" content="本发明公开了一种基于XMPP协议的即时消息传输方法，使用开源的Openfire作为服务器，以Spark客户端作为主要客户端框架，采用Java语言在Smack客户端库编写一个基于XMPP协议的客户端，以Xampp软件中的MySQL作为数据库，采用XMPP技术、SOCKS技术、数据库技术和套接字技术，成功实现企业内部以及企业外部的即时消息之间的数据传输。本发明不仅能很好的满足用户的基本需求、管理需求与功能性需求外，还能达到较高的安全性，可扩展性，实现与其他即时通信系统的互联互通。"/><meta property="og:title" content="专利 CN102594845A - 一种基于xmpp协议的即时消息传输方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102594845A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102594845A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=SpiJBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102594845A&amp;usg=AFQjCNF8fHIgJKVTUVi3FFN3dhDLDcO0aQ" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/2263d0f4b9ab6597d07f/CN102594845A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/2263d0f4b9ab6597d07f/CN102594845A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102594845A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102594845A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102594845A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102594845B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102594845A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种基于XMPP协议的即时消息传输方法，使用开源的Openfire作为服务器，以Spark客户端作为主要客户端框架，采用Java语言在Smack客户端库编写一个基于XMPP协议的客户端，以Xampp软件中的MySQL作为数据库，采用XMPP技术、S...</span><span itemprop="url">https://www.google.com/patents/CN102594845A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102594845A - 一种基于xmpp协议的即时消息传输方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102594845A - 一种基于xmpp协议的即时消息传输方法" title="专利 CN102594845A - 一种基于xmpp协议的即时消息传输方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102594845 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210087194</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2012年7月18日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年3月29日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年3月29日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102594845B?hl=zh-CN&amp;cl=zh">CN102594845B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210087194.4, </span><span class="patent-bibdata-value">CN 102594845 A, </span><span class="patent-bibdata-value">CN 102594845A, </span><span class="patent-bibdata-value">CN 201210087194, </span><span class="patent-bibdata-value">CN-A-102594845, </span><span class="patent-bibdata-value">CN102594845 A, </span><span class="patent-bibdata-value">CN102594845A, </span><span class="patent-bibdata-value">CN201210087194, </span><span class="patent-bibdata-value">CN201210087194.4</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%AD%99%E5%BA%86%E5%BA%86%22">孙庆庆</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BC%A0%E4%B9%A6%E5%BC%BA%22">张书强</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BC%A0%E6%AF%85%E5%B3%B0%22">张毅峰</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%9C%B1%E5%85%89%E8%BE%89%22">朱光辉</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%9D%A8%E6%B4%8B%22">杨洋</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%B2%88%E5%BD%A6%E7%9C%9F%22">沈彦真</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%8E%8B%E5%BC%80%22">王开</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%8E%8B%E6%99%93%E5%A7%9D%22">王晓姝</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%AC%AC%E4%BC%9F%22">第伟</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%BC%AA%E7%91%9E%E5%8D%8E%22">缪瑞华</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%A3%B4%E6%96%87%E6%B1%9F%22">裴文江</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%A9%B9%E9%87%91%E7%8B%AE%22">詹金狮</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E4%B8%9C%E5%8D%97%E5%A4%A7%E5%AD%A6%22">东南大学</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102594845A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102594845A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102594845A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (5),</span> <span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (3),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=SpiJBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210087194&amp;usg=AFQjCNFBc2NZxmJX6p12bLxVcrS0y5cQHg"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=SpiJBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102594845A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNFzHpZA9-Blf7_5z_UMyQOLsK_2Uw"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT114097075" lang="ZH" load-source="patent-office">一种基于xmpp协议的即时消息传输方法</invention-title>
      </span><br><span class="patent-number">CN 102594845 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA98445176" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种基于XMPP协议的即时消息传输方法，使用开源的Openfire作为服务器，以Spark客户端作为主要客户端框架，采用Java语言在Smack客户端库编写一个基于XMPP协议的客户端，以Xampp软件中的MySQL作为数据库，采用XMPP技术、SOCKS技术、数据库技术和套接字技术，成功实现企业内部以及企业外部的即时消息之间的数据传输。本发明不仅能很好的满足用户的基本需求、管理需求与功能性需求外，还能达到较高的安全性，可扩展性，实现与其他即时通信系统的互联互通。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(1)</span></span></div><div class="patent-text"><div mxw-id="PCLM44442842" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1. 一种基于XMPP协议的即时消息传输方法，其特征在于：使用开源的Openfire作为服务器，以Spark客户端作为主要框架，以MySQL作为数据库，采用XMPP技术、SOCKS技术、 数据库技术，套接字技术和网关技术，在Smack客户端库建立一个基于XMPP协议的客户端， 实现企业内部以及企业外部的即时消息之间的数据传输；其中：所述基于XMPP协议的客户端进行数据传输的过程如下：A、实现用户注册功能：步骤Al :采用用户注册模块初始化注册界面；用户在注册界面中输入用户名、密码、确认密码和服务器的IP，将上述信息发送至用户注册模块；步骤A2 :用户注册模块验证用户输入信息是否有效；当用户输入的数据无误，则继续下一步骤；步骤A3 :读取服务器主机名和端口号；客户端通过协议解析模块将用户注册信息转换为XMPP请求数据；步骤A4 :客户端通过底层通信模块与服务器建立连接，向服务器发送用户注册请求； 步骤A5 :通过底层通信模块监听来自服务器的响应，客户端启动监听时延；步骤A6 :判断在时延内客户端是否收到来自服务器的响应，若收到响应，进一步判定该响应是否有误；若没有错误，则协议解析模块处理响应，并在客户端界面显示用户注册成功，结束用户注册操作；若响应有误，则客户端界面显示用户注册失败，结束用户注册操作；B、实现用户登录功能：步骤BI :启动客户端登陆界面后，采用用户登录模块进行初始化工作；步骤B2 :用户在客户端的用户登录界面输入用户名、密码和服务器的IP，将上述信息发送至用户登录模块；步骤B3 :用户登录模块获取输入信息，然后读取服务器的主机名和密码；步骤B4 :通过客户端后台的协议解析模块将登录信息解析为XMPP数据请求包；步骤B5 :通过底层通信模块与服务器建立连接，向服务器发送用户登录请求；步骤B6 :客户端创建新的监听,并设立时延；步骤B7 :判断在时延内客户端是否收到来自服务器的响应，若收到，进一步判断该响应是否有误，若没有错误，则协议解析模块处理响应，并在客户端界面显示用户登录成功， 结束用户登录操作；若响应有误，则客户端界面显示用户登录失败，结束用户登录操作；C、实现状态订阅功能：步骤Cl :客户端与服务器建立连接；步骤C2 :客户端向服务器申请获取好友名册中好友名单；步骤C3 :服务器判断好友名单中的第一个好友是否在线，若在线，则产生该好友上线的通知XML流发送给登录用户并告知该好友用户登录的状态，若不在线，继续判断第二个好友是否在线，依次类推，直至查询完好友名单中的所有好友；D、实现好友名册管理功能：步骤Dl :客户端与服务器建立连接；步骤D2 :客户端向服务器提出查询好友列表请求；步骤D3 :服务器响应请求并以登录用户的JID为参数在好友列表查找其好友的JID，然后再根据查询数据库得到的好友信息结果中的好友JID，查询他们的在线状态，然后将这些信息组合成XMPP协议的XML流返回给登录用户；步骤D4 :客户端显示好友列表；E、实现添加好友功能：步骤El :客户端前端向服务器发出添加好友的请求；步骤E2 :客户端的协议解析模块解析出要添加的好友的JID ；步骤E3 :客户端在本地搜索要添加的好友是否存在，若存在，则返回前端提示该用户已是好友，无需添加，结束操作；若不存在，则通过底层通信模块向服务器请求，通过服务器的数据访问模块以JID为条件在数据库中的用户表中查找该好友；步骤E4 :若数据库中的用户表中存在该好友，则服务器端将结果返回给客户端，并将所述JID插入到好友列表中，通过底层通信模块，返回包含有该好友的信息的XML，提示添加好友成功，结束操作；步骤E5:若数据库中的用户表中不存在该好友，则向客户端返回添加失败的XML流，提示不存在此用户；F、实现删除好友功能：步骤Fl :客户端前端向服务器发出删除好友的请求；步骤F2 :服务器在收到客户端发来的请求之后，通过协议解析模块解析XML流，并获取需要删除的好友的JID;步骤F3 :服务器通过数据库访问模块在数据库的好友列表中查询该用户，并将其删除；步骤F4 :若删除成功，则向客户端返回相应的XML流，提示客户端好友删除成功，结束操作；步骤F5 :若删除失败，则向客户端返回相应的XML流，提示客户端删除失败；G、实现客户端与服务器之间的会话功能：步骤Gl :源客户端通过底层通信功能模块向第一 XMPP服务器发送建立会话的请求； 步骤G2 :第一 XMPP服务器在收到源客户端的请求之后通过TLS，SASL进行安全、身份验证，若通过，则向源客户端返回确认建立连接的响应；步骤G3 :源客户端通过协议解析功能模块获取客户端界面的消息并将其封装成XMPP 数据包，然后通过底层通信功能模块向XMPP服务器发送会话内容；步骤G4 :第一 XMPP服务器通过协议解析模块进行XMPP数据包解析，获取数据包中目的客户端的JID，通过数据库访问模块查询数据库；步骤G5 :若目的客户端在本地服务器中，并且目的客户端在线，则直接将数据包转发给目的客户端，结束会话并关闭连接；若目的客户端不在线，则将XMPP数据包通过数据库访问模块将XMPP数据包存入第一 XMPP服务器的数据库，待目的客户端上线后进行数据转发；步骤G6 :若目的客户端不在本地服务器中，则服务器向DNS服务器发送申请解析域名的请求；步骤G7 :采用DNS服务器搜索目的客户端所在的第二 XMPP服务器，同时向第一 XMPP服务器返回解析后的域名；步骤G8 :第一 XMPP服务器通过TCP三次握手、TLS、SASL以及服务器回拨功能进行安全、身份验证，向第二 XMPP服务器发送连接请求；步骤G911 :第二 XMPP服务器通过底层通信模块向第一 XMPP服务器发送请求响应，若目的客户端在线状态，则建立二者之间的连接，转向步骤GlO ;若目的客户端不在线，则将 XMPP数据包存入第一 XMPP服务器的数据库中，待目的客户端上线后再将该信息转发；步骤GlO :第一 XMPP服务器向第二 XMPP服务器转发由源客户端发送的XMPP数据包； 步骤Gll :第二 XMPP服务器直接将XMPP数据包转发到目的客户端，结束会话并关闭连接;步骤G12 :源客户端通过协议解析模块获取XMPP数据包之后，通过协议网关，将数据包发送到非XMPP系统的服务器，再由非XMPP系统的服务器将数据包转发到非XMPP系统的客户端；H、实现文件传输功能：步骤Hl :源客户端向XMPP服务器发送向目的客户端传输文件的请求；步骤H2 =XMPP服务器通过数据访问模块访问数据库判断目的客户端是否属于本地服务器，若目的客户端不属于本地服务器，则将请求转向代理服务器，转向步骤H5 ；若目的客户端属于本地服务器，则判断目的客户端是否在线：若在线，则向目的客户端发送源客户端文件传输的请求，并向源客户端返回目的客户端的JID，转向步骤H3 ;若不在线，则将传输文件请求存放在服务器的缓冲区，等目的客户端在线时，直接从缓冲区提取文件并转发给目的客户端，转向步骤H12 ；步骤H3 ：目的客户端响应XMPP服务器传输文件的请求，XMPP服务器将响应发送给源客户端；步骤H4 :源客户端向XMPP服务器传输文件，XMPP服务器直接将文件转发给目的客户端，转向步骤H12 ；步骤H5 ：目的客户端为代理服务器打开一个TCP socket连接；步骤H6 :代理服务器通过SOCKS 5与目的客户端建立连接，设定目标地址和目标端口参数的值；步骤H7 :代理服务器通过SOCKS 5发送连接成功并确认至源的客户端；步骤HS :源客户端为代理服务器打开一个TCPsocket连接；步骤H9 :源客户端通过SOCKS 5向代理服务器请求建立连接，设定目标地址和目标端口参数的值；步骤HlO :若成功建立连接，源客户端通过SOCKS 5发送连接成功确认至目的客户端端;步骤Hll :源客户端和目的客户端通过SOCKS 5代理服务器，再由SOCKS 5服务器转发给XMPP服务器可以成功实现文件的传输；步骤H12 :文件成功传输之后，关闭源客户端和目的客户端之间的连接；I、实现&#38914;互相通信功能：XMPP系统的客户端发送消息给非XMPP系统的客户端， 首先指明一个包含非XMPP系统名的JID ；其次，XMPP服务器将数据发送到指定的传输器应用程序，如果传输器是本地的，则 XMPP服务器直接与其进行通信；如果传输器不在本地运行，本地服务器发送一个包给远程服务器，该远程服务器将会把包发送给指定的传输器；一旦传输器接收到XML包，即把信息转变成另一个IM网络中可以识别的本地包，并把这个本地包传送到那个&#38914;网络中。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES50194089" lang="ZH" load-source="patent-office" class="description">
    <p>一种基于XMPP协议的即时消息传输方法</p>
    <p>技术领域</p>
    <p>[0001]	本发明是基于企业即时消息技术在融合通信中的应用，在网页版的融合通信&#32066;端实现与企业即时通信系统之间连接的功能。</p>
    <p>背景技术</p>
    <p>[0002]	信息技术发展到今天，人们希望方便快捷、无处不在地享用网络信息技术，通信与计算机技术的融合应用是信息产业发展的趋势，简单的、安全的、费用低廉的，可以随时随地接入的融合通信，是人们的最高期望。</p>
    <p>[0003]	技术的不断成熟，使得即时消息系统越来越丰富，因而当人们需要使用多个聊天工具时，就使得人们使用的方便性降低，而且对计算机资源的消耗也大大增加。此背景下， 开发人员就希望能将多种即时消息工具集成到一起，于是就诞生了多协议&#38914;技木。例如， 国内My&#38914;，同时支持MSN、QQ等五种协议；国外的Miranda IM支持ICQ、AM、MSN等协议； 开源项目Open fire和Spark支持多操作系统，可以通过插件方式对即时消息协议进行扩充，而且Spark开源代码中用户界面部分和Openfire负责后台协议解析进行通信。</p>
    <p>[0004]	一般地，目前支持多协议即时消息的软件产品都是以客户端软件的方式提供给用户，用户在使用之前需要在个人的电脑上进行安装设置。企业级即时通信系统的出现，在传统的即时通信的灵活、快捷、方便等优势的基础上，更重要的在安全性、可管理性、可追溯性、可扩展性等方面都得到了一定程度的保障。由于各大厂商都有自己的IM产品，出于各自利益的考虑，大部分都采用了自己私有的通信协议，这在一定程度上阻碍了使用不同即时通信系统的企业与企业之间的沟通交流，因此在企业级即时通信的产品中急需�种使用开放式的即时通信协议的EM以实现不同工具之间的互通互联，使EM更加便利。</p>
    <p>[0005]	UC (Unified Communication,融合通信)，也常翻译为统一通信。融合通信是指， 把计算机技术与传统通信技术融合一体的新通信模式，融合计算机网络与传统通信网络在一个网络平台上，实现电话、传真、数据传输、音视频会议、呼叫中心、即时通信等众多应用服务。融合通信将话音、视频、短信、即时消息等多种应用融合在一起，其手段也是丰富多彩的，可以体现在网络的融合、终端的融合、应用的融合等各个层面。</p>
    <p>[0006]	以下介绍�下本发明所涉及的几种网络技术：</p>
    <p>I、XMPP 技术：</p>
    <p>XMPP(Extensible Messaging and Presence Protocol,可扩展消息与出席协议）是一种基于可扩展标记语言XML的开放式协议。�个XML流相当于�个会话期间所有XML节的 �个信封，客户端或服务器发送的所有XML文本连缀在一起,从〈stream〉到〈/stream〉构成了一个完整的XML文档，其中的stream标签就是XML Stream。在〈stream〉与〈/stream〉 中间的那些&lt;message&gt;〈/message&gt;这样的XML元素就是XML Stanza (XML节)。XMPP协议的核心协议通信的基本模式就是先建立�个stream，通过TCP/IP连接到服务器，然后协商 TLS和SASL进行身份验证和安全协商，通信过程就是在网络上分片断发送XML Stanza, 一个接�个。服务器根据客户端发送的信息以及程序的逻辑，发送XML Stanza给客户端。通信的最后阶段是〈/stream〉关闭流，关闭TCP/IP连接。这个流协议是XMPP的即时通讯指令的传递手段，也是一个非常重要的可以被进一步利用的网络基础协议。所以，XMPP就是在TCP连接上传输XML流。</p>
    <p>[0007]	2、SOCKS 技术：</p>
    <p>SOCKS代理工作在TCP/IP模型的线路层（即应用层和传输层之间)。SOCKS 5技术，其具体工作方案为客户端首先和SOCKS 5代理服务器建立连接，然后客户端所有的数据包都以TCP数据包的方式发送到代理服务器，然后代理服务器帮助转发所有的请求。对于接收端来说，它认为所有的请求都来自代理服务器，把代理服务器作为客户进行通信，代理服务器接收远端发送来的消息后，根据客户列表把数据分发给不同的客户。</p>
    <p>[0008]	其工作流程为：</p>
    <p>(O 客户端向代理服务器建立TCP连接；</p>
    <p>(2)	向代理服务器发送代理请求信息；</p>
    <p>(3)	接收代理的应答，根据相应标志判断是否允许代理；</p>
    <p>(4)	客户端向代理发送协商请求信息及相关端口信息；</p>
    <p>(5)	代理返回协商请求结果及代理端口等信息；</p>
    <p>(6)	客户端将数据发送到代理服务器并由其代理进行数据传送等操作。</p>
    <p>[0009]	3、数据库技术：</p>
    <p>数据库技术是该系统的一个核心技术，是一种计算机辅助管理数据的方法，它研究如何组织和存储数据，如何高效地获取和处理数据。通过对数据库结构、存储、设计、管理以及应用的基本理论和实现方法的研究，并利用这些理论来实现对数据库中的数据进行处理、 分析和理解的技术。</p>
    <p>[0010]	数据库中常见的数据模型主要有层次模型，网状模型和关系模型3种。MYSQL数据库是一个小型关系型数据库管理系统。</p>
    <p>[0011]	4、套接字技术</p>
    <p>套接字，也称之为〃socket"，用于描述IP地址和端口，是一个通信链的句柄。应用程序通常通过“套接字”向网络发出请求或者应答网络请求。</p>
    <p>[0012]	Socket实质上提供了进程通信的端点，进程通信之前，双方首先必须各自创建一个端点，否则是没有办法建立联系并相互通信的，正如打电话之前，双方必须各自拥有一台电话机一样。在网间网内部，每一个socket用一个半相关描述：（协议，本地地址，本地端口），一个完整的socket有一个本地唯一的socket号，由操作系统分配。</p>
    <p>[0013]	根据连接启动的方式以及本地套接字要连接的目标，套接字之间的连接过程可以分为三个步骤：服务器监听，客户端请求，连接确认。</p>
    <p>(I)服务器监听：是服务器端套接字并不定位具体的客户端套接字，而是处于等待连接的状态，实时监控网络状态。</p>
    <p>[0014]	(2)客户端请求：是指由客户端的套接字提出连接请求，要连接的目标是服务器端的套接字。为此，客户端的套接字必须首先描述它要连接的服务器的套接字，指出服务器端套接字的地址和端口号，然后就向服务器端套接字提出连接请求。</p>
    <p>[0015]	(3)连接确认：是指当服务器端套接字监听到或者说接收到客户端套接字的连接请求，它就响应客户端套接字的请求，建立一个新的线程，把服务器端套接字的描述发给客户端，一旦客户端确认了此描述，连接就建立好了。服务器端套接字继续处于监听状态，继续接收其他客户端套接字的连接请求。</p>
    <p>[0016]	5、网关技术</p>
    <p>网关，又称网间连接器、协议转换器。网关在传输层上以实现网络互连，是最复杂的网络互连设备，仅用于两个高层协议不同的网络互连。网关的结构也和路由器类似，不同的是互连层。采用网关技术，一方面满足了不同用户群之间相互交流的需要，另�方面对于&#38914;服务用户来说，只需对外提供一个信息转换的网关接入点，无需对原有协议作过多改变。</p>
    <p>[0017]	XMPP网关的主要功能是把XMPP消息翻译成使用非XMPP的&#38914;的通信格式，同时把非XMPP的IM系统返回的数据翻译回XMPP消息。非XMPP的IM有A&#38914;、ICQ、MSN、QQ等。</p>
    <p>[0018]	XMPP系统中网关是通过传输器组件（Transport)实现的。其工作原理为：XMPP系统的客户端发送消息给非XMPP系统的客户端，首先指明�个包含非XMPP系统名的JID，而不是直接发送给外部&#38914;系统上的用户。其次，XMPP服务器将数据发送到指定的传输器应用程序，如果传输器是本地的，则XMPP服务器直接与其进行通信；如果传输器不在本地运行， 本地服务器发送�个包给远程服务器，该远程服务器将会把包发送给指定的传输器。一旦传输器接收到XML包，它把信息“转变”成另�个IM网络中可以识别的本地包，并把这个本地包传送到那个&#38914;网络中。</p>
    <p>发明内容</p>
    <p>[0019]	本发明所要解决的技术问题是针对使用不同即时通信系统的企业与企业之间的沟通交流的问题，基于XMPP协议及其扩展协议，设计�种基于XMPP协议的即时消息传输技术的方法。</p>
    <p>[0020]	本发明为解决上述技术问题，采用以下技术方案：</p>
    <p>一种基于XMPP协议的即时消息传输方法,使用开源的Openfire作为服务器，以Spark 客户端作为主要框架，以MySQL作为数据库，采用XMPP技术、SOCKS技术、数据库技术，套接字技术和网关技术，在Smack客户端库建立一个基于XMPP协议的客户端，实现企业内部以及企业外部的即时消息之间的数据传输；其中：</p>
    <p>所述基于XMPP协议的客户端进行数据传输的过程如下：</p>
    <p>A、实现用户注册功能：</p>
    <p>步骤Al :采用用户注册模块初始化注册界面；用户在注册界面中输入用户名、密码、确认密码和服务器的IP，将上述信息发送至用户注册模块；</p>
    <p>步骤A2 :用户注册模块验证用户输入信息是否有效；当用户输入的数据无误，则继续下�步骤；</p>
    <p>步骤A3 :读取服务器主机名和端口号；客户端通过协议解析模块将用户注册信息转换为XMPP请求数据；</p>
    <p>步骤A4 :客户端通过底层通信模块与服务器建立连接，向服务器发送用户注册请求； 步骤A5 :通过底层通信模块监听来自服务器的响应，客户端启动监听时延；</p>
    <p>步骤A6 :判断在时延内客户端是否收到来自服务器的响应，若收到响应，进�步判定该响应是否有误；若没有错误，则协议解析模块处理响应，并在客户端界面显示用户注册成功，结束用户注册操作；若响应有误，则客户端界面显示用户注册失败，结束用户注册操作；</p>
    <p>B、实现用户登录功能：</p>
    <p>步骤BI :启动客户端登陆界面后，采用用户登录模块进行初始化工作；</p>
    <p>步骤B2 :用户在客户端的用户登录界面输入用户名、密码和服务器的IP，将上述信息发送至用户登录模块；</p>
    <p>步骤B3 :用户登录模块获取输入信息，然后读取服务器的主机名和密码；</p>
    <p>步骤B4 :通过客户端后台的协议解析模块将登录信息解析为XMPP数据请求包；</p>
    <p>步骤B5 :通过底层通信模块与服务器建立连接，向服务器发送用户登录请求；</p>
    <p>步骤B6 :客户端创建新的监听,并设立时延；</p>
    <p>步骤B7 :判断在时延内客户端是否收到来自服务器的响应，若收到，进一步判断该响应是否有误，若没有错误，则协议解析模块处理响应，并在客户端界面显示用户登录成功， 结束用户登录操作；若响应有误，则客户端界面显示用户登录失败，结束用户登录操作；</p>
    <p>C、实现状态订阅功能：</p>
    <p>步骤Cl :客户端与服务器建立连接；</p>
    <p>步骤C2 :客户端向服务器申请获取好友名册中好友名单；</p>
    <p>步骤C3 :服务器判断好友名单中的第一个好友是否在线，若在线，则产生该好友上线的通知XML流发送给登录用户并告知该好友用户登录的状态，若不在线，继续判断第二个好友是否在线，依次类推，直至查询完好友名单中的所有好友；</p>
    <p>D、实现好友名册管理功能：</p>
    <p>步骤Dl :客户端与服务器建立连接；</p>
    <p>步骤D2 :客户端向服务器提出查询好友列表请求；</p>
    <p>步骤D3 :服务器响应请求并以登录用户的JID为参数在好友列表查找其好友的JID，然后再根据查询数据库得到的好友信息结果中的好友JID，查询他们的在线状态，然后将这些信息组合成XMPP协议的XML流返回给登录用户；</p>
    <p>步骤D4 :客户端显示好友列表；</p>
    <p>E、实现添加好友功能：</p>
    <p>步骤El :客户端前端向服务器发出添加好友的请求；</p>
    <p>步骤E2 :客户端的协议解析模块解析出要添加的好友的JID ；</p>
    <p>步骤E3 :客户端在本地搜索要添加的好友是否存在，若存在，则返回前端提示该用户已是好友，无需添加，结束操作；若不存在，则通过底层通信模块向服务器请求，通过服务器的数据访问模块以JID为条件在数据库中的用户表中查找该好友；</p>
    <p>步骤E4 :若数据库中的用户表中存在该好友，则服务器端将结果返回给客户端，并将所述JID插入到好友列表中，通过底层通信模块，返回包含有该好友的信息的XML，提示添加好友成功，结束操作；</p>
    <p>步骤E5 :若数据库中的用户表中不存在该好友，则向客户端返回添加失败的XML流，提示不存在此用户；</p>
    <p>F、实现删除好友功能：</p>
    <p>步骤Fl :客户端前端向服务器发出删除好友的请求；</p>
    <p>步骤F2 :服务器在收到客户端发来的请求之后，通过协议解析模块解析XML流，并获取需要删除的好友的JID;</p>
    <p>步骤F3 :服务器通过数据库访问模块在数据库的好友列表中查询该用户，并将其删</p>
    <p>除；</p>
    <p>步骤F4 :若删除成功，则向客户端返回相应的XML流，提示客户端好友删除成功，结束操作；</p>
    <p>步骤F5 :若删除失败，则向客户端返回相应的XML流，提示客户端删除失败；</p>
    <p>G、实现客户端与服务器之间的会话功能：</p>
    <p>步骤Gl :源客户端通过底层通信功能模块向第一 XMPP服务器发送建立会话的请求； 步骤G2 :第一 XMPP服务器在收到源客户端的请求之后通过TLS，SASL进行安全、身份验证，若通过，则向源客户端返回确认建立连接的响应；</p>
    <p>步骤G3 :源客户端通过协议解析功能模块获取客户端界面的消息并将其封装成XMPP 数据包，然后通过底层通信功能模块向XMPP服务器发送会话内容；</p>
    <p>步骤G4 &#8226;&#8226;第一 XMPP服务器通过协议解析模块进行XMPP数据包解析，获取数据包中目的客户端的JID，通过数据库访问模块查询数据库；</p>
    <p>步骤G5 :若目的客户端在本地服务器中，并且目的客户端在线，则直接将数据包转发给目的客户端，结束会话并关闭连接；若目的客户端不在线，则将XMPP数据包通过数据库访问模块将XMPP数据包存入第一 XMPP服务器的数据库，待目的客户端上线后进行数据转发；</p>
    <p>步骤G6 :若目的客户端不在本地服务器中，则服务器向DNS服务器发送申请解析域名的请求；</p>
    <p>步骤G7 :采用DNS服务器搜索目的客户端所在的第二 XMPP服务器，同时向第一 XMPP服务器返回解析后的域名；</p>
    <p>步骤G8 :第一 XMPP服务器通过TCP三次握手、TLS、SASL以及服务器回拨功能进行安全、身份验证，向第二 XMPP服务器发送连接请求；</p>
    <p>步骤G911 :第二 XMPP服务器通过底层通信模块向第一 XMPP服务器发送请求响应，若目的客户端在线状态，则建立二者之间的连接，转向步骤GlO ;若目的客户端不在线，则将 XMPP数据包存入第一 XMPP服务器的数据库中，待目的客户端上线后再将该信息转发；</p>
    <p>步骤GlO :第一 XMPP服务器向第二 XMPP服务器转发由源客户端发送的XMPP数据包； 步骤Gll :第二 XMPP服务器直接将XMPP数据包转发到目的客户端，结束会话并关闭连</p>
    <p>接;</p>
    <p>步骤G12 :源客户端通过协议解析模块获取XMPP数据包之后，通过协议网关，将数据包发送到非XMPP系统的服务器，再由非XMPP系统的服务器将数据包转发到非XMPP系统的客户端；</p>
    <p>H、实现文件传输功能：</p>
    <p>步骤Hl :源客户端向XMPP服务器发送向目的客户端传输文件的请求；</p>
    <p>步骤H2 =XMPP服务器通过数据访问模块访问数据库判断目的客户端是否属于本地服务器，若目的客户端不属于本地服务器，则将请求转向代理服务器，转向步骤H5 ；</p>
    <p>若目的客户端属于本地服务器，则判断目的客户端是否在线：若在线，则向目的客户端发送源客户端文件传输的请求，井向源客户端返回目的客户端的JID，转向步骤H3 ;若不在线，则将传输文件请求存放在服务器的缓冲区，等目的客户端在线时，直接从缓冲区提取文件并转发给目的客户端，转向步骤H12 ；</p>
    <p>步骤H3 ：目的客户端响应XMPP服务器传输文件的请求，XMPP服务器将响应发送给源客户端；</p>
    <p>步骤H4 :源客户端向XMPP服务器传输文件，XMPP服务器直接将文件转发给目的客户端，转向步骤H12 ；</p>
    <p>步骤H5 ：目的客户端为代理服务器打开一个TCP socket连接；</p>
    <p>步骤H6 :代理服务器通过SOCKS 5与目的客户端建立连接，设定目标地址和目标端口参数的值；</p>
    <p>步骤H7 :代理服务器通过SOCKS 5发送连接成功并确认至源的客户端；</p>
    <p>步骤HS :源客户端为代理服务器打开一个TCPsocket连接；</p>
    <p>步骤H9 :源客户端通过SOCKS 5向代理服务器请求建立连接，设定目标地址和目标端口参数的值；</p>
    <p>步骤HlO :若成功建立连接，源客户端通过SOCKS 5发送连接成功确认至目的客户端</p>
    <p>端;</p>
    <p>步骤Hll :源客户端和目的客户端通过SOCKS 5代理服务器，再由SOCKS 5服务器转发给XMPP服务器可以成功实现文件的传输；</p>
    <p>步骤H12 :文件成功传输之后，关闭源客户端和目的客户端之间的连接；</p>
    <p>I、实现&#38914;互相通信功能：XMPP系统的客户端发送消息给非XMPP系统的客户端， 首先指明一个包含非XMPP系统名的JID ；</p>
    <p>其次，XMPP服务器将数据发送到指定的传输器应用程序，如果传输器是本地的，则 XMPP服务器直接与其进行通信；如果传输器不在本地运行，本地服务器发送一个包给远程服务器，该远程服务器将会把包发送给指定的传输器；</p>
    <p>一旦传输器接收到XML包，即把信息转变成另一个IM网络中可以识别的本地包，并把这个本地包传送到那个&#38914;网络中。</p>
    <p>[0021]	本发明采用以上技术方案具有以下技术效果：</p>
    <p>采用本发明的方法不仅能够很好的满足用户的基本需求、管理需求与功能性需求外， 而且达到较高的安全性，可扩展性，实现与其他即时通信系统的互联互通。</p>
    <p>附图说明		[0022]	图I	:本发明的网络架构图。[0023]	图2	:本发明架构的拓扑连接图。[0024]	图3	=XML流传输过程分层结构示意图。[0025]	图4	:客户端功能图。[0026]	图5	:用户注册登录图。[0027]	图6	:用户登录流程图。[0028]	图7	:好友上线通知流程图。[0029]	图8	:获取并显示好友列表功能流程图。[0030]	图9	:添加好友流程图。[0031]	图10	:删除好友流程图。[0032]	图11	:发送消息流程图。[0033]	图12	:接收消息流程图。[0034]	图13	:文件传输功能流程图。[0035]	图14	：IM系统互相通信网络图。具体实施方式		[0036]	下面结合附图对本发明的技术方案进行详细的说明	</p>
    <p>图I是本发明的网络架构图，由其可知，本发明用的是基于XMPP协议的开源的 Openfire作为服务器并将其部署到Eclipse平台里并成功运行，实现用户的注册以及数据库的连接等功能。而客户端是在Spark客户端的基础上，根据企业内部通信的要求，开发出的符合企业要求的客户端。</p>
    <p>[0037]	图2是本发明架构的拓扑连接图，由其可知，本发明采用Client&#8212;Sever架构进行实现的。在XMPP中定义了三个角色：客户端、服务器、网关。其中，客户端通过TCP的方式使用XMPP访问服务器，服务器也使用TCP的方式进行通信。</p>
    <p>[0038]	图3是XML流传输过程分层结构示意图，由其可知，XML流在客户端和服务器之间分层传输的过程。</p>
    <p>[0039]	图4是基于XMPP协议的客户端功能图，由其可知，本系统客户端需要设计实现的各个功能。</p>
    <p>[0040]	图5是客户端用户注册流程图，由其可知，用户在客户端界面注册时，数据从客户端到服务器以及从服务器到客户端被处理的整个流程，负责新用户的注册处理。</p>
    <p>[0041]	步骤01 :用户注册模块初始化注册界面；</p>
    <p>步骤02:用户在注册界面中输入用户名、密码、确认密码和服务器的IP，点击注册按</p>
    <p>钮；</p>
    <p>步骤03 :用户注册模块监听来自鼠标的请求，并从输入框中获取输入信息同时进行验证イ目息是否有效;</p>
    <p>步骤04 :若用户输入的数据有误，则提示用户输入有误；如果用户输入的数据无误，则继续下�步骤；</p>
    <p>步骤05 :读取服务器主机名和端口号；</p>
    <p>步骤06 :客户端通过协议解析模块将用户注册信息转换为XMPP请求数据；</p>
    <p>步骤07 :客户端通过底层通信模块建立连接，向服务器发送用户注册请求；</p>
    <p>步骤08 :通过底层通信模块监听来自服务器的响应，客户端启动监听时延；</p>
    <p>步骤09 :在时延内客户端是否收到来自服务器的响应，若收到，判定响应是否有误，若没有错误，则协议解析模块处理响应，并在客户端界面显示用户注册成功，转向步骤11 ; 步骤10 :若响应有误，则客户端界面显示用户注册失败，转向步骤11 ；</p>
    <p>步骤11:结束用户注册操作。</p>
    <p>[0042]	图6是客户端用户登录流程图，由其可知，用户在客户端登录时，数据从客户端到服务器以及从服务器到客户端被处理的整个流程。登录验证服务是对试图登录的客户端进行权限验证。[0043]	步骤01 :启动客户端登陆界面后，用户登录模块进行初始化工作；</p>
    <p>步骤02:用户在客户端的用户登录界面输入用户名、密码和服务器的IP，填写完毕之后点击登录按钮；</p>
    <p>步骤03 :用户登录模块监听到鼠标操作事件，从登录界面的输入框中获取输入信息， 然后读取服务器的主机名和密码；</p>
    <p>步骤04 :通过客户端后台的协议解析模块将登录信息解析为XMPP数据请求包；</p>
    <p>步骤05 :通过底层通信模块建立连接，向服务器发送用户登录请求；</p>
    <p>步骤06 :客户端创建新的监听,并设立时延；</p>
    <p>步骤07 :在时延内客户端是否收到来自服务器的响应，若收到，判定响应是否有误，若没有错误，则协议解析模块处理响应，并在客户端界面显示用户登录成功，转向步骤09 ； 步骤08 :若响应有误，则客户端界面显示用户登录失败，转向步骤09 ；</p>
    <p>步骤09:结束用户登录操作。</p>
    <p>[0044]	状态订阅：一个用户可以订阅其他好友的在线信息，一个订阅本质上是被订阅者同意发送在线状态改变给订阅者。这个信息同时存储在订阅者和被订阅者的名单中。当用户通过认证并在服务器上创建一个会话时，用户的在线信息被存放到服务器的好友列表管理器中。当在线状态改变时，〈Presence/〉包将被服务器处理，服务器在好友名单中进行查询，并将在线信息状态包发送给所有订阅用户在线状态的实体。</p>
    <p>[0045]	在用户成功登录到XMPP服务器之后，默认状态显示为在线。但是用户可以根据自己的需要来改变自己的状态，并且立即通知好友列表中的每一个联系人。此时只需客户端向服务器发送改变状态的通知，内容可以为：忙，暂时离开或者其它用户想要显示的信息。 这时服务器便会向该用户的好友列表的成员发送载有相应信息的XML流。</p>
    <p>[0046]	图7是客户端好友上线通知流程图，由其可知，好友上线状态被处理后通过服务器在用户端显示的整个流程。</p>
    <p>[0047]	当用户登录到服务器端的时候，应当通知其所有的好友。在花名册服务中服务器端己经获得了登录用户的好友列表，因此服务器端此时可以根据其好友列表产生相应的通知并以XML流形式发送。</p>
    <p>[0048]	以下为实现流程(客户端已经成功与服务器建立连接）：</p>
    <p>步骤01 :客户端向服务器好友名册中申请获取好友名单；</p>
    <p>步骤02 :服务器判断好友是否在线，若在线，则产生好友上线的通知XML流发送给登录用户并告知各位好友用户登录的状态，转向04 ；</p>
    <p>步骤03 :若不在线，则查询好名名单的下一位好友，转向02 ；</p>
    <p>步骤04 :结束该功能。</p>
    <p>[0049]	图8是客户端获取并显示好友列表流程图，由其可知，好友列表数据通过服务器处理并在用户端显示的整个流程。</p>
    <p>[0050]	好友列表功能的实现是在用户登录到服务器上之后立即发生的服务，该项功能的目的在于通过查询得到自己的好友名册列表，服务器以登录用户的JID为参数在好友列表查找其好友的JID。然后再根据查询数据库得到的好友信息结果中的好友JID，查询他们的在线状态，然后将这些信息组合成XMPP协议的XML流返回给用户，用户将好友及其状态列表在客户端显示出来。[0051]	以下为好友列表获取及显示的流程(客户端已经成功与服务器建立连接）：</p>
    <p>步骤01 :客户端向服务器提出查询好友列表请求；</p>
    <p>步骤02 :服务器响应请求并将好友列表以XML流发送给登录用户；</p>
    <p>步骤03 :客户端显示好友列表；</p>
    <p>步骤04 :结束该功能。</p>
    <p>[0052]	图9是客户端添加好友流程图，由其可知，用户在客户端界面添加好友时，数据从客户端到服务器以及从服务器到客户端被处理的整个流程。</p>
    <p>[0053]	添加好友功能是该系统的�项非常重要的功能，用户可以随意地添加新的好友。</p>
    <p>[0054]	以下为添加好友流程：</p>
    <p>步骤01 :客户端前端向服务器发出添加好友的请求；</p>
    <p>步骤02 :客户端的协议解析模块解析出要添加的好友的JID ；</p>
    <p>步骤03 :客户端在本地&#25436;索要添加的好友是否存在，若存在，则返回前端提示该用户已是好友，无需添加，转向步骤06;若不存在，则通过底层通信模块向服务器请求，通过服务器的数据访问模块以JID为条件在数据库中的用户表中查找该好友；</p>
    <p>步骤04 :若数据库中好友存在，则服务器端将结果返回给客户端，并将JID插入到好友列表中，通过底层通信模块，返回包含有该好友的信息的XML，提示添加好友成功，转向步骤六；</p>
    <p>步骤05 :若数据库中好友不存在，则向客户端返回添加失败的XML流，提示不存在此用</p>
    <p>户；</p>
    <p>步骤06 :结束添加好友功能。</p>
    <p>[0055]	图10是客户端删除好友流程图，由其可知，用户在客户端界面删除好友时，数据从客户端到服务器以及从服务器到客户端被处理的整个流程。</p>
    <p>[0056]	删除好友也是该系统的�项重要的功能，其作用是删除好友列表的某一用户。</p>
    <p>[0057]	以下为删除好友流程：</p>
    <p>步骤01 :客户端前端向服务器发出删除好友的请求；</p>
    <p>步骤02 :服务器在收到客户端发来的请求之后，通过协议解析模块解析XML流，并获取需要删除的好友的JID;</p>
    <p>步骤03 :服务器通过数据库访问模块在数据库的好友列表中查询该用户，并将其删</p>
    <p>除；</p>
    <p>步骤04 :若删除成功，则向客户端返回相应的XML流，提示客户端好友删除成功，转向步骤六；</p>
    <p>步骤05 :若删除失败，则向客户端返回相应的XML流，提示客户端删除失败；</p>
    <p>步骤06:删除好友操作&#32080;束。</p>
    <p>[0058]	会话功能：客户端为用户提供了相互会话的功能，即相互发送即时消息，该功能是即时消息系统的最基本的功能。会话功能模块将客户端界面输入的文字消息解析为XMPP 的〈message/〉消息节后，通过底层通信模块将消息发送到服务器，同时持续监听来自服务器的〈message/〉消息节，当接收到〈message/〉消息节之后，将〈message/〉消息转换为文字消息显示到聊天室的界面中。</p>
    <p>[0059]	本项目中的即时消息系统有三种会话方式：第一种为连接在同一个XMPP服务器上的两个用户之间的会话；第二种为连接在不同XMPP服务器上的两个用户之间的会话；第三种为XMPP系统的用户和非XMPP系统的用户之间的会话，会话是在聊天室中进行的。</p>
    <p>[0060]	会话功能模块中需要包括四个功能的实现用以满足用户的需求，即初始化聊天室、发送即时消息、接收即时消息和聊天室管理器。</p>
    <p>[0061]	图11是客户端发送消息流程图，由其可知，用户在客户端界面输入消息并且发送时，数据从客户端到服务器以及从服务器到客户端被处理的整个流程。</p>
    <p>[0062]	图12是客户端接收消息流程图，由其可知，用户在客户端界面接收消息并且显示时，数据从好友客户端到服务器以及从服务器到用户客户端被处理的整个流程。</p>
    <p>[0063]	客户端与服务器之间会话的步骤为：</p>
    <p>步骤01 :源客户端通过底层通信功能模块向XMPP I服务器发送建立会话的请求； 步骤02 =XMPP服务器I在收到源客户端的请求之后通过TLS，SASL进行安全、身份验证，若通过，则向源客户端返回确认建立连接的响应；</p>
    <p>步骤03 :源客户端通过协议解析功能模块获取客户端界面的消息并将其封装成XMPP 数据包，然后通过底层通信功能模块向XMPP服务器发送会话内容；</p>
    <p>步骤04 =XMPP服务器I通过协议解析模块进行XMPP数据包解析，获取数据包中目的客户端的JID，通过数据库访问模块查询数据库。</p>
    <p>[0064]	步骤05 :若目的客户端在本地服务器中，并且在线，则直接将数据包转发给目的客户端，转向步骤十六；</p>
    <p>步骤06 :若目的客户端不在线，则将XMPP数据包通过数据库访问模块将XMPP数据包存入XMPP服务器I的数据库，待目的客户端上线后进行数据转发；</p>
    <p>步骤07 :若目的客户端不在本地服务器中，转向步骤八和步骤十五；</p>
    <p>步骤08 :若目的客户端不在本地服务器中，则服务器向DNS服务器发送申请解析域名的请求；</p>
    <p>步骤09 =DNS服务器搜索目的客户端所在的XMPP服务器2是否存在，同时向XMPP服务器I返回解析后的域名；</p>
    <p>步骤10 =XMPP服务器I通过TCP三次握手、TLS、SASL以及服务器回拨功能进行安全、 验证向XMPP服务器2发送连接请求；</p>
    <p>步骤11 =XMPP服务器2通过底层通信模块向XMPP服务器I发送请求响应，若目的客户端在线状态，则建立二者之间的连接，转向步骤十三；</p>
    <p>步骤12 :若目的客户端不在线，则将XMPP数据包存入XMPP服务器I的数据库中，待目的客户端上线后再将该信息转发；</p>
    <p>步骤13 =XMPP服务器I向XMPP服务器2转发由源客户端发送的XMPP数据包；</p>
    <p>步骤14 =XMPP服务器2直接将XMPP数据包转发到目的客户端，转向步骤十六；</p>
    <p>步骤15 :源客户端通过协议解析模块获取XMPP数据包之后，通过协议网关，将数据包发送到非XMPP系统的服务器，再由非XMPP系统的服务器将数据包转发到非XMPP系统的客户端；</p>
    <p>步骤16 :会话结束，关闭连接。</p>
    <p>[0065]	图13是客户端文件传输流程图，由其可知，用户在客户端界面传输文件，文件从用户客户端到服务器以及从服务器到好友客户端被处理的整个流程。[0066]	步骤01 :源客户端向XMPP服务器发送向目的客户端传输文件的请求；</p>
    <p>步骤02 =XMPP服务器通过数据访问模块访问数据库判断目的客户端是否属于本地服务器，若是，则判断目的客户端是否在线，若在线，则向目的客户端发送源客户端文件传输的请求，井向源客户端返回目的客户端的JID，转向步骤五；</p>
    <p>步骤03 :若不属于本地服务器，则若不在，则将请求转向代理服务器，转向步骤七； 步骤04 :若不在线，则将传输文件请求存放在服务器的缓冲区，等目的客户端在线时， 直接从缓冲区提取文件并转发给目的客户端，转向步骤十四；</p>
    <p>步骤05 ：目的客户端响应XMPP服务器传输文件的请求，XMPP服务器将响应发送给源客户端；</p>
    <p>步骤06 :源客户端向XMPP服务器传输文件，XMPP服务器直接将文件转发给目的客户端，转向步骤十四；</p>
    <p>步骤07 ：目的客户端为代理服务器打开�个TCP socket连接；</p>
    <p>步骤08 :代理服务器通过SOCKS 5与目的客户端建立连接，设定目标地址和目标端ロ &#21443;数的值；</p>
    <p>步骤09 :代理服务器通过SOCKS 5发送连接成功并确认至源的客户端；</p>
    <p>步骤10 :源客户端为代理服务器打开�个TCPsocket连接；</p>
    <p>步骤11 :源客户端通过SOCKS 5向代理服务器请求建立连接，设定目标地址和目标端 ロ&#21443;数的值；</p>
    <p>步骤12 :若成功建立连接，源客户端通过SOCKS 5发送连接成功确认至目的客户端</p>
    <p>端;</p>
    <p>步骤13 :源客户端和目的客户端通过SOCKS 5代理服务器，再由SOCKS 5服务器转发给XMPP服务器可以成功实现文件的传输；</p>
    <p>步骤14 :文件成功传输之后，关闭源客户端和目的客户端之间的连接。</p>
    <p>[0067]	图14是&#38914;系统互相通信图，由其可知，XMPP系统与非XMPP系统之间数据通信。</p>
    <p>[0068]	XMPP系统的客户端发送消息给非XMPP系统的客户端，首先指明�个包含非XMPP 系统名的JID，而不是直接发送给外部&#38914;系统上的用户。其次，XMPP服务器将数据发送到指定的传输器应用程序，如果传输器是本地的，则XMPP服务器直接与其进行通信；如果传输器不在本地运行，本地服务器发送�个包给远程服务器，该远程服务器将会把包发送给指定的传输器。一旦传输器接收到XML包，它把信息“转变”成另�个IM网络中可以识别的本地包，并把这个本地包传送到那个&#38914;网络中。</p>
    <p>[0069]	本发明公开了�种基于XMPP协议的即时消息传输方法，使用开源的Openfire作为服务器，以Spark作为客户端的主要框架，采用Java语言，Smack客户端库编写�个基于 XMPP协议的客户端，以Xampp软件中的MySQL作为数据库，采用XMPP技术、SOCKS技术、数据库技术和套接字技术，成功实现企业内部以及企业外部的即时消息之间的数据传输。本发明不仅能很好的满足用户的基本需求、管理需求与功能性需求外，还能达到较高的安全性，可扩展性，实现与其他即时通信系统的互联互通。</p>
    <p>[0070]	在实现企业内部的功能时，采用不改变原有服务器和客户端基础架构的条件下， 利用插件的方式成功实现功能的扩展。通过利用网关来成功实现企业内部服务器与其它&#38914;服务器之间的数据通信。[0071]	综上所述，本发明内容主要包括以下三方面：</p>
    <p>I.采用Java程序设计语言，完成本系统中客户端在Eclipse平台中的设计与实现。</p>
    <p>[0072]	客户端主要是根据企业自身特点，向用户提供实时信息交换。其开发包括前端界面的设计和实现和后端数据平台功能模块的设计与实现，而功能主要包括：用户的注册、用户登录功能、好友列表管理(包括状态的显示和更改、添加用户、删除用户和搜索好友)、个人名片管理、会话功能、文件传输功能和与其他IM通信功能等。</p>
    <p>[0073]	2.完成本系统中服务器在Eclipse中的成功部署和运行。</p>
    <p>[0074]	实现本系统中服务器和客户端之间以及客户端之间的互相通信。包括客户端和服务器之间的连接，数据的通信，用户的添加、存储、查询、更新和删除，用户状态的设置，好友状态的获取，注销等功能。</p>
    <p>[0075]	3.完成本系统中的服务器向其他各种IM服务器(例如微软的MSN服务器,Google 的Gtalk服务器等）的连接，用户状态设置，好友状态获取，数据通信，注销等功能。</p>
    <p>[0076]	本发明的目标是实现在企业内部web客户端之间以及本服务器与其它&#38914;服务器之间的信息交互。</p>
    <p>[0077]	首先在客户端的个人信息中注册用户的号码，并进行验证，然后实现用户登录。用户的状态分为在线、忙碌、离开，当用户状态发生变化时，客户端能成功显示。</p>
    <p>[0078]	其次，企业内部服务器与客户端之间，客户端与客户端之间实现信息交互；</p>
    <p>再次，在企业内部的客户端登录页面输入其他IM系统的用户帐号，验证成功后登录到其他&#38914;服务器并与之进行信息交互。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101068257A?cl=zh">CN101068257A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2007年5月31日</td><td class="patent-data-table-td patent-date-value">2007年11月7日</td><td class="patent-data-table-td ">四川长虹电器股份有限公司</td><td class="patent-data-table-td ">即时通信平台</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101431479A?cl=zh">CN101431479A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2007年11月8日</td><td class="patent-data-table-td patent-date-value">2009年5月13日</td><td class="patent-data-table-td ">华为技术有限公司</td><td class="patent-data-table-td ">实现问答业务的方法、客户端和服务器</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101488926A?cl=zh">CN101488926A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年2月27日</td><td class="patent-data-table-td patent-date-value">2009年7月22日</td><td class="patent-data-table-td ">浪潮集团山东通用软件有限公司</td><td class="patent-data-table-td ">一种基于xmpp协议和sms服务的网络消息通讯方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101500210A?cl=zh">CN101500210A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年3月16日</td><td class="patent-data-table-td patent-date-value">2009年8月5日</td><td class="patent-data-table-td ">北京北纬点易信息技术有限公司</td><td class="patent-data-table-td ">基于xmpp协议的低传输负载的即时通信方法及其系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20090248822">US20090248822</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年3月26日</td><td class="patent-data-table-td patent-date-value">2009年10月1日</td><td class="patent-data-table-td ">Alcatel-Lucent</td><td class="patent-data-table-td ">Method for providing peer-to-peer emergency service and node for providing peer-to-peer emergency service</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103118069A?cl=zh">CN103118069A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年12月26日</td><td class="patent-data-table-td patent-date-value">2013年5月22日</td><td class="patent-data-table-td ">上海现代先进超精密制造中心有限公司</td><td class="patent-data-table-td ">基于xmpp协议的实现机顶盒之间即时通信的方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103516788A?cl=zh">CN103516788A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年9月13日</td><td class="patent-data-table-td patent-date-value">2014年1月15日</td><td class="patent-data-table-td ">杭州东方通信软件技术有限公司</td><td class="patent-data-table-td ">一种数据推送方法及其Flash客户端和服务器</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103532827A?cl=zh">CN103532827A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年9月3日</td><td class="patent-data-table-td patent-date-value">2014年1月22日</td><td class="patent-data-table-td ">国家电网公司</td><td class="patent-data-table-td ">一种通过扩展xmpp协议实现通信录功能的系统和方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103561079A?cl=zh">CN103561079A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年10月29日</td><td class="patent-data-table-td patent-date-value">2014年2月5日</td><td class="patent-data-table-td ">重庆邮电大学</td><td class="patent-data-table-td ">一种基于xmpp协议的无线传感器网络的数据交互方法</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=SpiJBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029060000">H04L29/06</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=SpiJBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029080000">H04L29/08</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=SpiJBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0012580000">H04L12/58</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2012年7月18日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年9月19日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2014年12月10日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/2263d0f4b9ab6597d07f/CN102594845A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_5115ea495017d9115e613207d3810e5a.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8Exmpp%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%8D%B3%E6%97%B6%E6%B6%88%E6%81%AF%E4%BC%A0.pdf?id=SpiJBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U29fcg2GO-uQMuKeXWyQ0iLIsvuUw"},"sample_url":"https://www.google.com/patents/reader?id=SpiJBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>