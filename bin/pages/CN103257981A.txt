<!DOCTYPE html><html><head><title>专利 CN103257981A - 基于查询接口属性特征的Deep Web数据表面化方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="基于查询接口属性特征的Deep Web数据表面化方法"><meta name="DC.contributor" content="赵朋朋" scheme="inventor"><meta name="DC.contributor" content="鲜学丰" scheme="inventor"><meta name="DC.contributor" content="辛洁" scheme="inventor"><meta name="DC.contributor" content="郭建兵" scheme="inventor"><meta name="DC.contributor" content="崔志明" scheme="inventor"><meta name="DC.contributor" content="苏州大学" scheme="assignee"><meta name="DC.date" content="2012-6-12" scheme="dateSubmitted"><meta name="DC.description" content="本发明在于公开了一种基于查询接口属性特征的DeepWeb数据表面化方法，包括查询接口模式信息抽取；清洗查询无关的属性；清洗垃圾属性值；属性分类；组装查询；查询集合；判断是否达到一定覆盖度；若是，则该方法流程结束；若不是，判断查询集合是否为空；若是，则将数据经领域样本库提交到样本库中；若不是，则将数据经数据爬取模块和数据记录抽取模块提交到样本库中。本发明基于查询接口属性特征的数据表面化方法可以取得较高的数据表面化效率，并能够有效解决查询接口中Top-k的问题。"><meta name="DC.date" content="2013-8-21"><meta name="DC.relation" content="CN:101320370:A" scheme="references"><meta name="DC.relation" content="CN:101582074:A" scheme="references"><meta name="DC.relation" content="CN:101667201:A" scheme="references"><meta name="DC.relation" content="US:20080040326:A1" scheme="references"><meta name="citation_reference" content="田建伟 等: &quot;基于层次树模型的DeepWeb数据提取方法&quot;, 《计算机研究与发展》, 31 December 2011 (2011-12-31), pages 94 - 102"><meta name="citation_reference" content="高岭等: &quot;DeepWeb查询接口的自动判定&quot;, 《计算机技术与发展》, 31 May 2007 (2007-05-31), pages 148 - 151"><meta name="citation_patent_publication_number" content="CN:103257981:A"><meta name="citation_patent_application_number" content="CN:201210191981"><link rel="canonical" href="https://www.google.com/patents/CN103257981A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN103257981A?cl=zh"/><meta name="title" content="专利 CN103257981A - 基于查询接口属性特征的Deep Web数据表面化方法"/><meta name="description" content="本发明在于公开了一种基于查询接口属性特征的DeepWeb数据表面化方法，包括查询接口模式信息抽取；清洗查询无关的属性；清洗垃圾属性值；属性分类；组装查询；查询集合；判断是否达到一定覆盖度；若是，则该方法流程结束；若不是，判断查询集合是否为空；若是，则将数据经领域样本库提交到样本库中；若不是，则将数据经数据爬取模块和数据记录抽取模块提交到样本库中。本发明基于查询接口属性特征的数据表面化方法可以取得较高的数据表面化效率，并能够有效解决查询接口中Top-k的问题。"/><meta property="og:title" content="专利 CN103257981A - 基于查询接口属性特征的Deep Web数据表面化方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN103257981A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN103257981A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=ax7OCAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN103257981A&amp;usg=AFQjCNEIJChlKzqZSz1ByPVU5VbsXzX2vQ" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/1df108895e35eb349394/CN103257981A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/1df108895e35eb349394/CN103257981A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN103257981A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN103257981A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN103257981A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN103257981B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN103257981A?cl=zh" style="display:none"><span itemprop="description">本发明在于公开了一种基于查询接口属性特征的DeepWeb数据表面化方法，包括查询接口模式信息抽取；清洗查询无关的属性；清洗垃圾属性值；属性分类；组装查询；查询集合；判断是否达到一定覆盖度；若是，则该方法流程结 ...</span><span itemprop="url">https://www.google.com/patents/CN103257981A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN103257981A - 基于查询接口属性特征的Deep Web数据表面化方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN103257981A - 基于查询接口属性特征的Deep Web数据表面化方法" title="专利 CN103257981A - 基于查询接口属性特征的Deep Web数据表面化方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN103257981 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210191981</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年8月21日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年6月12日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年6月12日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103257981B?hl=zh-CN&amp;cl=zh">CN103257981B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210191981.3, </span><span class="patent-bibdata-value">CN 103257981 A, </span><span class="patent-bibdata-value">CN 103257981A, </span><span class="patent-bibdata-value">CN 201210191981, </span><span class="patent-bibdata-value">CN-A-103257981, </span><span class="patent-bibdata-value">CN103257981 A, </span><span class="patent-bibdata-value">CN103257981A, </span><span class="patent-bibdata-value">CN201210191981, </span><span class="patent-bibdata-value">CN201210191981.3</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%B5%B5%E6%9C%8B%E6%9C%8B%22">赵朋朋</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%B2%9C%E5%AD%A6%E4%B8%B0%22">鲜学丰</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%BE%9B%E6%B4%81%22">辛洁</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%83%AD%E5%BB%BA%E5%85%B5%22">郭建兵</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%B4%94%E5%BF%97%E6%98%8E%22">崔志明</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E8%8B%8F%E5%B7%9E%E5%A4%A7%E5%AD%A6%22">苏州大学</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103257981A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103257981A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103257981A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#npl-citations">非专利引用</a> (2),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=ax7OCAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210191981&amp;usg=AFQjCNE-O7mZDkkJRheQXvdvHUdBD7SPvg"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=ax7OCAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D103257981A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNGAv_imKMcGwdDFZYZo0t1_n5ymKw"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT127501940" lang="ZH" load-source="patent-office">基于查询接口属性特征的Deep Web数据表面化方法</invention-title>
      </span><br><span class="patent-number">CN 103257981 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA119764434" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明在于公开了一种基于查询接口属性特征的DeepWeb数据表面化方法，包括查询接口模式信息抽取；清洗查询无关的属性；清洗垃圾属性值；属性分类；组装查询；查询集合；判断是否达到一定覆盖度；若是，则该方法流程结束；若不是，判断查询集合是否为空；若是，则将数据经领域样本库提交到样本库中；若不是，则将数据经数据爬取模块和数据记录抽取模块提交到样本库中。本发明基于查询接口属性特征的数据表面化方法可以取得较高的数据表面化效率，并能够有效解决查询接口中Top-k的问题。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(3)</span></span></div><div class="patent-text"><div mxw-id="PCLM54282455" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.基于查询接口属性特征的De印Web数据表面化方法，其特征在于，包括以下步骤：  步骤I)查询接口模式信息抽取；  步骤2)清洗查询无关的属性；  步骤3)清洗垃圾属性值；  步骤4)属性分类；  步骤5)判断是否为范围型属性，若是，执行步骤6 ;若不是，执行步骤7 ；  步骤6)利用范围型属性采样，根据样本在区间上的分布，划分范围型属性区间后执行步骤11 ；  步骤7)判断是否为分类型属性，若是，执行步骤8 ;若不是，执行步骤9 ;  步骤8)候选属性值抽取，构建层次树，进行上溢查询，若是，执行步骤9 ;若不是，执行步骤11 ；  步骤9)判断是否为文本型属性，若是，执行步骤10 ；  步骤10)获取候选值，分别基于覆盖率和互信息对候选值进行筛选，后执行步骤11 ；  步骤11)组装查询；  步骤12)查询集合；  步骤13)判断是否达到一定覆盖度；若是，则该方法流程结束；若不是，则执行步骤14 ；  步骤14)判断时候查询集合为空；若是，则执行步骤15 ;若不是，则执行步骤16 ；  步骤15)将数据经领域样本库提交到样本库中，后进行步骤10的候选值的获取；  步骤16)将数据经数据爬取模块和数据记录抽取模块提交到样本库中，后进行步骤10的候选值的获取。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求I所述的基于查询接口属性特征的Deep	Web数据表面化方法，其特征在于，层次树的构建方法如下：  a.虚拟一个树的根节点，该节点代表了目标数据库中的全部数据记录；  b.从根节点发出的每一条边代表的一个属性值；树的第二层的第i个节点代表以aq：rv1：i作为查询条件所得到的数据记录的集合；  c.若查询命中的数据记录个数为0，则将其标为空节点，  若查询命中的数据记录个数小于或等于A且大于0，则将其标注为有效的叶子节点；否则，若命中的数据记录个数大于夂则将其标注为上溢节点；  d.分别以层次树中第二层的上溢节点作为根节点，按照相同的方法，选择第二个分类型属性a"中的候选属性值对层次树进行扩展；  e.按照同样的方式扩展层次树，直至已经构建好的层次树中不存在上溢的叶子节点，或Aujtj.中不存在没有被遍历的属性； 当且仅当属性序列中的属性按照其值域空间的大小升序排列，即<div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103257981A/CN103257981AC00021.png"> <img id="icf0001" file="CN103257981AC00021.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103257981A/CN103257981AC00021.png" class="patent-full-image" alt="Figure CN103257981AC00021"> </a> </div>时，构建的层次树是最优的；能够使得查询提交次数最少。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求I所述的基于查询接口属性特征的Deep	Web数据表面化方法，其特征在于，候选属性值的筛选步骤如下：  a.计算文本型属性添加到查询提交属性集合之前的上溢查询所命中的数据记录个数，记为■设为该文本型属性取不同的候选值分别添加到查询序列中命中的数据记录的总数，的初始值为O;  b.若仍&amp;.不存在未被遍历的元素，则在该属性上的数据表面化结束，否则进行步骤c;  c.从序列Ozej中选择从未被访问的第一个元素作为文本型属性的取值；添加到查询提交序列中；将该查询命中的数据记录个数赋给临时变量；  d.洛numtmp的值与原有的numvalid值相加，并将结果赋给 <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103257981A/CN103257981AC00031.png"> <img id="icf0002" file="CN103257981AC00031.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103257981A/CN103257981AC00031.png" class="patent-full-image" alt="Figure CN103257981AC00031"> </a> </div>则在该属性上的数据表面化结束；否则，回到步骤b。  酬&#37291;知</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES61301284" lang="ZH" load-source="patent-office" class="description">
    <p>基于查询接口属性特征的Deep Web数据表面化方法</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及一种Deep Web数据集成方法,尤其涉及一种针对Deep Web数据源的数据爬虫方法。</p>
    <p>背景技术</p>
    <p>[0002]	随着HTML、HTTP等Web技术的逐渐成熟，Internet上的Web网站数目与网页数目都成指数级的增长。美国互联网研究机构Netcraft发布的最新调查结果显示，2012年3月份全球的活跃网站数量为644，275，754个，相比同年2月份增加了 3140万个，增幅达到</p>
    <p>5.1%。此外，根据另一家互联网研究机构VeriSign的调查数据显示，2011年第四季度新增近600万个互联网域名，使得全球域名总数达到2.25亿。</p>
    <p>[0003]	另外越来越多的网站使用了网页模板技术，这使得网站数据逐步“深化”。服务器接收用户提交的查询，然后由后台数据库动态产生数据记录并填充到固定的网页模板中，使得网站中的数据不能通过预定义的超链接获取。传统的网络爬虫只是通过现有的超链接获取需要爬取的页面，因此通过网页模板生成的这部分数据对传统的搜索引擎而言是隐藏的。我们将这类网站称之为Deep Web (又称Hidden Web, Invisible Web)。而将能够通过静态超链接访问全部数据的网站称为Surface Web。</p>
    <p>发明内容</p>
    <p>[0004]	针对现有Deep Web数据表面化方法所存在的问题和不足，本发明的目的是提供一种基于查询接口属性特征的Deep Web数据表面化方法，从而提高数据的表面化效率。</p>
    <p>[0005]	为实现上述技术目的，达到上述技术效果，本发明通过以下技术方案实现:</p>
    <p>  基于查询接口属性特征的De印Web数据表面化方法，包括以下步骤:</p>
    <p>  步骤I)查询接口模式信息抽取；</p>
    <p>  步骤2)清洗查询无关的属性；</p>
    <p>  步骤3)清洗垃圾属性值；</p>
    <p>  步骤4)属性分类；</p>
    <p>  步骤5)判断是否为范围型属性，若是，执行步骤6 ;若不是，执行步骤7 ；</p>
    <p>  步骤6)利用范围型属性采样，根据样本在区间上的分布，划分范围型属性区间后执行步骤11 ； </p>
    <p>  步骤7)判断是否为分类型属性，若是，执行步骤8 ;若不是，执行步骤9 ;</p>
    <p>  步骤8)候选属性值抽取，构建层次树，进行上溢查询，若是，执行步骤9 ;若不是，执行步骤11 ；</p>
    <p>  步骤9)判断是否为文本型属性，若是，执行步骤10 ；</p>
    <p>  步骤10)获取候选值，分别基于覆盖率和互信息对候选值进行筛选，后执行步骤11 ；  步骤11)组装查询；</p>
    <p>  步骤12)查询集合；步骤13)判断是否达到一定覆盖度；若是，则该方法流程结束；若不是，则执行步骤</p>
    <p>14；</p>
    <p>  步骤14)判断时候查询集合为空；若是，则执行步骤15 ;若不是，则执行步骤16 ；</p>
    <p>  步骤15)将数据经领域样本库提交到样本库中，后进行步骤10的候选值的获取；</p>
    <p>  步骤16)将数据经数据爬取模块和数据记录抽取模块提交到样本库中，后进行步骤10的候选值的获取。</p>
    <p>[0006]	进一步的，层次树的构建方法如下:</p>
    <p>  a.虚拟一个树的根节点，该节点代表了目标数据库中的全部数据记录；</p>
    <p>  b.从根节点发出的每一条边代表的一个属性值；树的第二层的第i个节点代表以aq:rv1:i作为查询条件所得到的数据记录的集合；</p>
    <p>  c.若查询命中的数据记录个数为0，则将其标为空节点。若查询命中的数据记录个数小于或等于A且大于0，则将其标注为有效的叶子节点；否则，若命中的数据记录个数大于々，则将其标注为上溢节点；</p>
    <p>  d.分别以层次树中第二层的上溢节点作为根节点，按照相同的方法，选择第二个分类</p>
    <p>型属性aq, 2中的候选属性值对层次树进行扩展;</p>
    <p>  e.按照同样的方式扩展层次树，直至已经构建好的层次树中不存在上溢的叶子节点，或Aujtj.中不存在没有被遍历的属性；</p>
    <p> 当且仅当属性序列中的属性按照其值域空间的大小升序排列，即</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103257981A/CN103257981AD00051.png"> <img id="idf0001" file="CN103257981AD00051.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103257981A/CN103257981AD00051.png" class="patent-full-image" alt="Figure CN103257981AD00051"> </a> </div>
    <p>时，构建的层次树是最优的；能够使得查询提交次数最少。</p>
    <p>[0007]	进一步的，候选属性值的筛选步骤如下:</p>
    <p>  a.计算文本型属性添加到查询提交属性集合之前的上溢查询所命中的数据记录个数，记为；设为该文本型属性取不同的候选值分别添加到查询序列中命中的数据记录的总数，的初始值为O;</p>
    <p>  b.若仍&amp;不存在未被遍历的元素，则在该属性上的数据表面化结束，否则进行步骤c;</p>
    <p>  c.从序列Ozey中选择从未被访问的第一个元素作为文本型属性的取值；添加到查询提交序列中；将该查询命中的数据记录个数赋给临时变量；</p>
    <p>  d.、\%num_的值与原有的numvalid值相加，并将结果赋给numvalM。若</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103257981A/CN103257981AD00052.png"> <img id="idf0002" file="CN103257981AD00052.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103257981A/CN103257981AD00052.png" class="patent-full-image" alt="Figure CN103257981AD00052"> </a> </div>
    <p>在该属性上的数据表面化结束；否则，回到步骤b。</p>
    <p>[0008]	本发明的原理为:</p>
    <p>  数据表面化方法定义:</p>
    <p>  I)问题定义</p>
    <p>  在Deep Web站点中，用户只能够通过查询获得命中的数据记录。利用计算机模拟用户查询提交的过程，获取Deep Web站点的深层数据称之为数据的表面化。在实际的应用中，不仅要考虑的是Web数据库的表面化程度而且还需要考虑到查询提交的代价。查询代价越高，就需要越长的表面化时间，并且目标服务器的压力也越大。另外，越来越多的Web服务器对单位时间内单个IP的访问次数有一定限制，因此如何提高数据表面化的效率便成为一个亟待解决的问题。[0009]	为了能够高效且尽可能完全地表面化目标Web数据库中的数据，我们需要每次返回的数据记录尽可能的多，且多个查询结果中的数据记录集合之间交集的元素尽可能的少。然而通过对几个领域的Web数据库进行调查发现，有89%的站点每次查询返回的数据记录个数是有上限的，我们将该站点单次查询能够最多表面化的数据记录个数记为I将这种现象称之为Top-1当查询命中的数据记录个数大于A时，只返回排名前A的数据记录，该查询称为上溢查询。当查询命中的数据记录个数为O时,表示目标站点中并没有被该查询命中的数据记录，这样的查询称为下溢查询。其他情况的查询称为有效查询。</p>
    <p>[0010]	2)查询接口属性的分类及清洗</p>
    <p>  根据查询接口属性集合中的元素对应的HTML控件、值域的范围以及在查询条件中的作用不同，可以将查询接口中的属性分为如下三类:</p>
    <p>  (I)范围型属性</p>
    <p>  在查询接口中通过指定该属性值的范围来对目标WDB中的数据进行检索。这类属性对应的HTML控件多为两个文本框，用来接收该区间的下限和上限。常见的有:起始价格，起始时间等。</p>
    <p>[0011]	(2)分类型属性</p>
    <p>  在查询接口中指定该属性的有限个候选值。用户通过对候选值的选择，来对目标TOB中的数据进行检索。常见的分类型属性对应的HTML控件有，下拉列表框，单选按钮组，复选框等。</p>
    <p>[0012]	(3)文本型属性</p>
    <p>  用户为该属性自由赋值， 并检索目标WDB中包含该值的数据记录。这种类型的属性对应的HTML控件为自由的文本框，从查询接口中并不能得到该属性的值域。</p>
    <p>[0013]	需要说明的是，若语义上的范围型属性在查询接口对应的HTML控件表现为下拉列表框，将这类的属性归为分类型属性。</p>
    <p>[0014]	另外，分类型和文本型属性的取值与命中的数据记录对应字段的值是文字内容上的包含关系。而范围型属性的取值与命中的数据记录对应字段的值是区间上的包含关系。这是范围型属性和其他类型属性的本质区别。分类型和文本型属性的区别主要表现在候选属性值的获取方式不同。</p>
    <p>[0015]	从查询接口抽取得到的属性和候选值中，并不是所有的HTML控件都是对查询有益的。例如，用来指定排序依据的下拉列表框以及指定记录显示方式或者显示记录条数的列表框等。这些属性值的提交并不影响返回的数据记录。我们将其定义为与查询无关的属性。查询无关的属性对应的控件特征比较明显。另外分类型属性对应查询接口中的候选值并不总是有效的。显然，这个属性值并不会在该属性上对查询做任何限制，我们将此类垃圾属性值过滤掉。下述的启发式规则可以用于查询无关属性的判断和垃圾属性值的清洗。</p>
    <p>[0016]	(I)查询无关属性对应的控件类型为下拉列表框、复选框等分类型控件，且该类控件前多有“排序”、“显示记录条数”等特征明显的文字描述。</p>
    <p>[0017]	(2)若下拉列表的候选值中包含“全部”、“不限”等关键词，则将这些属性值标记为垃圾属性值。</p>
    <p>[0018]	本实用新型有益效果是:</p>
    <p>   (I)信息量大。Deep Web数据量巨大，介于66，800-91，850 TB之间，是Surface Web信息的400-500倍。并且De印Web站点的访问量高出Surface Web的15%以上。近年来，Deep Web站点个数激增。Complete Planet网站对60 Deep Web站点进行统计，统计结果显示,60个站点的总数据量已经达到了 7500，000G。</p>
    <p>[0019]	(2)信息增长速度快。目前De印Web中的信息规模还在迅速增大，据统计2006年共存在74，000个查询接口，到2011年初查询接口数量已经达到600，000个。平均每年的增长速度达142.2%。</p>
    <p>[0020]	(3)信息质量高。超过50%的Deep Web站点中的数据为高质量的结构化数据，并且站点中的数据具有极强的领域相关性和可用性。</p>
    <p>[0021]	另外，Deep Web中有95%以上的信息是可以公开访问的，即能够通过网络免费获取。这也为Deep Web数据获取提供了可行性。De印Web数据获取的作用在于，它能够将相同领域不同站点中的数据汇总后反馈给用户。并且通过对特定站点数据的本地化，可以分析该站点数据变化的规律。在实际应用中，电子商务领域的比价系统以及价格变化趋势分析等利用到了 Deep Web的数据获取。</p>
    <p>[0022]	所以，鉴于De印Web以上的优点以及De印Web获取的可行性和实用性，De印Web的数据表面化方法的研究便具有了重大的意义。</p>
    <p>附图说明</p>
    <p>[0023]	图1是本发明数据表面化系统流程图；</p>
    <p>  图2是本发明利用分类型属性构建完成的层次树示例。</p>
    <p>具体实施方式</p>
    <p>[0024]	下面将参考附图并结合实施例，来详细说明本发明。</p>
    <p>&#183;[0025]	基于查询接口属性特征的Deep Web数据表面化方法,包括以下步骤:</p>
    <p>  步骤I)查询接口模式信息抽取；</p>
    <p>  步骤2)清洗查询无关的属性；</p>
    <p>  步骤3)清洗垃圾属性值；</p>
    <p>  步骤4)属性分类；</p>
    <p>  步骤5)判断是否为范围型属性，若是，执行步骤6 ;若不是，执行步骤7 ；</p>
    <p>  步骤6)利用范围型属性采样，根据样本在区间上的分布，划分范围型属性区间后执行步骤11 ；</p>
    <p>  步骤7)判断是否为分类型属性，若是，执行步骤8 ;若不是，执行步骤9 ;</p>
    <p>  步骤8)候选属性值抽取，构建层次树，进行上溢查询，若是，执行步骤9 ;若不是，执行步骤11 ；</p>
    <p>  步骤9)判断是否为文本型属性，若是，执行步骤10 ；</p>
    <p>  步骤10)获取候选值，分别基于覆盖率和互信息对候选值进行筛选，后执行步骤11 ；  步骤11)组装查询；</p>
    <p>  步骤12)查询集合；</p>
    <p>  步骤13)判断是否达到一定覆盖度；若是，则该方法流程结束；若不是，则执行步骤</p>
    <p>     14 ；步骤14)判断时候查询集合为空；若是，则执行步骤15 ;若不是，则执行步骤16 ；</p>
    <p>  步骤15)将数据经领域样本库提交到样本库中，后进行步骤10的候选值的获取；</p>
    <p>  步骤16)将数据经数据爬取模块和数据记录抽取模块提交到样本库中，后进行步骤10的候选值的获取。</p>
    <p>[0026]	查询接口属性的数据表面化方法:</p>
    <p>  I)范围型属性</p>
    <p>  将我们求得的一个区间划分记为O，若使得O中除最后一个元素外的其他任何元素所代表的子区间中的数据记录个数为I那么O便是一个最优划分。我们将子区间中数据记录个数々作为每一个子区间划分的标准。</p>
    <p>[0027]	0中的任一元素0，0所代表的子区间的上限值记为Λ.，令力=0。则0便可表示为LF1-Λ.]。同样，将样本中的每一个子区间上限记为&amp;，每一个样本子区间可表示为[Xp Xy],并令七=0。样本区间Dr", Xy]中数据记录的个数记为r/wffly。那么Λ.的值便可按照下述步骤来计算:</p>
    <p>  设A为序列4,&#190;,&#190;中第一个大于Λ.的元素，Q的取值如下:</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103257981A/CN103257981AD00081.png"> <img id="idf0003" file="CN103257981AD00081.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103257981A/CN103257981AD00081.png" class="patent-full-image" alt="Figure CN103257981AD00081"> </a> </div>
    <p>Λ.的取值公式如下，</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103257981A/CN103257981AD00082.png"> <img id="idf0004" file="CN103257981AD00082.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103257981A/CN103257981AD00082.png" class="patent-full-image" alt="Figure CN103257981AD00082"> </a> </div>
    <p>通过上述方式得到的一个划分0，能够使得除最后一个元素外，其他任何元素所代表的子区间内数据记录个数为I因此求得的O是一个最优划分。将O中的每一个元素所代表的子区间赋值给相应的范围型属性，并提交查询。为了使得两个子区间完全没有交集，我们将划分得到的每一个子区间的下限在原有的基础上，增加一个极小值。例如第i个子区间表不为:[71-1+Z，Λ.]，其中1是一个极小值。</p>
    <p>[0028]	2)分类型属性</p>
    <p> 若查询接口属性集合中存在多个分类型属性，则多个分类型属性组成的集合记为</p>
    <p> =	…集合中Btu元素的值域记为'Ji	我们利用Amulti</p>
    <p>及其中元素对应的值域构造一棵层次树。该层次树是一棵关于查询属性的多叉树。通过对该层次树的遍历，完成对目标WDB中数据记录集的切分。层次树的构建方法如下。</p>
    <p>[0029]	(I)虚拟一个树的根节点，该节点代表了目标数据库中的全部数据记录。</p>
    <p>[0030]	(2)从根节点发出的每一条边代表\7的一个属性值。树的第二层的第i个节点代表以\ 作为查询条件所得到的数据记录的集合。</p>
    <p>[0031]	(3)若查询命中的数据记录个数为0，则将其标为空节点。若查询命中的数据记录个数小于或等于A且大于0，则将其标注为有效的叶子节点。否则，若命中的数据记录个数大于I则将其标注为上溢节点。</p>
    <p>[0032]	(4)分别以层次树中第二层的上溢节点作为根节点，按照相同的方法，选择第二个分类型属性a-中的候选属性值对层次树进行扩展。</p>
    <p>[0033]	(5)按照同样的方式扩展层次树，直至已经构建好的层次树中不存在上溢的叶子节点，或中不存在没有被遍历的属性。</p>
    <p>[0034]	当且仅当属性序列中的属性按照其值域空间的大小升序排列，即</p>
    <p>       ……&#21243;y8|时，构建的层次树是最优的。能够使得查询提交次数最少。</p>
    <p>[0035]	3)文本型属性</p>
    <p>我们通过以下方法来获得文本型属性的候选值。若能够通过其他类型属性表面化部分数据记录，则将这部分数据记录存入样本库S中。统计S中数据记录在该文本型属性候选</p>
    <p>值上的分布，并将统计记录存入队列集合Que中。对于&#32048;中的任意元素，,为 文本型属性的候选值队列，队列中的元素依照其在样本库中出现的概率降序排列。</p>
    <p>[0036]	候选属性值概率的统计建立在有足够的样本库的基础上，在不能获取目标TOB中的任何数据记录作为样本库时，我们选择相同领域的其他数据源中的数据记录作为样本库。因为结构化的Web数据库绝大多数与领域相关。相同领域的数据库往往具有相同或者相似的属性以及属性值分布。</p>
    <p>[0037]	在样本库中，目标数据源内的数据记录越多，属性值的分布就越接近目标WDB中数据记录在该属性上的真实分布。因此，将每次查询提交返回的数据记录抽取成结构化的数据并将其添加到样本库中，可以提高样本的质量。若该结果是由取得一个候选值作为查询条件得到的，则在更新样本库时，更新除仍^以外的其他队列中候选值的出现频率。</p>
    <p>[0038]	对于分类型属性若按照值域空间大小升序排列生成查询提交序列，则这种情况下查询空间最小。而文本型属性由于不能获得其精确的值域，所以我们以每个文本型属性在样本库中出现的候选值的个数作为该属性的值域空间大小。与分类性属性相同，在查询提交时优先选择值域空间最小的属性。</p>
    <p>[0039]	对于任意队列姐，队列尾部的元素是在属性值样本库中出现概率较小的</p>
    <p>候选值。这就意味着，若以这部分候选值作为查询条件，将返回较少的数据记录。如果舍弃队列Quei尾部的若干元素，将会极大提升数据的表面化效率。本文利用一种单元覆盖率的方法来决定舍弃哪些属性值，进而提高数据的表面化效率。候选属性值的筛选步骤如下:(O计算文本型属性添加到查询提交属性集合之前的上溢查询所命中的数据记录个数，记为n_0verfj0rO Inumralid为该文本型属性取不同的候选值分别添加到查询序列中命中的数据记录的总数，的初始值为O。</p>
    <p>[0040]	(2)若Quei不存在未被遍历的元素，则在该属性上的数据表面化结束，否则进行步骤3。</p>
    <p>[0041]	(3)从序列中选择从未被访问的第一个元素作为文本型属性的取值。添加到查询提交序列中。将该查询命中的数据记录个数赋给临时变量</p>
    <p>[0042]	(4)将numtmp的值与原有的numvand值相力口，并将结果赋给numvalid。若</p>
    <p>     &gt;&lt;C,则在该属性上的数据表面化结束。否则，回到步骤2。</p>
    <p>[0043]	我们可以认为当该文本型属性已经表面化的数据记录大于比例C时，未被遍历的候选属性值将被舍弃。称C为查询单元表面化比例阈值。</p>
    <p>[0044]	上述实施例只是为了说明本发明的技术构思及特点，其目的是在于让本领域内的普通技术人员能够了解本发明的内容并据以实施，并不能以此限制本发明的保护范围。凡是根据本发 明内容的实质所作出的等效的变化或修饰，都应涵盖在本发明的保护范围内。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101320370A?cl=zh">CN101320370A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2008年5月16日</td><td class="patent-data-table-td patent-date-value">2008年12月10日</td><td class="patent-data-table-td ">崔志明;赵朋朋;方  巍</td><td class="patent-data-table-td ">基于查询接口连接图的深层网页数据源分类管理方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101582074A?cl=zh">CN101582074A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年1月21日</td><td class="patent-data-table-td patent-date-value">2009年11月18日</td><td class="patent-data-table-td ">东北大学</td><td class="patent-data-table-td ">一种DeepWeb响应页面数据抽取方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101667201A?cl=zh">CN101667201A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年9月18日</td><td class="patent-data-table-td patent-date-value">2010年3月10日</td><td class="patent-data-table-td ">浙江大学</td><td class="patent-data-table-td ">基于树合并的Deep Web查询接口集成方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20080040326">US20080040326</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2006年8月14日</td><td class="patent-data-table-td patent-date-value">2008年2月14日</td><td class="patent-data-table-td ">International Business Machines Corporation</td><td class="patent-data-table-td ">Method and apparatus for organizing data sources</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="npl-citations"></a><div class="patent-section-header"><span class="patent-section-title">非专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th colspan="3"class="patent-data-table-th">参考文献</th></tr></thead><tr><td class="patent-data-table-td ">1</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">田建伟 等: "<a href='http://scholar.google.com/scholar?q="%E5%9F%BA%E4%BA%8E%E5%B1%82%E6%AC%A1%E6%A0%91%E6%A8%A1%E5%9E%8B%E7%9A%84DeepWeb%E6%95%B0%E6%8D%AE%E6%8F%90%E5%8F%96%E6%96%B9%E6%B3%95"'>基于层次树模型的DeepWeb数据提取方法</a>", 《计算机研究与发展》, 31 December 2011 (2011-12-31), pages 94 - 102</td></tr><tr><td class="patent-data-table-td ">2</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">高岭等: "<a href='http://scholar.google.com/scholar?q="DeepWeb%E6%9F%A5%E8%AF%A2%E6%8E%A5%E5%8F%A3%E7%9A%84%E8%87%AA%E5%8A%A8%E5%88%A4%E5%AE%9A"'>DeepWeb查询接口的自动判定</a>", 《计算机技术与发展》, 31 May 2007 (2007-05-31), pages 148 - 151</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=ax7OCAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年8月21日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年9月18日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2016年4月13日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/1df108895e35eb349394/CN103257981A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E5%9F%BA%E4%BA%8E%E6%9F%A5%E8%AF%A2%E6%8E%A5%E5%8F%A3%E5%B1%9E%E6%80%A7%E7%89%B9%E5%BE%81%E7%9A%84Deep_We.pdf?id=ax7OCAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U1IX1LPc42NmuRlXDmxkYDDMBs1dw"},"sample_url":"https://www.google.com/patents/reader?id=ax7OCAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>