<!DOCTYPE html><html><head><title>专利 CN101046810A - 自动建立关系模型的系统及其方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_4874c258b856314cce6b80d777b4ee7a/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_4874c258b856314cce6b80d777b4ee7a__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="自动建立关系模型的系统及其方法"><meta name="DC.contributor" content="孟庆光" scheme="inventor"><meta name="DC.contributor" content="华为技术有限公司" scheme="assignee"><meta name="DC.date" content="2006-5-26" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种自动建立关系模型的方法，该方法包括：设置对象模型到关系模型的映射规则，以及从对象模型中采集模型关联信息；根据所述映射规则和所采集的对象模型关联信息以及对象模型，自动生成关系模型。本发明还公开了一种自动建立关系模型的系统，该系统包括：模型信息采集引擎，用于从对象模型采集得到模型之间的关联信息，并将所述模型关联信息发送给自动转换引擎；自动转换引擎，用于根据预设的映射规则定义文件、所述模型关联信息和对象模型，自动生成关系模型。本发明提高了对象模型到关系模型映射的自动化程度，降低了手工定义对象模型到关系模型映射的工作量和由此导致的错误比率，简化了开发人员的工作，从而提高了开发效率。"><meta name="DC.date" content="2007-10-3"><meta name="citation_patent_publication_number" content="CN:101046810:A"><meta name="citation_patent_application_number" content="CN:200610078423"><link rel="canonical" href="https://www.google.com/patents/CN101046810A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN101046810A?cl=zh"/><meta name="title" content="专利 CN101046810A - 自动建立关系模型的系统及其方法"/><meta name="description" content="本发明公开了一种自动建立关系模型的方法，该方法包括：设置对象模型到关系模型的映射规则，以及从对象模型中采集模型关联信息；根据所述映射规则和所采集的对象模型关联信息以及对象模型，自动生成关系模型。本发明还公开了一种自动建立关系模型的系统，该系统包括：模型信息采集引擎，用于从对象模型采集得到模型之间的关联信息，并将所述模型关联信息发送给自动转换引擎；自动转换引擎，用于根据预设的映射规则定义文件、所述模型关联信息和对象模型，自动生成关系模型。本发明提高了对象模型到关系模型映射的自动化程度，降低了手工定义对象模型到关系模型映射的工作量和由此导致的错误比率，简化了开发人员的工作，从而提高了开发效率。"/><meta property="og:title" content="专利 CN101046810A - 自动建立关系模型的系统及其方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?hl=zh-CN&tbm=isch&source=og&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?hl=zh-CN&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?hl=zh-CN&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN101046810A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN101046810A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=Xk2HAAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN101046810A&amp;usg=AFQjCNF_lWMGw7DoSS7sHSm5peJBklxD9A" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/5748251f334e2f5934b1/CN101046810A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/5748251f334e2f5934b1/CN101046810A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN101046810A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN101046810A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN101046810A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN101046810B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN101046810A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种自动建立关系模型的方法，该方法包括：设置对象模型到关系模型的映射规则，以及从对象模型中采集模型关联信息；根据所述映射规则和所采集的对象模型关联信息以及对象模型，自动生成关系模型。本发明...</span><span itemprop="url">https://www.google.com/patents/CN101046810A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN101046810A - 自动建立关系模型的系统及其方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN101046810A - 自动建立关系模型的系统及其方法" title="专利 CN101046810A - 自动建立关系模型的系统及其方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN101046810 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 200610078423</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2007年10月3日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2006年5月26日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2006年5月26日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN101046810B?hl=zh-CN&amp;cl=zh">CN101046810B</a>, </span><span class="patent-bibdata-value"><a href="/patents/WO2007137468A1?hl=zh-CN&amp;cl=zh">WO2007137468A1</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">200610078423.0, </span><span class="patent-bibdata-value">CN 101046810 A, </span><span class="patent-bibdata-value">CN 101046810A, </span><span class="patent-bibdata-value">CN 200610078423, </span><span class="patent-bibdata-value">CN-A-101046810, </span><span class="patent-bibdata-value">CN101046810 A, </span><span class="patent-bibdata-value">CN101046810A, </span><span class="patent-bibdata-value">CN200610078423, </span><span class="patent-bibdata-value">CN200610078423.0</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%AD%9F%E5%BA%86%E5%85%89%22">孟庆光</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E5%8D%8E%E4%B8%BA%E6%8A%80%E6%9C%AF%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">华为技术有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN101046810A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN101046810A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN101046810A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (5),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (5),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=Xk2HAAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D200610078423&amp;usg=AFQjCNEGnjjLM6KeVdNmh8m8cHOYg9WjBg"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=Xk2HAAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D101046810A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNH_d1iGow_eY9SUDZg_ee00GTgdMw"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT121982039" lang="ZH" load-source="patent-office">自动建立关系模型的系统及其方法</invention-title>
      </span><br><span class="patent-number">CN 101046810 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA108215659" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种自动建立关系模型的方法，该方法包括：设置对象模型到关系模型的映射规则，以及从对象模型中采集模型关联信息；根据所述映射规则和所采集的对象模型关联信息以及对象模型，自动生成关系模型。本发明还公开了一种自动建立关系模型的系统，该系统包括：模型信息采集引擎，用于从对象模型采集得到模型之间的关联信息，并将所述模型关联信息发送给自动转换引擎；自动转换引擎，用于根据预设的映射规则定义文件、所述模型关联信息和对象模型，自动生成关系模型。本发明提高了对象模型到关系模型映射的自动化程度，降低了手工定义对象模型到关系模型映射的工作量和由此导致的错误比率，简化了开发人员的工作，从而提高了开发效率。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(19)</span></span></div><div class="patent-text"><div mxw-id="PCLM50803310" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.一种自动建立关系模型的集成开发环境IDE系统，其特征在于，该系统包括：模型信息采集引擎，用于从对象模型采集得到模型关联信息，并将所述模型关联信息发送给自动转换引擎；自动转换引擎，用于根据预设的映射规则定义文件、所述模型关联信息和对象模型，生成关系模型。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的系统，其特征在于，所述自动转换引擎进一步用于生成映射文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求1所述的系统，其特征在于，所述自动转换引擎包括：第一自动转换引擎，用于根据预设的映射规则定义文件、所述模型关联信息和对象模型，生成映射文件；模型输出工具，用于根据所述映射文件生成关系模型。</div>
    </div>
    </div> <div class="claim"> <div num="4" class="claim">
      <div class="claim-text">4.一种自动建立关系模型的方法，其特征在于，该方法包括以下步骤：设置对象模型到关系模型的映射规则，以及从对象模型中采集模型关联信息；根据所述映射规则和模型关联信息以及对象模型，自动生成关系模型。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求4所述的方法，其特征在于，所述从对象模型中采集模型关联信息的步骤为：遍历对象模型，并获取模型关联信息。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求4所述的方法，其特征在于，所述根据映射规则和模型关联信息以及对象模型自动生成关系模型的步骤包括：根据所述映射规则和模型关联信息以及对象模型生成映射文件；根据映射文件生成关系模型。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求4所述的方法，其特征在于，所述根据映射规则和模型关联信息以及对象模型自动生成关系模型的步骤进一步包括生成映射文件的步骤。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.根据权利要求6或7所述的方法，其特征在于，所述映射文件包括Hibernate映射文件和Hibernate配置文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.根据权利要求4所述的方法，其特征在于，所述模型关联信息包括单键实体类；所述映射规则包括：类映射到表；主键属性映射为表的主键；非主键属性映射为表的字段；或者所述模型关联信息包括复合主键实体类；所述映射规则包括：类映射到表；主键属性映射为表的主键，主键类所有的属性映射到表的复合主键字段；非主键属性映射为表的字段。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.根据权利要求4所述的方法，其特征在于，所述模型关联信息包括实体类型和值类型，且所述实体类与值类型为一对一关系；所述映射规则为：实体类映射到表；实体主键属性映射为表的主键；值类型的多个属性映射到实体类对应的表的多个字段；非主键属性映射为表的字段；或者所述映射规则为：实体类和值类型分别映射到两张独立的表；值类型对应的表中增加实体类的主键字段，作为值类型的主键和外键。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="11" class="claim">
      <div class="claim-text">11.根据权利要求4所述的方法，其特征在于，所述模型关联信息包括实体类型和值类型，且所述实体类与值类型为一对多关系；所述映射规则为：实体类和值类型分别映射到两张独立的表；值类型对应的表中增加实体类的主键字段，作为值类型的外键，且值类型有单独的主键字段。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="12" class="claim">
      <div class="claim-text">12.根据权利要求4所述的方法，其特征在于，所述模型关联信息包括属性类型；所述属性类型为基本类型或基于扩展的基本类型时，所述映射规则包括：属性类型映射到数据库的字段；和/或所述属性类型为结构类型时，所述映射规则包括：结构类型与其所述的类映射到同一张表。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="13" class="claim">
      <div class="claim-text">13.根据权利要求4所述的方法，其特征在于，所述模型关联信息包括关联类与被关联类单向一对一关联关系和/或关联类和被关联类双向一对多关联关系；所述映射规则为：关联类映射到表；关联类和被关联类的属性映射到表的字段；或者所述映射规则为：关联类和被关联类分别映射到两张表；被关联类对应的表使用关联类的主键作为自己的主键和外键字段；或者所述映射规则为：关联类和被关联类分别映射到两张表；被关联类对应的表使用关联类的主键作为自己的外键字段，并使用单独的主键字段。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="14" class="claim">
      <div class="claim-text">14.根据权利要求4所述的方法，其特征在于，所述模型关联信息包括关联类和被关联类单向一对多关联关系，和/或关联类和被关联类双向一对多关联关系，和/或关联类和被关联类双向多对一关联关系；所述映射规则为：关联类和被关联类分别映射到两张表；被关联类对应的表使用关联类的主键作为自己的外键字段；或者所述映射规则为：关联类和被关联类分别映射到两张表；创建一个新的连接表，表中的字段包含关联类和被关联类的主键字段；或者所述映射规则为：关联类和被关联类分别映射到两张表；创建一个新的连接表，表中的字段包含关联类和被关联类的主键字段，同时关联表有自己的主键字段。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="15" class="claim">
      <div class="claim-text">15.根据权利要求4所述的方法，其特征在于，所述模型关联信息包括关联类和被关联类单向多对一关联关系；所述映射规则为：关联类和被关联类分别映射到两张表；关联类使用被关联类的主键属性作为外键字段；或者所述映射规则为：关联类和被关联类分别映射到两张表；创建一个新的连接表，表中的字段包含关联类和被关联类的主键字段；或者所述映射规则为：关联类和被关联类分别映射到两张表；创建一个新的连接表，表中的字段包含关联类和被关联类的主键字段，连接表同时有自己的主键字段。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="16" class="claim">
      <div class="claim-text">16.根据权利要求4所述的方法，其特征在于，所述模型关联信息包括关联类和被关联类多对多关联关系和/或关联类和被关联类双向多对多关联关系；所述映射规则为：关联类和被关联类分别映射到两张表，属性对象映射到一张连接表；创建一个新的连接表，该新连接表中的字段只包含关联类和被关联类的主键字段，并且新连接表的某个字段和前面的主键字段联合起来作为主键。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="17" class="claim">
      <div class="claim-text">17.根据权利要求4所述的方法，其特征在于，所述模型关联信息包括父类与子类的继承关系；所述映射规则为：每个层次的类的所有属性叠加到一张表中；父类使用类型字段表示自己所在的层次；所有的子类层次对应的表共用父类的主键作为外键唯一标识一条记录；或者所述映射规则为：每个子类生成一张单独的表；每个子类对应的表使用父类的主键作为外键唯一标识一条记录；或者所述映射规则为：每个具体类一张表，该表中包含了从最顶层的父类到该子类的所有字段的并集。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="18" class="claim">
      <div class="claim-text">18.根据权利要求4所述的方法，其特征在于，所述模型关联信息包括关联属性类和被关联属性类一对一组合关系；所述映射规则为：关联属性类映射到表；关联属性类主键属性映射为表的主键；被关联属性类的多个属性映射到关联类对应的表的多个字段；非主键属性映射为表的字段；或者所述映射规则为：关联属性类和被关联属性类分别映射到两张独立的表中；被关联属性类对应的表中增加关联属性类的主键字段，作为被关联属性类的主键和外键。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="19" class="claim">
      <div class="claim-text">19.根据权利要求4所述的方法，其特征在于，所述模型关联信息包括关联属性类和被关联属性类一对多组合关系；所述映射规则为：关联属性类和被关联属性类分别映射到两张独立的表中；被关联属性类对应的表中增加关联属性类的主键字段，作为被关联属性类的外键，且被关联属性类有单独的主键字段。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES57862649" lang="ZH" load-source="patent-office" class="description">
    <invention-title lang="ZH">自动建立关系模型的系统及其方法</invention-title>
    <technical-field>
      <p>技术领域</p>
      <p>本发明涉及数据库技术领域，特别是一种自动建立关系模型的系统及其方法。</p>
    </technical-field>
    <background-art>
      <p>背景技术</p>
      <p>当前，在应用中通常将JAVA2企业版(J2EE)系统的体系结构分为三个基本层次：展示层、业务逻辑层和数据源层，其中展示层用于向最终用户提供界面，业务逻辑层用于进行各个领域中的业务逻辑处理，数据源层用于处理和关系数据库、消息系统的连接，并完成事务管理等功能。在上述三个基本层次中，数据源层是非常重要的层次，在实际应用中数据源的大多数应用场景是关系数据库。</p>
      <p>在J2EE的体系架构中，可以通过JAVA数据库连接技术(JDBC)直接对关系数据库进行访问，这也是大多数应用所采用的数据访问方式，但是在应用程序中使用JDBC访问数据库将会导致业务处理逻辑和数据访问代码混杂在一起，不利于后期的维护。而对象/关系映射技术是一种很好的替代方案，在关系数据库访问接口上使用对象/关系映射技术可以通过面向对象(OO)模型屏蔽后台数据库系统的差异，并且系统的数据模型易于理解，有利于提高编程的效率，还可以提高代码的可读性和可维护性。</p>
      <p>目前比较成熟的对象/关系映射解决方案有三类，以下分别说明。</p>
      <p>第一类为基于对象模型的建模方案。基于对象模型的建模方案完全以对象模型为中心，主要是以统一模型化语言(UML)为代表的图形化建模工具。但是，该类方案没有针对数据访问层的应用场景做裁减，所以使用比较复杂；并且该类方案没有提供对象模型到关系模型的映射工具，关系模型的维护需要通过另外的工具实现，集成度较低；而且该方案没有针对对象/关系映射技术的集成，手工集成的工作量较大。</p>
      <p>第二类为基于关系模型的建模方案。基于关系模型的解决方案完全以关系模型为中心，主要是以实体关系(ER)图为代表的图形化建模工具。但是这类方案没有提供对象模型到关系模型的映射工具，对象模型的维护需要通过另外的工具实现，集成度较低；而且没有针对对象/关系映射技术的集成，手工集成的工作量较大。</p>
      <p>第三类为基于配置文件的对象关系映射方案。这种方案以Hibernate技术为代表。使用这种映射方案，用户需要提供大量的配置文件，用户需要理解类之间的关联、继承、组合等关系，并把这些类和关系的映射规则手工编写成为对应的配置文件和映射文件。这种技术方案的缺点是其没有提供自动化的开发工具，完全依赖于用户的手工劳动；难于维护，配置文件、映射规则、数据库建表脚本都需要手工编写，任何一个地方修改都会牵涉其他地方的修改，修改过程中容易导致错误。</p>
    </background-art>
    <disclosure>
      <p>发明内容</p>
      <p>有鉴于此，本发明提出了一种建立关系模型的方法，用以提高系统集成度，降低手工集成工作量，从而提高开发效率。本发明的另一个目的是提供一种建立关系模型的系统。</p>
      <p>为实现上述目的，本发明提供了一种自动建立关系模型的IDE系统，该系统包括：模型信息采集引擎，用于从对象模型采集得到模型关联信息，并将所述模型关联信息发送给自动转换引擎；自动转换引擎，用于根据预设的映射规则定义文件、所述模型关联信息和对象模型，生成关系模型。</p>
      <p>所述自动转换引擎进一步用于生成映射文件。</p>
      <p>所述自动转换引擎包括：第一自动转换引擎，用于根据预设的映射规则定义文件、所述模型关联信息和对象模型，生成映射文件；模型输出工具，用于根据所述映射文件生成关系模型。</p>
      <p>本发明还提供了一种自动建立关系模型的方法，该方法包括以下步骤：设置对象模型到关系模型的映射规则，以及从对象模型中采集模型关联信息；根据所述映射规则和模型关联信息以及对象模型，自动生成关系模型。</p>
      <p>所述从对象模型中采集模型关联信息的步骤为：遍历对象模型，并获取模型关联信息。</p>
      <p>所述根据映射规则和模型关联信息以及对象模型自动生成关系模型的步骤包括：根据所述映射规则和模型关联信息以及对象模型生成映射文件；根据映射文件生成关系模型。</p>
      <p>所述根据映射规则和模型关联信息以及对象模型自动生成关系模型的步骤进一步包括生成映射文件的步骤。</p>
      <p>所述映射文件包括Hibernate映射文件和Hibernate配置文件。</p>
      <p>所述模型关联信息包括单键实体类；所述映射规则包括：类映射到表；主键属性映射为表的主键；非主键属性映射为表的字段。或者所述模型关联信息包括复合主键实体类；所述映射规则包括：类映射到表；主键属性映射为表的主键，主键类所有的属性映射到表的复合主键字段；非主键属性映射为表的字段。</p>
      <p>所述模型关联信息包括实体类型和值类型，且所述实体类与值类型为一对一关系；所述映射规则为：实体类映射到表；实体主键属性映射为表的主键；值类型的多个属性映射到实体类对应的表的多个字段；非主键属性映射为表的字段；或者所述映射规则为：实体类和值类型分别映射到两张独立的表；值类型对应的表中增加实体类的主键字段，作为值类型的主键和外键。</p>
      <p>所述模型关联信息包括实体类型和值类型，且所述实体类与值类型为一对多关系；所述映射规则为：实体类和值类型分别映射到两张独立的表；值类型对应的表中增加实体类的主键字段，作为值类型的外键，且值类型有单独的主键字段。</p>
      <p>所述模型关联信息包括属性类型；所述属性类型为基本类型或基于扩展的基本类型时，所述映射规则包括：属性类型映射到数据库的字段；和/或所述属性类型为结构类型时，所述映射规则包括：结构类型与其所述的类映射到同一张表。</p>
      <p>所述模型关联信息包括关联类与被关联类单向一对一关联关系和/或关联类和被关联类双向一对多关联关系。所述映射规则为：关联类映射到表；关联类和被关联类的属性映射到表的字段。或者所述映射规则为：关联类和被关联类分别映射到两张表；被关联类对应的表使用关联类的主键作为自己的主键和外键字段。或者所述映射规则为：关联类和被关联类分别映射到两张表；被关联类对应的表使用关联类的主键作为自己的外键字段，并使用单独的主键字段。</p>
      <p>所述模型关联信息包括关联类和被关联类单向一对多关联关系，和/或关联类和被关联类双向一对多关联关系，和/或关联类和被关联类双向多对一关联关系。所述映射规则为：关联类和被关联类分别映射到两张表；被关联类对应的表使用关联类的主键作为自己的外键字段。或者所述映射规则为：关联类和被关联类分别映射到两张表；创建一个新的连接表，表中的字段包含关联类和被关联类的主键字段。或者所述映射规则为：关联类和被关联类分别映射到两张表；创建一个新的连接表，表中的字段包含关联类和被关联类的主键字段，同时关联表有自己的主键字段。</p>
      <p>所述模型关联信息包括关联类和被关联类单向多对一关联关系。所述映射规则为：关联类和被关联类分别映射到两张表；关联类使用被关联类的主键属性作为外键字段。或者所述映射规则为：关联类和被关联类分别映射到两张表；创建一个新的连接表，表中的字段包含关联类和被关联类的主键字段。或者所述映射规则为：关联类和被关联类分别映射到两张表；创建一个新的连接表，表中的字段包含关联类和被关联类的主键字段，连接表同时有自己的主键字段。</p>
      <p>所述模型关联信息包括关联类和被关联类多对多关联关系和/或关联类和被关联类双向多对多关联关系。所述映射规则为：关联类和被关联类分别映射到两张表，属性对象映射到一张连接表；创建一个新的连接表，该新连接表中的字段只包含关联类和被关联类的主键字段，并且新连接表的某个字段和前面的主键字段联合起来作为主键。</p>
      <p>所述模型关联信息包括父类与子类的继承关系。所述映射规则为：每个层次的类的所有属性叠加到一张表中；父类使用类型字段表示自己所在的层次；所有的子类层次对应的表共用父类的主键作为外键唯一标识一条记录。或者所述映射规则为：每个子类生成一张单独的表；每个子类对应的表使用父类的主键作为外键唯一标识一条记录。或者所述映射规则为：每个具体类一张表，该表中包含了从最顶层的父类到该子类的所有字段的并集。</p>
      <p>所述模型关联信息包括关联属性类和被关联属性类一对一组合关系。所述映射规则为：关联属性类映射到表；关联属性类主键属性映射为表的主键；被关联属性类的多个属性映射到关联类对应的表的多个字段；非主键属性映射为表的字段。或者所述映射规则为：关联属性类和被关联属性类分别映射到两张独立的表中；被关联属性类对应的表中增加关联属性类的主键字段，作为被关联属性类的主键和外键。</p>
      <p>所述模型关联信息包括关联属性类和被关联属性类一对多组合关系。所述映射规则为：关联属性类和被关联属性类分别映射到两张独立的表中；被关联属性类对应的表中增加关联属性类的主键字段，作为被关联属性类的外键，且被关联属性类有单独的主键字段。</p>
      <p>从上述方案中可以看出，由于本发明从对象模型采集模型关联信息并设置映射规则，根据模型关联信息和映射规则以及对象模型自动生成关系模型以及自动生成映射文件，提高了对象模型到关系模型映射的自动化程度，提高了系统集成度，降低了手工集成工作量，简化了开发人员的工作，从而提高了开发效率，并且能降低由于开发人员手工定义导致的错误比率。另外，实施本发明时，只需要简单的映射规则设置，甚至不用设置而采用缺省的规则，就可以完成关系模型的自动生成、Hibernate映射文件的自动生成，大大提高的工作的效率。</p>
    </disclosure>
    <description-of-drawings>
      <p>附图说明</p>
      <p>图1为本发明实施例的一种系统结构图。</p>
      <p>图2为本发明实施例的另一种系统结构图。</p>
      <p>图3为本发明实施例中所采用的对象模型的示意图。</p>
      <p>图4a和图4b分别为单键实体类以及对应的关系模型的示意图。</p>
      <p>图5a和图5b为复合主键实体类的示意图，图5c为对应的关系模型。</p>
      <p>图6a为一对一的实体类和值类型的示意图，图6b和图6c为与图6a对应的关系模型；图6d为一对多的实体类和值类型的关系模型示意图。</p>
      <p>图7a为单向一对一关联关系的示意图，图7b为与图7a对应的基于主键的关系模型示意图。</p>
      <p>图8a为单向一对多关联关系的示意图，图8b、图8c和图8d分别为与图8a对应的关系模型示意图。</p>
      <p>图9a为单向多对一关联关系的示意图，图9b、图9c和图9d分别为与图9a对应的关系模型示意图。</p>
      <p>图10a为单向多对多关联关系的示意图，图10b为与图10a对应的关系模型示意图。</p>
      <p>图11a为继承关系的示意图，图11b、图11c和图11d分别为与图11a对应的关系模型示意图。</p>
    </description-of-drawings>
    <mode-for-invention>
      <p>具体实施方式</p>
      <p>为使本发明的目的、技术方案和优点更加清楚，以下举实施例对本发明进一步详细说明。</p>
      <p>图1所示的是本发明实施例中的一种自动建立关系模型的集成开发环境(IDE)系统的示意图，该系统主要包括模型信息采集引擎和自动转换引擎。其中模型信息采集引擎从对象模型采集得到模型关联信息，然后将模型关联信息发送给自动转换引擎；自动转换引擎根据预先设置的映射规则定义文件、所述模型关联信息以及对象模型，生成映射文件和关系模型，用户可以利用得到的关系模型来访问数据库。其中模型信息采集引擎的采集过程可以为：遍历对象模型并获取模型关联信息。所述模型关联信息包括关联关系、继承关系、组合关系、类名称及其属性列表、属性名称及其类型等；所述映射规则定义文件包括类映射规则、属性映射规则、关联映射规则、继承映射规则、组合映射规则等。映射文件可以包括Hibernate映射文件和Hibernate配置文件。</p>
      <p>图2所示的是本发明实施例的另一种系统结构，该系统包括模型信息采集引擎和自动转换引擎，自动转换引擎包括第一自动引擎转换以及模型输出工具，其中模型信息采集引擎从对象模型采集得到模型关联信息，然后将模型关联信息发送给自动转换引擎，自动转换引擎根据预先设置的映射规则定义文件以及模型关联信息和对象模型，生成关系模型和映射文件。在自动转换引擎中，第一自动转换引擎根据预先设置的映射规则定义文件、模型关联信息和对象模型生成映射文件，而模型输出工具根据映射文件生成关系模型，用户可以利用得到的关系模型来访问数据库。这里以模型输出工具是Hibernate模型输出工具为例，那么映射文件包括Hibernate映射文件和Hibernate配置文件。与图1所示的系统相比，图2所示的系统中Hibernate模型输出工具导出的关系模型只能是数据定义语言(DDL)语句的建表脚本。</p>
      <p>本发明实施例采用上述自动建立关系模型的IDE系统，实现自动建立关系模型。本发明实施例的方法包括以下步骤：步骤S1，设置对象模型到关系模型的映射规则，形成映射规则定义文件，模型信息采集引擎从对象模型中采集得到模型关联信息，并将模型关联信息发送给自动转换引擎。其中，模型信息采集引擎从对象模型中采集模型关联信息的过程可以为：遍历对象模型，并获取模型关联信息。</p>
      <p>步骤S2，自动转换引擎根据所述映射规则和模型关联信息以及对象模型，自动生成关系模型。如果采用的是图1所示的系统，则自动转换引擎还可以进一步生成映射文件。如果采用的是图2所示的系统，则步骤S2可以分为以下两个步骤：第一自动转换引擎根据所述映射规则和模型关联信息以及对象模型生成映射文件；模型输出工具根据映射文件生成关系模型。所述映射文件包括Hibernate映射文件和Hibernate配置文件。</p>
      <p>以下通过一个具体的对象模型来描述本发明的实施。</p>
      <p>图3是本发明实施例中所采用的对象模型的UML图，图中所用图例为标准的UML图图例。该对象模型可以是预先通过IDE设计得到的域对象模型。在图3中，所示对象模型分为客户域、用户域、帐户域和产品域。</p>
      <p>在客户域中，客户(Customer)拥有一个唯一的客户标识(customerId)，客户拥有多个地址(Address)，每个地址包括国家(country)和邮政编码(zipCode)两个字段；一个客户拥有0～n帐户(Account)，即客户和帐户之间是一对多的关联关系。</p>
      <p>在用户域中，用户组(UserGroup)使用一个唯一的用户组标识(groupId)；用户组和客户之间的关联关系是多对多的关联关系，该关联关系的属性使用客户用户组关系(CustomerUserGroupRela)标识；用户组和用户(User)是一对多的关联关系；用户使用唯一的用户标识(subsriberId)，一个用户包含0～n个服务号码(ServiceNumber)、0～n个产品定购关系(ProductOrder)、以及0～n个支付关系(PaymentRelation)；服务号码使用唯一的服务号码标识(serviceNumberId)，服务号码分为电话号码(PhoneNumber)和综合业务数据网(ISDN)号码(IsdnMuber)两类，两类服务号码的共同属性放在服务号码中；每个产品定购关系使用唯一的定购关系标识(oerderId)，每个产品定购关系包含0～n个参数(OrderParameters)，并且唯一关联到一个产品(Product)。</p>
      <p>在帐户域中，帐户使用唯一的帐户标识(accountId)；每个支付关系唯一关联到一个帐户，并唯一关联到一个费用项(FeeItem)；费用项使用唯一的费用项标识(feeItemId)。</p>
      <p>在产品域中，产品使用唯一的产品标识(productId)。</p>
      <p>模型信息采集引擎从上述对象模型中采集得到如下模型关联信息：1)实体模型，包括实体类型和值类型(或者叫结构类型)，实体类型例如用户、客户等，值类型例如地址、产品定购关系参数等；2)属性模型，根据属性的类型可以分为基本类型和扩展类型，扩展类型包括基于基本类型的扩展类型和结构类型；3)关联关系，分为单向关联和双向关联，其中单向关联包括一对一关联、一对多关联、多对一关联，双向关联包括一对一关联、一对多关联、多对一关联、多对多关联，另外关联中可以带有自己的属性；4)继承关系，只支持单根继承方式；5)组合关系，包括一对一的组合和一对多的组合。</p>
      <p>针对这些模型关联信息以及对象模型，描述相应的映射规则。</p>
      <p>一、实体模型的映射规则。其中包括实体类型的映射规则和值类型的映射规则。</p>
      <p>1、实体类型的映射规则。实体类型映射包括单键实体类(SingleKeyEntity)的映射和复合主键(也成为多主键)实体类(MultiKeyEntity)的映射。单键实体类的映射规则为：类映射到同名或不同名的表；主键属性映射为表的主键；非主键属性映射为表的字段，并且字段的类型和约束可以在IDE中设置。例如，图4a所示的单键实体类根据该映射规则映射为图4b所示的关系模型。在图4a和图4b中，类以及表名称为单键实体(SingleKeyEntity)，主键属性为长整型(Long)的标识(id)，非主键属性包括字符串型(String)的名称(name)和描述(description)。</p>
      <p>复合主键实体类的映射规则为：类映射到表，类对应的表名称可以同名或者在IDE中设置；主键属性映射为表的主键，如果主键是主键类，则主键类所有的属性映射到表的复合主键字段；非主键属性映射为表的字段，并且字段的类型和约束可以在IDE中设置。在实际应用中，根据主键的处理方式，复合主键实体类包含如图5a和图5b所示的两种形式，在图5a中实体类主键是基于实体属性的复合主键；在图5b中实体类主键是基于单独的主键类的复合主键，在这种复合主键实体类的模型中需要指明哪个类是主键类型，哪个字段是主键。根据上述映射规则，图5a和图5b所示的两种复合主键类实体的都映射为如图5c所示的关系模型。</p>
      <p>2、值类型的映射规则。所谓的“值类型”是指结构类型等自定义类型，通常作为实体的一个属性存在，分为单成员属性和集合属性两种形式，因此值类型在和实体类型之间的关系是单向(从实体类型到值类型)一对一或者一对多关联。</p>
      <p>其中，对于一对一值类型的映射，可使用映射到同一张表中的映射规则1：实体类映射到表，类对应的表名称可以同名或者在IDE中设置；实体主键属性映射为表的主键；值类型的多个属性映射到实体类对应的表的多个字段；非主键属性映射为表的字段，其中字段的类型和约束可以在IDE中设置。根据映射规则1，可以将如图6a所示的对象模型映射到如图6b所示的关系模型。还可以使用映射规则2：实体类和值类型分别映射到两张独立的表中；值类型对应的表中增加实体类的主键字段，作为值类型的主键和外键。可见，根据映射规则2，实体类和值类型分别映射到两张表中，使用主键和外键进行关联，根据映射规则2，可以将如图6a所示的对象模型映射为如图6c所示的关系模型。</p>
      <p>对于一对多值类型的映射，可以采用如下映射规则：实体类和值类型分别映射到两张独立的表中；值类型对应的表中增加实体类的主键字段，作为值类型的外键，值类型有单独的主键字段。采用该映射规则，得到的对象模型映射如图6d所示。在图6a至图6d中，类及表名称包括客户实体类型(CustomerEntityType)、地址值类型(AddressValueType)，属性包括id、name、描述(desc)、country、address、zipcode等。</p>
      <p>二、属性模型的映射规则。如前所述，根据属性的类型可以分为基本类型和扩展类型，扩展类型包括基于基本类型的扩展类型和结构类型。</p>
      <p>其中，基本类型包括原始类型和大数据类型，原始类型包括整型(integer)、长整型(long)、短整型(short)、浮点型(float)字符串(string)、日期date、时间(time)等，大数据类型包括二进制(binary)、文本(text)等。基本类型映射到数据库的字段，每个基本类型映射到字段的类型可以由使用给定的默认值，也可以由用户指定，例如字符串的长度。基于基本类型的扩展类型如IP地址(IPAddress)等，其映射规则与对应的基本类型一样。结构类型和其所属的类映射到同一张表。</p>
      <p>三、关联关系的映射规则。</p>
      <p>1、单向关联的映射规则。单向关联可以分为单向一对一关联、单向一对多关联、单向多对一关联以及单向多对多关联，下面分别说明它们的映射规则。在下面的描述中，被关联类是指UML图中关联箭头所指向的类，关联类是指UML图中关联线另一侧所对应的类。</p>
      <p>1)单向一对一关联关系可以采用如下三种映射规则。第一种映射规则与前面所述的一对一值类型的映射规则相同，将关联类和被关联类合并为一张表，具体为：关联类映射到表，表名称可以同名或者在IDE中设置；关联类和被关联类的属性映射到表的字段，其中字段的类型和约束可以在IDE中设置。</p>
      <p>第二种映射规则是基于主键的关联映射实现，一张表的主键作为另外一张表的唯一外键，根据该规则可以将如图7a所示的关联关系映射为如图7b所示的关系模型。第二种映射规则为：关联类和被关联类分别映射到两张表；被关联类对应的表使用关联类的主键作为自己的主键和外键字段，如图7b中的定购标识(orderId)字段。在图7a和图7b中，类及表名称包括定购关系实体类型(ProductOrderEntityType)、定购关系描述类型(ProductOrderDexcriptionType)，属性包括orderId、用户标识(userId)、productId、description等。</p>
      <p>第三种映射规则是基于外键的关联映射实现。第三种映射规则为：关联类和被关联类分别映射到两张表；被关联类对应的表使用关联类的主键作为自己的外键字段，并使用单独的主键字段。基于关联表的映射实现，考虑到多表关联的性能问题，不推荐使用第三种映射规则。</p>
      <p>2)单向一对多关联可以采用如下三种映射规则。第一种映射规则通过外键实现关联，将如图8a所示的对象关系映射到如图8b所示的关系模型，在帐户实体类型(AccountEntityType)4表中增加一个外键字段customerId。第一种映射规则为：关联类和被关联类分别映射到两张表；被关联类对应的表使用关联类的主键作为自己的外键字段，如图8b中的customerId字段，被关联类有自己的主键属性。另外，图8a和图8b中，属性还包括标题(title)和平衡(balance)等。</p>
      <p>第二种映射规则和第三种映射规则都使用连接表实现关联，分别将如图8a所示的对象关系映射为如图8c和图8d所示的。根据第二种和第三种映射规则，创建一张连接表客户帐户关联(CustomerAccountAssoc)，该表中只存放两个外键customerId和accountId字段。在第二种映射规则中，关联表没有属于自己的主键，全部使用外键唯一标识，不需要指定主键的生成方式，该第二种映射规则为：关联类和被关联类分别映射到两张表；创建一个新的连接表，表中的字段只包含关联类和被关联类的主键字段。在第三种映射规则中，关联表有属于自己的主键关联标识(assocId)，因此需要指定主键的生成方式，例如基于特定的算法或者基于数据库的组件生成策略，第三种映射规则为：关联类和被关联类分别映射到两张表；创建一个新的连接表，表中的字段只包含关联类和被关联类的主键字段，同时关联表有自己的主键字段。优选地，使用第三种映射规则。</p>
      <p>3)单向多对一关联的可以使用如下三种映射规则。</p>
      <p>第一种映射规则为基于外键的实现方式，将如图9a的对象关系映射为如图9b所示的关系模型。第一种映射规则为：关联类和被关联类分别映射到两张表；关联类使用被关联类的主键属性作为外键字段。</p>
      <p>第二种映射规则和第三种映射规则都是基于关联表的实现方式，如图9c和图9d所示，分别创建一张新的关联表定购产品关联(OrderProductAssoc)，通过外键实现两张表的关联，图9c所示的根据第二种映射规则得到的关联表没有属于自己的主键，而图9d所示的根据第三种映射规则得到的关联表有属于自己的主键assocId，需要指定关联表的主键生成方式。第二种映射规则为：关联类和被关联类分别映射到两张表；创建一个新的连接表，表中的字段只包含关联类和被关联类的主键字段。第三种映射规则为：关联类和被关联类分别映射到两张表；创建一个新的连接表，表中的字段只包含关联类和被关联类的主键字段，连接表同时有自己的主键字段。另外，图9a至图9d中，类及表名称还包括产品定购实体类型(ProductOrderEntityType)5、产品类型(ProductType)5等。</p>
      <p>4)单向多对多关联使用如下映射规则：关联类和被关联类分别映射到两张表，属性对象映射到一张连接表；创建一个新的连接表，表中的字段只包含关联类和被关联类的主键字段，连接表的某个字段和前面的主键字段联合起来作为主键。根据该映射规则，将如图10a所示的对象关系映射为如图10b所示的关系模型。如图10a所示，单向多对多关联可以转换为两个一对多的关联，因此必须使用如图10b中所示的连接表实现单向多对多的关联，尤其是关联本身具有某些属性。和前面所述几种基于连接表的映射规则不同的是，这里有一个值对象用户组关联类型(UserGroupAssocType)4，因此转换到Hibernate映射文件需要指定该值对象的映射规则，例如基于特定的算法或者基于数据库的组件生成策略。另外，图10a和图10b中，类及表名称还包括关联类型(AssociationType)4、用户组实体类型(UserGroupEntityType)4、用户实体类型(UserEntityType)4，属性还包括状态(status)等。</p>
      <p>2、双向关联映射规则与单向关联映射规则的相同，这里不再赘述。具体为：1)双向一对一关联的映射规则与单向一对一关联的映射规则一样；2)双向一对多关联的映射规则与单向一对多关联的映射规则一样，双向多对一关联的映射规则与一对多关联的映射规则一样；3)双向多对多关联的映射规则与单向多对多关联的规则映射一样。</p>
      <p>四、继承关系的映射规则。</p>
      <p>本发明实施例对于继承关系到关系模型的映射提供三种映射规则，第一种映射规则采用每个类分层结构一张表，第二种映射规则采用每个子类一张表，第三种映射规则采用每个具体类一张表。下面根据如图11a所示的对象关系，分别描述这三种映射规则。图11a至图11d中，类及表名称还包括服务(Service)、消息服务(MessagingService)、无线应用协议服务(WapService)、短消息服务(smsService)、多媒体消息服务(MmsService)、中间服务(MiddleService)、子服务(ChildService)，属性还包括接入码(accessCode)、特征流(featureStr)、接入统一资源标识符(accessUrl)、主管统一资源标识符(chargingUrl)短消息网关标识(smsGatewayId)、邮箱(mailbox)等。</p>
      <p>第一种映射规则为：每个层次的类的所有属性叠加到一张表中；父类使用类型(type)字段表示自己所在的层次；所有的子类层次对应的表共用父类的主键作为外键唯一标识一条记录。根据第一种映射规则，如图11a所示的对象模型只需要三张表实现，如图11b所示，同一继承层次的类的属性放在一张表中实现，这样不可避免的导致属性的冗余，子类层次对应的表与父类层次对应的表是一对一的关系。第一种映射规则中需要考虑的事情比较多，如同一层次类的字段名不能重名，子类类型的编码，并且很多不同类型的字段混合存放在一张表中，也不便于管理。</p>
      <p>第二种映射规则为：每个子类生成一张单独的表；每个子类对应的表使用父类的主键作为外键唯一标识一条记录。使用第二种映射规则得到如图11c所示的关系模型。第二种映射规则的优点是：可以清楚的表达类之间的继承关系，对于包含三层以上的继承关系时比较合适，并且每个子类对应的表可以有自己的主键生成策略；缺点是：需要使用多表操作，性能有所下降。</p>
      <p>第三种映射规则为：每个具体类一张表，该表中包含了从最顶层的父类到该子类的所有字段的并集。如图11a所示的对象关系使用第三种映射规则得到的关系模型如图11d所示。第三种映射规则的局限在于：类的继承层次较多时，子类表中冗余字段较多；主键的生成需要考虑统一的生成策略，不允许子类有自己的主键生成策略；父类和子类不能有重名的字段。</p>
      <p>五、组合关系的映射规则。</p>
      <p>对象之间的组合关系包括一对一组合关系和一对多组合关系，这两种关系的映射规则与值类型的映射规则相似。</p>
      <p>其中，对于一对一组合关系的映射，可使用映射到同一张表中的第一种映射规则：关联属性类映射到表，类对应的表名称可以同名或者在IDE中设置；关联属性类主键属性映射为表的主键；被关联属性类的多个属性映射到关联属性类对应的表的多个字段；非主键属性映射为表的字段，其中字段的类型和约束可以在IDE中设置。对于一对一组合关系的映射还可以使用第二种映射规则：关联属性类和被关联属性类分别映射到两张独立的表中；被关联属性类对应的表中增加关联属性类的主键字段，作为被关联属性类的主键和外键。根据第二种映射规则，关联属性类和被关联属性类分别映射到两张表中，使用主键和外键进行关联。</p>
      <p>对于一对多值组合关系的映射，可以采用如下映射规则：关联属性类和被关联属性类分别映射到两张独立的表中；被关联属性类对应的表中增加关联属性类的主键字段，作为被关联属性类的外键，被关联属性类有单独的主键字段。</p>
      <p>以上所述仅为本发明的较佳实施例而已，并不用以限制本发明，凡在本发明的精神和原则之内，所作的任何修改、等同替换、改进等，均应包含在本发明的保护范围之内。</p>
    </mode-for-invention>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102541867A?cl=zh">CN102541867A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年12月15日</td><td class="patent-data-table-td patent-date-value">2012年7月4日</td><td class="patent-data-table-td ">金蝶软件（中国）有限公司</td><td class="patent-data-table-td ">数据字典生成方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102999575A?cl=zh">CN102999575A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年11月12日</td><td class="patent-data-table-td patent-date-value">2013年3月27日</td><td class="patent-data-table-td ">北京华通伟业科技发展有限公司</td><td class="patent-data-table-td ">一种Hibernate映射配置文件的配置方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102999575B?cl=zh">CN102999575B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年11月12日</td><td class="patent-data-table-td patent-date-value">2015年10月14日</td><td class="patent-data-table-td ">北京华通伟业科技发展有限公司</td><td class="patent-data-table-td ">一种Hibernate映射配置文件的配置方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103186620A?cl=zh">CN103186620A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年12月31日</td><td class="patent-data-table-td patent-date-value">2013年7月3日</td><td class="patent-data-table-td ">上海可鲁系统软件有限公司</td><td class="patent-data-table-td ">一种cim模型映射方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103186628A?cl=zh">CN103186628A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年12月31日</td><td class="patent-data-table-td patent-date-value">2013年7月3日</td><td class="patent-data-table-td ">上海可鲁系统软件有限公司</td><td class="patent-data-table-td ">一种公共信息模型与关系型数据库之间的映射方法</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=Xk2HAAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span></td></tr><tr><td class="patent-data-table-td "> 合作分类</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=Xk2HAAABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F17/30595">G06F17/30595</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=Xk2HAAABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F17/30607">G06F17/30607</a></span></td></tr><tr><td class="patent-data-table-td "> 欧洲专利分类号</td><td class="patent-data-table-td "><span class="nested-value">G06F17/30S8T</span>, <span class="nested-value">G06F17/30S8R</span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2007年10月3日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2007年11月28日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2010年9月8日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Granted</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/5748251f334e2f5934b1/CN101046810A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_4874c258b856314cce6b80d777b4ee7a.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E8%87%AA%E5%8A%A8%E5%BB%BA%E7%AB%8B%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%8F%8A%E5%85%B6.pdf?id=Xk2HAAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U2rj_VmlpDpp4f8A_MvJL1_vHlJwQ"},"sample_url":"https://www.google.com/patents/reader?id=Xk2HAAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>