<!DOCTYPE html><html><head><title>专利 CN103139199A - 以平台消息总线机制实现子系统间信息交互的方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_1ec17bec5b1e6ba0eab577be28b6afb9/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_1ec17bec5b1e6ba0eab577be28b6afb9__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="以平台消息总线机制实现子系统间信息交互的方法"><meta name="DC.contributor" content="蔡晟" scheme="inventor"><meta name="DC.contributor" content="井方伟" scheme="inventor"><meta name="DC.contributor" content="龚伯军" scheme="inventor"><meta name="DC.contributor" content="深圳键桥通讯技术股份有限公司" scheme="assignee"><meta name="DC.date" content="2012-12-31" scheme="dateSubmitted"><meta name="DC.description" content="一种以平台消息总线机制实现子系统间信息交互的方法，在网络系统内建立一个企业信息构建平台EPIC；该企业信息构建平台EPIC包括消息处理层模块，以及分发器模块。所述各子系统借助各自的消息处理层模块与分发器模块建立连接，并以服务的方式分别向企业信息构建平台EPIC注册。所述分发器模块根据服务处理请求消息向各已注册的子系统转发服务处理请求消息，实现在子系统间建立信息交互。本发明可以有效的降低系统的连接维度，减少各个子系统间的连接数量，简化了系统的配置；减少了开发人员在开发过程中为了创建连接，维护连接，连接配置管理所需要完成的重复开发工作。"><meta name="DC.date" content="2013-6-5"><meta name="DC.relation" content="CN:101119268:A" scheme="references"><meta name="citation_reference" content="王晶: &quot;业务网络智能化及其关键技术研究&quot;, 《中国博士学位论文全文数据库》, 15 March 2010 (2010-03-15)"><meta name="citation_patent_publication_number" content="CN:103139199:A"><meta name="citation_patent_application_number" content="CN:201210592143"><link rel="canonical" href="https://www.google.com/patents/CN103139199A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN103139199A?cl=zh"/><meta name="title" content="专利 CN103139199A - 以平台消息总线机制实现子系统间信息交互的方法"/><meta name="description" content="一种以平台消息总线机制实现子系统间信息交互的方法，在网络系统内建立一个企业信息构建平台EPIC；该企业信息构建平台EPIC包括消息处理层模块，以及分发器模块。所述各子系统借助各自的消息处理层模块与分发器模块建立连接，并以服务的方式分别向企业信息构建平台EPIC注册。所述分发器模块根据服务处理请求消息向各已注册的子系统转发服务处理请求消息，实现在子系统间建立信息交互。本发明可以有效的降低系统的连接维度，减少各个子系统间的连接数量，简化了系统的配置；减少了开发人员在开发过程中为了创建连接，维护连接，连接配置管理所需要完成的重复开发工作。"/><meta property="og:title" content="专利 CN103139199A - 以平台消息总线机制实现子系统间信息交互的方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?hl=zh-CN&tbm=isch&source=og&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?hl=zh-CN&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?hl=zh-CN&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN103139199A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN103139199A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=koF5CAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN103139199A&amp;usg=AFQjCNGPvQkwouq8LuVQrejRM2dFvTAvyQ" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/f875187d0e09cd5ba687/CN103139199A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/f875187d0e09cd5ba687/CN103139199A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN103139199A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN103139199A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN103139199A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN103139199B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN103139199A?cl=zh" style="display:none"><span itemprop="description">一种以平台消息总线机制实现子系统间信息交互的方法，在网络系统内建立一个企业信息构建平台EPIC；该企业信息构建平台EPIC包括消息处理层模块，以及分发器模块。所述各子系统借助各自的消息处理层模块与分发器模块建立 ...</span><span itemprop="url">https://www.google.com/patents/CN103139199A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN103139199A - 以平台消息总线机制实现子系统间信息交互的方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN103139199A - 以平台消息总线机制实现子系统间信息交互的方法" title="专利 CN103139199A - 以平台消息总线机制实现子系统间信息交互的方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN103139199 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210592143</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年6月5日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年12月31日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年12月31日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103139199B?hl=zh-CN&amp;cl=zh">CN103139199B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210592143.7, </span><span class="patent-bibdata-value">CN 103139199 A, </span><span class="patent-bibdata-value">CN 103139199A, </span><span class="patent-bibdata-value">CN 201210592143, </span><span class="patent-bibdata-value">CN-A-103139199, </span><span class="patent-bibdata-value">CN103139199 A, </span><span class="patent-bibdata-value">CN103139199A, </span><span class="patent-bibdata-value">CN201210592143, </span><span class="patent-bibdata-value">CN201210592143.7</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%94%A1%E6%99%9F%22">蔡晟</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E4%BA%95%E6%96%B9%E4%BC%9F%22">井方伟</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%BE%9A%E4%BC%AF%E5%86%9B%22">龚伯军</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%B7%B1%E5%9C%B3%E9%94%AE%E6%A1%A5%E9%80%9A%E8%AE%AF%E6%8A%80%E6%9C%AF%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">深圳键桥通讯技术股份有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103139199A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103139199A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103139199A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (1),</span> <span class="patent-bibdata-value"><a href="#npl-citations">非专利引用</a> (1),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (3),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=koF5CAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210592143&amp;usg=AFQjCNGQ2FTXTl1j8s4_F7sj_-AjEscVAQ"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=koF5CAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D103139199A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNEdXWeSSVQHri0AlSXd5bbYTu2EfQ"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT124890910" lang="ZH" load-source="patent-office">以平台消息总线机制实现子系统间信息交互的方法</invention-title>
      </span><br><span class="patent-number">CN 103139199 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA114709215" lang="ZH" load-source="patent-office">
    <div class="abstract">一种以平台消息总线机制实现子系统间信息交互的方法，在网络系统内建立一个企业信息构建平台EPIC；该企业信息构建平台EPIC包括消息处理层模块，以及分发器模块。所述各子系统借助各自的消息处理层模块与分发器模块建立连接，并以服务的方式分别向企业信息构建平台EPIC注册。所述分发器模块根据服务处理请求消息向各已注册的子系统转发服务处理请求消息，实现在子系统间建立信息交互。本发明可以有效的降低系统的连接维度，减少各个子系统间的连接数量，简化了系统的配置；减少了开发人员在开发过程中为了创建连接，维护连接，连接配置管理所需要完成的重复开发工作。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(8)</span></span></div><div class="patent-text"><div mxw-id="PCLM53163265" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.一种以平台消息总线机制实现子系统间信息交互的方法，基于包括至少一个客户端，以及至少一个服务器端的网络系统；其特征在于:  所述方法在网络系统内建立一个企业信息构建平台Enterprise Platform forInformation Constructor ;该企业信息构建平台EPIC包括分别设置在各服务器端和客户端的消息处理层模块，以及借助传输控制协议Transmission Control Protocol/用户数据报协议User Datagram Protocol与各消息处理层模块实现数据传输的分发器模块；所述企业信息构建平台EPIC按照以下步骤完成各子系统间的信息交互，  A.系统按照配置文件完成系统运行状态初始化；  B.所述各子系统借助各自的消息处理层模块与分发器模块建立连接，并以服务的方式分别向企业信息构建平台EPIC注册；  D.已注册的子系统借助消息处理层模块发送的服务处理请求消息，所述分发器模块根据服务处理请求消息向各已注册的子系统转发服务处理请求消息，实现在子系统间建立信息交互。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的以平台消息总线机制实现子系统间信息交互的方法，其特征在于:  所述消息处理层模块是分别寄生于各自对应的服务器端和客户端的寄生层模块，用于对要发送的来自服务器端或者客户端的应用层消息实施封装处理，对服务器端或者客户端的应用层要接收的消息实施解包处理；  所述分发器模块包括数据链路层模块和网络连接层；所述数据链路层用于完成对来自消息处理层模块的数据的分帧处理，确认接收和发送数据完整性验证；所述网络连接层完成网络物理连接初始化，按照数据链路层的要求完成数据的传输控制协议TransmissionControl Protocol/用户数据报协议User Datagram Protocol传输、完成网络物理连接管理。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求1所述的以平台消息总线机制实现子系统间信息交互的方法，其特征在于:  所述步骤A包括如下分步骤，  All.系统按照配置文件完成系统运行状态初始化，所述系统运行状态初始化包括设置心跳数据包发送周期；  那么在步骤B 与步骤D之间还包括如下步骤，  C.完成步骤B的已经注册的各子系统借助各自的消息处理层模块，按照分步骤All设置的心跳数据包发送周期，每间隔一个心跳数据包发送周期分别向分发器模块发送心跳数据包；如果分发器模块在N个心跳数据包发送周期内未收到来自子系统的消息处理层模块的心跳数据包，所述分发器模块取消该子系统的注册。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求1所述的以平台消息总线机制实现子系统间信息交互的方法，其特征在于:  所述分发器模块包括用于存储各子系统与分发器模块注册信息及数据连接状态的连接池，那么所述步骤B包括如下分步骤，  B21.子系统的消息处理层模块从该子系统的配置文件中获取所述子系统提供的服务的服务识别号Service ID,以及该服务要连接的分发器模块网际协议IP地址和端口信息，并封装成注册消息体数据包；  B22.步骤B21所述子系统依据注册消息体数据包中的服务要连接的分发器模块网际协议IP地址和端口信息，依据传输控制协议TCP/用户数据报协议UDP与分发器模块的相应端口建立套接字SOCKET连接，并将所述注册消息体数据包发送至分发器模块；  B23.分发器模块根据分步骤B22发送的注册消息体数据包，将所述子系统的服务存储至所述连接池中；  B24.分发器模块将注册返回消息回传给所述子系统的消息处理层模块。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求5所述的以平台消息总线机制实现子系统间信息交互的方法，其特征在于:  所述分步骤B23还进一步包括以下分步骤，  B2311.分发器模块根据分步骤B22发送的注册消息体数据包中的所述服务要连接的分发器模块网际协议IP地址，判断该分发器模块要连接的网际协议IP地址是否与在连接池中已注册服务的要连接的分发器模块网际协议IP地址相同；如果相同，分发器模块正常刷新连接池，执行分步骤B2313 ;如果不相同，执行分步骤2312 ；  B2312.分发器模块根据分步骤B22发送的注册消息体数据包中的服务识别码Service ID，判断该服务识别码Service ID是否与在连接池已经注册的服务的服务识别码Service ID相同；如果不相同，将分步骤B22发送的注册消息体数据包对应的服务的子系统在连接池存储为该项服务的主用子系统，执行分步骤2314;如果相同，将分步骤B22发送的注册消息体数据包对应的服务的子系统在连接池存储为该项服务的备用子系统，执行分步骤2315 ；  B2313.将注册返回信息设置为重复注册信息，执行步骤B24 ；  B2314.将注册返回信息设置为主用子系统注册信息，执行步骤B24 ；  B2315.将注册返回信息设置为备用子系统注册信息，执行步骤B24。</div>
    </div>
    </div> <div class="claim"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要 求5所述的以平台消息总线机制实现子系统间信息交互的方法，其特征在于:  A21.系统按照配置文件完成系统运行状态初始化，所述系统运行状态初始化包括设置心跳数据包发送周期；  那么在步骤B与步骤D之间还包括如下步骤，  C21.完成步骤B的已经注册的各子系统借助各自的消息处理层模块按照分步骤A21设置的心跳数据包发送周期，每间隔一个心跳数据包发送周期分别向分发器模块发送心跳数据包；所述心跳数据包包括子系统的负载状况信息；  C22.如果分发器模块在N个心跳数据包发送周期内未收到来自子系统的消息处理层模块的心跳数据包，执行分步骤C23至C27，  C23.分发器模块判断所述子系统是主用子系统还是备用子系统；如果是主用子系统执行分步骤C24至C26 ;如果是备用子系统，执行分步骤C27 ；  C24.在连接池中查找所述主用子系统对应的服务在连接池中是否存在备用子系统，如果存在备用子系统，执行分步骤C25 ;如果不存在备用子系统，执行分步骤C26 ；  C25.所述分发器模块在连接池中删除所述主用子系统的对应的服务，并且根据各备用子系统发送的心跳数据包中的负载状况信息，选择负载最轻的备用子系统修改设置为主用子系统；  C26.所述分发器模块在连接池中直接删除所述主用子系统的对应的服务；  C27.所述分发器模块在连接池中直接删除所述备用子系统的对应的服务。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求1所述的以平台消息总线机制实现子系统间信息交互的方法，其特征在于:  所述步骤A包括如下分步骤，  A31.系统按照配置文件完成系统运行状态初始化，所述系统运行状态初始化包括设置心跳数据包发送周期；  那么，所述步骤B包括如下分步骤，  B31.子系统的消息处理层模块从该子系统的配置文件中获取所述子系统提供的服务的服务识别号Service ID,以及该服务要连接的分发器模块网际协议IP地址和端口信息，并封装成注册消息体数据包；  B32.步骤B21所述子系统依据注册消息体数据包中的服务要连接的分发器模块网际协议IP地址和端口信息，依据传输控制协议TCP/用户数据报协议UDP与分发器模块的相应端口建立套接字SOCKET连接，并将所述注册消息体数据包发送至分发器模块；  B33.分发器模块根据分步骤B22发送的注册消息体数据包，将所述子系统的服务存储至所述连接池中；  B34.分发器模块将注册返回消息回传给所述子系统的消息处理层模块；  所述步骤C包括如下分步骤，  C31.完成分步骤B31至B34的已经注册的各子系统借助各自的消息处理层模块按照分步骤A31设置的心跳数据包发送周期，每间隔一个心跳数据包发送周期分别向分发器模块发送心跳数据包；所述心跳数据包包括子系统的负载状况信息；如果分发器模块在N个心跳数据包发送周期内未收到来自子系统的消息处理层模块的心跳数据包，所述分发器模块取消该子系统的注册；  所述步骤D包括如下分步骤，  D301.已注册的子系统借助消息处理层模块发送的服务处理请求消息，所述服务处理请求消息包括请求服务的服务识别码Service ID、请求服务的要连接的分发器模块网际协议IP地址和消息 转发机制信息；该消息转发机制包括广播消息、组播消息、指定服务消息和定点消息；  D302.分发器模块判断服务处理请求消息是否合法；如果合法，执行以下分步骤D303至D310 ;如果不合法，直接执行分步骤D311 ；  D303.判断消息转发机制信息是否是广播消息；如果是广播消息，执行分步骤D304 ；如果不是广播消息，执行分步骤D305 ；  D304.将服务处理请求消息转发给除了发送该服务处理请求消息子系统之外的所有已注册的子系统，然后执行分步骤D312 ；  D305.在已经注册的子系统中查找是否存在子系统的服务识别码Service ID与所述服务处理请求消息的请求服务的服务识别码Service ID相同；如果存在，执行步骤D306 ；如果不存在，执行步骤D311 ；  D306.判断消息转发机制信息是否是组播消息；如果是组播消息，执行分步骤D307 ；如果不是组播消息，执行分步骤D308 ； D307.将服务处理请求消息转发给子系统的服务识别码ID与请求服务的服务识别码Service ID相同子系统，然后执行分步骤D312 ；  D308.判断消息转发机制信息是否是指定服务消息；如果是指定服务消息，执行分步骤D309 ;如果不是指定服务消息，执行分步骤D310 ；  D309.根据各子系统发送的心跳数据包中的负载状况信息，在服务识别码ID与请求服务的服务识别码Service ID相同的子系统中选择负载最轻的子系统，将服务处理请求消息转发给该负载最轻的子系统，然后执行分步骤D312 ；  D310.判断服务处理请求消息中的请求服务的要连接的分发器模块网际协议IP地址是否存在；如果存在，将服务处理请求消息转发给所述要连接的分发器模块网际协议IP地址对应的子系统，然后执行分步骤D312 ;如果不存在，执行步骤D311 ；  D311.返回错误代码；  D312.结束服务处理请求消息转发。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.根据权利要求3或者7所述的以平台消息总线机制实现子系统间信息交互的方法，其特征在于:   所述N = 3。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES60210939" lang="ZH" load-source="patent-office" class="description">
    <p>以平台消息总线机制实现子系统间信息交互的方法技术领域[0001]	本发明涉及数据传输方法，特别是涉及基于网络管理的大型网络或者具有复杂网络结构的大型网络的数据传输方法。背景技术[0002]	统一网管系统平台在实施过程中，需要多个子模块来协调工作，包括数据库子模块，设备管理服务器模块，站端服务器模块，日志服务器模块，客户端模块等等。为了让各个子模块间能够协调工作，需要建立相应的数据通道完成模块间的数据交互。现有技术常用数据交互模式包括基于SOCKET的纯应用型数据交互模式，以及DDE动态数据交换技术。如图1所示，服务端创建SOCKET，并通过绑定的方式与服务端的端口实现绑定，通过监听的方式监听指定端口上的数据连接请求；客户端创建SOCKET后，通过CONNECT的方法连接服务端指定端口，服务端接受连接请求后，与客户端的连接完成，可以进行数据交换。套接字的连接以及数据交换是一种非常经典而且基础的连接方式，是目前所有TCP/IP应用交换数据的基础。应用与具体的项目中时，适用于解决点对点的通讯问题，用于完成两个模块之间的数据交互。SOCKET技术能够解决点对点的数据交换，但是需要明确确定对端的IP地址以及端口号，建立SOCKET连接后方能进行数据交互。这种模式在复杂系统应用中存在明显的缺陷。多对多的连接模式，为了实现系统的各个功能，同时考虑分布式的实现模式，在不同模块之间建立多个SOCKET连接，每个模块的开发人员必须为连接以及连接管理编写独立的代码进行连接管理以及数据处理机制，这样存在大量重复性的开发工作，一方面连接管理复杂，另一方面，对于需要容灾处理的关键服务和组件存在大量的SOCKET连接，随着分布式服务的增加，系统内的连接将呈几何级数上升。如图2所示，DDE是一种动态数据交换机制(Dynamic Data Exchange, DDE)。使用DDE通讯需要两个Windows应用程序,其中一个作为服务器处理信息，另外一个作为客户机从服务器获得信息。客户机应用程序向当前所激活的服务器应用程序发送一条消息请求信息，服务器应用程序根据该信息作出应答，从而实现两个程序之间的数据交换。但是DDE动态数据交换用于16位的WINDOWS平台下应用，目前使用的场景已经很少，且不适用于企业级分布式应用系统的开发工作。发明内容[0003]	本发明要解决的技术问题在于避免现有技术的不足之处而提出一种克服现有技术存在的缺陷，降低系统的连接维度，减少各个子系统间的连接数量，简化了系统的配置的以平台消息总线机制实现子系统间信息交互的方法。[0004]	本发明解决所述技术问题可以通过采用以下技术方案来实现:  实施一种以平台消息总线机制实现子系统间信息交互的方法，基于包括至少一个客户端，以及至少一个服务器端的网络系统；尤其是，  所述方法在网络系统内建立一个企业信息构建平台Enterprise Platform forInformation Constructor ;该企业信息构建平台EPIC包括分别设置在各服务器端和客户端的消息处理层模块，以及借助传输控制协议Transmission Control Protocol/用户数据报协议User Datagram Protocol与各消息处理层模块实现数据传输的分发器模块；所述企业信息构建平台EPIC按照以下步骤完成各子系统间的信息交互，  A.系统按照配置文件完成系统运行状态初始化；  B.所述各子系统借助各自的消息处理层模块与分发器模块建立连接，并以服务的方式分别向企业信息构建平台EPIC注册；  D.已注册的子系统借助消息处理层模块发送的服务处理请求消息，所述分发器模块根据服务处理请求消息向各已注册的子系统转发服务处理请求消息，实现在子系统间建立信息交互。[0005]	所述消息处理层模块是分别寄生于各自对应的服务器端和客户端的寄生层模块，用于对要发送的来自服务器端或者客户端的应用层消息实施封装处理，对服务器端或者客户端的应用层要接收的消息实施解包处理；  所述分发器模块包括数据链路层模块和网络连接层；所述数据链路层用于完成对来自消息处理层模块的数据的分帧处理，确认接收和发送数据完整性验证；所述网络连接层完成网络物理连接初始化，按照数据链路层的要求完成数据的传输控制协议TransmissionControl Protocol/用户数据报协议User Datagram Protocol传输、完成网络物理连接管理。[0006]	为保证系统准确及时更新平台连接情况，所述步骤A包括如下分步骤，  All.系统按照配置文件完成系统运行状态初始化，所述系统运行状态初始化包括设置心跳数据包发送周期；  那么在步骤B与步骤D之间还包括如下步骤，  C.完成步骤B的已经注册的各子系统借助各自的消息处理层模块，按照分步骤All设置的心跳数据包发送周期，每间隔一个心跳数据包发送周期分别向分发器模块发送心跳数据包；如果分发器模块在N个心跳数据包发送周期内未收到来自子系统的消息处理层模块的心跳数据包，所述分发器模块取消该子系统的注册。所述N = 3。[0007]	所述分发器模块包括用于存储各子系统与分发器模块注册信息及数据连接状态的连接池，那么子系统的注册过程具体为所述步骤B包括如下分步骤，  B21.子系统的消息处理层模块从该子系统的配置文件中获取所述子系统提供的服务的服务识别号Service ID,以及该服务要连接的分发器模块网际协议IP地址和端口信息，并封装成注册消息体数据包；  B22.步骤B21所述子系统依据注册消息体数据包中的服务要连接的分发器模块网际协议IP地址和端口信息，依据传输控制协议TCP/用户数据报协议UDP与分发器模块的相应端口建立套接字SOCKET连接，并将所述注册消息体数据包发送至分发器模块；  B23.分发器模块根据分步骤B22发送的注册消息体数据包，将所述子系统的服务存储至所述连接池中；  B24.分发器模块将注册返回消息回传给所述子系统的消息处理层模块。[0008]	上述方法中还可以实现主备子系统注册，所述分步骤B23还进一步包括以下分步骤，  B2311.分发器模块根据分步骤B22发送的注册消息体数据包中的所述服务要连接的分发器模块网际协议IP地址，判断该分发器模块要连接的网际协议IP地址是否与在连接池中已注册服务的要连接的分发器模块网际协议IP地址相同；如果相同，分发器模块正常刷新连接池，执行分步骤B2313 ;如果不相同，执行分步骤2312 ；  B2312.分发器模块根据分步骤B22发送的注册消息体数据包中的服务识别码Service ID，判断该服务识别码Service ID是否与在连接池已经注册的服务的服务识别码Service ID相同；如果不相同，将分步骤B22发送的注册消息体数据包对应的服务的子系统在连接池存储为该项服务的主用子系统，执行分步骤2314;如果相同，将分步骤B22发送的注册消息体数据包对应的服务的子系统在连接池存储为该项服务的备用子系统，执行分步骤2315 ；  B2313.将注册返回信息设置为重复注册信息；  B2314.将注册返回信息设置为主用子系统注册信息；  B2315.将注册返回信息设置为备用子系统注册信息。[0009]	本发明还可以通过心跳数据包实施传送子系统负载情况，A21.系统按照配置文件完成系统运行状态初始化，所述系统运行状态初始化包括设置心跳数据包发送周期；  那么在步骤B与步骤D之间还包括如下步骤，  C21.完成步骤B的已经注册的各子系统借助各自的消息处理层模块按照分步骤A21设置的心跳数据包发送周期，每间隔一个心跳数据包发送周期分别向分发器模块发送心跳数据包；所述心跳数据包包括子系统的负载状况信息；  C22.如果分发器模块在N个心跳数据包发送周期内未收到来自子系统的消息处理层模块的心跳数据包，执行分步骤C23至C27，  C23.分发器模块判断所述子系统是主用子系统还是备用子系统；如果是主用子系统执行分步骤C24至C26 ;如果是备用子系统，执行分步骤C27 ；  C24.在连接池中查找所述主用子系统对应的服务在连接池中是否存在备用子系统，如果存在备用子系统，执行分步骤C25 ;如果不存在备用子系统，执行分步骤C26 ；  C25.所述分发器模块在连接池中删除所述主用子系统的对应的服务，并且根据各备用子系统发送的心跳数据包中的负载状况信息，选择负载最轻的备用子系统修改设置为主用子系统；  C26.所述分发器模块在连接池中直接删除所述主用子系统的对应的服务；  C27.所述分发器模块在连接池中直接删除所述备用子系统的对应的服务。[0010]	综合上述方案本发明还支持多重消息传播方式，所述步骤A包括如下分步骤，  A31.系统按照配置文件完成系统运行状态初始化，所述系统运行状态初始化包括设置心跳数据包发送周期；  那么，所述步骤B包括如下分步骤，  B31.子系统的消息处理层模块从该子系统的配置文件中获取所述子系统提供的服务的服务识别号Service ID,以及该服务要连接的分发器模块网际协议IP地址和端口信息，并封装成注册消息体数据包；  B32.步骤B21所述子系统依据注册消息体数据包中的服务要连接的分发器模块网际协议IP地址和端口信息，依据传输控制协议TCP/用户数据报协议UDP与分发器模块的相应端口建立套接字SOCKET连接，并将所述注册消息体数据包发送至分发器模块；  B33.分发器模块根据分步骤B22发送的注册消息体数据包，将所述子系统的服务存储至所述连接池中；  B34.分发器模块将注册返回消息回传给所述子系统的消息处理层模块。[0011]	所述步骤C包括如下分步骤，  C31.完成分步骤B31至B34的已经注册的各子系统借助各自的消息处理层模块按照分步骤A31设置的心跳数据包发送周期，每间隔一个心跳数据包发送周期分别向分发器模块发送心跳数据包；所述心跳数据包包括子系统的负载状况信息；如果分发器模块在N个心跳数据包发送周期内未收到来自子系统的消息处理层模块的心跳数据包，所述分发器模块取消该子系统的注册。[0012]	所述步骤D包括如下分步骤，  D301.已注册的子系统借助消息处理层模块发送的服务处理请求消息，所述服务处理请求消息包括请求服务的服务识别码Service ID、请求服务的要连接的分发器模块网际协议IP地址和消息转发机制信息；该消息转发机制包括广播消息、组播消息、指定服务消息和定点消息；  D302.分发器模块判断服务处理请求消息是否合法；如果合法，执行以下分步骤D33至D3 ;如果不合法，直接执行分步骤D311 ；  D303.判断消息转发机制信息是否是广播消息；如果是广播消息，执行分步骤D304 ；如果不是广播消息，执行分步骤D305 ；  D304.将服务处理请求消息转发给除了发送该服务处理请求消息子系统之外的所有已注册的子系统，然后执行分步骤D312 ；  D305.在已经注册的子系统中查找是否存在子系统的服务识别码Service ID与所述服务处理请求消息的请求服务的服务识别码Service ID相同；如果存在，执行步骤D306 ；如果不存在，执行步骤D311 ；  D306.判断消息转发机制信息是否是组播消息；如果是组播消息，执行分步骤D307 ；如果不是组播消息，执行分步骤D308 ；  D307.将服务处理请求消息转发给子系统的服务识别码ID与请求服务的服务识别码Service ID相同子系统，然后执行分步骤D312 ；  D308.判断消息转发机制信息是否是指定服务消息；如果是指定服务消息，执行分步骤D309 ;如果不是指定服务消息，执行分步骤D310 ；  D309.根据各子系统发送的心跳数据包中的负载状况信息，在服务识别码ID与请求服务的服务识别码Service ID相同的子系统中选择负载最轻的子系统，将服务处理请求消息转发给该负载最轻的子系统，然后执行分步骤D312 ；  D310.判断服务处理请求消息中的请求服务的要连接的分发器模块网际协议IP地址是否存在；如果存在，将服务处理请求消息转发给所述要连接的分发器模块网际协议IP地址对应的子系统，然后执行分步骤D312 ;如果不存在，执行步骤D311 ；  D311.返回错误代码；  D312.结束服务处理请求消息转发。[0013]	同现有技术相比较，本发明“以平台消息总线机制实现子系统间信息交互的方法”的技术效果在于:  本发明可以有效的降低系统的连接维度，减少各个子系统间的连接数量，简化了系统的配置；减少了开发人员在开发过程中为了创建连接，维护连接，连接配置管理所需要完成的重复开发工作。EPIC平台作为基础的系统承载功能，完成连接管理，消息分发，负载均衡，主备切换等企业级应用的抽象，能够为企业级的应用提供框架基础。EPIC平台在整个企业级应用的开发过程中，实现了模块级的复用，能够有效的提高产品的研发效率。附图说明[0014]	图1是现有技术基于SOCKET的纯应用型数据交互模式示意图；  图2是现有技术DDE动态数据交换技术示意图；  图3是本发明“以平台消息总线机制实现子系统间信息交互的方法”优选实施例的企业信息构建平台EPIC分层处理模型示意图；  图4是所述优选实施例企业信息构建平台EPIC服务注册流程；  图5是所述优选实施例心跳数据包处理时序示意图；  图6是所述优选实施例分发器模块转发服务处理请求消息流程示意图。具体实施方式[0015]	以下结合附图所示实施例作进一步详述。[0016]	本发明通过平台数据总线的模式，抽象出了一般企业级信息化应用中必须涉及到的几个环节，我们称之为 EPIC (Enterprise Platform for Information Constructor,企业信息构建平台)，通过EPIC的实施，实现了一些上层应用所应该包含的基础功能，简化了上层应用的开发模式，使开发人员不用再关心一些基础功能的实现，将开发重心放在了具体业务的实现上。本发明提出一种以平台消息总线机制实现子系统间信息交互的方法，基于包括至少一个客户端，以及至少一个服务器端的网络系统；尤其是，  所述方法在网络系统内建立一个企业信息构建平台Enterprise Platform forInformation Constructor ;该企业信息构建平台EPIC包括分别设置在各服务器端和客户端的消息处理层模块，以及借助传输控制协议Transmission Control Protocol/用户数据报协议User Datagram Protocol与各消息处理层模块实现数据传输的分发器模块；所述企业信息构建平台EPIC按照以下步骤完成各子系统间的信息交互，  A.系统按照配置文件完成系统运行状态初始化；  B.所述各子系统借助各自的消息处理层模块与分发器模块建立连接，并以服务的方式分别向企业信息构建平台EPIC注册；  D.已注册的子系统借助消息处理层模块发送的服务处理请求消息，所述分发器模块根据服务处理请求消息向各已注册的子系统转发服务处理请求消息，实现在子系统间建立信息交互。[0017]	如图3所示，EPIC平台的实现内容在分层中，定义为:消息处理层，数据链路层以及网络连接层。其中消息处理层为客户/服务端的寄生层，通常通过DLL实现，实现了平台的通讯规范，将应用消息按照EPIC平台规范实现消息的封装，对接收的消息进行完整性判断和消息的解封，将应用层消息提交上层应用进行处理，同时能够实现平台心跳消息的发送，判断与平台系统服务的连接状态；数据链路层和网络连接层属于EPIC平台的系统服务，其实现方式为系统平台分发器，为客户/服务端连接进行消息的分帧处理以及连接管理与消息分发操作。[0018]	也就是，所述消息处理层模块是分别寄生于各自对应的服务器端和客户端的寄生层模块，用于对要发送的来自服务器端或者客户端的应用层消息实施封装处理，对服务器端或者客户端的应用层要接收的消息实施解包处理；所述分发器模块包括数据链路层模块和网络连接层；所述数据链路层用于完成对来自消息处理层模块的数据的分帧处理，确认接收和发送数据完整性验证；所述网络连接层完成网络物理连接初始化，按照数据链路层的要求完成数据的传输控制协议Transmission Control Protocol/用户数据报协议UserDatagram Protocol传输、完成网络物理连接管理。[0019]	本发明所述子系统的实际体现形式可以是网络模块，还可以是一组网络组件。本发明实现了不同模块，组件，子系统间的数据交互与传递。实现了消息的群发，组播，定点转发以及服务转发消息类型。通过心跳模式实现独立模块的注册，解注册与连接管理。通过心跳包传递应用的负载情况给EPIC平台，平台实现负载均衡处理。通过主备服务之间的状态判断，判断模块的可用性，平台实现了主备的热切换。以下将详述上述功能实现方案。[0020]	为保证系统准确及时更新平台连接情况，所述步骤A包括如下分步骤，  All.系统按照配置文件完成系统运行状态初始化，所述系统运行状态初始化包括设置心跳数据包发送周期；  那么在步骤B与步骤D之间还包括如下步骤，  C.完成步骤B的已经注册的各子系统借助各自的消息处理层模块，按照分步骤All设置的心跳数据包发送周期，每间隔一个心跳数据包发送周期分别向分发器模块发送心跳数据包；如果分发器模块在N个心跳数据包发送周期内未收到来自子系统的消息处理层模块的心跳数据包，所述分发器模块取消该子系统的注册。所述N= 3。[0021 ] 关于各子系统的注册过程，EPIC平台中，每个具有多个功能集合的服务，需要进行负载均衡，容余备份的子系统，都可以以服务的方式注册到EPIC平台中。注册时，寄生层，即客户/服务端平台通讯封装模块应用从配置文件中获得相应的服务识别码Service ID以及要连接的分发器IP地址和端口信息。通过TCP/UDP方式，与分发器的服务端口建立SOCKET连接，寄生层封装注册消息体，将携带Service ID以及寄生层所在服务器IP信息的注册消息发送给分发器。分发器收到注册消息报文后，判断该注册是否属于重复注册，对于已经同一台IP的机器再次注册同样的Service ID，判为重复注册，直接刷新连接池中的内容即可。系统再判断Service ID是否已经存在，对于首次注册的服务，系统认为其为主用服务，否则系统认定其为备用服务。分发器将服务保存至连接池中，并刷新其心跳信息，将注册返回消息发送回寄生层。寄生层根据注册结果设定决定子系统的行为模式，即主用或者备用服务，并结束注册流程，准备进入心跳发送状态。[0022]	注册消息体中，包含了系统的Service ID，系统IP信息，用于将子系统信息提供给分发器。注册消息体原型参考如下:typedef struct regist_msg        {unsigned long service_id;	 //系统注册服务 IDchar service_ip [16] ;	// 系统 IP 地址信息unsigned char encrypt_type;	// 消息发送加密类型    } REG_MSG ；  本发明优选实施例通过以下方案实现上述功能，所述步骤B包括如下分步骤，如图4所示，  B21.子系统的消息处理层模块从该子系统的配置文件中获取所述子系统提供的服务的服务识别号Service ID,以及该服务要连接的分发器模块网际协议IP地址和端口信息，并封装成注册消息体数据包；  B22.步骤B21所述子系统依据注册消息体数据包中的服务要连接的分发器模块网际协议IP地址和端口信息，依据传输控制协议TCP/用户数据报协议UDP与分发器模块的相应端口建立套接字SOCKET连接，并将所述注册消息体数据包发送至分发器模块；  B23.分发器模块根据分步骤B22发送的注册消息体数据包，将所述子系统的服务存储至所述连接池中；  B24.分发器模块将注册返回消息回传给所述子系统的消息处理层模块。[0023]	为实现主备子系统注册，所述分步骤B23还进一步包括以下分步骤，  B2311.分发器模块根据分步骤B22发送的注册消息体数据包中的所述服务要连接的分发器模块网际协议IP地址，判断该分发器模块要连接的网际协议IP地址是否与在连接池中已注册服务的要连接的分发器模块网际协议IP地址相同；如果相同，分发器模块正常刷新连接池，执行分步骤B2313 ;如果不相同，执行分步骤2312 ；  B2312.分发器模块根据分步骤B22发送的注册消息体数据包中的服务识别码Service ID，判断该服务识别码Service ID是否与在连接池已经注册的服务的服务识别码Service ID相同；如果不相同，将分步骤B22发送的注册消息体数据包对应的服务的子系统在连接池存储为该项服务的主用子系统，执行分步骤2314;如果相同，将分步骤B22发送的注册消息体数据包对应的服务的子系统在连接池存储为该项服务的备用子系统，执行分步骤2315 ；`  B2313.将注册返回信息设置为重复注册信息；  B2314.将注册返回信息设置为主用子系统注册信息；  B2315.将注册返回信息设置为备用子系统注册信息。[0024]	子系统通过心跳的方式与平台保持连接状态，平台分发器在系统连接池中记录每一个注册到平台上的会话信息，当子系统的心跳到达后，分发器刷新在连接池中的会话信息，并更新各个子系统的负载状况。当子系统与平台分发器失联后，也就是心跳消息未能捕获，平台分发器负责将无效的子系统连接从系统连接池中移除。[0025]	在一个企业级的应用中，经常会遇到主用系统与备用系统并存的情况。一方面，主用系统承担了一些基础性的工作，例如网管中，主用服务负责完成系统设备的轮询操作，备用系统在主用系统正常工作的情况下，主要负责负担主用系统的负载，无需承担基础工作；另一方面，当主用系统发生异常中断后，备用系统需要能够完成切换工作，承担主用的基础工作，确保服务能够正常运行。[0026]	EPIC将企业级应用中经常需要解决的主备倒换问题通过平台的方式提供了一个解决方案。EPIC平台分发器能够通过注册的方式，将第一个接入系统平台的子系统作为主用服务，后续接入的同样Service ID的子系统作为备用子系统存在。当主用服务中断后，EPIC能够通过选举的方式，通常选举一个负载最轻的子系统，在其他备用服务中，找到一个新的主用服务子系统，并通知到相应的备用子系统升级为主用子系统。[0027]	本发明还可以通过心跳数据包实施传送子系统负载情况，A21.系统按照配置文件完成系统运行状态初始化，所述系统运行状态初始化包括设置心跳数据包发送周期；  那么在步骤B与步骤D之间还包括如下步骤，  C21.完成步骤B的已经注册的各子系统借助各自的消息处理层模块按照分步骤A21设置的心跳数据包发送周期，每间隔一个心跳数据包发送周期分别向分发器模块发送心跳数据包；所述心跳数据包包括子系统的负载状况信息；  C22.如果分发器模块在N个心跳数据包发送周期内未收到来自子系统的消息处理层模块的心跳数据包，执行分步骤C23至C27，  C23.分发器模块判断所述子系统是主用子系统还是备用子系统；如果是主用子系统执行分步骤C24至C26 ;如果是备用子系统，执行分步骤C27 ；  C24.在连接池中查找所述主用子系统对应的服务在连接池中是否存在备用子系统，如果存在备用子系统，执行分步骤C25 ;如果不存在备用子系统，执行分步骤C26 ；  C25.所述分发器模块在连接池中删除所述主用子系统的对应的服务，并且根据各备用子系统发送的心跳数据包中的负载状况信息，选择负载最轻的备用子系统修改设置为主用子系统；  C26.所述分发器模块在连接池中直接删除所述主用子系统的对应的服务；  C27.所述分发器模块在连接池中直接删除所述备用子系统的对应的服务。[0028]	如图5所示，分发器为了维持与每一个服务网络层连接，必须通过心跳的方式获得每一个已经注册成功的子系统服务模块的连接确认。子系统的寄生层模块会定期的给分发器发送心跳数据包。分发器收到心跳数据包后，在连接池中刷新对应的连接信息，确认连接维持。分发器有独立的线程检查系统连接池中的连接，超过3个心跳周期没有收到子系统的心跳信息，分发器认为连接已经中断，将连接从连接池中移出，子系统寄生层必须再次注册才能继续提供服务。[0029]	寄生层模块发送的心跳数据除了提供连接确认以外，还提供寄生层所在服务器及其应用的负载信息，分发器通过心跳同时能够获得寄生层所在应用及服务器的负载情况，当有调用寄生层Service ID的消息到达时,分发器能够判断当前所有同样服务,即ServiceID相同的负载状态，选择一个轻量级的负载服务进行消息处理。[0030]	寄生模块通过以下消息参数判断寄生层所在服务器的负载状况:  服务器的CPU消耗情况；  服务器的I/o读写消耗情况；  服务器的内存消耗情况；  系统创建的连接数量情况  与应用相关的负载情况  寄生层通过注册回调函数的方式，由应用提供负载的判断，允许应用根据自身的运行情况，例如空闲线程数量，应用自身资源消耗情况等等，做出负载的判断，将负载情况结合当前计算机操作系统运行状况一起提交给EPic平台分发器。寄生层通过加权的方式对上述负载进行计算，得到系统的负载加权平均值作为服务的负载判断，当有新的服务请求消息到达时，根据系统中所有相同服务的负载状况作出消息分发的选择。EPIC平台允许应用对负载状况做出自定义的判断。[0031]	回调函数的注册原型请参考:    typedef int _stdcall(*FRegistCallBack) (int ( *GetAppLoad) O);  分发器得到应用发送的服务处理请求消息，需要将消息发送给相应的子系统进行后续处理。应用在发送服务处理请求消息时，并不能确定所请求的服务存在，也不知道所请求的服务所在的IP地址信息，需要通过EPIC平台分发器来定位服务的会话，通过EPIC平台来确定最合适处理的服务，也就是负载最轻的服务，来进行后续消息处理工作。[0032]	EPIC平台支持多种不同类型的消息机制，需要处理的消息类型包括:  广播消息  对所有注册在平台上的子系统提供消息转发，除了发送者以外，所有在平台上注册的子系统均可收到广播消息。该类消息没有返回，平台发送完成后不做等待。[0033]	组播消息  该类型的消息在消息体中包含了 Service ID，只有与该服务ID匹配的子系统能收到平台转发的消息。主要用于一类服务的消息广播。该类消息没有返回，平台发送完成后不做等待。[0034]	指定服务消息  该类型的消息在消息体中包含了 Service ID，平台分发器根据当前注册在平台中该服务识别码Service ID匹配的子系统的负载状况进行消息转发。该类型的消息有标志位判断是否子系统会有返回，缺省认为有返回，分发器根据标志位判断是否需要等待，如果有返回消息，平台分发器等待对端子系统的返回，并将返回消息回送给消息发送者。[0035]	定点消息  该类型消息包含Service ID，同时该类型消息中包含了指定子系统的IP地址，平台将定点消息发送给指定IP的以及Service ID的子系统进行后续处理。该类型的消息有标志位判断是否子系统会有返回，缺省认为有返回，分发器根据标志位判断是否需要等待，如果有返回消息，平台分发器等待对端子系统的返回，并将返回消息回送给消息发送者。[0036]	如图6所示，综合上述方案本发明还支持多重消息传播方式，所述步骤A包括如下分步骤，  A31.系统按照配置文件完成系统运行状态初始化，所述系统运行状态初始化包括设置心跳数据包发送周期；  那么，所述步骤B包括如下分步骤，  B31.子系统的消息处理层模块从该子系统的配置文件中获取所述子系统提供的服务的服务识别号Service ID,以及该服务要连接的分发器模块网际协议IP地址和端口信息，并封装成注册消息体数据包；  B32.步骤B21所述子系统依据注册消息体数据包中的服务要连接的分发器模块网际协议IP地址和端口信息 ，依据传输控制协议TCP/用户数据报协议UDP与分发器模块的相应端口建立套接字SOCKET连接，并将所述注册消息体数据包发送至分发器模块；  B33.分发器模块根据分步骤B22发送的注册消息体数据包，将所述子系统的服务存储至所述连接池中；  B34.分发器模块将注册返回消息回传给所述子系统的消息处理层模块。[0037]	所述步骤C包括如下分步骤，  C31.完成分步骤B31至B34的已经注册的各子系统借助各自的消息处理层模块按照分步骤A31设置的心跳数据包发送周期，每间隔一个心跳数据包发送周期分别向分发器模块发送心跳数据包；所述心跳数据包包括子系统的负载状况信息；如果分发器模块在N个心跳数据包发送周期内未收到来自子系统的消息处理层模块的心跳数据包，所述分发器模块取消该子系统的注册。所述N =3。[0038]	所述步骤D包括如下分步骤，  D301.已注册的子系统借助消息处理层模块发送的服务处理请求消息，所述服务处理请求消息包括请求服务的服务识别码Service ID、请求服务的要连接的分发器模块网际协议IP地址和消息转发机制信息；该消息转发机制包括广播消息、组播消息、指定服务消息和定点消息；  D302.分发器模块判断服务处理请求消息是否合法；如果合法，执行以下分步骤D33至D3 ;如果不合法，直接执行分步骤D311 ；  D303.判断消息转发机制信息是否是广播消息；如果是广播消息，执行分步骤D304 ；如果不是广播消息，执行分步骤D305 ；  D304.将服务处理请求消息转发给除了发送该服务处理请求消息子系统之外的所有已注册的子系统，然后执行分步骤D312 ；  D305.在已经注册的子系统中查找是否存在子系统的服务识别码Service ID与所述服务处理请求消息的请求服务的服务识别码Service ID相同；如果存在，执行步骤D306 ；如果不存在，执行步骤D311 ；  D306.判断消息转发机制信息是否是组播消息；如果是组播消息，执行分步骤D307 ；如果不是组播消息，执行分步骤D308 ；  D307.将服务处理请求消息转发给子系统的服务识别码ID与请求服务的服务识别码Service ID相同子系统，然后执行分步骤D312 ；  D308.判断消息转发机制信息是否是指定服务消息；如果是指定服务消息，执行分步骤D309 ;如果不是指定服务消息，执行分步骤D310 ；  D309.根据各子系统发送的心跳数据包中的负载状况信息，在服务识别码ID与请求服务的服务识别码Service ID相同的子系统中选择负载最轻的子系统，将服务处理请求消息转发给该负载最轻的子系统，然后执行分步骤D312 ；  D310.判断服务处理请求消息中的请求服务的要连接的分发器模块网际协议IP地址是否存在；如果存在，将服务处理请求消息转发给所述要连接的分发器模块网际协议IP地址对应的子系统，然后执行分步骤D312 ;如果不存在，执行步骤D311 ；  D311.返回错误代码；  D312.结束服务处理请求消息转发。[0039]	显然，上述主备切换方案的步骤也可以插入上述消息转发方案的各步骤中，主要是分步骤C31中，实现有机结合，完成本发明所述EPIC平台的所有功能。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101119268A?cl=zh">CN101119268A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2007年6月28日</td><td class="patent-data-table-td patent-date-value">2008年2月6日</td><td class="patent-data-table-td ">杭州东信北邮信息技术有限公司</td><td class="patent-data-table-td ">基于通用消息总线的通用业务系统架构的实现方法</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="npl-citations"></a><div class="patent-section-header"><span class="patent-section-title">非专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th colspan="3"class="patent-data-table-th">参考文献</th></tr></thead><tr><td class="patent-data-table-td ">1</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">王晶: "<a href='http://scholar.google.com/scholar?q="%E4%B8%9A%E5%8A%A1%E7%BD%91%E7%BB%9C%E6%99%BA%E8%83%BD%E5%8C%96%E5%8F%8A%E5%85%B6%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6"'>业务网络智能化及其关键技术研究</a>", 《中国博士学位论文全文数据库》, 15 March 2010 (2010-03-15)</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=koF5CAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029080000">H04L29/08</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=koF5CAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029060000">H04L29/06</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=koF5CAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0012400000">H04L12/40</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年6月5日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年7月10日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2016年2月10日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/f875187d0e09cd5ba687/CN103139199A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_1ec17bec5b1e6ba0eab577be28b6afb9.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%BB%A5%E5%B9%B3%E5%8F%B0%E6%B6%88%E6%81%AF%E6%80%BB%E7%BA%BF%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0%E5%AD%90%E7%B3%BB.pdf?id=koF5CAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U1SZ99u4tCP1swkzNWFHZhudGqYeQ"},"sample_url":"https://www.google.com/patents/reader?id=koF5CAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>