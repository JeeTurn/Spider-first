<!DOCTYPE html><html><head><title>专利 CN102891843A - 本地服务单元认证安卓客户端应用程序的方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_6e802a6b2b28d51711baddc2f3bec198/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_6e802a6b2b28d51711baddc2f3bec198__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="本地服务单元认证安卓客户端应用程序的方法"><meta name="DC.contributor" content="不公告发明人" scheme="inventor"><meta name="DC.contributor" content="北京深思洛克软件技术股份有限公司" scheme="assignee"><meta name="DC.date" content="2012-9-18" scheme="dateSubmitted"><meta name="DC.description" content="本发明提供了一种本地服务程序认证安卓客户端应用程序的方法。该方法先对客户端应用程序进行签名生成认证信息文件，当客户端应用程序在安卓系统中运行时，本地服务程序对认证信息文件进行认证，认证通过之后客户端应用程序才可正常使用本地服务程序提供的服务。通过本发明提供的方法，使得经篡改的客户端应用程序无法获取本地服务程序的功能，区隔了合法软件和恶意软件，确保了安卓系统和网络的安全性。"><meta name="DC.date" content="2013-1-23"><meta name="DC.relation" content="CN:101266638:A" scheme="references"><meta name="DC.relation" content="CN:1635811:A" scheme="references"><meta name="DC.relation" content="CN:1866870:A" scheme="references"><meta name="DC.relation" content="US:20120054101:A1" scheme="references"><meta name="citation_patent_publication_number" content="CN:102891843:A"><meta name="citation_patent_application_number" content="CN:201210344786"><link rel="canonical" href="https://www.google.com/patents/CN102891843A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102891843A?cl=zh"/><meta name="title" content="专利 CN102891843A - 本地服务单元认证安卓客户端应用程序的方法"/><meta name="description" content="本发明提供了一种本地服务程序认证安卓客户端应用程序的方法。该方法先对客户端应用程序进行签名生成认证信息文件，当客户端应用程序在安卓系统中运行时，本地服务程序对认证信息文件进行认证，认证通过之后客户端应用程序才可正常使用本地服务程序提供的服务。通过本发明提供的方法，使得经篡改的客户端应用程序无法获取本地服务程序的功能，区隔了合法软件和恶意软件，确保了安卓系统和网络的安全性。"/><meta property="og:title" content="专利 CN102891843A - 本地服务单元认证安卓客户端应用程序的方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102891843A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102891843A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=yFK6BwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102891843A&amp;usg=AFQjCNG0GCGv5uB241AjWLfLTrux9jX1dQ" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/3273f239c071b57b1051/CN102891843A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/3273f239c071b57b1051/CN102891843A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102891843A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102891843A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102891843A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102891843B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102891843A?cl=zh" style="display:none"><span itemprop="description">本发明提供了一种本地服务程序认证安卓客户端应用程序的方法。该方法先对客户端应用程序进行签名生成认证信息文件，当客户端应用程序在安卓系统中运行时，本地服务程序对认证信息文件进行认证，认证通过之后客户端应...</span><span itemprop="url">https://www.google.com/patents/CN102891843A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102891843A - 本地服务单元认证安卓客户端应用程序的方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102891843A - 本地服务单元认证安卓客户端应用程序的方法" title="专利 CN102891843A - 本地服务单元认证安卓客户端应用程序的方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102891843 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210344786</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年1月23日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年9月18日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年9月18日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102891843B?hl=zh-CN&amp;cl=zh">CN102891843B</a>, </span><span class="patent-bibdata-value"><a href="/patents/WO2014044170A1?hl=zh-CN&amp;cl=zh">WO2014044170A1</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210344786.X, </span><span class="patent-bibdata-value">CN 102891843 A, </span><span class="patent-bibdata-value">CN 102891843A, </span><span class="patent-bibdata-value">CN 201210344786, </span><span class="patent-bibdata-value">CN-A-102891843, </span><span class="patent-bibdata-value">CN102891843 A, </span><span class="patent-bibdata-value">CN102891843A, </span><span class="patent-bibdata-value">CN201210344786, </span><span class="patent-bibdata-value">CN201210344786.X</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E4%B8%8D%E5%85%AC%E5%91%8A%E5%8F%91%E6%98%8E%E4%BA%BA%22">不公告发明人</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E5%8C%97%E4%BA%AC%E6%B7%B1%E6%80%9D%E6%B4%9B%E5%85%8B%E8%BD%AF%E4%BB%B6%E6%8A%80%E6%9C%AF%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">北京深思洛克软件技术股份有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102891843A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102891843A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102891843A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (5),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (5)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=yFK6BwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210344786&amp;usg=AFQjCNG1yggom-vh-zJa1cHUzh9iZWS0og"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=yFK6BwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102891843A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNFt6k0ZATJJhbcwdBXz1IWpWi2QOA"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT120521067" lang="ZH" load-source="patent-office">本地服务单元认证安卓客户端应用程序的方法</invention-title>
      </span><br><span class="patent-number">CN 102891843 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA106265206" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明提供了一种本地服务程序认证安卓客户端应用程序的方法。该方法先对客户端应用程序进行签名生成认证信息文件，当客户端应用程序在安卓系统中运行时，本地服务程序对认证信息文件进行认证，认证通过之后客户端应用程序才可正常使用本地服务程序提供的服务。通过本发明提供的方法，使得经篡改的客户端应用程序无法获取本地服务程序的功能，区隔了合法软件和恶意软件，确保了安卓系统和网络的安全性。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(9)</span></span></div><div class="patent-text"><div mxw-id="PCLM49499456" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种在安卓系统中对应用程序进行认证的方法，其特征在于，所述方法包括如下步骤：  步骤I:采用加密算法对所述应用程序的客户端应用程序包进行加密，生成认证信息文件，其中所述客户端应用程序包对应于所述认证信息文件；  步骤2 :在安卓系统后台运行本地服务单元；  步骤3 :所述应用程序与所述本地服务单元建立binder通信；  步骤4 :所述本地服务单元根据所述应用程序发送的信息搜索所述客户端应用程序包；  步骤5 :如果搜索所述客户端应用程序包成功，则执行步骤6 ;否则，断开所述本地服务单元与所述应用程序的binder通信；  步骤6 :所述本地服务单元读取所述认证信息文件；  步骤7 :所述本地服务单元对所述认证信息文件进行认证；  步骤8 :如果认证成功，则所述应用程序正常运行；否则，断开所述本地服务单元与所述应用程序的binder通信。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求I所述的方法，其特征在于，在所述步骤I中，所述认证信息文件存于所述客户端应用程序包内部，或者存在远程云服务器端。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求1-2所述的方法，其特征在于，在所述步骤4中，所述本地服务单元根据所述应用程序发送的用户ID和进程ID搜索对应的所述客户端应用程序包。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求3所述的方法，其特征在于，在所述步骤4中，所述客户端应用程序包是APK包。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求2所述的方法，其特征在于，在所述步骤6中，如果读取不到所述认证信息文件，所述本地服务单元向远程云服务器端搜索所述认证信息文件；如果在所述远程云服务器端搜索不到所述认证信息文件，则断开所述本地服务单元与所述应用程序的binder 通信。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求I所述的方法，其特征在于，如果搜索到所述认证信息文件，并且所述认证信息文件中包含密文和加密算法，则在步骤7中根据加密算法的类型选择相应的认证方法对认证信息文件中的密文进行认证。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求6所述的方法，其特征在于，  如果采用单向加密算法，由所述本地服务单元根据加密算法对所述客户端应用程序包进行加密以生成密文，然后将生成的所述密文与所述的认证信息文件中的密文进行认证；如果采用双向加密算法，则由所述本地服务单元获取密钥，来解密所述认证信息文件中的密文。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.根据权利要求6所述的方法，其特征在于，如果采用双向加密算法，则双向加密算法的密钥存储在所述本地服务单元的包中，或者存在云服务器端。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.根据权利要求I所述的方法，其特征在于，在所述步骤8中，认证成功后，则所述应用程序正常运行，并且所述应用程序被允许调用所述本地服务单元的所提供的服务。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES56570387" lang="ZH" load-source="patent-office" class="description">
    <p>本地服务单元认证安卓客户端应用程序的方法</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及安卓系统中应用程序安全保护领域，特别涉及一种本地服务单元认证安卓客户端应用程序的方法。</p>
    <p>背景技术</p>
    <p>[0002]	在安卓（Android)系统下，为了防止盗版软件的猖獗，谷歌开发了安卓签名机制，安卓签名机制标明了安卓客户端应用程序的发行机构，通过对比客户端应用程序的签名情况，来判断该客户端应用程序是否由“官方”发行，而不是被破解者篡改过重新签名打包的“盗版软件”。</p>
    <p>[0003]	安卓系统要求每一个安装进系统的应用程序都是经过数字证书签名的，数字证书的私钥则保存在程序开发者的手中。安卓系统将数字证书用来标识应用程序的作者和在应用程序之间建立信任关系，数字证书不是用来决定最终用户可以安装哪些应用程序。这个数字证书并不需要权威的数字证书签名机构认证，它只是用来让应用程序包自我认证的。</p>
    <p>[0004]	通过安卓签名工具签名后的客户端应用程序包中多了一个META-INF的文件夹，该文件夹中包含了加密信息，其他的文件则没有任何改变，这样就可以很容易去掉原有的 签名信息，破解应用程序包，对代码篡改，生成恶意软件，然后重新签名，危害了开发者利益，甚至威胁到手机和网络的安全。</p>
    <p>[0005]	为了更进一步维护开发者的版权利益，防止盗版软件的猖獗，保护安卓系统下应用软件的安全，有开发者做了改进，增加安卓客户端应用程序包反编译的难度。目前已提出一种解决方案，意在解决在安卓系统下盗版应用的问题。解决方案如下：服务商提供一个本地服务单元（比如，本地服务程序)，本地服务程序在安卓系统下作为原生service (月艮务)，与安卓系统同时启动，在后台一直运行，本地服务程序提供如内存加密、文件加密、云服务器端函数远程调用等功能。安卓客户端应用程序调用本地服务程序提供的接口将关键值（比如游戏类应用程序中的金币值)、关键文件、关键代码等通过本地服务程序进行加密变换，在客户端应用程序运行时，根据客户端应用程序的调用需求对加密对象用本地服务程序进行实时解密运行，使得客户端应用程序难以进行反编译和静态分析，从而实现了对安卓系统应用的有效保护。</p>
    <p>[0006]	在这一过程中，客户端应用程序的关键值和关键代码通过本地服务程序存储在云服务器端，当客户端应用程序向云服务器端存储或获取关键值等需求时，需调用本地服务程序的远程（云服务器端）调用接口，由本地服务程序向云服务器端通信。本地服务程序作为客户端应用程序和云服务器端的中转站，起到连接两端桥梁的作用。</p>
    <p>[0007]	但是如果有一些恶意的客户端应用程序利用现有的本地服务程序不断地向云服务器端进行恶意操作（比如不断地向云服务器端存金币或者获取某些关键值）以获取利益，那么本地服务程序则无法辨别该客户端应用程序是否是从正规渠道下载下来的客户端应用程序，而不是用户自己编写的恶意客户端应用程序。因此，存在这样一种技术需求，即需要提供一种方法，该方法能够辨别安卓客户端应用程序是否被替换，从而及时阻止恶意客户端应用程序的执行，防止客户端应用程序的应用代码被恶意篡改。</p>
    <p>发明内容</p>
    <p>[0008]	为了防止安卓系统中有恶意软件利用本地服务程序修改云服务器端数据以谋取利益，本发明提供了一种本地服务程序认证客户端应用程序的方法，所述方法包括如下步骤：</p>
    <p>  步骤I:采用加密算法对所述应用程序的客户端应用程序包进行加密，生成认证信息文件，其中所述客户端应用程序包对应于所述认证信息文件；</p>
    <p>  步骤2:在安卓系统后台运行本地服务单元，；</p>
    <p>  步骤3 :所述应用程序与所述本地服务单元建立binder通信；</p>
    <p>  步骤4 :所述本地服务单元根据所述应用程序发送的信息搜索所述客户端应用程序 </p>
    <p>包；</p>
    <p>  步骤5 :如果搜索所述客户端应用程序包成功，则执行步骤6 ;否则，断开所述本地服务单元与所述应用程序的binder通信；</p>
    <p>  步骤6 :所述本地服务单元读取所述认证信息文件；</p>
    <p>  步骤7 :所述本地服务单元对所述认证信息文件进行认证；</p>
    <p>  步骤8 :如果认证成功，则所述应用程序正常运行；否则，断开所述本地服务单元与所述应用程序的binder通信。</p>
    <p>[0009]	根据本发明的一个方面，在所述步骤I中，所述认证信息文件存于所述客户端应用程序包内部，或者存在远程云服务器端。</p>
    <p>[0010]	根据本发明的一个方面，在所述步骤4中，所述本地服务单元根据所述应用程序发送的用户ID和进程ID搜索对应的所述客户端应用程序包。</p>
    <p>[0011]	根据本发明的一个方面，在所述步骤4中，所述客户端应用程序包是APK包。</p>
    <p>[0012]	根据本发明的一个方面，在所述步骤6中，如果读取不到所述认证信息文件，所述本地服务单元向远程云服务器端搜索所述认证信息文件；如果在所述远程云服务器端搜索不到所述认证信息文件，则断开所述本地服务单元与所述应用程序的binder通信。</p>
    <p>[0013]	根据本发明的一个方面，如果搜索到所述认证信息文件，并且所述认证信息文件中包含密文和加密算法，则在步骤7中根据加密算法的类型选择相应的认证方法对认证信息文件中的密文进行认证。</p>
    <p>[0014]	根据本发明的一个方面，如果采用单向加密算法，由所述本地服务单元根据加密算法对所述客户端应用程序包进行加密以生成密文，然后将生成的所述密文与所述的认证信息文件中的密文进行认证；</p>
    <p>  如果采用双向加密算法，则由所述本地服务单元获取密钥，来解密所述认证信息文件中的密文。</p>
    <p>[0015]</p>
    <p>  根据本发明的一个方面，如果采用双向加密算法，则双向加密算法的密钥存储在所述本地服务单元的包中，或者存在云服务器端。</p>
    <p>[0016]	根据本发明的一个方面，在所述步骤8中，认证成功后，则所述应用程序正常运行，并且所述应用程序被允许调用所述本地服务单元的所提供的服务。[0017]</p>
    <p>附图说明</p>
    <p>[0018]	图I为本发明的流程示意图；</p>
    <p>  图2为本发明中本地服务程序与客户端应用程序之间建立binder通信过程的示意</p>
    <p>图；</p>
    <p>  图3为本发明实施例一中本地服务程序对客户端应用程序的认证过程的示意图。</p>
    <p>[0019]	图4为本发明实施例二中本地服务程序对客户端应用程序的认证过程的示意图。</p>
    <p>具体实施方式&#183;[0020]	为了防止安卓系统中有恶意应用程序利用本地服务单元(在下文中称为本地服务程序）修改云服务器端数据，本发明提供了一种通过本地服务程序认证客户端应用程序的方法。</p>
    <p>[0021]	本地服务程序认证客户端应用程序的方法为：</p>
    <p>  采用加密算法对客户端应用程序包加密，生成认证信息文件，其中客户端应用程序包对应于一个认证信息文件；根据本发明的一个实施例，该认证信息文件的存储位置由开发者决定，可以存于客户端应用程序包内，也可以存于远程服务器中。</p>
    <p>[0022]	客户端应用程序启动；</p>
    <p>  本地服务程序与客户端应用程序建立binder通信；</p>
    <p>  本地服务程序与客户端应用程序双方建立binder通信后，本地服务程序根据客户端应用程序的用户ID和进程ID搜索对应的客户端应用程序包，例如，客户端应用程序包是安卓系统下常见的.APK包；</p>
    <p>  如果没有搜索到客户端应用程序包，则本地服务程序断开与客户端应用程序的binder通信，使得客户端应用程序无法获取本地服务程序提供的服务；</p>
    <p>  如果搜索到客户端应用程序包，则由本地服务程序读取客户端应用程序包中的认证信息文件；</p>
    <p>  如果读取不到认证信息文件，则存在两种可能：一是客户端应用程序包不完整，二是生成该认证信息文件的加密算法不同导致认证信息文件存储的位置不同，也就是说，该客户端应用程序的认证信息文件可能存于云服务器端；然后本地服务程序向云服务器端搜索认证信息文件，如果在云服务器端搜索不成功，则该客户端应用程序包确实不完整或者不合法，则本地服务程序将该客户端应用程序断开binder通信，不向这个客户端应用程序提供诸如加密功能服务；如果本地服务程序在云服务器端搜索到了认证信息文件，而且该认证信息文件包含密文和加密算法，那么根据本发明的一个实施例，本地服务程序根据加密算法对客户端应用程序包进行加密以生成密文，然后将生成的密文与认证信息文件中的密文进行比对认证。此外，根据本发明的一个实施例，除了上述单向加密算法的处理方式，还可用以下处理方式：先判断加密算法的类型，如果是单向加密算法，那么本地服务程序根据加密算法对客户端应用程序包进行加密以生成密文，然后将生成的密文与认证信息文件中的密文进行比对认证；若是双向加密算法，就用本地服务程序获取的密钥解密（认证）客户端应用程序的密文。[0023]	如果认证不成功，则本地服务程序与客户端应用程序断开binder通信，不向该客户端应用程序提供服务，如果认证成功，则客户端应用程序正常执行。</p>
    <p>[0024]	图I表示了其中的大部分处理流程。</p>
    <p>[0025]	所述的客户端应用程序包对应的认证信息文件是指经加密算法对客户端应用程序包加密所产生的密文。该认证信息文件根据加密算法的不同存储的位置也不同，认证信息文件可存放于客户端应用程序包内，也可存放于云服务器端，这是由所使用的加密算法的特点决定的。根据认证信息文件存储的位置不同，所对应的本地服务程序认证客户端应用程序的方法也不同。认证信息文件根据需要，除了包含密文，也可以包括加密算法、密钥存储位置等其它信息。</p>
    <p>[0026]	加密算法大体分为双向加密和单向加密。单向加密严格上说是一种摘要算法，是非可逆加密，例如MD5算法，其作用是将任意长度的信息变换成一定长的十六进制数字串 (称作“摘要信息”)，同时保证不同信息的摘要信息彼此不同。针对这种单向加密的算法，认证信息文件包括密文即摘要信息，加密算法为MD5等信息。根据单向加密的特征，该认证信息文件可存储在云服务器端，那么在客户端应用程序与本地服务程序建立连接后，本地服务程序从云服务器端下载认证信息文件，本地服务程序根据认证信息文件中的加密算法对客户端应用程序包重新生成密文与云服务器端下载的认证信息文件的密文进行比对验证，从而判断客户端应用程序是否合法。</p>
    <p>[0027]	根据本发明的一个实施例，单向加密的认证信息文件也可存于客户端应用程序包内，那么在客户端应用程序与本地服务程序建立连接后，本地服务程序根据认证信息文件中的加密算法对客户端应用程序包重新生成的密文与客户端应用程序包内的认证信息文件的密文进行比对验证，从而判断客户端应用程序是否合法。</p>
    <p>[0028]	双向加密算法分为对称加密和非对称加密，以非对称加密算法为例，根据公钥和私钥对，由私钥将客户端应用程序加密形成密文，那么该客户端应用程序的认证信息文件包括密文、公钥存储的位置等信息，其中公钥存储的位置可以在本地服务程序包内，也可以在云服务器端。本地服务程序根据认证信息文件中公钥存储的位置信息获取公钥，根据获取的公钥去验证客户端应用程序的认证信息文件的密文。</p>
    <p>[0029]	所述的本地服务程序在安卓系统下表现为一个原生service (服务)，与安卓系统一同启动，在后台运行，提供服务。本地服务程序提供认证客户端应用程序是否合法的服务，其同时也可以提供如内存加密、文件加密、远程(云服务器端）函数调用等功能模块，一方面为客户端应用程序提供本地加密服务，另一方面作为客户端应用程序与云服务器端的中转站与云服务器端进行数据交互。</p>
    <p>[0030]	本地服务程序与客户端应用程序的交互是基于binder的Client-Server的通信方式。binder是安卓系统进程间通信（IPC)方式之一。</p>
    <p>[0031]	binder通信概述：binder通信是一种client-server的通信结构，I.从表面上来看,是client通过获得一个server的代理接口，对server进行直接调用；2.实际上,代理</p>
    <p>接口中定义的方法与server中定义的方法是--对应的；3. client调用某个代理接口中</p>
    <p>的方法时，代理接口的方法会将client传递的参数打包成为Parcel对象；4.代理接口将该Parcel发送给内核中的binderdriver ；5. server会读取binderdriver中的请求数据，如果是发送给自己的，解包Parcel对象，处理并将结果返回；6.整个的调用过程是一个同步过程，在server处理的时候，client会block住。</p>
    <p>[0032]	安卓系统为每个安装好的APK分配WD，故UID是鉴别应用身份的重要标志，在安卓系统下，每一个不同的程序都有一个唯一的WD，一个应用里面可以有多个PID，binder利用通讯自带的UID/PID来实现进程和数据的隔离。binder是基于Client-Server通信模式，在传输过程中，Client端发送的信息中添加安卓系统分配的UID/PID,这样Server端就可以根据发送方的UID/PID来鉴别Client端的身份，安全性高。在安卓系统中，本地服务程序作为binder的Server端，客户端应用程序作为binder的Client端。</p>
    <p>[0033]	ServiceManager 概述：ServiceManager 是一个 Linux 级的进程，是 service 的管理器。任何service在被使用之前,均要向SM(ServiceManager)注册，同时客户端需要访问某个service时，应该首先向SM查询是否存在该服务。如果SM存在这个service，那么会将该service的handle返回给client, handle是每个service的唯一标识符。</p>
    <p>[0034]	和DNS类似，ServiceManager的作用是将字符形式的binder名字转化成Client 中对该binder的引用，使得Client能够通过binder名字获得对Server中binder实体的引用。注册了名字的binder叫实名binder,就象每个网站除了有IP地址外还有自己的网址。Server创建了 binder实体,为其取一个字符形式,可读易记的名字,将这个binder连同名字以数据包的形式通过binder驱动发送给ServiceManager,通知ServiceManager注册一个名叫张三的binder,它位于某个Server中。驱动为这个穿过进程边界的binder创建位于内核中的实体节点以及ServiceManager对实体的引用，将名字及新建的引用打包传递给ServiceManager。ServiceManager收数据包后,从中取出名字和引用填入一张查找表中。</p>
    <p>[0035]	ServiceManager管理service进程，本地服务程序先在ServiceManager注册名字，成为实名binder，比如一个叫张三的binder对应着本地服务程序的引用。客户端应用程序作为相对于本地服务程序的Client端,它通过ServiceManager搜索名叫张三对应的binder引用，该引用即为本地服务程序的binder引用，客户端应用程序通过ServiceManager回复的binder引用向本地服务程序发送请求。</p>
    <p>[0036]	双方建立连接后，开始通信，本地服务程序根据binder自带客户端应用程序在安卓系统下的用户ID、进程ID (WD/PID)号去识别客户端应用程序的身份，进而实现诸如进程间数据隔离、客户端应用程序是否合法的认证等功能。</p>
    <p>[0037]	综上所述，本发明有效地防止了非法客户端应用程序恶意篡改应用数据造成的破坏。</p>
    <p>[0038]	为使本发明的目的、技术方案及优点更加清楚明白，以下参照图并给出具体的实施例，对本发明进一步详细说明。本领域的技术人员都应清楚，下述实施例仅仅是实现本发明的具体实现情况，而非对本发明的具体限制。本领域的技术人员根据下面具体实施例的技术教导，完全能够在不脱离本发明的范围的情况下进行各种改进、替换。</p>
    <p>[0039]	实施例一：</p>
    <p>  在本实施例中，生成客户端程序包的认证信息文件的加密算法为双向加密算法中的非对称加密算法，本实施例采用RSA私钥对安卓客户端程序包APK中的class, dex文件加密。生成的认证信息文件存储在客户端应用程序包内部或者云服务器端。</p>
    <p>[0040]	图2是本地服务程序与客户端应用程序建立binder通信的过程。本地服务程序安装后随着安卓系统的启动一直在后台运行，提供例如内存加密、文件加密和远程(云服务器端）函数调用等功能。</p>
    <p>[0041]	客户端应用程序要想获得本地服务程序提供的服务，要先与本地服务程序建立binder通信。图2主要包括三个模块，分别为ServiceManager、Service、Client。ServiceManager用来管理Service, Service用来管理Client。根据本发明的一个具体实施方式，本地服务程序对应Service模块，客户端应用程序对应Client模块。</p>
    <p>[0042]	本地服务程序先在ServiceManager注册服务。例如注册了一个叫做Is的binder, ServiceManager管理一个表，表中维护着一个叫Is的binder引用。</p>
    <p>[0043]	客户端应用程序启动，向ServiceManager发送请求获取本地服务程序binder的引用。</p>
    <p>[0044]	Client 端向 ServiceManager 请求访问叫 “Is” 的 binder 引用，ServiceManager端通过查找名字叫做”ls”对应的binder引用，将该引用作为回复发送给请求的Client端的客户端应用程序。至此，本地服务程序与客户端应用程序建立了 binder通信，安卓系统会为每次binder通信自动添加WD、PID信息，从而实现用户和进程间的数据隔离。</p>
    <p>[0045]	图3是本实施例中本地服务程序对客户端应用程序的认证过程。</p>
    <p>[0046]	步骤I :用RSA私钥对APK包内的class, dex文件加密，得到的密文保存在认证信息文件中，例如info, txt文件。公钥的存储位置保存在info, txt文件中，那么info, txt文件就是该客户端应用程序的认证信息文件。根据本发明的一个实施例，认证信息文件可保存在客户端应用程序包内部，也可存于云服务器端。</p>
    <p>[0047]	步骤2 :客户端应用程序与本地服务程序建立binder通信，具体过程参见图2。</p>
    <p>[0048]	步骤3 :本地服务程序根据客户端应用程序发送信息中附带的UID/PID搜索对应的客户端应用程序包，在安卓系统下应用程序包一般后缀为APK包。</p>
    <p>[0049]	步骤4 :搜索客户端应用程序包成功，则执行步骤5 ;否则断开本地服务程序与客户端程序的binder通信。</p>
    <p>[0050]	步骤5 :本地服务程序开始检测搜索到的客户端程序包内是否含有认证信息文件，本例中为info, txt文件，如果存在，则执行步骤7 ;否则执行步骤6。</p>
    <p>[0051]	步骤6 :本地服务程序开始检测云服务器端是否存在搜索到的客户端应用对应的认证信息文件。如果存在，则执行步骤7 ;否则断开本地服务程序与客户端程序的binder通&#943;目。</p>
    <p>[0052]	步骤7 :本地服务程序读取认证信息文件的内容，获取公钥存储位置。</p>
    <p>[0053]	步骤8 :若公钥存储在云服务器端，则执行步骤9 ;若公钥存储在本地服务程序包内部，则执行步骤10 ;若读取不到公钥存储的位置信息，则执行步骤11。</p>
    <p>[0054]	步骤9 :公钥存储在云服务器端，本地服务程序通过远程调用函数获取云服务器端的公钥，若获取成功，则执行步骤12 ;否则断开本地服务程序与客户端应用程序的binder 通信。</p>
    <p>[0055]	步骤10 :公钥存储在本地服务程序包内部，本地服务程序在自己的程序包内搜索公钥，若搜索成功，则执行步骤12，否则断开本地服务程序与客户端应用程序的binder通&#943;目。</p>
    <p>[0056]	步骤11 :若在认证信息文件中读取不到公钥存储的位置信息，那么本地服务程序先在本地服务程序自己的程序包内搜索公钥，若搜索成功，则执行步骤12 ;否则向云服务器端获取公钥；</p>
    <p>  步骤12 :本地服务程序根据获取的公钥去解密认证信息文件的密文，若认证成功，则客户端应用程序可正常运行，并且可调用本地服务程序的服务；若认证不成功，说明客户端应用程序不合法，则断开本地服务程序与客户端应用程序的binder通信。</p>
    <p>[0057]	实施例二 ：</p>
    <p>  本实施例采用单向加密算法的MD5对客户端应用程序包加密，该算法常用于文件校验，不管文件多大，经MD5后都能生成唯一的MD5值。</p>
    <p>[0058]	本例的认证信息文件包括MD5值和相应的单向加密算法。如果客户端应用程序有变动，用MD5算法加密产生的MD5值一定不同，根据这一原理来实现对客户端应用程序的认证。&#183;[0059]	图4是本实施例的流程示意图，描述了在单向加密算法下本地服务程序对客户端应用程序的认证过程。</p>
    <p>[0060]	步骤I :用MD5算法对客户端应用程序包加密，产生的MD5值和加密算法组成的认证信息文件，认证信息文件可存储在云服务器端也可存于客户端应用程序包内部。</p>
    <p>[0061]	步骤2 :客户端应用程序与本地服务程序建立binder通信，具体过程参见图2。</p>
    <p>[0062]	步骤3 :本地服务程序根据客户端应用程序发送信息中附带的UID/PID搜索对应的客户端应用程序包，在安卓系统下应用程序包一般后缀为APK包。</p>
    <p>[0063]	步骤4 :搜索客户端应用程序包成功，则执行步骤5 ;否则断开本地服务程序与客户端程序的binder通信。</p>
    <p>[0064]	步骤5 :本地服务程序检测客户端应用程序包是否存在认证信息文件，若存在，则执行步骤7;否则执行步骤6。</p>
    <p>[0065]	步骤6 :本地服务程序检测云端是否存在认证信息文件，若存在，则执行步骤7 ;否则判断客户端应用程序不合法，断开本地服务程序与客户端应用程序的binder通信。</p>
    <p>[0066]	步骤7 :本地服务程序读取认证信息文件中的加密算法，用该加密算法对客户端应用程序包加密产生密文，用该密文与认证信息文件中的密文比对认证，如果认证成功，则执行步骤8 ;否则断开本地服务程序与客户端应用程序的binder通信。</p>
    <p>[0067]	步骤8 :认证成功后，则客户端应用程序可正常运行，并且可调用本地服务程序的服务。</p>
    <p>[0068]	以上所述仅为本发明的较佳实施例而已，并非用于限定本发明的保护范围。凡在本发明的精神和原则之内，所作的任何修改、等同替换以及改进等，均应包含在本发明的保护范围之内。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN1635811A?cl=zh">CN1635811A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2003年12月26日</td><td class="patent-data-table-td patent-date-value">2005年7月6日</td><td class="patent-data-table-td ">华为技术有限公司</td><td class="patent-data-table-td ">一种移动终端获取服务提供者的信息的方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN1866870A?cl=zh">CN1866870A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2006年2月23日</td><td class="patent-data-table-td patent-date-value">2006年11月22日</td><td class="patent-data-table-td ">华为技术有限公司</td><td class="patent-data-table-td ">基于设备管理协议的软件合法性验证系统及验证方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101266638A?cl=zh">CN101266638A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2008年4月16日</td><td class="patent-data-table-td patent-date-value">2008年9月17日</td><td class="patent-data-table-td ">北京飞天诚信科技有限公司</td><td class="patent-data-table-td ">软件保护的方法和系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20120054101">US20120054101</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年9月1日</td><td class="patent-data-table-td patent-date-value">2012年3月1日</td><td class="patent-data-table-td ">American Express Travel Related Services Company, Inc.</td><td class="patent-data-table-td ">Application program interface based fraud mitigation</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103441848A?cl=zh">CN103441848A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年8月16日</td><td class="patent-data-table-td patent-date-value">2013年12月11日</td><td class="patent-data-table-td ">广东欧珀移动通信有限公司</td><td class="patent-data-table-td ">移动终端的应用认证方法和系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103473500A?cl=zh">CN103473500A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年9月6日</td><td class="patent-data-table-td patent-date-value">2013年12月25日</td><td class="patent-data-table-td ">成都三零瑞通移动通信有限公司</td><td class="patent-data-table-td ">一种Android系统下APK签名认证方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2014044170A1?cl=zh">WO2014044170A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年9月17日</td><td class="patent-data-table-td patent-date-value">2014年3月27日</td><td class="patent-data-table-td ">Beijing Senselock Software Technology Co., Ltd.</td><td class="patent-data-table-td ">本地服务单元认证安卓客户端应用程序的方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2015101149A1?cl=zh">WO2015101149A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2014年12月10日</td><td class="patent-data-table-td patent-date-value">2015年7月9日</td><td class="patent-data-table-td ">北京网秦天下科技有限公司</td><td class="patent-data-table-td ">基于应用证书来检测应用安装包的安全性的方法、终端以及辅助服务器</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=yFK6BwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0009320000">H04L9/32</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=yFK6BwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029060000">H04L29/06</a></span></td></tr><tr><td class="patent-data-table-td "> 合作分类</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=yFK6BwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=H04W12/12">H04W12/12</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=yFK6BwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=H04L9/3247">H04L9/3247</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=yFK6BwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F21/51">G06F21/51</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年1月23日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年3月6日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2015年4月29日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2015年9月2日</td><td class="patent-data-table-td ">ASS</td><td class="patent-data-table-td ">Succession or assignment of patent right</td><td class="patent-data-table-td "><div class="nested-key-value"><span class="nested-key">Owner name: </span><span class="nested-value">BEIJING SHENSI SHUDUN SCIENCE + TECHNOLOGY CO., LT</span></div><div class="nested-key-value"><span class="nested-key">Free format text: </span><span class="nested-value">FORMER OWNER: BEIJING SENSELOCK SOFTWARE TECHNOLOGY CO., LTD.</span></div><div class="nested-key-value"><span class="nested-key">Effective date: </span><span class="nested-value">20150811</span></div></td></tr><tr><td class="patent-data-table-td patent-date-value">2015年9月2日</td><td class="patent-data-table-td ">C41</td><td class="patent-data-table-td ">Transfer of patent application or patent right or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/3273f239c071b57b1051/CN102891843A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_6e802a6b2b28d51711baddc2f3bec198.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E5%8D%95%E5%85%83%E8%AE%A4%E8%AF%81%E5%AE%89%E5%8D%93%E5%AE%A2%E6%88%B7%E7%AB%AF.pdf?id=yFK6BwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U0OdP8bK9XGRHX5Q5SIWD0DqHbNSg"},"sample_url":"https://www.google.com/patents/reader?id=yFK6BwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>