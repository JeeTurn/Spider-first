<!DOCTYPE html><html><head><title>专利 CN102662966A - 一种面向主题的获取动态页面内容的方法及系统 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种面向主题的获取动态页面内容的方法及系统"><meta name="DC.contributor" content="归文胜" scheme="inventor"><meta name="DC.contributor" content="杨风雷" scheme="inventor"><meta name="DC.contributor" content="黎建辉" scheme="inventor"><meta name="DC.contributor" content="中国科学院计算机网络信息中心" scheme="assignee"><meta name="DC.date" content="2012-3-8" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种面向主题的获取动态页面内容的方法及系统，属于网络数据采集技术领域。本方法为：1)在抓取服务器端建立一JavaScript过滤库和一JavaScript本地库；2)获取每一抓取页面的页面信息，生成当前页面的DOM对象；3)根据过滤库检验当前页面中请求的外部文件，如果与主题无关，则在当前页面的DOM对象相应位置设置无需加载标记，否则设置正常加载标记；4)如果标记为正常加载的外部文件存在于本地库，则设置本地加载标记，否则设置正常加载标记；5)执行当前页面中的JavaScript，获取动态页面信息；6)获取整合后的页面信息。与现有技术相比，本方法具有更高的时效性、且动态页面信息完整。"><meta name="DC.date" content="2012-9-12"><meta name="DC.relation" content="CN:102156737:A" scheme="references"><meta name="citation_patent_publication_number" content="CN:102662966:A"><meta name="citation_patent_application_number" content="CN:201210060335"><link rel="canonical" href="https://www.google.com/patents/CN102662966A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102662966A?cl=zh"/><meta name="title" content="专利 CN102662966A - 一种面向主题的获取动态页面内容的方法及系统"/><meta name="description" content="本发明公开了一种面向主题的获取动态页面内容的方法及系统，属于网络数据采集技术领域。本方法为：1)在抓取服务器端建立一JavaScript过滤库和一JavaScript本地库；2)获取每一抓取页面的页面信息，生成当前页面的DOM对象；3)根据过滤库检验当前页面中请求的外部文件，如果与主题无关，则在当前页面的DOM对象相应位置设置无需加载标记，否则设置正常加载标记；4)如果标记为正常加载的外部文件存在于本地库，则设置本地加载标记，否则设置正常加载标记；5)执行当前页面中的JavaScript，获取动态页面信息；6)获取整合后的页面信息。与现有技术相比，本方法具有更高的时效性、且动态页面信息完整。"/><meta property="og:title" content="专利 CN102662966A - 一种面向主题的获取动态页面内容的方法及系统"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102662966A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102662966A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=A86gBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102662966A&amp;usg=AFQjCNF5AxHLY2PI8xS7FVaAmkOihxxcWQ" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/1cfb8a45b0fa79a68cba/CN102662966A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/1cfb8a45b0fa79a68cba/CN102662966A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102662966A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102662966A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102662966A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102662966B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102662966A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种面向主题的获取动态页面内容的方法及系统，属于网络数据采集技术领域。本方法为：1)在抓取服务器端建立一JavaScript过滤库和一JavaScript本地库；2)获取每一抓取页面的页面信息，生成当前页面的DOM对象；3)根 ...</span><span itemprop="url">https://www.google.com/patents/CN102662966A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102662966A - 一种面向主题的获取动态页面内容的方法及系统</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102662966A - 一种面向主题的获取动态页面内容的方法及系统" title="专利 CN102662966A - 一种面向主题的获取动态页面内容的方法及系统"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102662966 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210060335</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2012年9月12日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年3月8日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年3月8日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102662966B?hl=zh-CN&amp;cl=zh">CN102662966B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210060335.3, </span><span class="patent-bibdata-value">CN 102662966 A, </span><span class="patent-bibdata-value">CN 102662966A, </span><span class="patent-bibdata-value">CN 201210060335, </span><span class="patent-bibdata-value">CN-A-102662966, </span><span class="patent-bibdata-value">CN102662966 A, </span><span class="patent-bibdata-value">CN102662966A, </span><span class="patent-bibdata-value">CN201210060335, </span><span class="patent-bibdata-value">CN201210060335.3</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BD%92%E6%96%87%E8%83%9C%22">归文胜</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%9D%A8%E9%A3%8E%E9%9B%B7%22">杨风雷</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%BB%8E%E5%BB%BA%E8%BE%89%22">黎建辉</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E4%B8%AD%E5%9B%BD%E7%A7%91%E5%AD%A6%E9%99%A2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E4%B8%AD%E5%BF%83%22">中国科学院计算机网络信息中心</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102662966A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102662966A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102662966A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (1),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=A86gBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210060335&amp;usg=AFQjCNF4485Bjgv11oDpiPP_-on6caeebg"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=A86gBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102662966A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNE7Sk-6xn25MC-oJ8uPfrHHvsF9gw"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT115272374" lang="ZH" load-source="patent-office">一种面向主题的获取动态页面内容的方法及系统</invention-title>
      </span><br><span class="patent-number">CN 102662966 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA100183911" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种面向主题的获取动态页面内容的方法及系统，属于网络数据采集技术领域。本方法为：1)在抓取服务器端建立一JavaScript过滤库和一JavaScript本地库；2)获取每一抓取页面的页面信息，生成当前页面的DOM对象；3)根据过滤库检验当前页面中请求的外部文件，如果与主题无关，则在当前页面的DOM对象相应位置设置无需加载标记，否则设置正常加载标记；4)如果标记为正常加载的外部文件存在于本地库，则设置本地加载标记，否则设置正常加载标记；5)执行当前页面中的JavaScript，获取动态页面信息；6)获取整合后的页面信息。与现有技术相比，本方法具有更高的时效性、且动态页面信息完整。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(10)</span></span></div><div class="patent-text"><div mxw-id="PCLM45093606" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种面向主题的获取动态页面内容的方法，其步骤为：  1)在抓取服务器端建立一	JavaScript过滤库和一 JavaScript本地库；  2)获取每一抓取页面的页面信息,生成当前页面的DOM对象；如果当前页面中使用宿主对象，则该抓取服务器将其实例化为相应对象；  3)根据所述JavaScript过滤库检验当前页面中请求的外部JavaScript文件,如果与主题无关，则在当前页面的DOM对象相应位置设置无需加载标记，否则设置正常加载标记；  4)对于标记为正常加载的外部JavaScript文件,如果当前处理的JavaScript文件存在于所述JavaScript本地库，则设置本地加载标记，否则设置正常加载标记；  5)执行当前页面中的JavaScript，获取动态页面信息；其中，根据加载标记加载外部JavaScript 文件；  6)检验获取的每一动态页面是否丢失了原有页面中的部分信息，如果丢失，则重新将丢失部分添加到动态页面中，得到整合后的页面信息。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.如权利要求I所述的方法，其特征在于所述JavaScript过滤库存储与抓取主题无关的JavaScript文件；所述JavaScript本地库存储外部JavaScript文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.如权利要求2所述的方法,其特征在于所述JavaScript过滤库还包括在线统计客户满意度，插入第三方广告推广代码功能的JavaScript文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.如权利要求2或3所述的方法,其特征在于根据所述JavaScript过滤库检验当前页面中请求的外部JavaScript文件,如果该文件在所述JavaScript过滤库中存在,则在当前页面对应的DOM对象相应位置设置无需加载标记，否则设置正常加载标记。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.如权利要求I所述的方法，其特征在于所述得到整合后的页面信息的方法为：遍历当前动态页面的动态页面库，针对每个动态页面，初始化一个空栈并对它的根标签执行：  a)取根标签下的第一个元素；  b)如果该元素不存在，弹出栈顶元素，然后获取栈顶元素；此时如果栈顶元素为空，则取下一个动态页面的根标签，否则取出该元素中的下一个元素；此时如果该元素的下一个元素为空，则弹出栈顶元素；此时如果栈为空，则取下一个动态页面的根标签，如果该元素为文本内容，则从当前页面的DOM中查询该本文内容；  c)如果标签内部包含标签，则将当前标签压入栈中，取出该标签下第一个元素，执行步骤b)的处理；否则，取出该标签的文本内容，从当前页面的DOM中查询该本文内容；  d)如果从当前页面的DOM中找到查询的本文内容，则获取栈顶元素，如果栈顶元素为空，则取下一个动态页面的根标签；否则取出该元素中下一个元素，执行步骤b)的处理；  e)将该文本内容放在根标签内并插入到当前页面主体标签〈/body〉前面的位置，获取栈顶元素，并取其中的下一个元素，执行步骤b)的处理；  f)如果下一个动态页面不存在，则结束处理。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.如权利要求I所述的方法，其特征在于该抓取服务器端包括一生成宿主对象的类，用于实例化相应宿主对象；所述宿主对象包括=HTML DOM对象、CSS对象、EVENT对象、BOM对象、XMLHttpRequest 对象。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.如权利要求I所述的方法，其特征在于利用HTML解析器生成当前页面的DOM对象；所述 HTML 解析器为 DOMParser 或 HTMLParser。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.如权利要求I或2所述的方法,其特征在于所述JavaScript本地库包括jQuery文件集合、Ext文件集合、Dojo文件集合、Google Web ToolKit文件集合、ProtoType文件集合、YUI文件集合，并检验文件的逻辑完整性；然后根据关键字为各个文件集合建立关键字与各个文件集合的一对一映射关系。</div>
    </div>
    </div> <div class="claim"> <div num="9" class="claim">
      <div class="claim-text">9.	一种面向主题的获取动态页面内容的系统,其特征在于包括JavaScript过滤库，JavaScript本地库,宿主对象生成模块,页面爬行器,页面DOM对象生成模块，JavaScript过滤器，JavaScript解析器,信息整合模块；其中，  所述JavaScript过滤库,用于存储与抓取主题无关的JavaScript文件；  所述JavaScript本地库,用于存储外部JavaScript文件；  所述页面爬行器，用来获取目标页面初始源码；  所述JavaScript过滤器,用来维护需要解析的JavaScript文件以及确定当前页面中是否有无需分析的JavaScript文件；  所述宿主对象生成模块，用于提供各种宿主对象的定义和生成方法；  所述信息整合模块，用于检验获取的每一动态页面是否丢失了原有页面中的部分信息，如果丢失，则重新将丢失部分添加到动态页面中，得到整合后的页面信息。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.如权利要求9所述的系统，其特征在于还包括JavaScript本地库管理器，动态页面库管理器；其中，所述JavaScript本地库管理器包括若干JavaScript文件,并检验文件的逻辑完整性；所述动态页面库管理器，用来存储当前页面中通过Ajax请求获取的动态页面内容，为信息整合模块提供资源。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES51464831" lang="ZH" load-source="patent-office" class="description">
    <p>&#8212;种面向主题的获取动态页面内容的方法及系统</p>
    <p>技术领域</p>
    <p>[0001]	本发明属于网络数据采集技术领域，尤其涉及一种面向主题的获取动态页面内容的方法及系统。</p>
    <p>背景技术</p>
    <p>[0002]	当今是信息技术高速发展的时代，各种新事物层出不穷，网络信息呈爆炸趋势，如何从海量数据信息中获取有用的信息，在很多领域和行业中成为一种必需的支撑手段，能够最快最全地掌握行业领域相关的信息往往有利于做出恰当的抉择。与此同时，互联网信息爬取技术已经有了相当发展，尤其是在通用搜索领域，提供给用户的信息量比以前更大，处理用户请求的响应时间也大大提高；特定于客户需求的服务也越来越人性化，搜索内容 也从文本、图片覆盖到当今的热门领域-视频。然而随着信息多元化发展，对于特定领域和特定主题的搜索需求越来越多，但通用搜索技术在这些领域的召回率和准确率通常无法满足特定的需求。于是垂直搜索技术应运而生，由于其提供的信息相关度高、同主题信息更多更深入、目标群体更为明确等特点，当前该领域的新技术与新应用越来越广泛。</p>
    <p>[0003]	尽管垂直搜索与通用搜索一样面临着在互联网抓取过程中如何爬取动态页面信息的问题，但由于垂直搜索面向的用户更为具体，需求更为明确，因此如何提供更为全面的基于主题的动态页面信息是垂直搜索引擎的生存基础。目前在垂直搜索领域，如何获取动态页面方面已经取得了一些进展，例如在获取动态页面信息上多采用在抓取客户端中嵌入浏览器内核的方式来获取动态内容，然而该方式虽能获取到一定层次的动态内容，但由于浏览器解析过程中加载了页面布局模块、大量的兼容性代码、与主题无关的动态图片或Flash以及各种广告联盟的广告推广代码等与抓取主题无关的内容，因此时空效率比较低下。为此有人提出将JavaScript解析器嵌入到抓取过程中来实现动态抓取的方式，通常的做法是获取页面、构造D0M、标记DOM中的JavaScript、构造宿主对象、执行JavaScript、返回动态页面。通过这种方式虽然减少了与抓取主题无关的页面布局代码、兼容性代码和图片操作代码等内容的加载解析，但仍然存在着一些缺点：1.加载与主题无关的JavaScript ；2.从远程主机请求外部JavaScript文件的时间效率低；3.在执行JavaScript获取的动态页面内容丢失了原页面中存在的部分信息。鉴于这种状况，本申请在这里提供一种新的面向主题的获取动态页面内容的方法。</p>
    <p>发明内容</p>
    <p>[0004]	针对当前普遍采用的以嵌入JavaScript解析器的方式实现动态页面内容获取的方法存在的问题，本发明的目的在于提供一种面向主题的获取动态页面内容的方法及系统。</p>
    <p>[0005]	本发明提出以下解决方案，通过建立JavaScript过滤库以过滤与主题无关的JavaScript文件,从而减少加载与主题无关的外部JavaScript文件；通过建立JavaScript本地库以便从本地加载原本需要从远程主机加载的JavaScript文件，从而减少与远程主机之间的交互，进而减少加载外部JavaScript文件所需的时间；通过将原页面中存在而JavaScript解析器解析后的动态页面中缺少的信息加入到动态页面中来提高动态页面的完整性。</p>
    <p>[0006]	本申请提供一种面向主题的获取页面动态内容的方法及系统，用以解决垂直搜索领域如何爬取动态页面信息的问题，技术方案如下：</p>
    <p>[0007]	本 申请提供一种面向主题的获取页面动态内容的方法，具体步骤如下：</p>
    <p>[0008]	I.建立 JavaScript 过滤库</p>
    <p>[0009]	分析每一个抓取页面内部的JavaScript文件,根据其是否与抓取主题相关来决定是否将其相关信息存入到JavaScript过滤库,并增加库维护模块。</p>
    <p>[0010]	2.建立 JavaScript 本地库</p>
    <p>[0011]	初始存入常见的JavaScript文件,然后根据每一次远程请求的外部JavaScript文件来完善该JavaScript本地库,并增加库维护模块。</p>
    <p>[0012]	3.提供生成各种宿主对象的类</p>
    <p>[0013]	主要包括JavaScript语言本身不存在但在执行JavaScript代码时可能需要访问的对象。</p>
    <p>[0014]	4.获取页面信息</p>
    <p>[0015]	基于正确的页面编码获取页面信息。</p>
    <p>[0016]	5.生成当前页面的DOM对象</p>
    <p>[0017]	利用DOMParser, HTMLParser等HTML解析器生成该页面的DOM对象，当前页面中如果使用到相关宿主对象，则从步骤3提供的宿主类中实例化相应对象。</p>
    <p>[0018]	6.标记是否需过滤JavaScript文件</p>
    <p>[0019]	根据步骤I中提供的JavaScript过滤库信息来检验页面中请求的外部JavaScript文件是否需要继续加载处理,如果该文件在JavaScript过滤库中存在,则在该页面对应的DOM对象中相应位置设置无需加载的过滤标记，否则设置正常加载标记。</p>
    <p>[0020]	7.标记是否需请求JavaScript本地库</p>
    <p>[0021 ] 如果当前处理的JavaScript文件不是当前站点内部文件并且该文件在JavaScript本地库中存在,则设置从JavaScript本地库加载的本地标记,否则设置正常加载标记。</p>
    <p>[0022]	8.执行页面中的JavaScript</p>
    <p>[0023]	利用JavaScript解析器执行页面中的JavaScript获取动态页面信息,其中需要加载外部JavaScript文件时应根据步骤6和7中设置的过滤标记和本地标记来判断是否需加载该文件以及是否从JavaScript本地库加载该文件。</p>
    <p>[0024]	9.保存动态页面信息</p>
    <p>[0025]	主要包含通过Asynchronous JavaScript and XML (简称Ajax)请求动态获取的</p>
    <p>页面信息。</p>
    <p>[0026]	10.获取整合后的页面信息</p>
    <p>[0027]	通过执行JavaScript获取的动态页面可能会丢失一些原页面中存在的信息，将这部分丢失的信息重新加入到动态页面中，从而提高页面信息的完整性。</p>
    <p>[0028]	本申请还提供一种面向主题的获取页面动态内容的系统，具体步骤如下：[0029]	I. JavaScript 过滤库</p>
    <p>[0030]	用页面中与抓取主题无关的JavaScript文件建立JavaScrip过滤库,并提供用于判别是否需过滤的模块。</p>
    <p>[0031]	2. JavaScript 本地库</p>
    <p>[0032]	初始库中存入常见的javaScript文件,然后基于每一次远程请求的JavaScript文件去完善该JavaScript本地库,并提供库维护模块。</p>
    <p>[0033]	3.宿主对象生成模块 [0034]	提供各种宿主对象的定义和生成方法。</p>
    <p>[0035]	4.页面爬行器</p>
    <p>[0036]	以正确的页面编码获取页面源代码的模块。</p>
    <p>[0037]	5.页面DOM对象生成模块</p>
    <p>[0038]	利用页面解析器生成当前页面的HTML DOM对象。</p>
    <p>[0039]	6. JavaScript 过滤器</p>
    <p>[0040]	基于JavaScript过滤库来判断当前页面中的JavaScript文件是否需要解析的模块。</p>
    <p>[0041]	7&#183; JavaScript本地库管理器</p>
    <p>[0042]	提供维护JavaScript本地库的模块以及本地库自动加载模块。</p>
    <p>[0043]	8. JavaScript 解析器</p>
    <p>[0044]	嵌入外部的JavaScript引擎为执行页面中的JavaScript脚本提供支持的模块。</p>
    <p>[0045]	9.动态页面管理器</p>
    <p>[0046]	保存并维护通过异步JavaScript与XML(Ajax)请求的页面信息。</p>
    <p>[0047]	10.信息整合模块</p>
    <p>[0048]	该模块主要用来检验动态生成的页面是否丢失了原有页面中的一些内容，如果丢失则重新将其添加到动态页面中。</p>
    <p>[0049]	以上技术方案，总体过程是首先建立JavaScript本地库，JavaScript过滤库和生成各种宿主对象，接着通过页面爬行器获取正确的页面信息，随后通过HTML DOM解析器生成该页面的DOM对象,在该过程中由JavaScript过滤器标记当前页面中的JavaScript文件是否需要解析，由JavaScript本地库管理器标记当前页面中的JavaScript文件是否需从JavaScript本地库加载,之后由JavaScript引擎执行当前页面中存在JavaScript文件，与此同时，将解析过程中由Ajax请求获取的页面保存在动态页面库中，接着将 JavaScript解析器解析后的页面信息经由信息整合模块处理，最后返回更为完整的页面内容，其中JavaScript解析器中的数据流如图6所示。</p>
    <p>[0050]	与现有技术相比，本发明的积极效果为：</p>
    <p>[0051]	应用如上技术方案，垂直搜索引擎在爬取过程中可以获取更为完整的动态页面信息，而且与现有的调用浏览器内核或者调用JavaScript解析器的方案相比具有更高的时效性。</p>
    <p>附图说明</p>
    <p>[0052]	图I是本申请方法实现获取动态内容的方法流程；[0053]	图2是本申请方法中页面爬行器的结构示意图；</p>
    <p>[0054]	图3是本申请方法中JavaScript过滤库模块的结构示意图；</p>
    <p>[0055]	图4是本申请方法中宿主对象生成模块的结构示意图；</p>
    <p>[0056]	图5是本申请方法中JavaScript本地库模块的结构示意图；</p>
    <p>[0057]	图6是本申请方法中JavaScript解析器模块的数据流程图。</p>
    <p>具体实施方式</p>
    <p>[0058]	如图I所示由本方法所构建的网页动态内容获取方法主要包括：I.建立JavaScript过滤库；2.建立JavaScript本地库；3.提供生成各种宿主对象的类；4.获取页面信息；5.生成当前页面的DOM对象；6.标记是否需过滤JavaScript文件；7.标记是否请求JavaScript本地库；8.执行页面中的JavaScript代码；9.保存动态页面信息；10.获 取整合后的页面信息。</p>
    <p>[0059]	该方法对应的系统为：</p>
    <p>[0060]	I. JavaScript过滤库，如图3 ;2. JavaScript本地库，如图5 ;3.宿主对象生成模块，如图4;4.页面爬行器，如图2 ;5.页面DOM对象生成模块；6. JavaScript过滤器；</p>
    <p>7.	JavaScript本地库管理器；8. JavaScript解析器；9.动态页面库管理器；10.信息整合模块。其中，页面爬行器用来获取目标页面初始源码，是整个系统持续运行的基础；JavaScript过滤器用来维护需要解析的JavaScript文件以及确定当前的页面中是否有无需分析的文件，是减少与目标无关的资源加载的关键�步；宿主对象生成模块实现了 HTMLDOM、EVENT、CSS、Browser Object Model、XMLHttprequest 规范定义的接 ロ，是 JavaScript解析器正确解析、执行页面中JavaScript代码的关键JavaScript本地库管理器提供了大多数常用的JavaScript文件，尽可能将远程请求转换为本地请求，以便减少与远程主机的交互，是减少加载外部JavaScript文件的关键所在；动态页面库管理器主要用来存储当前页面中通过Ajax请求获取的动态页面内容，为信息整合模块提供必须的资源；信息整合模块主要用于提高目标内容的完整性。</p>
    <p>[0061]	为了便于本领域工程技术人员实施，下面详细说明该方法的实施步骤：</p>
    <p>[0062]	步骤一：建立JavaScript过滤库</p>
    <p>[0063]	基于主题建立与目标内容无关的JavaScript过滤库，该库中主要包含两类可执行的文件：1.与主题明显无关的JavaScript文件,例如用来改变页面布局的JavaScript文件；2.用于在线统计客户满意度，插入第三方广告推广代码等功能的文件，例如在线统计客户满意度代码ForSee Results Survey Code,百度联盟、淘宝联盟以及GoogleAdSense提供的以JavaScript形式实现的广告服务。</p>
    <p>[0064]	该库中内容的选择，主要使用逐一分析加入到抓取URL集中的页面，通过判断其中所包含的外部JavaScript文件是否与抓取主题相关来决定是否将其存入JavaScript过滤库。</p>
    <p>[0065]	在选择过程中需要注意以下几点：</p>
    <p>[0066]	(I)对于�个主题而言无用的第三方JavaScript文件可能对于另�个主题来说是必须的。</p>
    <p>[0067]	(2)如果第三方JavaScript文件包含多个JavaScript文件,需要确保包含的文件具有完整的逻辑依赖性。</p>
    <p>[0068]	(3)存储第三方JavaScript文件时以该JavaScript文件名称中的关键词部分命名。关键词部分，可以以此种方式来实现，比如ForSee集合,通常以*_ForSee_*形式来命名，那么此时的关键词部分就是指ForSee。</p>
    <p>[0069]	另外,针对该JavaScript过滤库增加�些辅助功能：</p>
    <p>[0070]	A.增加增删改查方法，以便于提供人工更新库中信息的接ロ。</p>
    <p>[0071]	B.过滤外部JavaScript文件</p>
    <p>[0072]	在加载外部JavaScript文件时，通过文件名称中的关键词部分去搜索JavaScript过滤库,如果能在该库中找到匹配的JavaScript文件,则在DOM树相应位置设置过滤标记I (即无需加载该文件），否则设置正常加载标记O。</p>
    <p>[0073]	步骤ニ ：建立JavaScript本地库</p>
    <p>[0074]该库初始应该加入	jQuery, Ext, Do jo, Google Web ToolKit, ProtoType, YUI 等文件集合，根据关键字为各个文件集合建立关键字与文件集合的一&#23550;一映射关系，以便于加载时准确快捷。随后根据每一次去当前站点外请求的JavaScript文件名称的关键字部分来检验是否在JavaScript本地库中存在,如果不存在则发出Ajax请求获取该文件并保存到JavaScript本地库；如果存在则不用发送请求，直接进行本地下载。为方便后面的环节使用该JavaScript本地库，需为该库增加增删查的维护功能和标记是否从该库加载的功&#20489;^:。</p>
    <p>[0075]	A.增删查的功能具体如下：</p>
    <p>[0076]	(I)增加JavaScript文件到JavaScript本地库,需要检验该文件的逻辑完整性，比如增加jQuery UI子文件,应保证增加jQuery-Core文件。</p>
    <p>[0077]	(2)从JavaScript本地库中删除JavaScript文件，需要保证文件的逻辑依赖性，比如首先删除jQuery UI,而不能首先删除jQuery-Core,当且仅当没有其他文件对jQuery-Core有依赖后才可以删除jQuery-Core。</p>
    <p>[0078]	(3)每个文件集合包含的子文件，以及子文件之间的依赖关系通过XML文件进行配置。 [0079]	B.检验是否从JavaScript本地库加载文件</p>
    <p>[0080]	依次顺序检验当前DOM树中每�个JavaScript文件的对应结点处设置的过滤标识来验证该文件是否需要被加载，此时分两种情况：</p>
    <p>[0081]	(I)如果是过滤标识为1，即无需加载，则不予处理本请求，直接处理当前DOM树中下�个JavaScript文件对应的结点，如果当前结点是DOM树中最后�个结点，则终止整个检验过程；</p>
    <p>[0082]	(2)如果是正常加载标识0，则根据该JavaScript文件的关键字部分在JavaScript本地库中查询其中是否存在该文件,此时分两种情况：</p>
    <p>[0083]	i.如果存在，则设置该文件在对应DOM树结点的标识属性为2，即从JavaScript本地库加载；</p>
    <p>[0084]	ii否则继续处理当前DOM树中下�个JavaScript文件对应的结点，如果当前节点是DOM树中最后�个结点，则终止整个检验过程。</p>
    <p>[0085]	JavaScript文件的关键字部分根据步骤ニ B项中的方式来确定。该部分加载文件的方式与步骤一中页面爬行器采用的方式大体一祥，不同之处在于加载JavaScript文件时，直接采用UTF-8编码方式，不进行编码识别。</p>
    <p>[0086]	步骤三：提供生成各种宿主对象的类</p>
    <p>[0087]	A.实现 HTML DOM 对象</p>
    <p>[0088]	基于DOM规范实现相应等级的DOM对象，该模块应该包含相应等级对应规范中定义的所有DOM对象，其中要保证常见对象的所有属性以及所有对象的常用属性必须实现，以确保在JavaScript解析器在执行时能够找到相应的DOM对象。 [0089]	B.实现CSS对象</p>
    <p>[0090]	由于本申请方法以及系统中只关注页面中的目标内容，因此涉及页面布局、展示方式的CSS只提供基本的实现即可，该实现中至少应该包括如下部分：css样式转文本property的操作方法、CSS样式与文本转换的方法、CSS支持的样式集合、CSS选择器规则以及CSS样式表的解析模块。注意，如果不提供该实现会造成JavaScript解析中找不到相应属性或方法等异常。</p>
    <p>[0091]	C.实现 EVENT 对象</p>
    <p>[0092]	该模块部分，应该实现Event注册&#183;、Event派发功能，主要用于触发onload、onunload、onerror等以on开头的事件。</p>
    <p>[0093]	D.实现BOM对象</p>
    <p>[0094]	该模块主要用于JavaScript解析器在执行JavaScript代码时访问浏览器对象的情况，必须实现窗ロ（Window),历史（History),导航器（Navigator),屏幕(Screen),文档（Document),位置(Location)六个对象，其中窗ロ (Window),历史（History),文档(Document),位置（Location)这四个常用对象的属性和方法实现要全面,对于未实现部分要给出异常信息提示。</p>
    <p>[0095]	E.实现 XMLHttpRequest 对象</p>
    <p>[0096]该对象的实现中应该包括，open,	send, setRequestHeader, getResponseHeader,getResponseHeaders方法，其中send方法中需要对Cookie做相应处理。</p>
    <p>[0097]	步骤四：获取页面信息</p>
    <p>[0098]	需要抓取的url地址来源于特定于主题的URL集合，代码获取部分与传统互联网抓取客户端类似，主要包括两个部分：</p>
    <p>[0099]	A.识别页面编码</p>
    <p>[0100]	首先通过HTTP响应头获取Content-Type字段,如果该字段中不包含charset字符，则以GBK，UTF-8等字符集中任意一种作为当前字符集读取页面的一部分代码，然后查找其中的charset字符串从中截取charset,如果仍然不能确定字符集,则默认当前字符集为 UTF-8。</p>
    <p>[0101]	B.读取页面</p>
    <p>[0102]	本步骤与传统互联网客户端采用的技术�样,通过URL(Uniform Resource,统�资源定位符）地址读取该地址对应的页面代码内容。</p>
    <p>[0103]	步骤五：生成当前页面的DOM对象</p>
    <p>[0104]	利用HTMLParser等HTML解析器解析当前页面，该解析器具有在DOM树的每个javascript结点上增加�个标识flag属性的功能,其中flag意义为：0代表正常；1代表需过滤；2代表需向本地JavaScript框架库请求该文件。</p>
    <p>[0105]	步骤六：标记是否需过滤JavaScript文件</p>
    <p>[0106]	遍历当前页面的DOM树,对所遇到的JavaScript结点利用步骤�辅助功能B设置过滤标识。</p>
    <p>[0107]	步骤七：标记是否请求JavaScript本地库</p>
    <p>[0108]	遍历当前页面的DOM树,对所遇到的JavaScript结点利用步骤ニ B中的方法设置是否从JavaScript本地库加载标识。</p>
    <p>[0109]	步骤八：执行页面中的JavaScript代码 [0110]	这里可以采用现有的JavaScript解析器，比如SpiderMonkey, Rhino或者Googlev8等JavaScript引擎，采用其中任何一种引擎，都应该首先将步骤三中所描述的所有宿主对象加载进去。需要执行的JavaScript代码具体分为两部分：</p>
    <p>[0111]	(I)在构造DOM对象过程中加载外部JavaScript文件，或执行页面中存在的代码段或存在于属性值内部的代码语句</p>
    <p>[0112]	(2)在构造DOM结束后，触发onload等以on开头的注册事件所包含的代码，其中既包括页面中调用注册&#183; onload等事件，也包括加载的外部JavaScript文件中包含的onload等事件。</p>
    <p>[0113]	其中，JavaScript文件是指通过HTML标签的src属性加载的外部JavaScript文件，代码段是指存在于HTML标签〈scriptX/script〉之间的代码，代码语句是指存在于HTML标签属性值中以JavaScript :方式开头的语句。</p>
    <p>[0114]	在执行代码过程中，根据每个需要从外部加载的JavaScirpt文件所对应的DOM结点上的flag属性来决定是否需要加载和是否需要从JavaScipt本地库加载该文件，如果需要则从JavaScript本地库加载，否则按照原有方式请求远程主机。</p>
    <p>[0115]	步骤九：保存动态页面信息</p>
    <p>[0116]	将当前页面中所涉及到的所有JavaScript代码中发出的Ajax请求获取到的页面保存为当前页面的动态页面库。对于库中的每个页面，只有〈body〉标签内部部分对于主题来说是有意义的，因此提取出姆�个页面〈body〉标签内部的内容,嵌套在&lt;div&gt;标签内。</p>
    <p>[0117]	步骤十：获取整合后的页面信息</p>
    <p>[0118]	对于每个当前页面都建立一个动态页面库，遍历当前动态页面的动态页面库，针对每个动态页面，对它的根&lt;div&gt;标签执行以下算法，其中该算法根据深度优先的顺序来取下一个标签，另需要初始化�个空栈：</p>
    <p>[0119]	(I)取根div标签下的第一个元素；</p>
    <p>[0120]	(2)如果该元素不存在，弹出栈顶元素，然后获取栈顶元素，此时如果栈顶元素为空，转步骤（7)，否则取出该元素中的下�个元素，此时如果该元素的下�个元素为空则弹出栈顶元素，此时如果栈为空，则转步骤（7);如果该元素为文本内容，则转向步骤（4)；</p>
    <p>[0121]	(3)如果标签内部包含标签，则将当前标签压入栈中，取出该标签（即当前标签）下第一个元素，转步骤（2)，否则取出该标签的文本内容；</p>
    <p>[0122]	(4)在前面已经构造好的D0M(即当前页面的DOM树）中查询该本文内容；</p>
    <p>[0123]	(5)如果找到，则获取栈顶元素，如果为空，则转向步骤（7)，否则取出该元素中下�个元素，转向步骤⑵；[0124]	(6)将该文本内容放在根标签&lt;div&gt;内并插入到当前页面主体标签〈/body〉前面的位置，获取栈顶元素，并取其中的下�个元素，转向步骤2)；</p>
    <p>[0125]	(7)取下一个动态页面的根&lt;div&gt; ；</p>
    <p>[0126]	(8)如果下�个动态页面存在，则转步骤（I)，否则结束处理。</p>
    <p>[0127]	最终获取JavaScript解析器执行整个DOM操作后获取的动态页面源码与执行过程中未被插入进当前DOM的内容的结合页面信息，该页面信息与传统JavaScript解析后的 页面相比，提供了更为完整的页面信息。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102156737A?cl=zh">CN102156737A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年4月12日</td><td class="patent-data-table-td patent-date-value">2011年8月17日</td><td class="patent-data-table-td ">华中师范大学</td><td class="patent-data-table-td ">一种中文网页主题内容的提取方法</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=A86gBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2012年9月12日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年11月7日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2014年1月1日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/1cfb8a45b0fa79a68cba/CN102662966A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E9%9D%A2%E5%90%91%E4%B8%BB%E9%A2%98%E7%9A%84%E8%8E%B7%E5%8F%96%E5%8A%A8%E6%80%81%E9%A1%B5%E9%9D%A2.pdf?id=A86gBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U2AGM1mQjUdatHCoh7OO34360Rbjg"},"sample_url":"https://www.google.com/patents/reader?id=A86gBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>