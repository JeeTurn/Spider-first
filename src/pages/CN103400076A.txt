<!DOCTYPE html><html><head><title>专利 CN103400076A - 一种移动终端上的恶意软件检测方法、装置和系统 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种移动终端上的恶意软件检测方法、装置和系统"><meta name="DC.contributor" content="廖崇粮" scheme="inventor"><meta name="DC.contributor" content="腾讯科技（深圳）有限公司" scheme="assignee"><meta name="DC.date" content="2013-7-30" scheme="dateSubmitted"><meta name="DC.description" content="本发明实施例公开了一种移动终端上的恶意软件检测方法、装置和系统。该方案可以获取需要检测的软件的安装包，对该安装包进行解压，得到解压后安装包，然后一方面对该解压后安装包进行检测，得到第一检测结果，另一方面，将该解压后安装包发送给云端系统，并接收云端系统对所述解压后安装包进行恶意软件检测后返回的第二检测结果，如果第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则确定该需要检测的软件为恶意软件。由于该方案不仅可以在本地对恶意软件进行检测，而且还可以在功能强大的云端系统对恶意软件作进一步的深入检测，因此，可以更加精确地检测出恶意软件。"><meta name="DC.date" content="2013-11-20"><meta name="DC.relation" content="CN:102663286:A" scheme="references"><meta name="DC.relation" content="CN:102779257:A" scheme="references"><meta name="DC.relation" content="US:20110145920:A1" scheme="references"><meta name="citation_reference" content="房鑫鑫: &quot;Android恶意软件实现及检测研究&quot;, 《中国优秀硕士学位论文全文数据库 信息科技辑》, no. 6, 15 June 2013 (2013-06-15)"><meta name="citation_reference" content="胡文君: &quot;一种针对Android平台恶意代码的检测方法及系统实现&quot;, 《西安交通大学学报》, 3 July 2013 (2013-07-03)"><meta name="citation_patent_publication_number" content="CN:103400076:A"><meta name="citation_patent_application_number" content="CN:201310326191"><link rel="canonical" href="https://www.google.com/patents/CN103400076A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN103400076A?cl=zh"/><meta name="title" content="专利 CN103400076A - 一种移动终端上的恶意软件检测方法、装置和系统"/><meta name="description" content="本发明实施例公开了一种移动终端上的恶意软件检测方法、装置和系统。该方案可以获取需要检测的软件的安装包，对该安装包进行解压，得到解压后安装包，然后一方面对该解压后安装包进行检测，得到第一检测结果，另一方面，将该解压后安装包发送给云端系统，并接收云端系统对所述解压后安装包进行恶意软件检测后返回的第二检测结果，如果第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则确定该需要检测的软件为恶意软件。由于该方案不仅可以在本地对恶意软件进行检测，而且还可以在功能强大的云端系统对恶意软件作进一步的深入检测，因此，可以更加精确地检测出恶意软件。"/><meta property="og:title" content="专利 CN103400076A - 一种移动终端上的恶意软件检测方法、装置和系统"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN103400076A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN103400076A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=pefiCAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN103400076A&amp;usg=AFQjCNF2eC6cBDSnijOSfJ9GFkrb07LyWw" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/aee9b543798e5b16e440/CN103400076A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/aee9b543798e5b16e440/CN103400076A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN103400076A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN103400076A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN103400076A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN103400076B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN103400076A?cl=zh" style="display:none"><span itemprop="description">本发明实施例公开了一种移动终端上的恶意软件检测方法、装置和系统。该方案可以获取需要检测的软件的安装包，对该安装包进行解压，得到解压后安装包，然后一方面对该解压后安装包进行检测，得到第一检测结果，另一方...</span><span itemprop="url">https://www.google.com/patents/CN103400076A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN103400076A - 一种移动终端上的恶意软件检测方法、装置和系统</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN103400076A - 一种移动终端上的恶意软件检测方法、装置和系统" title="专利 CN103400076A - 一种移动终端上的恶意软件检测方法、装置和系统"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN103400076 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201310326191</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年11月20日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2013年7月30日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2013年7月30日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103400076B?hl=zh-CN&amp;cl=zh">CN103400076B</a>, </span><span class="patent-bibdata-value"><a href="/patents/US20150163232?hl=zh-CN&amp;cl=zh">US20150163232</a>, </span><span class="patent-bibdata-value"><a href="/patents/WO2015014185A1?hl=zh-CN&amp;cl=zh">WO2015014185A1</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201310326191.6, </span><span class="patent-bibdata-value">CN 103400076 A, </span><span class="patent-bibdata-value">CN 103400076A, </span><span class="patent-bibdata-value">CN 201310326191, </span><span class="patent-bibdata-value">CN-A-103400076, </span><span class="patent-bibdata-value">CN103400076 A, </span><span class="patent-bibdata-value">CN103400076A, </span><span class="patent-bibdata-value">CN201310326191, </span><span class="patent-bibdata-value">CN201310326191.6</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BB%96%E5%B4%87%E7%B2%AE%22">廖崇粮</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E8%85%BE%E8%AE%AF%E7%A7%91%E6%8A%80%EF%BC%88%E6%B7%B1%E5%9C%B3%EF%BC%89%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">腾讯科技（深圳）有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103400076A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103400076A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103400076A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (3),</span> <span class="patent-bibdata-value"><a href="#npl-citations">非专利引用</a> (2),</span> <span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (3),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (6),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=pefiCAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201310326191&amp;usg=AFQjCNGIZNB3d0CuIgDyZe3qMFCnWKmgcQ"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=pefiCAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D103400076A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNGBPkmm19B_-Z9TKalZs6Ehjs732g"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT131191161" lang="ZH" load-source="patent-office">一种移动终端上的恶意软件检测方法、装置和系统</invention-title>
      </span><br><span class="patent-number">CN 103400076 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA125561791" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明实施例公开了一种移动终端上的恶意软件检测方法、装置和系统。该方案可以获取需要检测的软件的安装包，对该安装包进行解压，得到解压后安装包，然后一方面对该解压后安装包进行检测，得到第一检测结果，另一方面，将该解压后安装包发送给云端系统，并接收云端系统对所述解压后安装包进行恶意软件检测后返回的第二检测结果，如果第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则确定该需要检测的软件为恶意软件。由于该方案不仅可以在本地对恶意软件进行检测，而且还可以在功能强大的云端系统对恶意软件作进一步的深入检测，因此，可以更加精确地检测出恶意软件。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(15)</span></span></div><div class="patent-text"><div mxw-id="PCLM56855331" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.一种移动终端上的恶意软件检测方法，其特征在于，包括:获取需要检测的软件的安装包；对所述安装包进行解压，得到解压后安装包；对所述解压后安装包进行检测，得到第一检测结果；发送所述解压后安装包给云端系统；接收云端系统返回的第二检测结果，所述第二检测结果为云端系统对所述解压后安装包进行恶意软件检测所得到的结果；若所述第一检测结果和/或第二检测结果指示所述解压后安装包中存在异常，则确定所述需要检测的软件为恶意软件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的方法，其特征在于，所述对所述解压后安装包进行检测，得到第一检测结果，包括: 对所述解压后安装包进行启发式扫描，得到第一扫描结果；对所述解压后安装包中的特征码进行二进制扫描，得到第二扫描结果；对所述解压后安装包进行权限文件扫描，得到第三扫描结果；若所述第一扫描结果、第二扫描结果和/或第三扫描结果指示所述解压后安装包中存在异常，则在第一检测结果中指示所述解压后安装包中存在异常。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求2所述的方法，其特征在于，所述对所述解压后安装包进行启发式扫描，得到第一扫描结果，包括:分别对所述解压后安装包的安装根目录、资源文件和基础依赖库进行扫描，得到第一扫描结果。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求3所述的方法，其特征在于，所述分别对所述解压后安装包的安装根目录、资源文件和基础依赖库进行扫描，得到第一扫描结果，包括:对所述解压后安装包中的安装根目录进行扫描，若所述安装根目录中不存在预置常规文件，或所述安装根目录中存在异常文件且所述异常文件是可执行文件，则在第一扫描结果中指示所述解压后安装包中存在异常；对所述解压后安装包中的资源文件进行扫描，若存在除预置文件类型之外的其他文件，则在第一扫描结果中指示所述解压后安装包中存在异常；对所述解压后安装包中的基础依赖库进行扫描，若存在除预置文件类型之外的其他文件或文件格式不符合预置规范，则在第一扫描结果中指示所述解压后安装包中存在异常。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求2所述的方法，其特征在于，所述对所述解压后安装包中的特征码进行二进制扫描，得到第二扫描结果，包括:对所述解压后安装包中的特征码进行二进制扫描，若存在于预置病毒样本相似的特征码，则在第二扫描结果中指示所述解压后安装包中存在异常。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求2所述的方法，其特征在于，所述对所述解压后安装包进行权限文件扫描，得到第三扫描结果，包括:对所述解压后安装包进行权限文件扫描，若存在危险的权限组合，则在第三扫描结果中指示所述解压后安装包中存在异常。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求2所述的方法，其特征在于，所述云端系统对所述解压后安装包进行恶意软件检测，包括:云端系统对所述解压后安装包中的权限文件进行分析，得到分析结果；云端系统将所述解压后安装包中的可执行文件中的代码与预置的样本文件中的代码进行相似性比较，得到第一比较结果；云端系统将所述解压后安装包中的可执行文件的应用程序接口调用树与预置的样本文件中的应用程序接口调用树进行相似性比较，得到第二比较结果；若所述分析结果、第一比较结果和/或第二比较结果指示所述解压后安装包中存在异常，则在第二检测结果中指示所述解压后安装包中存在异常。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.根据权利要求7所述的方法，其特征在于，所述云端系统对所述解压后安装包中的权限文件进行分析，得到分析结果，包括:云端系统确定所述解压后安装包中的权限文件中的数据包名称与预置数据库中的病毒包名称相同或相似时，在分析结果中指示所述解压后安装包中存在异常；云端系统确定所述解压后安装包请求的权限组合数量高于所述需要检测的软件所属类型的权限组合数量时，在分析结果中指示所述解压后安装包中存在异常；云端系统确定所述解压后安装包中的权限文件中的签名和与预置数据库中的病毒的签名相同或相似时，在分析结果中指示所述解压后安装包中存在异常。</div>
    </div>
    </div> <div class="claim"> <div num="9" class="claim">
      <div class="claim-text">9.一种移动终端上的恶意软件检测装置，其特征在于，包括:获取单元，用于获取需要检测的软件的安装包；解压单元，用于对所述安装包进行 解压，得到解压后安装包；检测单元，用于对所述解压后安装包进行检测，得到第一检测结果；发送单元，用于发送所述解压后安装包给云端系统；接收单元，用于接收云端系统返回的第二检测结果，所述第二检测结果为云端系统对所述解压后安装包进行恶意软件检测所得到的结果；确定单元，用于在确定所述第一检测结果和/或第二检测结果指示所述解压后安装包中存在异常时，确定所述需要检测的软件为恶意软件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.根据权利要求9所述的移动终端上的恶意软件检测装置，其特征在于，所述检测单元包括第一扫描子单元、第二扫描子单元、第三扫描子单元和分析子单元；第一扫描子单元，用于对所述解压后安装包进行启发式扫描，得到第一扫描结果；第二扫描子单元，用于对所述解压后安装包中的特征码进行二进制扫描，得到第二扫描结果；第三扫描子单元，用于对所述解压后安装包进行权限文件扫描，得到第三扫描结果； 分析子单元，用于在所述第一扫描结果、第二扫描结果和/或第三扫描结果指示所述解压后安装包中存在异常时，在第一检测结果中指示所述解压后安装包中存在异常。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="11" class="claim">
      <div class="claim-text">11.根据权利要求10所述的移动终端上的恶意软件检测装置，其特征在于，所述第一扫描子单元，具体用于分别对所述解压后安装包的安装根目录、资源文件和基础依赖库进行扫描，得到第一扫描结果。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="12" class="claim">
      <div class="claim-text">12.根据权利要求11所述的移动终端上的恶意软件检测装置，其特征在于，所述第一扫描子单元，具体用于执行以下操作:对所述解压后安装包中的安装根目录进行扫描，若所述安装根目录中不存在预置常规文件，或所述安装根目录中存在异常文件且所述异常文件是可执行文件，则在第一扫描结果中指示所述解压后安装包中存在异常；对所述解压后安装包中的资源文件进行扫描，若存在除预置文件类型之外的其他文件，则在第一扫描结果中指示所述解压后安装包中存在异常；对所述解压后安装包中的基础依赖库进行扫描，若存在除预置文件类型之外的其他文件或文件格式不符合预置规范，则在第一扫描结果中指示所述解压后安装包中存在异常。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="13" class="claim">
      <div class="claim-text">13.根据权利要求10所述的移动终端上的恶意软件检测装置，其特征在于，所述第二扫描单元，具体用于对所述解压后安装包中的特征码进行二进制扫描，若存在于预置病毒样本相似的特征码，则在第二扫描结果中指示所述解压后安装包中存在异堂巾o</div>
    </div>
    </div> <div class="claim-dependent"> <div num="14" class="claim">
      <div class="claim-text">14.根据权利要求10所述的移动终端上的恶意软件检测装置，其特征在于，所述第三扫描单元，具体用于对所述解压后安装包进行权限文件扫描，若存在危险的权限组合，则在第三扫描结果中指示所述解压后安装包中存在异常。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="15" class="claim">
      <div class="claim-text">15.一种通信系统，其特 征在于，包括权利要求9至14任一项所述的移动终端上的恶意软件检测装置。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES63834579" lang="ZH" load-source="patent-office" class="description">
    <p>一种移动终端上的恶意软件检测方法、装置和系统</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及通信技术领域，具体涉及一种移动终端上的恶意软件检测方法、装置和系统。</p>
    <p>背景技术</p>
    <p>[0002]	随着通信技术的发展，移动终端，如智能手机、平板电脑等设备的应用也越来越为普遍，可以说，它们已经逐渐成为人们生活中不可或缺的一部分。但是，这些高科技产品在丰富人们生活，以及给人们的生活提供便利的同时，也带来了一些信息安全的问题。为了达到某种目的，一些非法软件提供者经常会在网络中散布一些恶意软件，当用户在浏览一些恶意网站或下载某些信息之后，这些恶意软件就会运行在用户的终端中，轻则会对用户造成骚扰，重则可能会对用户信息如账户密码等进行泄露，严重威胁用户的人身财产安全，为此，如何对恶意软件进行检测，是极为重要的一个问题。</p>
    <p>[0003]	在现有技术中，由于移动终端的中央处理器(CPU, Central Processing Unit)处理能力有限，因此，一般都采用较为简单的检测方式，比如只是简单地针对软件应用的特征码进行一些二进制的扫描，以确定是否为恶意软件。</p>
    <p>[0004]	在对现有技术的研究和实践过程中，本发明的发明人发现，由于恶意软件通常会将敏感字段进行加密，因此现有的这种检测方式往往无法准确地检测出来，容易失效。</p>
    <p>发明内容</p>
    <p>[0005]	本发明实施例提供一种移动终端上的恶意软件检测方法、装置和系统，可以准确地检测出恶意软件。</p>
    <p>[0006]	一种移动终端上的恶意软件检测方法，包括:</p>
    <p>[0007]	获取需要检测的软件的安装包；</p>
    <p>[0008]	对所述安装包进行解压，得到解压后安装包；</p>
    <p>[0009]	对所述解压后安装包进行检测，得到第一检测结果；</p>
    <p>[0010]	发送所述解压后安装包给云端系统；</p>
    <p>[0011]	接收云端系统返回的第二检测结果，所述第二检测结果为云端系统对所述解压后安装包进行恶意软件检测所得到的结果；</p>
    <p>[0012]	若所述第一检测结果和/或第二检测结果指示所述解压后安装包中存在异常，则确定所述需要检测的软件为恶意软件。</p>
    <p>[0013]	一种移动终端上的恶意软件检测装置，包括获取单元、解压单元、检测单元、发送单元、接收单元和确定单元；</p>
    <p>[0014]	获取单元，用于获取需要检测的软件的安装包；</p>
    <p>[0015]	解压单元，用于对所述安装包进行解压，得到解压后安装包；</p>
    <p>[0016]	检测单元，用于对所述解压后安装包进行检测，得到第一检测结果；</p>
    <p>[0017]	发送单元，用于发送所述解压后安装包给云端系统；[0018]	接收单元，用于接收云端系统返回的第二检测结果，所述第二检测结果为云端系统对所述解压后安装包进行恶意软件检测所得到的结果；</p>
    <p>[0019]	确定单元，用于在确定所述第一检测结果和/或第二检测结果指示所述解压后安装包中存在异常时，确定所述需要检测的软件为恶意软件。</p>
    <p>[0020]	一种通信系统，包括本发明实施例提供的任一种移动终端上的恶意软件检测装置。</p>
    <p>[0021 ] 本发明实施例采用获取需要检测的软件的安装包，对该安装包进行解压，得到解压后安装包，然后一方面对该解压后安装包进行检测，得到第一检测结果，另一方面，将该解压后安装包发送给云端系统，并接收云端系统对所述解压后安装包进行恶意软件检测后返回的第二检测结果，如果第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则确定该需要检测的软件为恶意软件。由于该方案不仅可以在本地对恶意软件进行检测，而且还可以在功能强大的云端系统对恶意软件作进一步的深入检测，因此，可以更加精确地检测出恶意软件。</p>
    <p>附图说明</p>
    <p>[0022]	为了更清楚地说明本发明实施例中的技术方案，下面将对实施例描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本发明的一些实施例，对于本领域技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。</p>
    <p>[0023]	图1是本发明实施例提供移动终端上的恶意软件检测方法的流程图；</p>
    <p>[0024]	图2a是本发明实施例提供移动终端上的恶意软件检测方法的场景示意图；</p>
    <p>[0025]	图2b是本发明实施例中端系统和云端系统执行操作的示意图；</p>
    <p>[0026]	图2c是本发明实施例提供移动终端上的恶意软件检测方法的另一流程图；</p>
    <p>[0027]图3是本发明实施例提供移动终端上的恶意软件检测装置的结构示意图；</p>
    <p>[0028]	图4是本发明实施例提供的终端的结构示意图。</p>
    <p>具体实施方式</p>
    <p>[0029]	下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域技术人员在没有作出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。</p>
    <p>[0030]	本发明实施例提供一种移动终端上的恶意软件检测方法、装置和系统，该一种移动终端上的恶意软件检测方法、装置和系统可以适用于安卓(Android)系统。以下分别进行详细说明。</p>
    <p>[0031]	实施例一、</p>
    <p>[0032]	本发明实施例将从移动终端上的恶意软件检测装置的角度进行描述，该移动终端上的恶意软件检测装置可以集成在移动终端中，该移动终端可以包括智能手机、平板电脑、电子书阅读器、动态影像专家压缩标准音频层面3 (MP3, Moving Picture Experts GroupAudio Layer III)播放器、动态影像专家压缩标准音频层面4 (MP4, Moving PictureExperts Group Audio Layer IV)播放器、膝上型便携计算机和台式计算机等等。</p>
    <p>[0033]	一种移动终端上的恶意软件检测方法，包括:获取需要检测的软件的安装包；对该安装包进行解压，得到解压后安装包；对该解压后安装包进行检测，得到第一检测结果；发送该解压后安装包给云端系统；接收云端系统返回的第二检测结果，其中，该第二检测结果为云端系统对所述解压后安装包进行恶意软件检测所得到的结果；若该第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则确定该需要检测的软件为恶意软件。</p>
    <p>[0034]	如图1所示，具体流程可以如下:</p>
    <p>[0035]	101、获取需要检测的软件的安装包，比如该软件的安装包具体可以为安卓系统的软件安装包(APK, Android Package)。</p>
    <p>[0036]	102、对步骤101中获取到的软件的安装包进行解压，得到解压后安装包；例如，以该软件安装包具体为APK为例，则该步骤具体可以如下:</p>
    <p>[0037]	对获取到的APK进行解压，得到解压后APK。</p>
    <p>[0038]	103、对步骤102中得到的解压后安装包进行检测，得到检测结果，为了描述方便，在本发明实施例中，将该描述结果称为第一检测结果；例如，具体可以如下:</p>
    <p>[0039]	(I)对该解压后安装包(比如解压后APK)进行启发式扫描，得到扫描结果，为了描述方便，在本发明实施例中，将该扫描结果称为第一扫描结果；</p>
    <p>[0040]	例如，可以分别对该解压后安装包(比如解压后APK)的安装根目录、资源文件和基础依赖库进行扫描，得到第一扫描结果；比如，具体可以如下:</p>
    <p>[0041]	A、对该解压后安装包中的安装根目录进行扫描，若该安装根目录中不存在预置常规文件，在第一扫描结果中指示该解压后安装包中存在异常；或者，如果该安装根目录中存在异常文件且该异常文件是可执行文件(protable)，比如不是可执行连接格式(ELF，Executable and Linkable Format)格式文件或壳(Shell)文件,则也在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0042]	其中，该预置常规文件可以根据实际应用的需求进行设置，比如，该预置常规文件可以包括值(assets )文件、res文件、布局(layout)文件、dex文件和可扩展标记语言(xml,Extensible Markup Language)文件等。</p>
    <p>[0043]	B、对该解压后安装包中的资源文件进行扫描，若存在除预置文件类型之外的其他文件，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0044]	其中，该预置文件类型可以根据实际应用的需求进行设置，比如，资源文件可以包括xml文件、png文件(一种图像文件存储格式)和mp3文件等多媒体格式文件，则如果出现其他类型的文件，就可以在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0045]	C、对该解压后安装包中的基础依赖库，比如Iib文件夹进行扫描，若存在除预置文件类型之外的其他文件或文件格式不符合预置规范，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0046]	也就是说，只要存在上述任一种或若干种情况，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0047]	其中，该预置文件类型和预置规范可以根据实际应用的需求进行设置，比如，以该基础依赖库具体为Iib文件夹为例，一般的，Iib文件夹至可能存在3个文件目录:armeab1、armeabiv7和x86,且文件格式必须符合ELF规范,则除此情况之外，如果存在其他类型的文件，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0048]	(2)对该解压后安装包(比如解压后APK)中的特征码进行二进制扫描，得到扫描结果，为了描述方便，在本发明实施例中，将该扫描结果称为第二扫描结果；</p>
    <p>[0049]	例如，具体可以对该解压后安装包中的特征码，比如电话号码和C&amp;C网址等进行二进制扫描，若存在于预置病毒样本相似的特征码，则在第二扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0050]	(3)对该解压后安装包(比如解压后APK)进行权限文件扫描，得到扫描结果，为了描述方便，在本发明实施例中，将该扫描结果称为第三扫描结果；</p>
    <p>[0051]	例如，可以对该解压后安装包进行权限文件扫描，若存在危险的权限组合，则在第三扫描结果中指示所述解压后安装包中存在异常。</p>
    <p>[0052]	其中，权限文件具体可以为AndroidManifest.xml (安卓系统的一个全局配置文件)文件进行扫描，AndroidManifest.xml文件可以包括很多信息，比如包名、活动(Activity)和服务(Service)名、监听的广播类型、接收器名和所需要的权限等信息。</p>
    <p>[0053]	(4)若该第一扫描结果、第二扫描结果和/或第三扫描结果指示该解压后安装包中存在异常，则在第一检测结果中指示该解压后安装包中存在异常。</p>
    <p>[0054]	即若该第一扫描结果、第二扫描结果和第三扫描结果有任意一个或多个指该解压后安装包中存在异常，则在第一检测结果中指示该解压后安装包中存在异常。</p>
    <p>[0055]	104、发送该解压后安装包，比如解压后APK给云端系统，以便云端系统对该解压后安装包进行恶意软件检测，其中，为了描述方便，将云端系统进行恶意软件检测所得到的结果称为第二检测结果。</p>
    <p>[0056]	其中，云端系统对该解压后安装包进行恶意软件检测的方法具体可以如下:</p>
    <p>[0057]	(I)云端系统对该解压后安装包中的权限文件进行分析，得到分析结果。</p>
    <p>[0058]	例如，若云端系统确定该解压后安装包中的权限文件中的数据包名称与预置数据库中的病毒包名称相同或相似，则可以在分析结果中指示该解压后安装包中存在异常；</p>
    <p>[0059]	若云端系统确定该解压后安装包请求的权限组合数量高于该需要检测的软件所属类型的权限组合数量时，则可以在分析结果中指示所述解压后安装包中存在异常；</p>
    <p>[0060]	若云端系统确定该解压后安装包中的权限文件中的签名和与预置数据库中的病毒的签名相同或相似时，则可以在分析结果中指示所述解压后安装包中存在异常。</p>
    <p>[0061]	(2)云端系统将该解压后安装包中的可执行文件中的代码与预置的样本文件中的代码进行相似性比较，得到比较结果，为了描述方便，在本发明实施例中，将该比较结果称为第一比较结果。</p>
    <p>[0062]	例如，具体可以是在打开逆向classes, dex文件后，聚类排除相似代码，并比较样本和目标代码之间的相似度，该相似度具体可以使用0-1之间的值来表示。</p>
    <p>[0063]	(3)云端系统将该解压后安装包中的可执行文件的应用程序接口(API，Application Programming Interface)调用树与预置的样本文件中的API调用树进行相似性比较，得到比较结果，为了描述方便，在本发明实施例中，将该比较结果称为第二比较结果O</p>
    <p>[0064]	(4)若该分析结果、第一比较结果和/或第二比较结果指示该解压后安装包中存在异常，则云端系统在第二检测结果中指示该解压后安装包中存在异常。[0065]	S卩，如果该分析结果、第一比较结果和第二比较结果中有任意一项或多项指示该解压后安装包中存在异常，则在第二检测结果中指示所述解压后安装包中存在异常。</p>
    <p>[0066]	此外，还可以重新编译安卓2.2 (Android2.2)源代码中的Dalvik虚拟机(一种Java虚拟机)，使用钩子(HOOK)技术将一些敏感框架层API的参数用日志(log)记录下来，并使用重新编译好的Dalvik虚拟机运行目标解压后安装包(APK)来获取有关信息，以确定解压后安装包中是否存在异常。</p>
    <p>[0067]	105、接收云端系统返回的第二检测结果，其中，该第二检测结果为云端系统对该解压后安装包进行恶意软件检测所得到的结果，具体可参见步骤104中的说明。</p>
    <p>[0068]	106、若该第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则确定该需要检测的软件为恶意软件。</p>
    <p>[0069]	否则，如果第一检测结果和第二检测结果均没有指示该解压后安装包中存在异常，则可以确定该需要检测的软件不是恶意软件。</p>
    <p>[0070]	由上可知，本实施例采用获取需要检测的软件的安装包，对该安装包进行解压，得到解压后安装包，然后一方面对该解压后安装包进行检测，得到第一检测结果，另一方面，将该解压后安装包发送给云端系统，并接收云端系统对所述解压后安装包进行恶意软件检测后返回的第二检测结果，如果第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则确定该需要检测的软件为恶意软件。由于该方案不仅可以在本地对恶意软件进行检测，而且还可以在功能强大的云端系统对恶意软件作进一步的深入检测，因此，可以更加精确地检测出恶意软件。</p>
    <p>[0071]	实施例二、</p>
    <p>[0072]	根据实施例一所描述的方法，以下将举例作进一步详细说明。</p>
    <p>[0073]	在本实施例中，主要以移动终端上的恶意软件检测装置具体集成在移动终端上，且该移动终端的操作系统为安卓系统，且软件安装包具体为APK为例进行说明。</p>
    <p>[0074]	参见图2a，移动终端可以通过基站将解压后安装包传送给云端系统，而云端系统可以包括多个服务器，这些服务器通过以太网进行联系，并协同处理这些解压后安装包，也就是说，对恶意软件的检测主要分为两部分，一部分在移动终端上执行，即在“端”系统执行，而另一部分则在云端系统执行；其中，如图2b所示，“端”系统主要执行解压、启发式扫描、二进制扫描和权限文件扫描等操作，而云端系统主要执行对权限文件如xml文件的二次分析、可执行文件中代码的相似性比较、dex文件分析和动态执行等操作，以下将进行详细说明。</p>
    <p>[0075]	如图2c所示，一种移动终端上的恶意软件检测方法，具体流程可以如下:</p>
    <p>[0076]	201、移动终端获取需要检测的APK。</p>
    <p>[0077]	202、移动终端对获取到的APK进行解压，得到解压后APK。</p>
    <p>[0078]	例如，可以按ZIP (&#8212;种压缩格式)格式解压即可，该步骤无需消耗太多的CPU资源，因为APK的安装过程就是解压过程。</p>
    <p>[0079]	203、移动终端对得到的解压后APK进行检测，得到第一检测结果，例如，具体可以如下:</p>
    <p>[0080]	(I)对该解压后APK进行启发式扫描，得到第一扫描结果；</p>
    <p>[0081]	例如，可以分别对该解压后APK的安装根目录、资源文件和基础依赖库进行扫描，得到第一扫描结果；比如，具体可以如下:</p>
    <p>[0082]	A、对该解压后APK中的APK根目录进行扫描，检测APK根目录中是否存在assets文件、res文件、layout文件、dex文件和xml文件等这几个常规文件,若该APK根目录中不存在这些常规文件，则可以报告异常，即在第一扫描结果中指示该解压后安装包中存在异常；或者，如果APK根目录下多出了一些异常文件(即除了这些常规文件之外的文件)，则需要判断这些异常文件是否为可执行文件(portable)，比如是否是ELF格式文件或者是Shell文件，如果是执行文件也要报告异常即在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0083]	B、对该解压后APK中的资源文件进行扫描，若存在除预置文件类型之外的其他文件，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0084]	其中，该预置文件类型可以根据实际应用的需求进行设置，比如，资源文件可以包括xml文件、png文件和mp3文件等多媒体格式文件，则如果出现其他类型的文件，就可以在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0085]	C、对该解压后APK中的基础依赖库，比如Iib文件夹进行扫描，若存在除预置文件类型之外的其他文件或文件格式不符合预置规范，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0086]	也就是说，只要存在上述任一种或若干种情况，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0087]	其中，该预置文件类型和预置规范可以根据实际应用的需求进行设置，比如，以该基础依赖库具体为Iib文件夹为例，一般的，Iib文件夹至可能存在3个文件目录:armeab1、armeabiv7和x86,且文件格式必须符合ELF规范,则除此情况之外，如果存在其他类型的文件，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0088]	(2)对该解压后APK中的特征码进行二进制扫描，得到第二扫描结果；</p>
    <p>[0089]	例如，具体可以对该解压后安装包中的特征码，比如电话号码和C&amp;C网址等进行二进制扫描，若存在于预置病毒样本相似的特征码，则在第二扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0090]	(3)对该解压后APK进行权限文件扫描，得到第三扫描结果；</p>
    <p>[0091]例如，主要对	AndroidManifest.xml (简称 xml 文件)进行扫描,AndroidManifest.xml可以包括很多信息，比如包名,Activity和Service名、监听的广播类型、接收器名和所需要的权限等信息。在这里移动终端侧，此时主要扫描AndroidManifest.xml文件中是否存在危险的权限组合，比如通过病毒样本学习可以发现一些病毒总是需要监控短信和网络状态，所以此时对AndroidManifest.xml文件的分析主要是检测短信和网络权限的组合使用情况，等等。如果检测到存在危险的权限组合，则在第三扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0092]	(4)若该第一扫描结果、第二扫描结果和/或第三扫描结果指示该解压后安装包中存在异常，则在第一检测结果中指示该解压后APK中存在异常。</p>
    <p>[0093]	即若该第一扫描结果、第二扫描结果和第三扫描结果有任意一个或多个指该解压后APK中存在异常，则在第一检测结果中指示该解压后APK中存在异常。</p>
    <p>[0094]	204、移动终端发送该解压后APK给云端系统。[0095]	205、云端系统在接收到该解压后APK后，对该解压后APK进行恶意软件检测，得到第二检测结果，例如，具体可以如下:</p>
    <p>[0096]	(I)云端系统对该解压后APK中的权限文件，比如AndroidManifest.xml文件进行二次分析(区别于移动终端对AndroidManifest.xml文件的分析，因此可以称该分析为二次分析)，得到分析结果。例如具体可以如下:</p>
    <p>[0097]	A、确定该解压后APK中的权限文件中的数据包名称与预置数据库中的病毒包名称是否相同或相似，若是相同或相似，则可以在分析结果中指示该解压后安装包中存在异常；</p>
    <p>[0098]	B、确定该解压后APK请求的权限组合数量高于该需要检测的软件所属类型的权限组合数量时，则可以在分析结果中指示所述解压后安装包中存在异常。比如，通过智慧学习，移动终端可以确定某一类应用所需的最低权限组合，假设目标应用属于某一类的应用，却要求的权限更多，则可以在分析结果中指示该解压后安装包中存在异常。</p>
    <p>[0099]	C、确定该解压后APK中的权限文件中的签名和与预置数据库中的病毒的签名相同或相似时，则可以在分析结果中指示所述解压后安装包中存在异常。</p>
    <p>[0100]	(2)云端系统将该解压后APK中的可执行文件中的代码与预置的样本文件中的代码进行相似性比较，得到第一比较结果。</p>
    <p>[0101]	例如，具体可以是在打开逆向classes, dex文件后，聚类排除相似代码，并比较样本和目标代码之间的相似度，该相似度具体可以使用0-1之间的值来表示。</p>
    <p>[0102]	(3)云端系统通过逆向，生成该解压后APK中的可执行文件的API调用树，将该解压后APK中的可执行文件的API调用树与预置的样本文件中的API调用树进行相似性比较，得到第二比较结果。</p>
    <p>[0103]	(4)若该分析结果、第一比较结果和/或第二比较结果指示该解压后APK中存在异常，则云端系统在第二检测结果中指示该解压后安装包中存在异常。</p>
    <p>[0104]	S卩，如果该分析结果、第一比较结果和第二比较结果中有任意一项或多项指示该解压后APK中存在异常，则在第二检测结果中指示所述解压后APK中存在异常。</p>
    <p>[0105]	此外，还可以重新编译Android2.2源代码中的Dalvik虚拟机，使用HOOK技术将一些敏感框架层API的参数用日志记录下来，并使用重新编译好的Dalvik虚拟机运行目标解压后APK来获取有关信息，以确定解压后安装包中是否存在异常。</p>
    <p>[0106]	206、移动终端接收云端系统返回的第二检测结果。</p>
    <p>[0107]	207、若该第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则移动终端确定该需要检测的软件为恶意软件。</p>
    <p>[0108]	否则，如果第一检测结果和第二检测结果均没有指示该解压后安装包中存在异常，则可以确定该需要检测的软件不是恶意软件。</p>
    <p>[0109]	由上可知，本实施例采用获取需要检测的APK，对该APK进行解压，得到解压后APK,然后一方面对该解压后APK进行检测，得到第一检测结果，另一方面，将该解压后APK发送给云端系统，并接收云端系统对所述解压后APK进行恶意软件检测后返回的第二检测结果，如果第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则确定该需要检测的软件为恶意软件。由于该方案不仅可以在本地对恶意软件进行检测，而且还可以在功能强大的云端系统对恶意软件作进一步的深入检测，因此，可以更加精确地检测出恶意软件。而且，由于可以将需要耗费较多CPU资源的操作放在云端系统中执行，而移动终端只需执行一些占用CPU资源较少的操作，因此可以提高移动终端的执行效率和性能，改善用户体验。</p>
    <p>[0110]	实施例三、</p>
    <p>[0111]	为了更好地实施以上方案，本发明实施例还提供一种移动终端上的恶意软件检测装置，如图3所示，该移动终端上的恶意软件检测装置可以包括获取单元301、解压单元302、检测单元303、发送单元304、接收单元305和确定单元306。</p>
    <p>[0112]	获取单元301，用于获取需要检测的软件的安装包；比如该软件的安装包具体可以为APK。</p>
    <p>[0113]	解压单元302，用于对获取单元301获取到的安装包进行解压，得到解压后安装包；</p>
    <p>[0114]	检测单元303，用于对解压单元302得到的解压后安装包进行检测，得到第一检测结果;</p>
    <p>[0115]	发送单元304，用于发送解压单元302得到的解压后安装包给云端系统；</p>
    <p>[0116]	接收单元305，用于接收云端系统返回的第二检测结果，其中，该第二检测结果为云端系统对该解压后安装包进行恶意软件检测所得到的结果，具体可参见前面的方法实施例，在此不再赘述。</p>
    <p>[0117]	确定单元306，用于在确定第一检测结果和/或第二检测结果指示所述解压后安装包中存在异常时，确定该需要检测的软件为恶意软件。</p>
    <p>[0118]	其中，检测单元303可以包括第一扫描子单元、第二扫描子单元、第三扫描子单元和分析子单兀；</p>
    <p>[0119]	(I)第一扫描子单元；</p>
    <p>[0120]	第一扫描子单元，可以用于对该解压后安装包进行启发式扫描，得到第一扫描结果;</p>
    <p>[0121]	例如，该第一扫描子单元，具体可以用于分别对该解压后安装包的安装根目录、资源文件和基础依赖库进行扫描，得到第一扫描结果。比如，具体可以执行如下操作:</p>
    <p>[0122]	A、对该解压后安装包中的安装根目录进行扫描，若该安装根目录中不存在预置常规文件，在第一扫描结果中指示该解压后安装包中存在异常；或者，如果该安装根目录中存在异常文件且该异常文件是可执行文件(protable)，比如不是ELF格式文件或Shell文件，则也在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0123]	其中，该预置常规文件可以根据实际应用的需求进行设置，比如，该预置常规文件可以包括assets文件、res文件、layout文件、dex文件和xml文件等。</p>
    <p>[0124]	B、对该解压后安装包中的资源文件进行扫描，若存在除预置文件类型之外的其他文件，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0125]	其中，该预置文件类型可以根据实际应用的需求进行设置，比如，资源文件可以包括xml文件、png文件和mp3文件等多媒体格式文件，则如果出现其他类型的文件，就可以在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0126]	C、对该解压后安装包中的基础依赖库，比如Iib文件夹进行扫描，若存在除预置文件类型之外的其他文件或文件格式不符合预置规范，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0127]	也就是说，只要存在上述任一种或若干种情况，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0128]	其中，该预置文件类型和预置规范可以根据实际应用的需求进行设置，比如，以该基础依赖库具体为Iib文件夹为例，一般的，Iib文件夹至可能存在3个文件目录:armeab1、armeabiv7和x86,且文件格式必须符合ELF规范,则除此情况之外，如果存在其他类型的文件，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0129]	(2)第二扫描子单元；</p>
    <p>[0130]	第二扫描子单元，可以用于对该解压后安装包中的特征码进行二进制扫描，得到第二扫描结果；</p>
    <p>[0131]	例如，第二扫描单元，具体可以用于对该解压后安装包中的特征码进行二进制扫描，若存在于预置病毒样本相似的特征码，则在第二扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0132]	(3)第二扫描子单元；</p>
    <p>[0133]	第三扫描子单元，可以用于对该解压后安装包进行权限文件扫描，得到第三扫描结果;</p>
    <p>[0134]	例如，第三扫描单元，具体可以用于对该解压后安装包进行权限文件扫描，若存在危险的权限组合，则在第三扫描结果中指示所述解压后安装包中存在异常。</p>
    <p>[0135]	其中，权限文件具体可以为AndroidManifest.xml文件进行扫描，AndroidManifest.xml文件可以包括很多信息，比如包名、Activity和Service名、监听的广播类型、接收器名和所需要的权限等信息。</p>
    <p>[0136]	(4)分析子单元；</p>
    <p>[0137]	分析子单元，可以用于在该第一扫描结果、第二扫描结果和/或第三扫描结果指示所述解压后安装包中存在异常时，在第一检测结果中指示所述解压后安装包中存在异</p>
    <p>堂</p>
    <p>巾O</p>
    <p>[0138]	该移动终端上的恶意软件检测装置可以集成在移动终端中，该移动终端可以包括智能手机、平板电脑、电子书阅读器、MP3播放器、MP4播放器、膝上型便携计算机和台式计算机等等。</p>
    <p>[0139]	具体实现时，以上各个单元可以作为独立的实体来实现，也可以进行任意组合，作为同一或若干个实体来实现，以上各个单位的具体实施可参见前面的方法实施例，在此不再赘述。</p>
    <p>[0140]	由上可知，本实施例的移动终端上的恶意软件检测装置的获取单元301可以获取需要检测的软件安装包，然后由解压单元302对该安装包进行解压，得到解压后安装包，然后一方面由检测单元303对该解压后安装包进行检测，得到第一检测结果，另一方面，由发送单元304将该解压后安装包发送给云端系统，并由接收单元305接收云端系统对所述解压后安装包进行恶意软件检测后返回的第二检测结果，如果第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则确定单元306可以确定该需要检测的软件为恶意软件。由于该方案不仅可以在本地对恶意软件进行检测，而且还可以在功能强大的云端系统对恶意软件作进一步的深入检测，因此，可以更加精确地检测出恶意软件。而且，由于可以将需要耗费较多CPU资源的操作放在云端系统中执行，而移动终端只需执行一些占用CPU资源较少的操作，因此可以提高移动终端的执行效率和性能，改善用户体验。</p>
    <p>[0141]	实施例四、</p>
    <p>[0142]	相应的，本发明实施例还提供一种通信系统，包括本发明实施例提供的任一种移动终端上的恶意软件检测装置，其中，该移动终端上的恶意软件检测装置具体可参见实施例三，在此不再赘述。</p>
    <p>[0143]以该移动终端上的恶意软件检测装置具体集成在移动终端上为例，以下将进行简略说明。</p>
    <p>[0144]	移动终端，用于获取需要检测的软件的安装包；对该安装包进行解压，得到解压后安装包；对该解压后安装包进行检测，得到第一检测结果；发送该解压后安装包给云端系统；接收云端系统返回的第二检测结果；若该第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则确定该需要检测的软件为恶意软件。</p>
    <p>[0145]	其中，移动终端对该解压后安装包进行检测的方法具体可参见前面的方法实施例，在此不再赘述。</p>
    <p>[0146]	此外，该通信系统还可以包括云端服务器，如下:</p>
    <p>[0147]	该云端服务器，用于接收移动终端发送的解压后安装包，对该解压后安装包进行恶意软件检测，得到第二检测结果，并将该第二检测结果发送给移动终端。</p>
    <p>[0148]	其中，云端服务器(即前面实施例所说的云端系统)对该解压后安装包进行检测的方法具体可参见前面的方法实施例，在此不再赘述。</p>
    <p>[0149]由于该通信系统包括本发明实施例提供的任一种移动终端上的恶意软件检测装置，因此，同样可以实现与本发明实施例提供的任一种移动终端上的恶意软件检测装置所能实现的有益效果，在此不再赘述。</p>
    <p>[0150]	实施例五、</p>
    <p>[0151]	相应的，本发明实施例还提供一种移动终端，如图4所示，该移动终端可以包括射频(RF, Radio Frequency)电路401、包括有一个或一个以上计算机可读存储介质的存储器402、输入单元403、显示单元404、传感器405、音频电路406、无线保真(WiFi, WirelessFidelity)模块407、包括有一个或者一个以上处理核心的处理器408、以及电源409等部件。本领域技术人员可以理解，图4中示出的移动终端结构并不构成对移动终端的限定，可以包括比图示更多或更少的部件，或者组合某些部件，或者不同的部件布置。其中:</p>
    <p>[0152]	RF电路401可用于收发信息或通话过程中，信号的接收和发送，特别地，将基站的下行信息接收后，交由一个或者一个以上处理器408处理；另外，将涉及上行的数据发送给基站。通常，RF电路401包括但不限于天线、至少一个放大器、调谐器、一个或多个振荡器、用户身份模块(SIM, Subscriber Identity Module)卡、收发信机、&#31281;合器、低噪声放大器(LNA, Low Noise Amplifier)、双工器等。此外，RF电路401还可以通过无线通信与网络和其他设备通信。所述无线通信可以使用任一通信标准或协议，包括但不限于全球移动通讯系统(GSM, Global System of Mobile communication)、通用分组无线服务(GPRS,General Packet Radio Service)、码分多址(CDMA, Code Division Multiple Access)、宽带码分多址(WCDMA, Wideband Code Division Multiple Access)、长期演进(LTE, LongTerm Evolution)、电子邮件、短消息服务(SMS, Short Messaging Service)等。[0153]	存储器402可用于存储软件程序以及模块，处理器408通过运行存储在存储器402的软件程序以及模块，从而执行各种功能应用以及数据处理。存储器402可主要包括存储程序区和存储数据区，其中，存储程序区可存储操作系统、至少一个功能所需的应用程序(比如声音播放功能、图像播放功能等)等；存储数据区可存储根据移动终端的使用所创建的数据(比如音频数据、电话本等)等。此外，存储器402可以包括高速随机存取存储器，还可以包括非易失性存储器，例如至少一个磁盘存储器件、闪存器件、或其他易失性固态存储器件。相应地，存储器402还可以包括存储器控制器，以提供处理器408和输入单元403对存储器402的访问。</p>
    <p>[0154]	输入单元403可用于接收输入的数字或字符信息，以及产生与用户设置以及功能控制有关的键盘、鼠标、操作杆、光学或者轨迹球信号输入。具体地，在一个具体的实施例中，输入单元403可包括触敏表面以及其他输入设备。触敏表面,也称为触摸显示屏或者触控板，可收集用户在其上或附近的触摸操作(比如用户使用手指、触笔等任何适合的物体或附件在触敏表面上或在触敏表面附近的操作)，并根据预先设定的程式驱动相应的连接装置。可选的，触敏表面可包括触摸检测装置和触摸控制器两个部分。其中，触摸检测装置检测用户的触摸方位，并检测触摸操作带来的信号，将信号传送给触摸控制器；触摸控制器从触摸检测装置上接收触摸信息，并将它转换成触点坐标，再送给处理器408，并能接收处理器408发来的命令并加以执行。此外，可以采用电阻式、电容式、红外线以及表面声波等多种类型实现触敏表面。除了触敏表面，输入单元403还可以包括其他输入设备。具体地，其他输入设备可以包括但不限于物理键盘、功能键(比如音量控制按键、开关按键等)、轨迹球、鼠标、操作杆等中的一种或多种。</p>
    <p>[0155]	显示单元404可用于显示由用户输入的信息或提供给用户的信息以及移动终端的各种图形用户接口，这些图形用户接口可以由图形、文本、图标、视频和其任意组合来构成。显示单元404可包括显示面板,可选的,可以采用液晶显示器(IXD, Liquid CrystalDisplay)、有机发光二极管(OLED, Organic Light-Emitting Diode)等形式来配置显示面板。进一步的，触敏表面可覆盖显示面板，当触敏表面检测到在其上或附近的触摸操作后，传送给处理器408以确定触摸事件的类型，随后处理器408根据触摸事件的类型在显示面板上提供相应的视觉输出。虽然在图4中，触敏表面与显示面板是作为两个独立的部件来实现输入和输入功能，但是在某些实施例中，可以将触敏表面与显示面板集成而实现输入和输出功能。</p>
    <p>[0156]	移动终端还可包括至少一种传感器405，比如光传感器、运动传感器以及其他传感器。具体地，光传感器可包括环境光传感器及接近传感器，其中，环境光传感器可根据环境光线的明暗来调节显示面板的亮度，接近传感器可在移动终端移动到耳边时，关闭显示面板和/或背光。作为运动传感器的一种，重力加速度传感器可检测各个方向上(一般为三轴)加速度的大小，静止时可检测出重力的大小及方向，可用于识别手机姿态的应用(比如横竖屏切换、相关游戏、磁力计姿态校准)、振动识别相关功能(比如计步器、敲击)等；至于移动终端还可配置的陀螺仪、气压计、湿度计、温度计、红外线传感器等其他传感器，在此不再赘述。</p>
    <p>[0157]	音频电路406、扬声器，传声器可提供用户与移动终端之间的音频接口。音频电路406可将接收到的音频数据转换后的电信号,传输到扬声器，由扬声器转换为声音信号输出；另一方面，传声器将收集的声音信号转换为电信号，由音频电路406接收后转换为音频数据，再将音频数据输出处理器408处理后，经RF电路401以发送给比如另一移动终端，或者将音频数据输出至存储器402以便进一步处理。音频电路406还可能包括耳塞插孔，以提供外设耳机与移动终端的通信。</p>
    <p>[0158]	WiFi属于短距离无线传输技术，移动终端通过WiFi模块407可以帮助用户收发电子邮件、浏览网页和访问流式媒体等，它为用户提供了无线的宽带互联网访问。虽然图4示出了 WiFi模块407，但是可以理解的是，其并不属于移动终端的必须构成，完全可以根据需要在不改变发明的本质的范围内而省略。</p>
    <p>[0159]	处理器408是移动终端的控制中心，利用各种接口和线路连接整个手机的各个部分，通过运行或执行存储在存储器402内的软件程序和/或模块，以及调用存储在存储器402内的数据，执行移动终端的各种功能和处理数据，从而对手机进行整体监控。可选的，处理器408可包括一个或多个处理核心；优选的，处理器408可集成应用处理器和调制解调处理器，其中，应用处理器主要处理操作系统、用户界面和应用程序等，调制解调处理器主要处理无线通信。可以理解的是，上述调制解调处理器也可以不集成到处理器408中。</p>
    <p>[0160]	移动终端还包括给各个部件供电的电源409 (比如电池)，优选的，电源可以通过电源管理系统与处理器408逻辑相连，从而通过电源管理系统实现管理充电、放电、以及功耗管理等功能。电源409还可以包括一个或一个以上的直流或交流电源、再充电系统、电源故障检测电路、电源转换器或者逆变器、电源状态指示器等任意组件。</p>
    <p>[0161]	尽管未示出，移动终端还可以包括摄像头、蓝牙模块等，在此不再赘述。具体在本实施例中，移动终端中的处理器408会按照如下的指令，将一个或一个以上的应用程序的进程对应的可执行文件加载到存储器402中，并由处理器408来运行存储在存储器402中的应用程序，从而实现各种功能:</p>
    <p>[0162]	尽管未示出，移动终端还可以包括摄像头、蓝牙模块等，在此不再赘述。具体在本实施例中，移动终端的显示单元是触摸屏显示器，移动终端还包括有存储器，以及一个或者一个以上的程序，其中一个或者一个以上程序存储于存储器中，且经配置以由一个或者一个以上处理器执行述一个或者一个以上程序包含用于进行以下操作的指令:</p>
    <p>[0163]	获取需要检测的软件的安装包；对该安装包进行解压，得到解压后安装包；对该解压后安装包进行检测，得到第一检测结果；发送该解压后安装包给云端系统；接收云端系统返回的第二检测结果，其中，该第二检测结果为云端系统对所述解压后安装包进行恶意软件检测所得到的结果；若该第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则确定该需要检测的软件为恶意软件。</p>
    <p>[0164]	其中，步骤“对解压后安装包进行检测，得到第一检测结果”具体可以如下:</p>
    <p>[0165]	(I)对该解压后安装包进行启发式扫描，得到第一扫描结果；</p>
    <p>[0166]	例如，可以分别对该解压后安装包的安装根目录、资源文件和基础依赖库进行扫描，得到第一扫描结果；比如，具体可以如下:</p>
    <p>[0167]	A、对该解压后安装包中的安装根目录进行扫描，若该安装根目录中不存在预置常规文件，在第一扫描结果中指示该解压后安装包中存在异常；或者，如果该安装根目录中存在异常文件且该异常文件是可执行文件(protable)，比如不是ELF格式文件或Shell文件，则也在第一扫描结果中指示该解压后安装包中存在异常。[0168]	其中，该预置常规文件可以根据实际应用的需求进行设置，比如，该预置常规文件可以包括assets文件、res文件、layout文件、dex文件和xml文件等。</p>
    <p>[0169]	B、对该解压后安装包中的资源文件进行扫描，若存在除预置文件类型之外的其他文件，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0170]	其中，该预置文件类型可以根据实际应用的需求进行设置，比如，资源文件可以包括xml文件、png文件(一种图像文件存储格式)和mp3文件等多媒体格式文件，则如果出现其他类型的文件，就可以在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0171]	C、对该解压后安装包中的基础依赖库，比如Iib文件夹进行扫描，若存在除预置文件类型之外的其他文件或文件格式不符合预置规范，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0172]	其中，该预置文件类型和预置规范可以根据实际应用的需求进行设置，比如，以该基础依赖库具体为Iib文件夹为例，一般的，Iib文件夹至可能存在3个文件目录:armeab1、armeabiv7和x86,且文件格式必须符合ELF规范,则除此情况之外，如果存在其他类型的文件，则在第一扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0173]	(2)对该解压后安装包中的特征码进行二进制扫描，得到第二扫描结果；</p>
    <p>[0174]	例如，具体可以对该解压后安装包中的特征码，比如电话号码和C&amp;C网址等进行二进制扫描，若存在于预置病毒样本相似的特征码，则在第二扫描结果中指示该解压后安装包中存在异常。</p>
    <p>[0175]	(3)对该解压后安装包进行权限文件扫描，得到第三扫描结果；</p>
    <p>[0176]	例如，可以对该解压后安装包进行权限文件扫描，若存在危险的权限组合，则在第三扫描结果中指示所述解压后安装包中存在异常。</p>
    <p>[0177]	其中，权限文件具体可以为AndroidManifest.xml文件进行扫描，AndroidManifest.xml文件可以包括很多信息，比如包名、Activity和Service名、监听的广播类型、接收器名和所需要的权限等信息。</p>
    <p>[0178]	(4)若该第一扫描结果、第二扫描结果和/或第三扫描结果指示该解压后安装包中存在异常，则在第一检测结果中指示该解压后安装包中存在异常。</p>
    <p>[0179]	其中，云端系统对该解压后安装包进行恶意软件检测的步骤具体可以如下:</p>
    <p>[0180]	(I)云端系统对该解压后安装包中的权限文件进行分析，得到分析结果。</p>
    <p>[0181]	例如，若云端系统确定该解压后安装包中的权限文件中的数据包名称与预置数据库中的病毒包名称相同或相似，则可以在分析结果中指示该解压后安装包中存在异常；</p>
    <p>[0182]	若云端系统确定该解压后安装包请求的权限组合数量高于该需要检测的软件所属类型的权限组合数量时，则可以在分析结果中指示所述解压后安装包中存在异常；</p>
    <p>[0183]	若云端系统确定该解压后安装包中的权限文件中的签名和与预置数据库中的病毒的签名相同或相似时，则可以在分析结果中指示所述解压后安装包中存在异常。</p>
    <p>[0184]	(2)云端系统将该解压后安装包中的可执行文件中的代码与预置的样本文件中的代码进行相似性比较，得到第一比较结果。</p>
    <p>[0185]	例如，具体可以是在打开逆向classes, dex文件后，聚类排除相似代码，并比较样本和目标代码之间的相似度，该相似度具体可以使用0-1之间的值来表示。</p>
    <p>[0186]	(3)云端系统将该解压后安装包中的可执行文件的API调用树与预置的样本文件中的API调用树进行相似性比较，得到比较结果，为了描述方便，在本发明实施例中，将该比较结果称为第二比较结果。</p>
    <p>[0187]	(4)若该分析结果、第一比较结果和/或第二比较结果指示该解压后安装包中存在异常，则云端系统在第二检测结果中指示该解压后安装包中存在异常。</p>
    <p>[0188]	此外，还可以重新编译Android2.2源代码中的Dalvik虚拟机，使用HOOK技术将一些敏感框架层API的参数用日志记录下来，并使用重新编译好的Dalvik虚拟机运行目标解压后APK来获取有关信息，以确定解压后安装包中是否存在异常。</p>
    <p>[0189]	以上各个步骤的具体实施可参见前面的实施例，在此不再赘述。</p>
    <p>[0190]	由上可知，本实施例的移动终端采用获取需要检测的软件的安装包，对该安装包进行解压，得到解压后安装包，然后一方面对该解压后安装包进行检测，得到第一检测结果，另一方面，将该解压后安装包发送给云端系统，并接收云端系统对所述解压后安装包进行恶意软件检测后返回的第二检测结果，如果第一检测结果和/或第二检测结果指示该解压后安装包中存在异常，则确定该需要检测的软件为恶意软件。由于该方案不仅可以在本地对恶意软件进行检测，而且还可以在功能强大的云端系统对恶意软件作进一步的深入检测，因此，可以更加精确地检测出恶意软件。而且，由于可以将需要耗费较多CPU资源的操作放在云端系统中执行，而移动终端只需执行一些占用CPU资源较少的操作，因此可以提高移动终端的执行效率和性能,改善用户体验。</p>
    <p>[0191]	本领域普通技术人员可以理解上述实施例的各种方法中的全部或部分步骤是可以通过程序来指令相关的硬件来完成，该程序可以存储于一计算机可读存储介质中，存储介质可以包括:只读存储器(ROM, Read Only Memory)、随机存取记忆体(RAM, RandomAccess Memory)、磁盘或光盘等。</p>
    <p>[0192]以上对本发明实施例所提供的一种移动终端上的恶意软件检测方法、装置和系统进行了详细介绍，本文中应用了具体个例对本发明的原理及实施方式进行了阐述，以上实施例的说明只是用于帮助理解本发明的方法及其核心思想；同时，对于本领域的技术人员，依据本发明的思想，在具体实施方式及应用范围上均会有改变之处，综上所述，本说明书内容不应理解为对本发明的限制。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102663286A?cl=zh">CN102663286A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年3月21日</td><td class="patent-data-table-td patent-date-value">2012年9月12日</td><td class="patent-data-table-td ">奇智软件（北京）有限公司</td><td class="patent-data-table-td ">一种病毒apk的识别方法及装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102779257A?cl=zh">CN102779257A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年6月28日</td><td class="patent-data-table-td patent-date-value">2012年11月14日</td><td class="patent-data-table-td ">奇智软件（北京）有限公司</td><td class="patent-data-table-td ">一种Android应用程序的安全检测方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20110145920">US20110145920</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value"></td><td class="patent-data-table-td patent-date-value">2011年6月16日</td><td class="patent-data-table-td ">Lookout, Inc</td><td class="patent-data-table-td ">System and method for adverse mobile application identification</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="npl-citations"></a><div class="patent-section-header"><span class="patent-section-title">非专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th colspan="3"class="patent-data-table-th">参考文献</th></tr></thead><tr><td class="patent-data-table-td ">1</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">房鑫鑫: "<a href='http://scholar.google.com/scholar?q="Android%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%8F%8A%E6%A3%80%E6%B5%8B%E7%A0%94%E7%A9%B6"'>Android恶意软件实现及检测研究</a>", 《中国优秀硕士学位论文全文数据库 信息科技辑》, no. 6, 15 June 2013 (2013-06-15)</td></tr><tr><td class="patent-data-table-td ">2</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">胡文君: "<a href='http://scholar.google.com/scholar?q="%E4%B8%80%E7%A7%8D%E9%92%88%E5%AF%B9Android%E5%B9%B3%E5%8F%B0%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E7%9A%84%E6%A3%80%E6%B5%8B%E6%96%B9%E6%B3%95%E5%8F%8A%E7%B3%BB%E7%BB%9F%E5%AE%9E%E7%8E%B0"'>一种针对Android平台恶意代码的检测方法及系统实现</a>", 《西安交通大学学报》, 3 July 2013 (2013-07-03)</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103632097A?cl=zh">CN103632097A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年12月13日</td><td class="patent-data-table-td patent-date-value">2014年3月12日</td><td class="patent-data-table-td ">扬州永信计算机有限公司</td><td class="patent-data-table-td ">便携式移动终端安全威胁处理方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2015014185A1?cl=zh">WO2015014185A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2014年6月26日</td><td class="patent-data-table-td patent-date-value">2015年2月5日</td><td class="patent-data-table-td ">Tencent Technology (Shenzhen) Company Limited</td><td class="patent-data-table-td ">Method, device and system for detecting malware in mobile terminal</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2015196982A1?cl=zh">WO2015196982A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2015年6月23日</td><td class="patent-data-table-td patent-date-value">2015年12月30日</td><td class="patent-data-table-td ">北京金山安全软件有限公司</td><td class="patent-data-table-td ">一种Android恶意程序检测和处理方法、装置及设备</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=pefiCAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0021560000">G06F21/56</a></span></td></tr><tr><td class="patent-data-table-td "> 合作分类</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=pefiCAABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F2221/2115">G06F2221/2115</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=pefiCAABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F21/567">G06F21/567</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=pefiCAABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F21/563">G06F21/563</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=pefiCAABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F8/61">G06F8/61</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=pefiCAABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=H04L63/145">H04L63/145</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年11月20日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年12月18日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2016年1月6日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/aee9b543798e5b16e440/CN103400076A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E7%A7%BB%E5%8A%A8%E7%BB%88%E7%AB%AF%E4%B8%8A%E7%9A%84%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E6%A3%80.pdf?id=pefiCAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U2TibVawzpMHe98oCCaLFikKmfr-w"},"sample_url":"https://www.google.com/patents/reader?id=pefiCAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>