<!DOCTYPE html><html><head><title>专利 CN101783801A - 一种基于网络的软件保护方法、客户端及服务器 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_6e802a6b2b28d51711baddc2f3bec198/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_6e802a6b2b28d51711baddc2f3bec198__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种基于网络的软件保护方法、客户端及服务器"><meta name="DC.contributor" content="林明静" scheme="inventor"><meta name="DC.contributor" content="福建星网锐捷网络有限公司" scheme="assignee"><meta name="DC.date" content="2010-1-29" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种基于网络的软件保护方法、客户端及服务器，提高对客户端软件是否被篡改进行检测的准确性与有效性。方法包括：服务器端接收客户端发送的程序运行请求，并根据该程序运行请求向客户端发送随机数据；客户端采用设定的Hash算法根据客户端标识、随机数据以及客户端存储的待运行软件版本信息对应的程序代码段确定出第一Hash值；服务器端采用设定的Hash算法根据客户端标识、随机数据以及服务器端存储的待运行软件版本信息对应的程序代码段确定出第二Hash值，将第一Hash值与第二Hash值进行比较，根据比较结果确定是否允许客户端执行程序。本发明技术方案提高了对客户端软件是否被篡改进行检测的准确性与有效性。"><meta name="DC.date" content="2010-7-21"><meta name="citation_patent_publication_number" content="CN:101783801:A"><meta name="citation_patent_application_number" content="CN:201010104857"><link rel="canonical" href="https://www.google.com/patents/CN101783801A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN101783801A?cl=zh"/><meta name="title" content="专利 CN101783801A - 一种基于网络的软件保护方法、客户端及服务器"/><meta name="description" content="本发明公开了一种基于网络的软件保护方法、客户端及服务器，提高对客户端软件是否被篡改进行检测的准确性与有效性。方法包括：服务器端接收客户端发送的程序运行请求，并根据该程序运行请求向客户端发送随机数据；客户端采用设定的Hash算法根据客户端标识、随机数据以及客户端存储的待运行软件版本信息对应的程序代码段确定出第一Hash值；服务器端采用设定的Hash算法根据客户端标识、随机数据以及服务器端存储的待运行软件版本信息对应的程序代码段确定出第二Hash值，将第一Hash值与第二Hash值进行比较，根据比较结果确定是否允许客户端执行程序。本发明技术方案提高了对客户端软件是否被篡改进行检测的准确性与有效性。"/><meta property="og:title" content="专利 CN101783801A - 一种基于网络的软件保护方法、客户端及服务器"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN101783801A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN101783801A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=2Z5_BwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN101783801A&amp;usg=AFQjCNHM78D6F_UXaLS5W7Kk5BhFPM2BlQ" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/b9b80a0be1b2d74e0a41/CN101783801A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/b9b80a0be1b2d74e0a41/CN101783801A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN101783801A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN101783801A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN101783801A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN101783801B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN101783801A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种基于网络的软件保护方法、客户端及服务器，提高对客户端软件是否被篡改进行检测的准确性与有效性。方法包括：服务器端接收客户端发送的程序运行请求，并根据该程序运行请求向客户端发送随机数据；客...</span><span itemprop="url">https://www.google.com/patents/CN101783801A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN101783801A - 一种基于网络的软件保护方法、客户端及服务器</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN101783801A - 一种基于网络的软件保护方法、客户端及服务器" title="专利 CN101783801A - 一种基于网络的软件保护方法、客户端及服务器"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN101783801 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201010104857</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2010年7月21日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2010年1月29日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2010年1月29日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN101783801B?hl=zh-CN&amp;cl=zh">CN101783801B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201010104857.X, </span><span class="patent-bibdata-value">CN 101783801 A, </span><span class="patent-bibdata-value">CN 101783801A, </span><span class="patent-bibdata-value">CN 201010104857, </span><span class="patent-bibdata-value">CN-A-101783801, </span><span class="patent-bibdata-value">CN101783801 A, </span><span class="patent-bibdata-value">CN101783801A, </span><span class="patent-bibdata-value">CN201010104857, </span><span class="patent-bibdata-value">CN201010104857.X</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%9E%97%E6%98%8E%E9%9D%99%22">林明静</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E7%A6%8F%E5%BB%BA%E6%98%9F%E7%BD%91%E9%94%90%E6%8D%B7%E7%BD%91%E7%BB%9C%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">福建星网锐捷网络有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN101783801A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN101783801A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN101783801A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (10),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (2),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=2Z5_BwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201010104857&amp;usg=AFQjCNGooR7zzNRcRdtCOWDZWCKXgJraxQ"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=2Z5_BwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D101783801A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNFFaMX9TT0CvmmWDNoZmVI51vJZgw"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT96563030" lang="ZH" load-source="patent-office">一种基于网络的软件保护方法、客户端及服务器</invention-title>
      </span><br><span class="patent-number">CN 101783801 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA79206946" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种基于网络的软件保护方法、客户端及服务器，提高对客户端软件是否被篡改进行检测的准确性与有效性。方法包括：服务器端接收客户端发送的程序运行请求，并根据该程序运行请求向客户端发送随机数据；客户端采用设定的Hash算法根据客户端标识、随机数据以及客户端存储的待运行软件版本信息对应的程序代码段确定出第一Hash值；服务器端采用设定的Hash算法根据客户端标识、随机数据以及服务器端存储的待运行软件版本信息对应的程序代码段确定出第二Hash值，将第一Hash值与第二Hash值进行比较，根据比较结果确定是否允许客户端执行程序。本发明技术方案提高了对客户端软件是否被篡改进行检测的准确性与有效性。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(12)</span></span></div><div class="patent-text"><ol mxw-id="PCLM32621253" lang="ZH" load-source="patent-office" class="claims">
    <li class="claim"> <div num="1" class="claim">
      <div class="claim-text">一种基于网络的软件保护方法，其特征在于，包括：服务器端接收客户端发送的程序运行请求，所述程序运行请求携带有客户端标识以及待运行软件版本信息；服务器端根据所述客户端标识与待运行版本信息，向所述客户端发送随机数据；客户端采用设定的Hash算法，根据客户端标识、所述随机数据以及客户端存储的所述待运行版本信息对应的程序代码段确定出第一Hash值，并将该第一Hash值发送至所述服务器端；服务器端采用所述设定的Hash算法，根据所述客户端标识、随机数据以及服务器端存储的所述待运行版本信息对应的程序代码段确定出第二Hash值；服务器端将所述第一Hash值与第二Hash值进行比较，并根据比较结果确定是否允许所述客户端执行程序。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2. 如权利要求1所述的方法，其特征在于，所述服务器端根据所述客户端标识与待运 行版本信息，向所述客户端发送随机数据，具体为：服务器端获取所述客户端标识相对应的一个或多个软件版本信息； 服务器端将所述待运行软件版本信息与获取到的所述一个或多个软件版本信息进行 匹配，并在匹配成功时向所述客户端发送随机数据。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3. 如权利要求2所述的方法，其特征在于，还包括步骤： 服务器端在匹配不成功时，向所述客户端发送禁止运行程序的通知消息。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4. 如权利要求1所述的方法，其特征在于，根据比较结果确定是否允许所述客户端执 行程序，具体为：服务器端在所述第一 Hash值与第二 Hash值相等时，确定允许所述客户端执行程序，并 向所述客户端发送允许执行程序的通知消息；服务器端在所述第一 Hash值与第二 Hash值不相等时，确定禁止所述客户端执行程序， 并向所述客户端发送禁止执行程序的通知消息。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5. 如权利要求1&#12316;4任一项所述的方法，其特征在于，所述服务器端与所述客户端存储 有约定的多种Hash算法，每种Hash算法对应一个索引值；所述服务器端在向所述客户端发送随机数据时，还包括向所述客户端发送用于确定所 述第一 Hash值的Hash算法的索引值；所述客户端与服务器端所采用的设定的Hash算法为所述索引值对应的Hash算法。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6. 如权利要求1&#12316;4任一项所述的方法，其特征在于，所述客户端标识为用户编号、待 运行软件的序列号或者为所述客户端临时产生的全球唯一标识符GUID。</div>
    </div>
    </li> <li class="claim"> <div num="7" class="claim">
      <div class="claim-text">7. &#8212;种客户端，其特征在于，包括第一收发模块、第一确定模块以及执行模块，其中： 第一收发模块，用于向所述服务器端发送携带有客户端标识以及待运行软件版本信息的程序运行请求、第一Hash值；用于接收服务器端发送的随机数据，以及，用于接收服务器 端下发的允许执行程序的通知消息或禁止执行程序的通知消息；第一确定模块，用于采用设定的Hash算法根据客户端标识、所述随机数据以及客户端 存储的待运行软件版本信息对应的程序代码段确定出第一 Hash值，并将所述第一 Hash值 发送至所述第一收发模块；执行模块，用于根据所述收发模块接收到的允许执行程序的通知消息执行所述待运行软件对应的程序代码段；或者，根据所述收发模块接收到的禁止执行程序的通知消息不执 行程序。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8. 如权利要求7所述的客户端，其特征在于，还包括所述第一存储模块； 所述第一存储模块，用于存储所述服务器端与所述客户端存储有约定的多种Hash算法，每种Hash算法对应一个索引值；所述第一收发模块进一步应用为，接收所述服务器端发送的用于确定所述第一 Hash 值的Hash算法的索引值；所述第一确定模块具体应用为：采用所述第一收发模块接收到的索引值对应的Hash 算法根据客户端标识、所述随机数据以及客户端存储的待运行软件对应的程序代码段确定 出第一Hash值。</div>
    </div>
    </li> <li class="claim"> <div num="9" class="claim">
      <div class="claim-text">9. 一种服务器，其特征在于，包括第二收发模块、第二确定模块以及验证模块，其中： 第二收发模块，用于接收客户端发送的程序运行请求和第一Hash值；以及，用于将随机数与允许执行程序的通知消息发送至所述客户端；第二确定模块，用于采用所述设定的Hash算法根据所述客户端标识、随机数据以及服 务器端存储的待运行软件版本信息对应的程序代码段确定出第二 Hash值；验证模块，用于根据所述第二收发模块接收到的程序运行请求中的客户端标识与待 运行版本信息，确定是否向所述客户端发送随机数据；以及，比较所述第一 Hash值与第二 Hash值，根据比较结果确定是否允许客户端执行程序。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10. 如权利要求9所述的服务器，其特征在于，所述验证模块确定是否向所述客户端发 送随机数据，具体应用为：验证模块获取所述客户端标识相对应的一个或多个软件版本信 息；并将所述待运行软件版本信息与获取到的所述一个或多个软件版本信息进行匹配，并 在匹配成功时确定向所述客户端发送随机数据。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="11" class="claim">
      <div class="claim-text">11. 如权利要求9所述的服务器，其特征在于，所述验证模块根据比较结果确定是否允 许客户端执行程序，具体应用为：服务器端在所述第一 Hash值与第二 Hash值相等时，确定允许所述客户端执行程序，并 向所述客户端发送允许执行程序的通知消息；服务器端在所述第一 Hash值与第二 Hash值不相等时，确定禁止所述客户端执行程序， 并向所述客户端发送禁止运行程序的通知消息。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="12" class="claim">
      <div class="claim-text">12. 如权利要求9所述的服务器，其特征在于，还包括第二存储模块； 所述第二存储模块，用于存储所述服务器端与所述客户端存储有约定的多种Hash算法，每种Hash算法对应一个索引值；所述第二收发模块进一步应用为，在向所述客户端发送随机数据时，还包括向所述客 户端发送用于确定所述第一 Hash值的Hash算法的索引值；所述第二确定模块具体应用为：采用所述第二收发模块发送的索引值对应的Hash算 法根据客户端标识、所述随机数据以及服务器端存储的待运行软件对应的程序代码段确定 出第二Hash值。</div>
    </div>
  </li> </ol>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES37958573" lang="ZH" load-source="patent-office" class="description">
    <p>一种基于网络的软件保护方法、客户端及服务器</p>
    <p>技术领域</p>
    <p>[0001] 本发明涉及计算机网络领域，尤其涉及一种基于网络的软件保护方法、客户端及</p>
    <p>服务器。 背景技术</p>
    <p>[0002] 目前，网络上的软件被其他人或者某些机构非法篡改的现象越来越普遍，所谓的篡 改是指将软件原有的执行序列进行修改、将程序的某些保护功能裁剪掉或者将带有商业应用 的功能去除（如通过反汇编技术将程序的授权功能去除，使得破解者不需要购买软件序列号 即正常使用软件功能）；或者，使用其他手段屏蔽掉对用户无用的一些功能，但这些功能恰恰 是商业公司为了盈利而推出的软件功能（如将免费闭源商业软件的广告功能去除）。 [0003] 为防止可执行程序被逆向后窜改，现有技术采取了多种多样软件保护方法；所谓 的软件保护主要为防止他人在非授权的情况下破解程序，从而修改程序运行流程以及分析 软件内部实现过程的一种方法。目前软件保护的方法主要分为两大类，一类是纯软件保护 方法，另一类是软件与硬件相结合的保护方法，其中，纯软件保护方法是利用软件的特定算 法以及实现机制对受保护对象（受保护对象可包括软件、软件的关键执行码）进行保护，纯 软件保护方法通常包括以下几种通过加入花指令以及跳转流程来增加反汇编难度、对软件 加壳、对软件特定执行代码进行加密处理以及使用虚拟机技术对软件进行保护等；软件与 硬件结合的保护方法主要为将关键保护信息写入加密装置（如硬件设备），软件运行时与 加密装置进行交互，最终完成软件合法性的校验。上述软件保护方法中纯软件保护方法相 对于软件与硬件相结合的保护方法而言，破解难度小，但实施简单、软件成本较低；而采用 软件与硬件相结合的保护方法，由于每个软件在分发时都需要配套硬件设备，从而增加了 软件成本，同时增加了用户使用门槛。</p>
    <p>[0004] 现有技术中，对客户端的软件是否被篡改进行检测所采用的方式主要是基于客户 端在不同的时间段对相同的软件程序代码进行判断，若两个时间段得到的值不一致则判断 客户端软件被篡改，若相同则判断软件没有被篡改。采用该种方式虽然可以在一定程度上 对客户端软件是否被篡改进行检测；但是，采用该种方式的缺陷在于，若采用非代码段（如 对比程序数据段的方法），程序执行指令被修改后，确定出的Hash值是不变的，故无法检测 出软件被篡改，另外，如果程序预先已经被篡改，仅依靠程序运行前后来检测软件是否被篡 改，而不是通过服务器上存储的软件程序代码段确定的Hash值对比，也无法检测出软件是 否篡改，因此，对于该种情况，仍然存在对客户端软件是否被篡改进行检测的准确性不高以 及有效性较低的问题。</p>
    <p>发明内容</p>
    <p>[0005] 本发明实施例提供一种基于网络的软件保护方法、客户端及服务器，以提高对客</p>
    <p>户端软件是否被篡改进行检测的准确性与有效性。</p>
    <p>[0006]      &#8212;种基于网络的软件保护方法，包括：[0007] 服务器端接收客户端发送的程序运行请求，所述程序运行请求携带有客户端标识以及待运行软件版本信息；</p>
    <p>[0008]     服务器端根据所述客户端标识与待运行版本信息，向所述客户端发送随机数据；[0009]     客户端采用设定的Hash算法，根据客户端标识、所述随机数据以及客户端存储的所述待运行版本信息对应的程序代码段确定出第一 Hash值，并将该第一 Hash值发送至所述服务器端；</p>
    <p>[0010]     服务器端采用所述设定的Hash算法，根据所述客户端标识、随机数据以及服务器</p>
    <p>端存储的所述待运行版本信息对应的程序代码段确定出第二 Hash值；</p>
    <p>[0011]     服务器端将所述第一 Hash值与第二 Hash值进行比较，并根据比较结果确定是否</p>
    <p>允许所述客户端执行程序。</p>
    <p>[0012]     &#8212;种客户端，包括第一收发模块、第一确定模块以及执行模块，其中：</p>
    <p>[0013] 第一收发模块，用于向所述服务器端发送携带有客户端标识以及待运行软件版本</p>
    <p>信息的程序运行请求、第一Hash值；用于接收服务器端发送的随机数据，以及，用于接收服</p>
    <p>务器端下发的允许执行程序的通知消息或禁止执行程序的通知消息；</p>
    <p>[0014] 第一确定模块，用于采用设定的Hash算法根据客户端标识、所述随机数据以及客户端存储的待运行软件版本信息对应的程序代码段确定出第一 Hash值，并将所述第一Hash值发送至所述第一收发模块；</p>
    <p>[0015] 执行模块，用于根据所述收发模块接收到的允许执行程序的通知消息执行所述待运行软件对应的程序代码段；或者，根据所述收发模块接收到的禁止执行程序的通知消息不执行程序。</p>
    <p>[0016]     &#8212;种服务器，包括第二收发模块、第二确定模块以及验证模块，其中：</p>
    <p>[0017] 第二收发模块，用于接收客户端发送的程序运行请求和第一Hash值；以及，用于</p>
    <p>将随机数与允许执行程序的通知消息发送至所述客户端；</p>
    <p>[0018]     第二确定模块，用于采用所述设定的Hash算法根据所述客户端标识、随机数据以及服务器端存储的待运行软件版本信息对应的程序代码段确定出第二 Hash值；[0019] 验证模块，用于根据所述第二收发模块接收到的程序运行请求中的客户端标识与待运行版本信息，确定是否向所述客户端发送随机数据；以及，比较所述第一 Hash值与第二 Hash值，根据比较结果确定是否允许客户端执行程序。</p>
    <p>[0020] 采用本发明技术方案，由于将客户端软件对应的程序代码段存储在服务器端，在验证客户端的应用程序代码端是否被篡改时，客户端根据客户端标识、服务器下发的随机数以及客户端存储的待运行软件版本信息对应的应用程序生成第一Hash值，服务器端根</p>
    <p>据客户端标识、下发给客户端的随机数以及服务器端存储的待运行软件版本信息对应的程序代码段生成第二 Hash值；服务器端根据所述第一 Hash值与第二 Hash值是否相等来确定客户端的程序代码段是否被篡改；由于一般情况下，服务器端的程序代码段不容易被篡改，因此，通过服务器端存储的程序代码段来判断客户端程序代码段是否被篡改的检测方式更准确，提高了对客户端软件是否被篡改进行检测的有效性。</p>
    <p>附图说明</p>
    <p>[0021]       图1为本发明实施例中对软件进行保护的流程图；[0022] 图2为本发明实施例中对软件进行保护的信令交互流程图；[0023]      图3为本发明实施例中对软件进行保护的系统结构示意图。</p>
    <p>具体实施方式</p>
    <p>[0024] 为解决现有技术存在的上述问题，本发明实施例提供一种基于网络的软件保护方法，该方法主要包括：在客户端与服务器端分别存储各软件对应的程序代码段；当需要对客户端软件是否被篡改进行检测时，客户端向服务器端发送下带有客户端标识以及待运行软件版本信息的程序运行请求；服务器端根据客户端发送的客户端标识与待运行版本信息，向所述客户端发送随机数据；客户端采用设定的Hash算法根据客户端标识、服务器端下发的随机数据以及客户端本地存储的待运行版本信息对应的程序代码段确定出第一Hash值，并将该第一 Hash值发送至服务器端；服务器端采用所述设定的Hash算法，根据所述客户端标识、随机数据以及服务器端本地存储的待运行版本信息对应的程序代码段确定出第二 Hash值，将第一 Hash值与第二 Hash值进行比较，根据比较结果确定是否允许客户端执行程序（如，第一 Hash值与第二 Hash值相等时，确定允许客户端执行程序，并向客户端发送允许执行程序的通知消息；第一Hash值与第二Hash值不相等时，确定禁止客户端执行程序，并向客户端发送禁止执行程序的通知消息）。</p>
    <p>[0025] 本发明技术方案，由于一般情况下，服务器端的程序代码段不容易被篡改，因此，通过服务器端存储的程序代码段来判断客户端程序代码段是否被篡改的检测方式更准确，提高了对客户端软件是否被篡改进行检测的有效性。</p>
    <p>[0026] 为方便大家理解本发明实施例，首先对常用的技术术语进行简单的说明。</p>
    <p>[0027] (1)程序代码段。在采用段式内存管理的操作系统架构中，程序代码段是指用来存</p>
    <p>放程序执行代码的一块内存区域，该内存区域的大小在程序运行前已经确定，并且程序代</p>
    <p>码段所在的内存区域为只读内存区；若可执行应用程序被外部反汇编程序或病毒修改，则</p>
    <p>该应用程序所对应的程序代码段会发生变化，因此，程序代码段可以表征其所对应的可执</p>
    <p>行程序的唯一性。</p>
    <p>[0028] (2)Hash算法。Hash&#8212;般翻译成"散列"，也可以直接翻译成〃 哈希〃 ，Hash算法是指把任意长度的输入通过散列算法（比如常用的MD5、 SHA-1等）变换成固定长度的输出，该输出值就是散列值（即Hash值）。Hash算法是一种压&#32302;映射的方法，即散列值的空间通常远小于输入的空间，相同的输入通过相同的Hash算法得到相同的Hash值，不同的输入通过相同的Hash算法得到的Hash值不同。</p>
    <p>[0029]     (3)GUID(Globally Unique Identifier,全球唯一标识符）。GUID是一个字母数字标识符，用于指示产品的唯一性，在许多常用软件应用程序（如Web浏览器、媒体播放器等）中，都使用GUID ;GUID通过特定算法产生的一个二进制长度为128位的数字，在空间上和时间上具有唯一性，保证同一时间不同地方产生的数字不同。[0030]     下面结合说明书附图对本发明实施例进行详细的描述。</p>
    <p>[0031]     参见图l，为本发明实施例中对软件进行保护的流程图，该流程包括以下步骤：[0032] 步骤101、客户端向服务器端发送程序运行请求，还请求中携带有客户端的标识信息与请求运行软件（后续将该请求运行的软件称为待运行软件）的版本信息。[0033]     该步骤中，程序运行请求可基于任何网络通讯协议，如TCP (TransmissionControl</p>
    <p>6Protocol，传输控制协议）/UDP(User Datagram Protocol,用户数据报协议）等。客户端标识既可以是用户编号也可以是软件序列号等特定信息，还可以是客户端临时产生的GUID。[0034] 步骤102、服务器端根据该程序运行请求，将该请求中携带的版本信息与该客户端标识对应的多个软件的版本信息进行匹配，匹配成功后向发起程序运行请求的客户端发送随机数据。</p>
    <p>[0035] 步骤103、客户端采用Hash算法根据服务器端发送的随机数据、客户端保存待运行软件版本信息对应的程序代码段以及客户端标识进行Hash运算，将得到的第一 Hash值发送至服务器端。</p>
    <p>[0036]     该步骤中，将第一Hash值发送至服务器端具体为：将第一Hash值以及客户端标识</p>
    <p>以及待运行软件版本信息封装成相应的通讯报文之后，发送至服务器端。</p>
    <p>[0037]     该步骤中，客户端获取本地保存的程序代码段的方式如下：应用程度代码段以可</p>
    <p>执行文件的形式保存，由于可执行文件都具有相应的文件格式，因此在操作系统加载可执</p>
    <p>行文件时，通过一定的映射内存方式存储可执行文件；客户端通过相关的编程接口可获取</p>
    <p>到可执行文件；如Windows操作系统中的PE文件，被操作系统加载后通过其规定的方式加</p>
    <p>载到内存中，客户端可通过微软提供的API获取该PE文件。</p>
    <p>[0038] 该步骤中的程序代码段以二进制文件的形式存储在客户端。</p>
    <p>[0039] 步骤104、服务器端采用设定的Hash算法根据下发给客户端的随机数、服务器端保存的待运行软件版本信息对应的程序代码段以及客户端发送的客户端标识进行Hash运算，得到第二Hash值。</p>
    <p>[0040] 该步骤中，服务器端生成第二 Hash值与客户端生成第一 Hash值所采用的Hash算法一致。</p>
    <p>[0041] 步骤105、服务器端将第二 Hash值与接收到的第一 Hash值进行比较，根据比较结果向发起程序运行请求的客户端发送运行结果通知消息，以通知客户端根据该服务器端发送的运行结果通知消息进行相应的操作。</p>
    <p>[0042] 该步骤中，若第一 Hash值与第二 Hash值相等，服务器端向客户端发送的运行结果通知消息为允许客户端执行程序的通知消息；若第一Hash值与第二Hash值不相等，服务器</p>
    <p>端向客户端发送的运行结果报文为禁止客户端执行程序的通知消息。[0043] 该步骤中，可以报文的形式发送运行结果通知消息。</p>
    <p>[0044]     该步骤中，客户端进行相应的操作，具体为：当接收到的运行结果通知消息为允许</p>
    <p>客户端执行程序的通知消息时，客户端则继续执行后续的功能；当接收到的运行结果通知</p>
    <p>消息为禁止客户端执行程序的通知消息时，客户端则自动退出，结束流程。</p>
    <p>[0045]     本发明实施例中，客户端与服务器端进行Hash运算所采用的Hash算法可以是</p>
    <p>MD5、 SHA-1等较为常用的Hash算法。</p>
    <p>[0046] 较佳地，上述流程中，若客户端在向服务器发送第一Hash值之后的一段时间阈值后（该段时间阈值可根据实际应用场景进行预先设置）未收到服务器端下发的运行结果通知消息，客户端则不执行程序。</p>
    <p>[0047] 本发明实施例中，还可以是，服务器端默认设置为在判断第一 Hash值与第二 Hash值不相等时，向客户端发送禁止执行程序的通知消息；客户端在向服务器端发送第一Hash值之后的一段时间阈值后还未收到服务器端下发的禁止执行程序的通知消息时，客户端自动执行程序；或者，</p>
    <p>[0048] 服务器端默认设置为在判断第一 Hash值与第二 Hash值相等时，向客户端发送允许执行程序的通知消息；客户端在向服务器端发送第一 Hash值之后的一段时间阈值后还未收到服务器端下发的允许执行程序的通知消息时，客户端自动退出，不执行程序；还或者，</p>
    <p>[0049] 客户端在向服务器端发送第一 Hash值之后的一段时间阈值后还未收到服务器端下发的允许执行程序的通知消息时，客户端自动执行程序。</p>
    <p>[0050] 实现方式多种多样，并不仅限于本发明实施例中列举的上述几种方式，本领域技术人员应该可以理解还有其他的多种方式。</p>
    <p>[0051] 较佳地，为确保软件整体的保护机制的完好性，本发明实施例中，在服务器端确认第一 Hash值与第二 Hash值相等之后的一段时间内，客户端与服务器段还可以继续进行信息交互。</p>
    <p>[0052] 较佳地，为进一步提高报文传输的安全性，服务器端向客户端发送的运行结果通知消息（该运行结果通知消息可以报文的形式发送）之前，将该运行结果通知消息进行加密处理，加密算法以及加密密钥采用固定方式预先设置在服务器端与客户端上；客户端接收到该运行结果通知消息之后，采用加密密钥对该运行结果通知消息进行解密处理。[0053] 较佳地，为更进一步提高软件保护能力，在客户端与服务器端存储有相同的Hash算法映射表或列表，每种Hash算法对应一个索引值，在每一次启动程序运行流程时，需要客户端与服务器端进行协商，以决定该次程序运行应该采用哪种Hash算法。比如，在上述步骤102中，服务器端将该次程序运行所采用的Hash算法的索引值发送至客户端；在步骤103中，客户端根据该索引值对应的Hash算法进行Hash运算。</p>
    <p>[0054] 较佳地，为进一步防止侵入者通过软件反汇编将与网络侧的服务器端通讯的验证功能，本发明实施例中可通过增加其他防反汇编技术，如代码混淆、花指令等防反汇编技术；或者，将客户端代码段的校验文件存储至系统分区的某个位置，当网络无法正常运行时，采用本地保存的校验文件进行本地校验。</p>
    <p>[0055] 为更清楚描述本发明技术方案，下面以一具体的信令交互流程图对本发明技术方案进行详细描述，如图2所示。</p>
    <p>[0056] 参见图2 ，为本发明实施例中对软件进行保护的信令交互流程图，该流程包括以下步骤：</p>
    <p>[0057] 本发明实施例中，客户端软件开发相应的接口，提供生成客户端代码段采集的功能，并将客户端代码段以二进制文件的形式分别保存在客户端与服务器端。服务器端软件所在的主机上部署有客户端代码段文件，服务器端设置有相应的配置文件，该配置文件供客户端代码段文件部署时使用。</p>
    <p>[0058] 步骤201 、客户端的客户端软件向服务器端的服务器端软件发送程序运行请求，该程序运行请求中携带有客户端标识信息与待运行软件的版本信息。</p>
    <p>[0059] 步骤202、服务器端软件根据接收到的程序运行请求，记录该运行请求中携带的客户端标识；并查询该客户端标识所对应的一个或多个软件版本信息，将该程序运行请求中携带的版本信息与查询得到的该客户端标识对应的多个软件版本信息进行匹配，若匹配成功，则执行步骤203，若匹配失败，则向客户端发送禁止运行程序的报文。[0060] 步骤203、服务器端软件向客户端软件发送程序运行响应，该响应中携带有随机数、客户端标识以及Hash算法的索引值。</p>
    <p>[0061] 步骤204、客户端软件对接收到的程序运行响应中的客户端标识与自身的客户端标识进行比较，若相同，则执行步骤205 ;若不相同，客户端软件自动退出，结束流程。[0062]     步骤205、客户端软件从客户端中的第一程序代码段文件存储器中（该第一程序代码段存储器用于存储客户端本地的各软件所对应的程序代码段）获取待运行软件版本信息所对应的程序代码段信息。</p>
    <p>[0063] 步骤206&#12316;207、客户端软件根据服务器端软件下发的随机数据、客户端标识以及获取到的程序代码段，采用服务器端软件下发的Hash算法索引值对应的Hash算法进行Hash运算，得到第一 Hash值；以及，将得到的第一 Hash值以及客户端标识发送至服务器端软件。</p>
    <p>[0064] 步骤208&#12316;209、服务器端软件接收到客户端软件发送的第一Hash值之后，从服务器端中的第二程序代码段文件存储器中获取待运行软件版本信息对应的程序代码段；并根据下发给客户端的随机数。客户端标识以及获取到的程序代码段采用索引值对应的Hash算法进行Hash运算，得到第二 Hash值。</p>
    <p>[0065] 步骤210、服务器端软件对第一 Hash值与第二 Hash值进行比较，若相等，则向客户端软件发送允许执行程序的运行结果报文，若不相等，则向客户端软件发送禁止运行程序的运行结果报文。</p>
    <p>[0066] 基于上述流程相同的构思，本发明实施例还提供一种软件保护系统，该系统的结构如图3所示。</p>
    <p>[0067] 参见图3，为本发明实施例中软件保护系统的结构示意图，该系统包括服务器端31与客户端32，其中：</p>
    <p>[0068] 客户端31，用于向服务器端32发送携带有客户端标识以及待运行软件版本信息的程序运行请求；在接收到服务器端32下发的随机数之后，采用设定的Hash算法根据客户端标识、随机数据以及客户端存储的待运行软件版本信息对应的程序代码段确定出第一Hash值，并将该第一 Hash值发送至服务器端32 ;根据服务器端32下发的允许执行程序的通知消息执行所述待运行软件对应的程序代码段。</p>
    <p>[0069] 服务器端32，用于根据客户端31发送的程序运行请求中的客户端标识与待运行版本信息，向客户端31发送随机数据；采用设定的Hash算法根据客户端标识、随机数据以及服务器端32存储的待运行软件版本信息对应的程序代码段确定出第二 Hash值；在第一Hash值与第二 Hash值相等时，向客户端31发送允许执行程序的通知消息。[0070] 按照功能划分，将该客户端31划分为第一收发模块311、第一确定模块312以及执行模块313，其中：</p>
    <p>[0071] 第一收发模块311，用于向服务器端32发送携带有客户端标识以及待运行软件版本信息的程序运行请求、第一 Hash值；以及，用于接收服务器端32发送的随机数据以及允许执行程序的通知消息；</p>
    <p>[0072] 第一确定模块312，用于采用设定的Hash算法根据客户端标识、随机数据以及客户端存储的待运行软件版本信息对应的程序代码段确定出第一 Hash值，并将该第一 Hash值发送至第一收发模块311 ;</p>
    <p>9[0073] 执行模块313，用于根据第一收发模块311接收到的允许执行程序的通知消息执行待运行软件对应的程序代码段。</p>
    <p>[0074] 按功能划分，可将服务器端32划分为第二收发模块321 、第二确定模块322以及验证模块323，其中：</p>
    <p>[0075] 第二收发模块321，用于接收客户端31发送的程序运行请求和第一Hash值；以及，用于将随机数与允许执行程序的通知消息发送至客户端321 ;</p>
    <p>[0076] 第二确定模块，用于采用上述设定的Hash算法根据客户端标识、随机数据以及服务器端32存储的待运行软件版本信息对应的程序代码段确定出第二 Hash值，并将该第二Hash值发送至第二收发模块321 ;</p>
    <p>[0077] 验证模块323，用于根据第二收发模块321接收到的程序运行请求中的客户端标识与待运行版本信息，确定是否向客户端31发送随机数据；以及，比较第一 Hash值与第二Hash值，在第一 Hash值与第二 Hash值相等时，指示第二收发模块321向客户端31发送允许执行程序的通知消息。</p>
    <p>[0078]     验证模块323确定是否向客户端31发送随机数据，具体为：验证模块323获取客户端标识相对应的一个或多个软件版本信息；并将待运行软件版本信息与获取到的一个或多个软件版本信息进行匹配，并在匹配成功时确定向客户端31发送随机数据。[0079]     较佳地，验证模块323在第一 Hash值与第二 Hash值相等时，指示第二收发模块321向客户端31发送禁止执行程序的通知消息。</p>
    <p>[0080] 较佳地，客户端31还包括第一存储模块310，服务器端32还包括第二存储模块320，其中:</p>
    <p>[0081] 第一存储模块310，用于存储用户终端31与服务器端32之间约定的加密机制与密钥。</p>
    <p>[0082] 第二存储模块320，用于存储用户终端31与服务器端32之间约定的加密机制与密钥。</p>
    <p>[0083] 较佳地，第二收发模块321在向客户端31发送允许执行程序的通知消息之前，采用第二存储模块320存储的加密机制对所述允许执行程序的通知消息进行加密；第一收发模块311采用第一存储模块310中存储的密钥对接收到允许执行程序的通知消息进行解密。</p>
    <p>[0084] 较佳地，第一存储模块310还存储有服务器端32与客户端31之间约定的多种Hash算法，每种Hash算法对应一个索引值。</p>
    <p>[0085] 第二存储模块320还存储有服务器端32与客户端31之间约定的多种Hash算法，每种Hash算法对应一个索引值。</p>
    <p>[0086] 较佳地，第二收发模块321在向客户端31发送随机数据时，还向客户端31发送用于确定第一 Hash值的Hash算法的索引值；第一确定模块312采用第一收发模块311接收到的索引值对应的Hash算法根据客户端标识、随机数据以及客户端本地存储的待运行软件对应的程序代码段确定出第一 Hash值。</p>
    <p>[0087] 本发明实施例中的第一收发模块311、第一收发模块312以及执行模块313构成客户端软件；第二收发模块321、第二确定模块322以及验证模块323构成服务器端软件；第一存储模块310即为第一程序代码段文件存储器，第二存储模块320即为第二程序代码段文件存储器。</p>
    <p>[0088] 本发明实施例中提供的技术方案，可以应用于很多场景，对于基于网络Client/ Server架构的通讯软件具有较好的效果，比如，即时聊天工具、网游客户端、认证客户端、需 要在线更新病毒库的杀毒软件、email客户端等，在这些应用场景中，应用本发明技术方案 可以避免应用程序代码被篡改而导致完整性检查失效的问题。</p>
    <p>[0089] 本发明实施例中，由于将客户端软件对应的程序代码段存储在服务器端，在验证 客户端的应用程序代码端是否被篡改时，客户端根据客户端标识、服务器下发的随机数以 及客户端存储的待运行软件版本信息对应的应用程序生成第一 Hash值，服务器端根据客 户端标识、下发给客户端的随机数以及服务器端存储的待运行软件版本信息对应的程序代 码段生成第二 Hash值；服务器端根据所述第一 Hash值与第二 Hash值是否相等来确定客 户端的程序代码段是否被篡改；由于一般情况下，服务器端的程序代码段不容易被篡改，因 此，通过服务器端存储的程序代码段来判断客户端程序代码段是否被篡改的检测方式更准 确，提高了对客户端软件是否被篡改进行检测的有效性；另外，不需要增加新的硬件设备， 因此，相对于现有的软件结合硬件来保护软件的方式而言，降低硬件资源的消耗，节省硬件 资源。</p>
    <p>[0090] 显然，本领域的技术人员可以对本发明进行各种改动和变型而不脱离本发明的精 神和范围。这样，倘若本发明的这些修改和变型属于本发明权利要求及其等同技术的范围 之内，则本发明也意图包含这些改动和变型在内。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101901323A?cl=zh">CN101901323A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年7月22日</td><td class="patent-data-table-td patent-date-value">2010年12月1日</td><td class="patent-data-table-td ">湖北盛天网络技术有限公司</td><td class="patent-data-table-td ">一种监控程序模块加载活动的系统过滤方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101901323B?cl=zh">CN101901323B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年7月22日</td><td class="patent-data-table-td patent-date-value">2015年4月22日</td><td class="patent-data-table-td ">湖北盛天网络技术股份有限公司</td><td class="patent-data-table-td ">一种监控程序模块加载活动的系统过滤方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102890757A?cl=zh">CN102890757A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年9月11日</td><td class="patent-data-table-td patent-date-value">2013年1月23日</td><td class="patent-data-table-td ">中国电力科学研究院</td><td class="patent-data-table-td ">一种电能表软件的比对方法及其比对系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102890757B?cl=zh">CN102890757B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年9月11日</td><td class="patent-data-table-td patent-date-value">2015年8月5日</td><td class="patent-data-table-td ">中国电力科学研究院</td><td class="patent-data-table-td ">一种电能表软件的比对方法及其比对系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103077345B?cl=zh">CN103077345B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年12月27日</td><td class="patent-data-table-td patent-date-value">2015年10月21日</td><td class="patent-data-table-td ">深信服网络科技（深圳）有限公司</td><td class="patent-data-table-td ">基于虚拟机的软件授权方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103108037A?cl=zh">CN103108037A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年1月22日</td><td class="patent-data-table-td patent-date-value">2013年5月15日</td><td class="patent-data-table-td ">华为技术有限公司</td><td class="patent-data-table-td ">一种通信方法，Web服务器及Web通信系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103108037B?cl=zh">CN103108037B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年1月22日</td><td class="patent-data-table-td patent-date-value">2015年12月2日</td><td class="patent-data-table-td ">华为技术有限公司</td><td class="patent-data-table-td ">一种通信方法，Web服务器及Web通信系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN104134021A?cl=zh">CN104134021A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年6月20日</td><td class="patent-data-table-td patent-date-value">2014年11月5日</td><td class="patent-data-table-td ">腾讯科技（深圳）有限公司</td><td class="patent-data-table-td ">软件的防篡改验证方法及装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN104134021B?cl=zh">CN104134021B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年6月20日</td><td class="patent-data-table-td patent-date-value">2016年3月2日</td><td class="patent-data-table-td ">腾讯科技（深圳）有限公司</td><td class="patent-data-table-td ">软件的防篡改验证方法及装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2014206223A1?cl=zh">WO2014206223A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2014年6月17日</td><td class="patent-data-table-td patent-date-value">2014年12月31日</td><td class="patent-data-table-td ">Huawei Device Co., Ltd.</td><td class="patent-data-table-td ">一种网页应用程序的安全访问方法、服务器和客户端</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=2Z5_BwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0021120000">G06F21/12</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=2Z5_BwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029060000">H04L29/06</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2010年7月21日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2010年9月15日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年4月24日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Granted</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/b9b80a0be1b2d74e0a41/CN101783801A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_6e802a6b2b28d51711baddc2f3bec198.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%BB%9C%E7%9A%84%E8%BD%AF%E4%BB%B6%E4%BF%9D%E6%8A%A4%E6%96%B9%E6%B3%95.pdf?id=2Z5_BwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U0zwCvLR2SaKsAMUlElQS1xLqU0OQ"},"sample_url":"https://www.google.com/patents/reader?id=2Z5_BwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>