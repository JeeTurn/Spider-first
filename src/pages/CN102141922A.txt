<!DOCTYPE html><html><head><title>专利 CN102141922A - 一种微内核插件化程序应用系统及其实现方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种微内核插件化程序应用系统及其实现方法"><meta name="DC.contributor" content="唐声福" scheme="inventor"><meta name="DC.contributor" content="夏蕾" scheme="inventor"><meta name="DC.contributor" content="张欣" scheme="inventor"><meta name="DC.contributor" content="李建峰" scheme="inventor"><meta name="DC.contributor" content="欧阳江平" scheme="inventor"><meta name="DC.contributor" content="陈天民" scheme="inventor"><meta name="DC.contributor" content="陈月璇" scheme="inventor"><meta name="DC.contributor" content="黄军" scheme="inventor"><meta name="DC.contributor" content="黄朝兴" scheme="inventor"><meta name="DC.contributor" content="腾讯科技（深圳）有限公司" scheme="assignee"><meta name="DC.date" content="2010-1-29" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种微内核插件化程序应用系统及其实现方法，用于解决现有软件架构方式下，软件更新效率低、冗余度大等技术问题。本发明实现了一个友好的基于插件的软件更新系统，软件更新时以插件为单位作为更新逻辑单元，减少了更新冗余。使用可扩展的插件结构，通过插件资源描述文件描述插件之间的依赖关系，微内核可根据插件资源配置文件嵌套加载插件资源，扩展性强。微内核依据插件资源配置文件先下载并加载包含关键功能的根插件，再下载并加载根插件所依赖的子插件，先加载的插件先使用，提升了用户体验。本发明实现了自动化插件版本判断、插件的自动下载及基于插件的懒加载程序架构，实现了系统升级的自动化。"><meta name="DC.date" content="2011-8-3"><meta name="citation_patent_publication_number" content="CN:102141922:A"><meta name="citation_patent_application_number" content="CN:201010106229"><link rel="canonical" href="https://www.google.com/patents/CN102141922A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102141922A?cl=zh"/><meta name="title" content="专利 CN102141922A - 一种微内核插件化程序应用系统及其实现方法"/><meta name="description" content="本发明公开了一种微内核插件化程序应用系统及其实现方法，用于解决现有软件架构方式下，软件更新效率低、冗余度大等技术问题。本发明实现了一个友好的基于插件的软件更新系统，软件更新时以插件为单位作为更新逻辑单元，减少了更新冗余。使用可扩展的插件结构，通过插件资源描述文件描述插件之间的依赖关系，微内核可根据插件资源配置文件嵌套加载插件资源，扩展性强。微内核依据插件资源配置文件先下载并加载包含关键功能的根插件，再下载并加载根插件所依赖的子插件，先加载的插件先使用，提升了用户体验。本发明实现了自动化插件版本判断、插件的自动下载及基于插件的懒加载程序架构，实现了系统升级的自动化。"/><meta property="og:title" content="专利 CN102141922A - 一种微内核插件化程序应用系统及其实现方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102141922A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102141922A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=zNRxBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102141922A&amp;usg=AFQjCNG5iDEhLqi5fqOrSVcdh2vEVp_N4w" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/b41fb72d5aa5ad9d11a4/CN102141922A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/b41fb72d5aa5ad9d11a4/CN102141922A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102141922A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102141922A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102141922A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种微内核插件化程序应用系统及其实现方法，用于解决现有软件架构方式下，软件更新效率低、冗余度大等技术问题。本发明实现了一个友好的基于插件的软件更新系统，软件更新时以插件为单位作为更新逻辑单...</span><span itemprop="url">https://www.google.com/patents/CN102141922A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102141922A - 一种微内核插件化程序应用系统及其实现方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102141922A - 一种微内核插件化程序应用系统及其实现方法" title="专利 CN102141922A - 一种微内核插件化程序应用系统及其实现方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102141922 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201010106229</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2011年8月3日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2010年1月29日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2010年1月29日</td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201010106229.5, </span><span class="patent-bibdata-value">CN 102141922 A, </span><span class="patent-bibdata-value">CN 102141922A, </span><span class="patent-bibdata-value">CN 201010106229, </span><span class="patent-bibdata-value">CN-A-102141922, </span><span class="patent-bibdata-value">CN102141922 A, </span><span class="patent-bibdata-value">CN102141922A, </span><span class="patent-bibdata-value">CN201010106229, </span><span class="patent-bibdata-value">CN201010106229.5</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%94%90%E5%A3%B0%E7%A6%8F%22">唐声福</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%A4%8F%E8%95%BE%22">夏蕾</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BC%A0%E6%AC%A3%22">张欣</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%9D%8E%E5%BB%BA%E5%B3%B0%22">李建峰</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%AC%A7%E9%98%B3%E6%B1%9F%E5%B9%B3%22">欧阳江平</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%99%88%E5%A4%A9%E6%B0%91%22">陈天民</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%99%88%E6%9C%88%E7%92%87%22">陈月璇</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%BB%84%E5%86%9B%22">黄军</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%BB%84%E6%9C%9D%E5%85%B4%22">黄朝兴</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E8%85%BE%E8%AE%AF%E7%A7%91%E6%8A%80%EF%BC%88%E6%B7%B1%E5%9C%B3%EF%BC%89%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">腾讯科技（深圳）有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102141922A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102141922A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102141922A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (10),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (2)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=zNRxBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201010106229&amp;usg=AFQjCNEZxiZK77Lc69kZ_9WMPLxxtKdKkQ"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=zNRxBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102141922A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNH2WFGrytVuLt1Gwt1hhD9rTOO6dQ"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT104336618" lang="ZH" load-source="patent-office">一种微内核插件化程序应用系统及其实现方法</invention-title>
      </span><br><span class="patent-number">CN 102141922 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA86240618" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种微内核插件化程序应用系统及其实现方法，用于解决现有软件架构方式下，软件更新效率低、冗余度大等技术问题。本发明实现了一个友好的基于插件的软件更新系统，软件更新时以插件为单位作为更新逻辑单元，减少了更新冗余。使用可扩展的插件结构，通过插件资源描述文件描述插件之间的依赖关系，微内核可根据插件资源配置文件嵌套加载插件资源，扩展性强。微内核依据插件资源配置文件先下载并加载包含关键功能的根插件，再下载并加载根插件所依赖的子插件，先加载的插件先使用，提升了用户体验。本发明实现了自动化插件版本判断、插件的自动下载及基于插件的懒加载程序架构，实现了系统升级的自动化。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(10)</span></span></div><div class="patent-text"><div mxw-id="PCLM37838142" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种微内核插件化程序应用系统的实现方法，其特征在于，包括：程序应用的业务逻辑基于插件来实现，使用插件资源配置文件描述组成程序应用的插 件所依赖的资源信息，在程序应用运行时，由微内核依据插件资源配置文件加载所需插件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的方法，其特征在于，所述插件所依赖的资源信息包括插件信 息和资源信息；所述插件信息至少包括：插件的名称、插件所在动态链接库、插件标识；所 述资源信息至少包括资源文件名称。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求1所述的方法，其特征在于，当所述程序应用基于多个插件实现时，所 述插件资源配置文件还用于描述插件之间的依赖关系，所述插件信息还包含所述插件依赖 的子插件信息，所述微内核先加载上层插件，后加载子插件，先加载的插件先提供服务。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求3所述的方法，其特征在于，所述微内核在依据插件资源配置文件加 载插件之前，先从服务器端下载最新版本的插件资源配置文件，并根据所述最新版本的插 件资源配置文件从服务器端下载插件所依赖的资源。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求3所述的方法，其特征在于，所述微内核在加载插件之前，先从服务器 端获取当前插件资源配置文件的最新版本号，当依据所述版本号判定本地的插件资源配置 文件不是最新版本时，再从服务器端下载最新版本的插件资源配置文件，并根据所述最新 版本的插件资源配置文件从服务器端下载插件所依赖资源的最新版本。</div>
    </div>
    </div> <div class="claim"> <div num="6" class="claim">
      <div class="claim-text">6.	一种微内核插件化程序应用系统，其特征在于，包括：插件资源配置文件，用于描述组成程序应用的插件所依赖的资源信息；微内核，用于依据插件资源配置文件加载组成程序应用的插件以实现程序应用的业务 逻辑。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求6所述的系统，其特征在于，所述插件所依赖的资源信息包括插件信 息和资源信息；所述插件信息至少包括：插件的名称、插件所在动态链接库、插件标识；所 述资源信息至少包括资源文件名称。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.根据权利要求7所述的系统，其特征在于，当所述应用程序基于多个插件实现时，所 述插件资源配置文件还用于描述插件之间的关系，所述插件信息还包含所述插件依赖的子 插件信息，所述微内核先加载上层插件，后加载子插件，先加载的插件先提供服务。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.根据权利要求6所述的系统，其特征在于，所述系统还包括：资源下载服务器，用于根据微内核的下载请求提供插件资源配置文件及插件所依赖资 源的下载；所述微内核包括资源下载组件和插件加载器；资源下载组件，用于根据插件加载器的请求，从资源下载服务器下载最新的插件资源 配置文件及插件所依赖的资源；插件加载器，用于解析插件资源配置文件，并根据插件资源配置文件加载插件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.根据权利要求9所述的系统，其特征在于，所述系统还包括：插件版本控制服务器，用于控制插件资源配置文件的版本号；所述微内核还包括：插件版本控制组件，用于根据插件加载器的请求向插件版本控制 服务器发送版本查询请求，获取最新版本的插件资源配置文件版本号，当本地的插件资源 配置文件的版本不是最新版本时，所述微内核请求资源下载组件下载最新的插件资源配置 文件。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES43417182" lang="ZH" load-source="patent-office" class="description">
    <p>一种微内核插件化程序应用系统及其实现方法</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及程序语言的架构设计领域，尤其涉及一种微内核插件化程序应用系统 及其实现方法。</p>
    <p>背景技术</p>
    <p>[0002]	在软件的插件化架构实现中，有比较成熟的实现实例，比如eclipse的实现。 eclipse的规范主要是基于java语言的架构，在其它语言（比如C++)环境中还没有建立标 准化的插件系统。</p>
    <p>[0003]	传统的软件系统通过网络进行软件升级有如下几种方案：</p>
    <p>[0004]	1)直接下载最新的安装包安装。</p>
    <p>[0005]	2)软件系统自己检测新版本，提示用户下载并安装。</p>
    <p>[0006]	3)在方法2的基础上，检测本地的版本，上报服务器，服务器给出增量包的地址， 然后客户端下载服务器上的增量升级包并安装。</p>
    <p>[0007]	方案1，2都是比较常用的方法，但效率比较低，即使有一点小的变化也得下载整 个安装包。方案3的差量包的生成技术决定了下载的冗余度，而且上述3个方案都需要用 户协助并且下载完成安装。</p>
    <p>发明内容</p>
    <p>[0008]	有鉴于此，本发明的主要目的在于提供一种微内核插件化程序应用系统及其实现 方法，用于解决现有程序应用架构不够灵活、软件更新效率低、冗余度大等技术问题。</p>
    <p>[0009]	为达到上述目的，本发明的技术方案是这样实现的：</p>
    <p>[0010]	一种微内核插件化程序应用系统的实现方法，包括：</p>
    <p>[0011]	程序应用的业务逻辑基于插件来实现，使用插件资源配置文件描述组成程序应用 的插件所依赖的资源信息，在程序应用运行时，由微内核依据插件资源配置文件加载所需 插件。所述插件所依赖的资源信息包括插件信息和资源信息；所述插件信息至少包括：插 件的名称、插件所在动态链接库、插件标识；所述资源信息至少包括资源文件名称。</p>
    <p>[0012]	进一步地，当所述程序应用基于多个插件实现时，所述插件资源配置文件还用于 描述插件之间的依赖关系，所述插件信息还包含所述插件依赖的子插件信息，所述微内核 先加载上层插件，后加载子插件，先加载的插件先提供服务。</p>
    <p>[0013]	进一步地，所述微内核在依据插件资源配置文件加载插件之前，先从服务器端下 载最新版本的插件资源配置文件，并根据所述最新版本的插件资源配置文件从服务器端下 载插件所依赖的资源。优选地，所述微内核在加载插件之前，先从服务器端获取当前插件资 源配置文件的最新版本号，当依据所述版本号判定本地的插件资源配置文件不是最新版本 时，再从服务器端下载最新版本的插件资源配置文件，并根据所述最新版本的插件资源配 置文件从服务器端下载插件所依赖资源的最新版本。</p>
    <p>[0014]	基于上述方法，本发明还提出一种微内核插件化程序应用系统，包括：</p>
    <p> 3[0015]	插件资源配置文件，用于描述组成程序应用的插件所依赖的资源信息；所述插件 所依赖的资源信息包括插件信息和资源信息；所述插件信息至少包括：插件的名称、插件 所在动态链接库、插件标识；所述资源信息至少包括资源文件名称。</p>
    <p>[0016]	微内核，用于依据插件资源配置文件加载组成程序应用的插件以实现程序应用的 业务逻辑。</p>
    <p>[0017]	进一步地，当所述应用程序基于多个插件实现时，所述插件资源配置文件还用于 描述插件之间的关系，所述插件信息还包含所述插件依赖的子插件信息，所述微内核先加 载上层插件，后加载子插件，先加载的插件先提供服务。</p>
    <p>[0018]	进一步地，所述系统还包括：</p>
    <p>[0019]	资源下载服务器，用于根据微内核的下载请求提供插件资源配置文件及插件所依 赖资源的下载；</p>
    <p>[0020]	所述微内核包括资源下载组件和插件加载器；</p>
    <p>[0021]	资源下载组件，用于根据插件加载器的请求，从资源下载服务器下载最新的插件 资源配置文件及插件所依赖的资源；</p>
    <p>[0022]	插件加载器，用于解析插件资源配置文件，并根据插件资源配置文件加载插件。</p>
    <p>[0023]	进一步地，所述系统还包括：</p>
    <p>[0024]	插件版本控制服务器，用于控制插件资源配置文件的版本号；</p>
    <p>[0025]	所述微内核还包括：插件版本控制组件，用于根据插件加载器的请求向插件版本 控制服务器发送版本查询请求，获取最新版本的插件资源配置文件版本号，当本地的插件 资源配置文件的版本不是最新版本时，所述微内核请求资源下载组件下载最新的插件资源 配置文件。</p>
    <p>[0026]	本发明实现了一个友好的基于插件的软件更新系统，软件更新时以插件为单位作 为更新逻辑单元，减少了更新冗余。使用可扩展的插件结构，通过插件资源描述文件描述插 件之间的依赖关系，微内核可根据插件资源配置文件嵌套加载插件资源，扩展性很强，实现 了良好的系统结构。微内核在加载插件时，自动判断插件版本、下载插件资源，实现了系统 升级的自动化，无需要用户协助。</p>
    <p>附图说明</p>
    <p>[0027]	图1为本发明基于插件的程序更新系统结构图；</p>
    <p>[0028]	图2为本发明基于插件的程序更新系统执行程序更新的流程图；</p>
    <p>[0029]	图3为本发明加载子插件的插件加载流程图。</p>
    <p>具体实施方式</p>
    <p>[0030]	本发明的基本思想是：程序应用的业务逻辑基于插件来实现，使用插件资源配置 文件描述组成程序应用的插件所依赖的资源信息，在程序应用运行时，由微内核依据插件 资源配置文件加载所需插件。此外为了保证程序应用的版本为最新，所述微内核在依据插 件资源配置文件加载插件时，首先从服务器端下载最新版本的插件资源配置文件，并根据 最新版本的插件资源配置文件从服务器端下载该插件所依赖的资源。当程序应用基于多个 插件实现时，所述插件资源配置文件还用于描述插件之间的依赖关系，一个插件还可依赖于一个或多个子插件，所述微内核先加载上层插件，后加载子插件，先加载的插件先提供服 务，后加载的插件后提供服务，每加载成功一个插件用户即可使用该插件提供的服务，减少 用户等待时间，改善了用户体验。</p>
    <p>[0031]	为使本发明的目的、技术方案和优点更加清楚明白，以下举实施例并参照附图，对 本发明进一步详细说明。</p>
    <p>[0032]	图1为本发明基于微内核插件化的程序应用系统结构图，该系统包括：程序应用、 插件版本控制服务器、资源下载服务器。</p>
    <p>[0033]	插件版本控制服务器，用于控制插件资源配置文件的版本，在插件版本控制服务 器中存储有当前各插件对应的插件资源配置文件的最新版本号，所述插件资源配置文件用 于描述插件依赖的资源，本发明一具体实施例中，将插件资源配置文件与个性化逻辑对应， 一个插件资源配置文件描述一种个性化逻辑所依赖的资源，所述资源包括动态链接库、多 媒体支持文件等。</p>
    <p>[0034]	资源下载服务器，用于提供插件资源配置文件及插件所依赖资源的下载；</p>
    <p>[0035]	微内核，为程序应用的核心模块，用于依据插件资源配置文件加载所需插件；还用 于向插件版本控制服务器发送版本查询请求，根据插件版本控制服务器返回的插件资源配 置文件的最新版本号判断本地插件版本是否为最新，若不是最新，则向资源下载服务器发 送下载插件资源配置文件请求，在接收到资源下载服务器返回的最新的插件资源配置文件 后，对其解析，从资源下载服务器下载插件资源配置文件中指示插件所依赖的资源。</p>
    <p>[0036]	所述微内核包括：插件加载器、插件版本控制组件、资源下载组件；</p>
    <p>[0037]	插件加载器，用于依据插件资源配置文件加载插件；还用于在微内核初始运行时 向插件版本控制组件查询插件资源配置文件的版本；在获得插件版本控制组件反馈的最新 的插件资源配置文件的版本号后和本地插件资源配置文件的版本号进行比对，若本地插件 版本已经是最新版本，则直接加载，否则根据预置规则获得最新的插件资源配置文件的下 载地址，请求资源下载组件下载对应的插件资源配置文件，也可由资源下载组件根据预置 规则获得插件资源配置文件的下载地址后从资源下载服务器下载对应的插件资源配置文 件；所述微内核所加载的插件可为一个或多个；插件加载器在获得最新插件资源配置文件 后还负责对其进行解析，获得插件所依赖的资源标识和/或资源地址，然后请求资源下载 组件下载对应的资源。</p>
    <p>[0038]	插件版本控制组件用于向插件版本控制服务器发起版本查询请求，在获得插件版 本控制服务器的响应后将查询结果反馈给插件加载器；</p>
    <p>[0039]	资源下载组件用于根据插件加载器的请求，从资源下载服务器下载插件资源配置 文件及插件所依赖的资源文件。</p>
    <p>[0040]	本发明另一具体实施例中提供了一种简化的微内核插件化程序应用，该程序应用 只包含插件资源配置文件、插件所依赖的资源，微内核中也不包含插件资源配置文件及插 件所依赖资源的下载逻辑，默认上述文件都已下载到本地，则微内核可直接加载。该简化结 构中，微内核只包含插件加载器，在程序应用运行时，由微内核依据从本地读取的插件资源 配置文件加载所需插件。</p>
    <p>[0041]	可选地，本发明另一具体实施例中，只包含微内核和资源下载服务器，微内核在加 载插件时，根据预置的规则，依据插件标识和/或产品名称获得对应的插件资源配置文件的下载地址，直接到资源下载服务器上固定的下载地址下载最新的插件资源配置文件，从 而确保每次都使用到最新的版本配置。相应地，在微内核中也只需要包含插件加载器和资 源下载组件，在微内核运行时，直接请求资源下载组件从资源服务器上下载最新的插件资 源配置文件，省去了通过插件版本控制组件进行版本比对的步骤，从而保证了每次运行时， 加载运行的都是最新的插件版本。</p>
    <p>[0042]	图2为本发明基于插件的程序更新系统执行程序更新的流程图，具体步骤如下：</p>
    <p>[0043]	步骤201 ：在微内核启动运行后，插件加载器向插件版本控制组件请求插件版本；</p>
    <p>[0044]	步骤202 ：插件版本控制组件发送插件版本查询请求消息给插件版本控制服务 器，获取插件的版本；请求消息中携带插件标识、产品名称等信息，本发明一具体实施例中， 一个插件对应一种个性化逻辑，通过产品名称对该插件类型进行二级分类；</p>
    <p>[0045]	步骤203 ：插件版本控制组件获取插件版本成功后将获取的插件版本号发送给插 件加载器；</p>
    <p>[0046]	步骤204 ：插件加载器根据与资源下载服务器约定的规则将插件版本号映射为插 件资源配置文件的下载地址，请求资源下载组件下载插件对应的插件资源配置文件；</p>
    <p>[0047]	步骤205 ：资源下载组件从资源下载服务器下载与插件版本对应的插件资源配置 文件；</p>
    <p>[0048]	步骤206 ：资源下载组件将下载的插件资源配置文件发送给插件加载器；</p>
    <p>[0049]	步骤207 ：插件加载器解析插件资源配置文件，获得插件所依赖的资源的标识、下 载地址等信息；插件加载器请求资源下载组件下载对应的资源文件；</p>
    <p>[0050]	步骤208 ：资源下载组件从资源下载服务器下载资源文件；</p>
    <p>[0051]	步骤209 ：资源下载组件将下载的资源文件反馈给插件加载器，插件加载器加载 所述资源。</p>
    <p>[0052]	本发明中的插件资源配置文件用于描述组成程序应用的插件所依赖的资源信息， 插件所依赖的资源信息包括插件信息和资源信息；所述插件信息至少包括：插件的名称、 插件所在动态链接库、插件标识等；所述资源信息至少包括资源文件名称。本发明一具体实 施例中，插件资源配置文件使用XML(ExtensibIeMarkup Language，可扩展标记语言）来描 述插件所依赖的资源，通过XML语言不仅可描述插件本身的属性，而且还可结构化的描述 插件之间的依赖关系，本发明中一个插件可依赖其它子插件而存在。以下为本发明采用XML 语言的插件资源配置文件的实例：</p>
    <p>[0053]	&lt; ？ xml version = “ 1.0〃 standalone = “ yes" ？ &gt;</p>
    <p>[0054]	&lt;PluginXML Version = “ 1〃 &gt;</p>
    <p>[0055]	&lt;Plugin Name = " flashenginepreinitializer " LibraryName ="FlashEngine. dll"</p>
    <p>[0056]	ObjectID = “ 0X00000010〃 &gt;</p>
    <p>[0057]	&lt;PrivateConfig&gt;$flashversionlowlimited$[0X09000000]，</p>
    <p>[0058]	$flashocxpackagepath$[flashengine\ defaultflashcontro1. zip]</p>
    <p>[0059]	&lt;/PrivateConfig&gt;</p>
    <p>[0060]	&lt;Res&gt;[0061]	〈Item Priority =" 2" DownloadType = “ KernelZIP“</p>
    <p>[0062]	FILE=" FlashEngine. zip" Hash = “ “ Version = “ 1〃 size</p>
    <p>="“/&gt;</p>
    <p>[0063]	&lt;/Res&gt;</p>
    <p>[0064]	&lt;Children)</p>
    <p>[0065]	&lt;Plugin Name =" flashengine" LibraryName =" FlashEngine. dll "</p>
    <p>[0066]	ObjectID = " OXOFO13001" &gt;</p>
    <p>[0067]	&lt; Children)</p>
    <p>[0068]	&lt;Plugin Name =" qqpetagent" LibraryName =" QQPetAgent. dll"</p>
    <p>[0069]	ObjectID = " 0x00000001〃 &gt;</p>
    <p>[0070]	&lt;Res&gt;</p>
    <p>[0071]	〈Item Priority =" 2" DownloadType = " KemelZIP"</p>
    <p>[0072]	FILE = “ QQPetAgentMain. zip “ Hash = “ “ Version =〃 1〃 size =" “ /&gt;</p>
    <p>[0073]	&lt;/Res&gt;</p>
    <p>[0074]	&lt;/Plugin&gt;</p>
    <p>[0075]	〈/Children〉</p>
    <p>[0076]	&lt;/Plugin&gt;</p>
    <p>[0077]	〈/Children〉</p>
    <p>[0078]	&lt;/Plugin&gt;</p>
    <p>[0079]	&lt;/PluginXML&gt;</p>
    <p>[0080]	Plugin标签中的Name属性定义插件的名字，LibraryName属性定义插件所在的</p>
    <p>库，ObjectID属性定义插件在库中的标识ID ；Res标签项定义插件依赖的资源文件，在创建 插件之前需要下载准备好Res标签中的Item标签所定义的资源；Children标签中可嵌套 定义子插件，在本插件初始化完成后会加载子插件，这反应了插件之间的加载关系和依赖 关系；PrivateConfig标签用于定义插件的一些配置。</p>
    <p>[0081]	图3为本发明加载子插件的插件加载流程图，为了具有通用性，该流程示例根子 插件及根子插件下的子插件的加载流程，根子插件属于某一上层插件，一个插件可能拥有 多个同层的兄弟插件，也可拥有多个子插件。程序客户端的微内核依据插件资源配置文件 所描述的插件之间的依赖关系，嵌套执行根插件及其子插件所依赖资源的下载，并在上层 插件资源下载完毕后首先加载上层插件，先加载的插件先提供服务，实现了懒加载的程序 架构。子插件加载流程如下：</p>
    <p>[0082]	步骤301 ：在插件加载器解析到插件资源配置文件中包含子插件时，开始子插件 加载过程；首先插件加载器请求资源下载组件下载当前层级的根子插件所依赖的资源；</p>
    <p>[0083]	步骤302 ：执行根子插件的预初始化和初始化；</p>
    <p>[0084]	插件对象的预初始化不是必须，但预初始化可提醒插件初始化准备必要的服务接 口，便于兄弟节点使用，而且该方法中可以使用factroy创建子对象。</p>
    <p>[0085]	步骤303 ：将根子插件绑定到上层父插件，即将根子插件集合的指针和父插件关联（在同一个层级可同时包括多个子插件）；</p>
    <p>[0086]	步骤304 ：当解析到根子插件还包含子插件时，通过跟子插件的接口启动加载子 插件的流程；</p>
    <p>[0087]	步骤305 ：插件加载器请求资源下载组件下载根子插件的子插件χ的资源；</p>
    <p>[0088]	步骤306 ：初始化和预初始化子插件χ ；</p>
    <p>[0089]	步骤307 ：将子插件χ绑定到根子插件上；</p>
    <p>[0090]	步骤308 ：如果子插件χ还依赖下一层的子插件，则插件加载器嵌套执行子插件的 加载流程。如果同一层级下有多个子插件，则循环执行步骤304至步骤308。</p>
    <p>[0091]	本发明实现了遍历和寻找插件的服务接口，具体遍历插件和寻找插件的方法为： 插件初始化函数被调用时会获得父节点指针，插件加载子节点后，绑定子插件函数被调用 会获得子插件节点的指针接口 IChildren，这样通过接口可以实现所有的插件遍历。插件 通过插件查询函数（Querylnterface)对外提供接口服务，也可以直接继承于IPlugin，但 IPlugin方式中一个插件只能够提供一个服务接口。</p>
    <p>[0092]	本发明一具体实施例中，接口创建和动态链接库（dll)管理框架基于对象工厂 (factory)模式实现，包含三个方法，分别负责创建对象，销毁对象和注册新dll代替旧 dl 1，本发明所述插件包含于动态链接库中。</p>
    <p>[0093]	创建对象步骤为：</p>
    <p>[0094]	(1)调用系统库装载函数（Loadlibrary)加载dll ；</p>
    <p>[0095]	(2)取得创建对象的函数（CreateObject)，该函数定义在dll中；</p>
    <p>[0096]	(3)调用CreateObject函数，传入指定的对象标识（dwObjectID)，创建指定对 象；</p>
    <p>[0097]	(4)调用所创建对象中的方法ktFactory把factory指针传给创建的对象，使之 可以使用factory的方法。</p>
    <p>[0098]	系统使用一个dll中的对象时需要让factory创建dll文件中的接口，而如 果某一个dll更新，并且文件名变化的话，依赖这个文件名创建某一个接口的库也需要 重新编译，因此也就需要重新发布。本发明在管理框架中包含一个新dll注册方法Re gisterNewLibrary,该方法使得被依赖dll重新编译，并且文件名变化后在接口不变的情 况下，依赖它的dll无需重新编译，从而减少了重新编译的库，减少了系统更新的代价。</p>
    <p>[0099]	销毁对象步骤：</p>
    <p>[0100]	(1)调用对象Finalize函数，通知对象做析构前的处理；</p>
    <p>[0101]	(2)如果是同步析构则直接调用对象的Free方法，析构对象；</p>
    <p>[0102]	(3)如果是异步析构则在下一消息循环调用对象的Free方法，析构对象。</p>
    <p>[0103]	本发明的插件发布流程为：</p>
    <p>[0104]	(1)实现IPlugin接口，生成包含插件的库文件；</p>
    <p>[0105]	(2)为库文件命名后，将库文件放到资源下载服务器；</p>
    <p>[0106]	(3)把插件依赖的资源参数，包括名称、属性、地址等，添加到插件资源配置文件， 形成新的插件资源配置文件；</p>
    <p>[0107]	(4)升级插件版本控制服务器上的插件版本号或插件资源配置文件的版本号。</p>
    <p>[0108]	上所述，仅为本发明的较佳实施例而已，并非用于限定本发明的保护范围。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102760068A?cl=zh">CN102760068A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年6月1日</td><td class="patent-data-table-td patent-date-value">2012年10月31日</td><td class="patent-data-table-td ">奇智软件（北京）有限公司</td><td class="patent-data-table-td ">一种ActiveX插件加载方法和装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102760068B?cl=zh">CN102760068B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年6月1日</td><td class="patent-data-table-td patent-date-value">2015年7月22日</td><td class="patent-data-table-td ">北京奇虎科技有限公司</td><td class="patent-data-table-td ">一种ActiveX插件加载方法和装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103092645A?cl=zh">CN103092645A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年12月31日</td><td class="patent-data-table-td patent-date-value">2013年5月8日</td><td class="patent-data-table-td ">武汉中地数码科技有限公司</td><td class="patent-data-table-td ">一种基于微内核技术的地理空间信息应用系统及其实现方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103092645B?cl=zh">CN103092645B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年12月31日</td><td class="patent-data-table-td patent-date-value">2016年2月10日</td><td class="patent-data-table-td ">武汉中地数码科技有限公司</td><td class="patent-data-table-td ">一种基于微内核技术的地理空间信息应用系统及其实现方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103176844A?cl=zh">CN103176844A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年9月28日</td><td class="patent-data-table-td patent-date-value">2013年6月26日</td><td class="patent-data-table-td ">北京奇虎科技有限公司</td><td class="patent-data-table-td ">一种ie6内核与新型ie内核的切换方法和系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103176844B?cl=zh">CN103176844B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年9月28日</td><td class="patent-data-table-td patent-date-value">2016年3月30日</td><td class="patent-data-table-td ">北京奇虎科技有限公司</td><td class="patent-data-table-td ">一种ie6内核与新型ie内核的切换方法和系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103353846A?cl=zh">CN103353846A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年6月28日</td><td class="patent-data-table-td patent-date-value">2013年10月16日</td><td class="patent-data-table-td ">四川农业大学</td><td class="patent-data-table-td ">一种项目自动部署插件</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103377059A?cl=zh">CN103377059A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年4月23日</td><td class="patent-data-table-td patent-date-value">2013年10月30日</td><td class="patent-data-table-td ">阿里巴巴集团控股有限公司</td><td class="patent-data-table-td ">基于jQuery框架的功能模块动态加载方法和装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103795740A?cl=zh">CN103795740A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年10月29日</td><td class="patent-data-table-td patent-date-value">2014年5月14日</td><td class="patent-data-table-td ">腾讯科技（深圳）有限公司</td><td class="patent-data-table-td ">插件安装包的下载方法及下载终端</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2013097610A1?cl=zh">WO2013097610A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年12月13日</td><td class="patent-data-table-td patent-date-value">2013年7月4日</td><td class="patent-data-table-td ">Tencent Technology (Shenzhen) Company Limited</td><td class="patent-data-table-td ">一种基于即时通信软件实现插件升级的方法及装置</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=zNRxBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0009445000">G06F9/445</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2011年8月3日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2011年11月2日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/b41fb72d5aa5ad9d11a4/CN102141922A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E5%BE%AE%E5%86%85%E6%A0%B8%E6%8F%92%E4%BB%B6%E5%8C%96%E7%A8%8B%E5%BA%8F%E5%BA%94%E7%94%A8%E7%B3%BB.pdf?id=zNRxBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U2YV7tFMxHDZ9enM-tE4WV2ee0R4g"},"sample_url":"https://www.google.com/patents/reader?id=zNRxBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>