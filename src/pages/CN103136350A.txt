<!DOCTYPE html><html><head><title>专利 CN103136350A - 一种在系统平台上运行多个应用的方法及装置 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种在系统平台上运行多个应用的方法及装置"><meta name="DC.contributor" content="平原" scheme="inventor"><meta name="DC.contributor" content="江苏易合大成网络科技有限公司" scheme="assignee"><meta name="DC.date" content="2013-2-25" scheme="dateSubmitted"><meta name="DC.description" content="本发明涉及一种在系统平台上运行多个应用的方法，包括如下步骤：在系统平台上运行第一进程，所述第一进程创建委派对象并将其开放给注册在所述第一进程上的多个应用；在运行的第一进程上部署多个应用，所述第一进程取得各应用的文件集合中的数据类型定义文件，创建该应用的数据库表；运行所述各应用；其中，所述各应用在运行中通过所述委派对象查询并得到数据库或对方运用的数据，所述各应用通过描述式的引用访问内存。本发明还涉及一种实行上述方法的装置。实施本发明的在系统平台上运行多个应用的方法及装置，具有以下有益效果：其成本较低、数据可以共享。"><meta name="DC.date" content="2013-6-5"><meta name="DC.relation" content="CN:102231116:A" scheme="references"><meta name="DC.relation" content="CN:102323879:A" scheme="references"><meta name="DC.relation" content="US:20120324539:A1" scheme="references"><meta name="DC.relation" content="WO:2009055492:A1" scheme="references"><meta name="citation_patent_publication_number" content="CN:103136350:A"><meta name="citation_patent_application_number" content="CN:201310057931"><link rel="canonical" href="https://www.google.com/patents/CN103136350A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN103136350A?cl=zh"/><meta name="title" content="专利 CN103136350A - 一种在系统平台上运行多个应用的方法及装置"/><meta name="description" content="本发明涉及一种在系统平台上运行多个应用的方法，包括如下步骤：在系统平台上运行第一进程，所述第一进程创建委派对象并将其开放给注册在所述第一进程上的多个应用；在运行的第一进程上部署多个应用，所述第一进程取得各应用的文件集合中的数据类型定义文件，创建该应用的数据库表；运行所述各应用；其中，所述各应用在运行中通过所述委派对象查询并得到数据库或对方运用的数据，所述各应用通过描述式的引用访问内存。本发明还涉及一种实行上述方法的装置。实施本发明的在系统平台上运行多个应用的方法及装置，具有以下有益效果：其成本较低、数据可以共享。"/><meta property="og:title" content="专利 CN103136350A - 一种在系统平台上运行多个应用的方法及装置"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN103136350A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN103136350A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=IUB5CAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN103136350A&amp;usg=AFQjCNE45_jBI2jlOVgLeZjWSSxStpOfXw" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/a9ab8c748c34ebe1cd30/CN103136350A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/a9ab8c748c34ebe1cd30/CN103136350A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN103136350A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN103136350A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN103136350A?cl=zh" style="display:none"><span itemprop="description">本发明涉及一种在系统平台上运行多个应用的方法，包括如下步骤：在系统平台上运行第一进程，所述第一进程创建委派对象并将其开放给注册在所述第一进程上的多个应用；在运行的第一进程上部署多个应用，所述第一进程取...</span><span itemprop="url">https://www.google.com/patents/CN103136350A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN103136350A - 一种在系统平台上运行多个应用的方法及装置</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN103136350A - 一种在系统平台上运行多个应用的方法及装置" title="专利 CN103136350A - 一种在系统平台上运行多个应用的方法及装置"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN103136350 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201310057931</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年6月5日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2013年2月25日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2013年2月1日</td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201310057931.0, </span><span class="patent-bibdata-value">CN 103136350 A, </span><span class="patent-bibdata-value">CN 103136350A, </span><span class="patent-bibdata-value">CN 201310057931, </span><span class="patent-bibdata-value">CN-A-103136350, </span><span class="patent-bibdata-value">CN103136350 A, </span><span class="patent-bibdata-value">CN103136350A, </span><span class="patent-bibdata-value">CN201310057931, </span><span class="patent-bibdata-value">CN201310057931.0</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%B9%B3%E5%8E%9F%22">平原</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%B1%9F%E8%8B%8F%E6%98%93%E5%90%88%E5%A4%A7%E6%88%90%E7%BD%91%E7%BB%9C%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">江苏易合大成网络科技有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103136350A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103136350A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103136350A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (2)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=IUB5CAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201310057931&amp;usg=AFQjCNHUslSlDs8efNWFrj8u3TsRyLzj1w"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=IUB5CAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D103136350A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNH00bpRnTK5W679c_pRNVZvJzulwA"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT124888061" lang="ZH" load-source="patent-office">一种在系统平台上运行多个应用的方法及装置</invention-title>
      </span><br><span class="patent-number">CN 103136350 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA114706366" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明涉及一种在系统平台上运行多个应用的方法，包括如下步骤：在系统平台上运行第一进程，所述第一进程创建委派对象并将其开放给注册在所述第一进程上的多个应用；在运行的第一进程上部署多个应用，所述第一进程取得各应用的文件集合中的数据类型定义文件，创建该应用的数据库表；运行所述各应用；其中，所述各应用在运行中通过所述委派对象查询并得到数据库或对方运用的数据，所述各应用通过描述式的引用访问内存。本发明还涉及一种实行上述方法的装置。实施本发明的在系统平台上运行多个应用的方法及装置，具有以下有益效果：其成本较低、数据可以共享。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(10)</span></span></div><div class="patent-text"><div mxw-id="PCLM53160416" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.一种在系统平台上运行多个应用的方法，其特征在于，包括如下步骤:   A)在系统平台上运行第一进程，所述第一进程创建委派对象并将其开放给注册在所述第一进程上的多个应用；   B)在运行的第一进程上部署多个应用，每个应用在所述第一进程上分别具有单独的注册码和文件集合；所述文件集合包括由所述第一进程指定的在系统指定位置存放该应用数据的位置；   C)所述第一进程取得各应用的文件集合中的数据类型定义文件，创建该应用的数据库表；    D)运行所述各应用；其中，所述各应用在运行中通过所述委派对象查询并得到数据库或对方运用的数据，所述各应用通过描述式的引用访问内存。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的在系统平台上运行多个应用的方法，其特征在于，所述步骤D)进一步包括:    Dl)所述各应用定义其操作的数据模型，其中，通过所述数据库表访问的为普通实体，需要跨应用访问的为视图实体。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求2所述的在系统平台上运行多个应用的方法，其特征在于，所述步骤D)中还进一步包括:  D2)应用开始查询，判断本 次查询需要操作的实体是否为本应用实体，如是，执行步骤D3);否则，返回查询失败信息；    D3)判断所述实体是否普通实体，如是，执行步骤D4);否则，执行步骤D5)；    D4)调用所述委派对象生成查询语句，数据库执行并返回结果；所述委派对象封装结果并返回；    D5)所述实体为视图实体，判断所述视图实体是否得到对方应用授权，如是，执行步骤D4);否则，执行步骤D6)    D6)向对方应用申请授权，并判断是否得到授权，如是，执行步骤D4);否则，返回查询失败信息。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求3所述的在系统平台上运行多个应用的方法，其特征在于，所述步骤B)中，通过同样运行在所述第一进程上的控制界面，对所述多个应用进行部署。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求4所述的在系统平台上运行多个应用的方法，其特征在于，在所述步骤B)中，所述第一进程为其上注册的应用分配单独的、以其注册码区别的文件目录；所述每个应用只能访问其自己的目录；所述第一进程提供一个文件管理器对象，所述每个应用通过所述文件管理器对象对其文件进行管理。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求5所述的在系统平台上运行多个应用的方法，其特征在于，还包括如下步骤:   E)所述应用封装其业务逻辑作为一个服务，按照设定的格式定义所述服务和描述所述服务信息，并发送到所述第一进程发布，便于其他应用调用该服务。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求6所述的在系统平台上运行多个应用的方法，其特征在于，所述第一进程依据其收到的服务定义，查找到所述服务的实现，验证后发布；所述其他应用通过所述第一进程运行时创建的服务引擎调用所述服务。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.一种实现如权利要求1所述方法的装置，其特征在于，包括:第一进程运行模块:用于在系统平台上运行第一进程，所述第一进程创建委派对象并将其开放给注册在所述第一进程上的多个应用；    应用部署模块:用于在运行的第一进程上部署多个应用，每个应用在所述第一进程上分别具有单独的注册码和文件集合；所述文件集合包括由所述第一进程指定的在系统指定位置存放该应用数据的位置；    数据表建立模块:用于所述第一进程取得各应用的文件集合中的数据类型定义文件，创建该应用的数据库表；    应用运行模块:用于在所述各应用在运行中通过所述委派对象查询并得到数据库或对方运用的数据；所述各应用通过描述式的引用访问内存。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.根据权利要求8所述的装置，其特征在于，所述应用运行模块进一步包括:  实体定义单元:用于所述各应用定义其操作的数据模型，其中，通过所述数据库表访问的为普通实体，需要跨应用访问的为视图实体；  查询判断单元:用于在应用开始查询时，判断本次查询需要操作的实体是否为本应用实体；    实体判断单元:用于判断所述实体是否普通实体；    查询单元:用于调用所述委派对象生成查询语句，数据库执行并返回结果；并使所述委派对象封装结果并返回；    授权判断单元:用于在所述实`体为视图实体时，判断所述视图实体是否得到对方应用授权；  授权取得单元:同于向对方应用申请授权，并判断是否得到授权。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.根据权利要求9所述的装置，其特征在于，还包括:服务形成模块:用于使所述应用封装其业务逻辑作为一个服务，按照设定的格式定义所述服务和描述所述服务信息，并发送到所述第一进程发布，便于其他应用调用该服务。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES60208090" lang="ZH" load-source="patent-office" class="description">
    <p>一种在系统平台上运行多个应用的方法及装置</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及计算机领域，更具体地说，涉及一种在系统平台上运行多个应用的方法及装置。</p>
    <p>背景技术</p>
    <p>[0002]	随着全社会各行业信息化程度的提高，互联网和云计算的普及，在工信融合的大方向大趋势下，企业的管理信息化市场需求日益旺盛，特别是广大中小、小微企业市场将快速成长。小微企业IT预算少，然而对于应用的需求一样旺盛。而在现有技术中，各种应用(应用程序)大多是单独设置在独立的物理设备上的。对于小微企业而言，各种应用如果单独安装部署在独立的物理设备上，成本很难接受。一种解决的办法是，通过虚拟化技术，小微企业能够在同一物理设备上部署多个虚拟机，并且把应用分别安装部署在虚拟机上。这种方法虽然在一定程度上解决了上述的成本问题。但是，由于每个虚拟机运行独立的OS(操作系统)，一方面仍然耗费着大量的计算资源，另一方面，应用以及应用管理的数据之间本质上仍然是隔离的。而对于企业而言，信息在各个应用间实现共享却非常必要(比如客户信息，既要在CRM中存在，也应该在ERP中存在，OA中也应当能够获取)。因此，一种既能解决上述成本问题，又能实现应用间的数据共享的在系统平台上运行多个应用的方法就变得很有必要。</p>
    <p>发明内容</p>
    <p>[0003]	本发明要解决的技术问题在于，针对现有技术的上述成本高、应用数据隔离的缺陷，提供一种成本低、应用数据可以共享的在系统平台上运行多个应用的方法及装置。</p>
    <p> [0004]	本发明解决其技术问题所采用的技术方案是:构造一种在系统平台上运行多个应用的方法，包括如下步骤:</p>
    <p>    A)在系统平台上运行第一进程，所述第一进程创建委派对象并将其开放给注册在所述第一进程上的多个应用；</p>
    <p>    B)在运行的第一进程上部署多个应用，每个应用在所述第一进程上分别具有单独的注册码和文件集合；所述文件集合包括由所述第一进程指定的在系统指定位置存放该应用数据的位置；</p>
    <p>    C)所述第一进程取得各应用的文件集合中的数据类型定义文件，创建该应用的数</p>
    <p>据库表；</p>
    <p>    D)运行所述各应用；其中，所述各应用在运行中通过所述委派对象查询并得到数据库或对方运用的数据；所述各应用通过描述式的引用访问内存。</p>
    <p>[0005]	更进一步地，所述步骤D)进一步包括:</p>
    <p>    Dl)所述各应用定义其操作的数据模型，其中，通过所述数据库表访问的为普通实体，需要跨应用访问的为视图实体。</p>
    <p>[0006]	更进一步地，所述步骤D)中还进一步包括:D2)应用开始查询，判断本次查询需要操作的实体是否为本应用实体，如是，执行步骤D3);否则，返回查询失败信息；</p>
    <p>    D3)判断所述实体是否普通实体，如是，执行步骤D4);否则，执行步骤D5)；</p>
    <p>    D4)调用所述委派对象生成查询语句，数据库执行并返回结果；所述委派对象封装结果并返回；</p>
    <p>    D5)所述实体为视图实体，判断所述视图实体是否得到对方应用授权，如是，执行步骤D4);否则，执行步骤D6);</p>
    <p>    D6)向对方应用申请授权，并判断是否得到授权，如是，执行步骤D4);否则，返回查询失败信息。</p>
    <p>[0007]	更进一步地，所述步骤B)中，通过同样运行在所述第一进程上的控制界面，对所述多个应用进行部署。</p>
    <p>[0008]	更进一步地，在所述步骤B)中，所述第一进程为其上注册的应用分配单独的、以其注册码区别的文件目录；所述每个应用只能访问其自己的目录；所述第一进程提供一个文件管理器对象，所述每个应用通过所述文件管理器对象对其文件进行管理。</p>
    <p>[0009]	更进一步地,还包括如下步骤:</p>
    <p>    E)所述应用封装其业务逻辑作为一个服务，按照设定的格式定义所述服务和描述所述服务信息，并发送到所述第一进程发布，便于其他应用调用该服务。</p>
    <p>[0010]	更进一步地，所述第一进程依据其收到的服务定义，查找到所述服务的实现，验证后发布；所述其他应用通过所述第一进程运行时创建的服务引擎调用所述服务。</p>
    <p>[0011]	本发明还涉及一种实现上述方法的装置，包括:</p>
    <p>    第一进程运行模块:用于在系统平台上运行第一进程，所述第一进程创建委派对象并将其开放给注册在所述第一进程上的多个应用；</p>
    <p>    应用部署模块:用于在运行的第一进程上部署多个应用，每个应用在所述第一进程上分别具有单独的注册码和文件集合；所述文件集合包括由所述第一进程指定的在系统指定位置存放该应用数据的位置；</p>
    <p>    数据表建立模块:用于所述第一进程取得各应用的文件集合中的数据类型定义文件，创建该应用的数据库表；</p>
    <p>    应用运行模块:用于在所述各应用在运行中通过所述委派对象查询并得到数据库或对方运用的数据；所述各应用通过描述式的引用访问内存。</p>
    <p>[0012]	跟进一步地，所述应用运行模块进一步包括:</p>
    <p>  实体定义单元:用于所述各应用定义其操作的数据模型(数据类型？)，其中，通过所述数据库表访问的为普通实体，需要跨应用访问的为视图实体；</p>
    <p>  查询判断单元:用于在应用开始查询时，判断本次查询需要操作的实体是否为本应用实体；</p>
    <p>    实体判断单元:用于判断所述实体是否普通实体；</p>
    <p>    查询单元:用于调用所述委派对象生成查询语句，数据库执行并返回结果；并使所述委派对象封装结果并返回；     授权判断单元:用于在所述实体为视图实体时，判断所述视图实体是否得到对方</p>
    <p>应用授权；  授权取得单元:同于向对方应用申请授权，并判断是否得到授权。</p>
    <p>[0013]	更进一步地，还包括:</p>
    <p>服务形成模块:用于使所述应用封装其业务逻辑作为一个服务，按照设定的格式定义所述服务和描述所述服务信息，并发送到所述第一进程发布，便于其他应用调用该服务。</p>
    <p>[0014]	实施本发明的在系统平台上运行多个应用的方法及装置，具有以下有益效果:由于在第一进程上运行各应用，且将各应用的文件、数据分别存放，所以可以实现在一个硬件平台上运行多个应用；同时，由于使用委派对象(delegate)查询其他应用的数据，所以，可以实现不同应用之间的数据共享。综上，其成本较低、数据可以共享。</p>
    <p>附图说明</p>
    <p>[0015]	图1是本发明在系统平台上运行多个应用的方法及装置实施例中的方法流程图；  图2是所述实施例中数据共享步骤的具体流程图；</p>
    <p>  图3是所述实施例中的装置结构示意图。</p>
    <p>具体实施方式</p>
    <p>[0016]	下面将结合附图对本发明实施例作进一步说明。</p>
    <p>[0017]	如图1所示，在本发明在系统平台上运行多个应用的方法及装置实施例中，包括如下步骤:</p>
    <p>  步骤Sll运行第一进程:在本步骤中，由于需要在一个硬件平台上运行多个应用(或应用程序)，而多个应用均是在运行在第一进程(或称为应用沙箱)上的，所以，首先需要在系统平台上运行第一进程，当第一进程开始运行后，其创建委派对象(delegate)，并将创建的委派对象开放给注册在第一进程上的多个应用。如果该系统平台是第一次运行第一进程，则可能还没有应用在该第一进程上注册，此时，委派对象将被创建为开放给后续注册的引用。总之，不管应用在上述第一进程注册的时间是否在上述委派对象创建之前，只要在第一进程上注册的应用，上述委派对象都将对其开放；也就是这些应用均可以调用该委派对象。在本实施例中，委派对象是一种中间对象，可以将调用者和被调用者进行解耦；采用委派对象这种模式，对数据库的访问处理和控制逻辑进行封装，从而应用沙箱只需要把委派对象提供给各应用，就可以实现数据访问、隔离以及共享。例如，应用调用delegate,execute ( “examplel”, condition, option)来访问数据，其中第一个参数是实体或者视图实体名称，condition为条件对象,option为其他查询参数比如排序,去重等。总之,委派对象提供了对后台数据库访问所需的接口，并实现了数据隔离和有限的共享。</p>
    <p>[0018]	步骤S12在第一进程上部署多个应用:在本步骤中，在上述运行的第一进程上部署(包括注册)多个应用。其中，每个应用在第一进程上分别具有单独的注册码和文件集合；该文件集合包括由第一进程指定的在系统指定位置存放该应用数据的位置。通常，应用的文件包括数据模型定义文件、服务声明文件和服务实现脚本文件；展现层模板文件和展现层控制脚本文件；这些文件通过第一进程存储在系统为上述第一进程划出的、指定的存储区域内。仅有第一进程能够直接读取这些文件。对于系统而言，这些文件(包括数据)是第一进程运行中得到的文件或数据，也可以理解为第一进程中的一个线程文件或一个操作的文件。</p>
    <p>[0019]	步骤S13取得各应用的数据类型文件，创建对应各应用的数据库表:在本步骤中，第一进程取得各应用的文件集合中的数据类型定义文件，创建该应用的数据库表；在本实施例中，每个应用均有一个数据库表，该应用通过该数据库表对数据库进行访问，也就是说，该应用不能直接对数据库进行访问，而是必须通过第一进程和数据库表对数据库进行访问。</p>
    <p>[0020]	步骤S14运行各应用:在本步骤中，在上述第一进程注册的各应用开始运行；其中，各应用在运行中通过所述委派对象查询并得到数据库或对方应用(其他的应用)的数据；且各应用通过描述式的引用访问内存。在本实施例中，上述描述式的引用访问内存是内存管理、回收的一种机制，其允许对象通过描述式的引用来调用其他对象的方法、访问其他对象的数据，但禁止类似C语言的指针方式的寻址，从而防止对象数据受到有意或者无意的破坏。当然，在本实施例中，本步骤可以分解为多个具体的步骤。</p>
    <p>[0021]	在本实施例中，上述步骤S14可以进一步分解为如图2所示的步骤，包括:</p>
    <p>  步骤S21判断本次查询的实体是否是本应用实体:在本实施例中，当一个应用需要查询数据库或需要取得别的应用的数据时，并不能直接访问该数据，而是需要执行一定的步骤取得其需要的数据。整体上来讲，当一个应用开始运行时，通常会取得该应用的操作数据模型。在本实施例中，每个应用需要操作的数据模型也可以称为实体；其中，通过该应用的数据库表访问数据块并取得数据的数据模型为普通实体，而需要跨应用访问数据的数据模型的为视图实体。这些实体的定义是在应用开始运行时就定义好的。而当应用需要取得数据时，就需要本步骤中的判断，判断该需要取得数据步骤所涉及的实体是否是本应用的实体，具体的判断方式是通过该实体的名称及参数进行的。如果是本应用涉及的实体，则执行下一步骤；否则，直接跳转到步骤S27。</p>
    <p>[0022]	步骤S22判断该实体是否普通实体:在本步骤中，判断上述实体是否是普通实体，其判断同样是通过该实体的名称及参数进行的。如果是普通实体，执行下一步骤；否则，就是视图实体，跳转到步骤S24执行。</p>
    <p>[0023]	步骤S23调用委派对象生成查询语句，数据库执行并返回查询结果:在本步骤中，应用通过调用第一进程提供给该应用的委派对象，生成查询语句，对数据库进行查询，从而得到需要的数据；同样，这些数据也并不是直接返回给该应用的，而是通过上述委派对象，将查询到的数据封装后再生成相关对象，返回到该应用。总之，上述数据的取得并不意味着对原始数据的修改，而是通过一定的步骤将对方运用或数据库允许访问的数据拷贝到本应用中，因而不会对对方运用或数据库的数据造成影响。</p>
    <p>[0024]	步骤S24判断是否得到对方应用授权:在本步骤中，由于当前的实体是视图实体，也就是说，需要查询的数据是其他应用的数据，为此需要得到对方的授权，也就是要对方运行才能取得这些数据。为此，在本步骤中，判断该视图实体是否得到对方授权，如是，执行步骤S23 ;否则，执行下一步骤。</p>
    <p>[0025]	步骤S25向对方应用申请授权:在本步骤中，该应用通过第一进程向涉及的相关应用申请授权。</p>
    <p>[0026]	步骤S26判断是否得到对方应用授权:在本步骤中，判断上述授权申请是否被批准，如是，跳转到步骤S23执行；否则，执行步骤S27。[0027]	步骤S27返回查询失败信息:在本步骤中，返回查询失败信息。也就是说，未查询到数据。</p>
    <p>[0028]	此外，上述步骤S12中，通过同样运行在第一进程上的控制界面，对所述多个应用进行部署。应用注册时，第一进程为其上注册的应用分配单独的、以其注册码区别的文件目录；每个应用只能访问其自己的目录；第一进程提供一个文件管理器对象，所述每个应用通过所述文件管理器对象对其文件进行管理。</p>
    <p>[0029]	在本实施例中，如果一个应用需要为其他应用提供服务，则该应用首先封装其业务逻辑作为一个服务，按照设定的格式定义该服务和描述该服务信息，并发送到第一进程发布，便于其他应用调用该服务。而第一进程依据其收到的服务定义，查找到所述服务的实现，验证后发布；当其他应用调用该服务时，首先需要告知第一进程其所需服务的定义，其他应用通过所述第一进程运行时创建的服务引擎调用该服务。因此，第一进程在开始运行之初要创建一个服务引擎。</p>
    <p>[0030]	在本实施例中，上述方法可以实施在目前可获取的各种架构的平台上，例如:硬件平台:包括但不限于x86、ARM架构；操作系统:包括但不限于Linux、Windows、Mac OS X操作系统；虚拟机宿主:包括但不限于KVM、XEN、VMWare。</p>
    <p>[0031]	在本实施例中，从应用的性质上来看，如果将一个应用视为一个节点的话，应用可以分为管理节点和应用节点，管理节点独立于应用节点运行，提供对应用节点的监控；通过应用运行时环境的接口对各个应用进行干预，自动备份应用的数据和配置；除此以外，还能通过控制台(或称为控制界面)进行上述管理操作，并可以进行应用的部署和卸载，应用数据或者配置的恢复；</p>
    <p>  第一进程(应用沙箱)是一个独立的操作系统进程，同时是其他企业应用的容器，应用沙箱负责管理线程调度、并发控制以及事务控制，应用负责模型定义、业务逻辑实现、展现；应用沙箱将应用运行时平台中的持久化资源&#8212;&#8212;数据库和文件系统进行封装，然后提供给应用使用，通过应用沙箱的数据库访问机制和文件访问机制确保隔离性；应用沙箱提供给应用的编程语言不得通过指针直接寻址内存。相反，应用必须通过描述式的引用来访问内存，应用不能从应用沙箱中获得对其他应用中的对象的引用，从而确保一个进程内的对象的互不影响；(Java和大多数脚本语言都有类似的特性，应用沙箱可以支持这些语言作为应用的编程语言)此外应用沙箱通过一种服务引擎的机制来提供应用之间更加松耦合的交互方式。</p>
    <p>[0032]	在本实施例中，每个应用包括一个唯一的“应用ID”和一个文件的集合，包括以下文件:数据模型定义文件、服务声明文件和服务实现脚本文件；展现层模板文件和展现层控制脚本文件；应用的部署包括以下过程:应用沙箱注册“应用ID”，在文件系统上分配/runtime/appdata/应用ID作为该应用文件存储的位置；应用沙箱读取数据模型定义文件，创建所需的数据库表；应用沙箱注册服务，每个应用的服务都以“应用ID”+服务名进行区分；应用沙箱将其他文件保存在/deployment/应用ID的对应目录下。</p>
    <p>[0033]	在本实施例中，每个应用都要定以它需要操作的数据模型称为“实体”，应用沙箱中包括两类实体:普通实体:映射为数据库的表；视图实体:应用沙箱将通过视图实体实现跨应用数据的访问。</p>
    <p>[0034]	应用沙箱在启动时创建一个委派对象(delegate)，并将委派对象的引用暴露给各个应用使用。委派对象提供了对后台数据库访问所需的接口，并实现了数据隔离和有限的共享。应用之间的实体访问授权可以有多种实现方式，比如基于PKI的证书授权方式实现。每个应用可以定义授权的策略，由应用沙箱根据策略判断是否授权。在任何情况下，委派保证应用不能更改另一个应用的实体，只能通过关联实体的方式在本应用的schema内创建关联表来增加实体的信息字段，并通过视图实体来查询。如果一个应用一定要增加另一个应用的数据行，比如ERP应用中要增加一个客户(CRM应用)，则需要通过后面描述的服务机制来实现。应用沙箱为每个应用分配一个目录。目录名为/runtime/appdata/应用ID。每个应用只能访问自己的目录。应用沙箱提供给应用一个文件管理器对象(fi IeManager ),应用只能通过fileManager在自己的目录下:创建/删除子目录、仓Il建/更新/读取/删除文件。应用沙箱提供对文件访问的并发控制。</p>
    <p>[0035]	如果应用需要访问其他应用的文件，仅当其他应用发布了相关的服务时，可以通过服务调用来实现。应用之间如果需要进一步共享数据、文件，或者应用希望将自己的业务逻辑封装好后提供给其他应用使用，就可以用到服务引擎机制；服务的定义和实现为应用通过统一的格式定义服务和描述服务信息，并通过应用沙箱支持的编程语言实现。例如:月艮务的发布:应用沙箱根据服务定义，寻找到服务实现，验证后进行发布。发布之后的服务可以被其他应用所调用。服务的调用。</p>
    <p>[0036]	应用沙箱在启动时创建服务引擎，并将服务引擎的访问控制器(dispatcher)提供给各个应用使用，各个应用可以通过类似于dispatcher, run ( “createParty”, “crm”，{name=testname, date=now})的方式调用某个应用发布的服务。</p>
    <p>[0037]	本发明还涉及一种实现上述方法的装置，如图3所示，该装置包括:第一进程运行模块31、应用部署模块32、数据表建立模块33、应用运行模块34以及服务形成模块35 ；其中，第一进程运行模块31用于在系统平台上运行第一进程，第一进程创建委派对象并将其开放给注册在所述第一进程上的多个应用；应用部署模块32用于在运行的第一进程上部署多个应用，每个应用在第一进程上分别具有单独的注册码和文件集合；文件集合包括由第一进程指定的在系统指定位置存放该应用数据的位置；数据表建立模块33用于使第一进程取得各应用的文件集合中的数据类型定义文件，创建该应用的数据库表；应用运行模块34用于在所述各应用在运行中通过所述委派对象查询并得到数据库或对方运用的数据；所述各应用通过描述式的引用访问内存；服务形成模块35用于使应用封装其业务逻辑作为一个服务，按照设定的格式定义所述服务和描述所述服务信息，并发送到所述第一进程发布，便于其他应用调用该服务。</p>
    <p>[0038]	在本实施例中，应用运行模块34进一步包括:实体定义单元341，用于所述各应用定义其操作的数据模型，，通过所述数据库表访问的为普通实体，需要跨应用访问的为视图实体；查询判断单元342，用于在应用开始查询时，判断本次查询需要操作的实体是否为本应用实体；实体判断单元343，用于判断所述实体是否普通实体；查询单元344，用于调用所述委派对象生成查询语句，数据库执行并返回结果；并使所述委派对象封装结果并返回；授权判断单元345，用于在所述实体为视图实体时，判断所述视图实体是否得到对方应用授权；授权取得单元346，同于向对方应用申请授权，并判断是否得到授权。</p>
    <p>[0039]	一般来讲，以iOS为代表的个人应用平台和本实施例中的方法及装置有着以下显著的区别:iOS为代表的个人应用平台管理的应用在运行时每一个是一个独立的操作系统进程，iOS应用平台本身不提供请求派发、并发控制和事务控制(当然这些对于个人应用而言并不重要)，而本装置中应用沙箱管理的应用只是被管理的一组文件，运行时由沙箱负责请求处理、线程调度、调用应用业务逻辑和事务控制；iOS为代表的个人应用通过为应用创建不同的操作系统用户来进行权限的区分，如果应用通过一些计算或者通过伪造破解了根用户的证书，那么可以通过操作系统获得根用户的权限，从而整个平台就被劫持了(比如设备的越狱)；对于本装置，应用不能调用应用沙箱提供之外的其他接口，而且应用逻辑的触发也完全由应用沙箱控制，安全性更高。</p>
    <p>[0040]	同样地，以J2EE为代表的企业应用平台，也能够在一个进程内提供对多个应用的管理，并提供多线程和事务管理的支持。本实施例中的方法及装置与J2EE为代表的企业应用平台的显著区别在于:本装置能够实现持久化资源在应用之间的隔离，而J2EE的应用能够直接以容器进程的用户身份和权限访问文件与数据库资源，无法实现应用之间的隔离。而应用之间的隔离对于管理多个共存的第三方应用来讲，是非常必要的一个特性；本装置通过特殊的数据访问机制，不仅能保证隔离，更能够支持必要的数据信息共享，而J2EE平台并不提供这种机制</p>
    <p>  在将0A、CRM, ERP三个应用分别以独立VM部署方式和本实施例中的方法进行部署，以下为一个典型部署所需求的硬件指标和测得的平均交易响应时间:</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN103136350A/CN103136350AD00101.png"> <img id="idf0001" file="CN103136350AD00101.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN103136350A/CN103136350AD00101.png" class="patent-full-image" alt="Figure CN103136350AD00101"> </a> </div>
    <p>  可见通过本发明所描述的装置对应用的管理方式，可以实现许多第三方应用在一个低成本、低功耗的廉价硬件上的同时运行，并支持这些应用之间共享信息。并且仍然能够很好的支持中小企业规模的用户请求规模。</p>
    <p>[0041]	以上所述实施例仅表达了本发明的几种实施方式，其描述较为具体和详细，但并不能因此而理解为对本发明专利范围的限制。应当指出的是，对于本领域的普通技术人员来说，在不脱离本发明构思的前提下，还可以做出若干变形和改进，这些都属于本发明的保护范围。因此，本发明专利的保护范围应以所附权利要求为准。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102231116A?cl=zh">CN102231116A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年7月4日</td><td class="patent-data-table-td patent-date-value">2011年11月2日</td><td class="patent-data-table-td ">成都市华为赛门铁克科技有限公司</td><td class="patent-data-table-td ">应用程序虚拟化安装及加载方法及装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102323879A?cl=zh">CN102323879A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年6月7日</td><td class="patent-data-table-td patent-date-value">2012年1月18日</td><td class="patent-data-table-td ">北京大学</td><td class="patent-data-table-td ">完整网络中间件运行支撑平台及异构中间件的集成方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20120324539">US20120324539</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value"></td><td class="patent-data-table-td patent-date-value">2012年12月20日</td><td class="patent-data-table-td ">International Business Machines Corporation</td><td class="patent-data-table-td ">Dynamic application adaptation in software-as-a-service platform</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2009055492A1?cl=zh">WO2009055492A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2008年10月22日</td><td class="patent-data-table-td patent-date-value">2009年4月30日</td><td class="patent-data-table-td ">Microsoft Corporation</td><td class="patent-data-table-td ">Model-based composite application platform</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=IUB5CAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年6月5日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年7月10日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/a9ab8c748c34ebe1cd30/CN103136350A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E5%9C%A8%E7%B3%BB%E7%BB%9F%E5%B9%B3%E5%8F%B0%E4%B8%8A%E8%BF%90%E8%A1%8C%E5%A4%9A%E4%B8%AA%E5%BA%94.pdf?id=IUB5CAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U2QB8TZDgLN9OGatrlYSaiA0x75Iw"},"sample_url":"https://www.google.com/patents/reader?id=IUB5CAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>