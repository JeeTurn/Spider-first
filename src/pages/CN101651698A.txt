<!DOCTYPE html><html><head><title>专利 CN101651698A - 基于nio和io的面向发布订阅系统的传输方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_5115ea495017d9115e613207d3810e5a/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_5115ea495017d9115e613207d3810e5a__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="基于nio和io的面向发布订阅系统的传输方法"><meta name="DC.contributor" content="健 吴" scheme="inventor"><meta name="DC.contributor" content="吴朝晖" scheme="inventor"><meta name="DC.contributor" content="尹建伟" scheme="inventor"><meta name="DC.contributor" content="施东材" scheme="inventor"><meta name="DC.contributor" content="莹 李" scheme="inventor"><meta name="DC.contributor" content="桢 王" scheme="inventor"><meta name="DC.contributor" content="邓水光" scheme="inventor"><meta name="DC.contributor" content="浙江大学" scheme="assignee"><meta name="DC.date" content="2007-12-12" scheme="dateSubmitted"><meta name="DC.description" content="本发明涉及一种基于NIO和IO的面向发布订阅系统的传输方法，在服务端采用NIO，启用唯一的接收socket连接的线程，这个接收线程包含有Selector对象、读线程组和写线程组，Selector对象从客户端捕捉到各种事件，读线程组和写线程组用来接收来自客户端的socket连接以及向客户端写入数据；每个读线程或写线程分别对应一个socket连接，并将每次接收到的socket都封装起来成为一个可读写数据的对象，将其再注册到唯一的Selector对象上，当客户端连接关闭的时，将连接从读写线程中注销，注销后，读写线程则可以绑定新的连接。本发明优点是：基于java的IO和NIO的混合使用，将NIO用在服务端减少线程数量，从而减少资源的消耗，在客户端利用IO与服务端连接，进而大大提高了消息发送的速度。"><meta name="DC.date" content="2010-2-17"><meta name="citation_patent_publication_number" content="CN:101651698:A"><meta name="citation_patent_application_number" content="CN:200710164757"><link rel="canonical" href="https://www.google.com/patents/CN101651698A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN101651698A?cl=zh"/><meta name="title" content="专利 CN101651698A - 基于nio和io的面向发布订阅系统的传输方法"/><meta name="description" content="本发明涉及一种基于NIO和IO的面向发布订阅系统的传输方法，在服务端采用NIO，启用唯一的接收socket连接的线程，这个接收线程包含有Selector对象、读线程组和写线程组，Selector对象从客户端捕捉到各种事件，读线程组和写线程组用来接收来自客户端的socket连接以及向客户端写入数据；每个读线程或写线程分别对应一个socket连接，并将每次接收到的socket都封装起来成为一个可读写数据的对象，将其再注册到唯一的Selector对象上，当客户端连接关闭的时，将连接从读写线程中注销，注销后，读写线程则可以绑定新的连接。本发明优点是：基于java的IO和NIO的混合使用，将NIO用在服务端减少线程数量，从而减少资源的消耗，在客户端利用IO与服务端连接，进而大大提高了消息发送的速度。"/><meta property="og:title" content="专利 CN101651698A - 基于nio和io的面向发布订阅系统的传输方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN101651698A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN101651698A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=sk93BwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN101651698A&amp;usg=AFQjCNFustWndzZ5SmiRvVKsW0lRp64X0g" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/1006f5c8769b9726e5c1/CN101651698A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/1006f5c8769b9726e5c1/CN101651698A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN101651698A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN101651698A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN101651698A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN101651698B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN101651698A?cl=zh" style="display:none"><span itemprop="description">本发明涉及一种基于NIO和IO的面向发布订阅系统的传输方法，在服务端采用NIO，启用唯一的接收socket连接的线程，这个接收线程包含有Selector对象、读线程组和写线程组，Selector对象从客户端捕捉到各种事件，读线程组和写线程组...</span><span itemprop="url">https://www.google.com/patents/CN101651698A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN101651698A - 基于nio和io的面向发布订阅系统的传输方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN101651698A - 基于nio和io的面向发布订阅系统的传输方法" title="专利 CN101651698A - 基于nio和io的面向发布订阅系统的传输方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN101651698 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 200710164757</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2010年2月17日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2007年12月12日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2007年12月12日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN101651698B?hl=zh-CN&amp;cl=zh">CN101651698B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">200710164757.4, </span><span class="patent-bibdata-value">CN 101651698 A, </span><span class="patent-bibdata-value">CN 101651698A, </span><span class="patent-bibdata-value">CN 200710164757, </span><span class="patent-bibdata-value">CN-A-101651698, </span><span class="patent-bibdata-value">CN101651698 A, </span><span class="patent-bibdata-value">CN101651698A, </span><span class="patent-bibdata-value">CN200710164757, </span><span class="patent-bibdata-value">CN200710164757.4</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%81%A5+%E5%90%B4%22">健 吴</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%90%B4%E6%9C%9D%E6%99%96%22">吴朝晖</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%B0%B9%E5%BB%BA%E4%BC%9F%22">尹建伟</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%96%BD%E4%B8%9C%E6%9D%90%22">施东材</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%8E%B9+%E6%9D%8E%22">莹 李</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%A1%A2+%E7%8E%8B%22">桢 王</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%82%93%E6%B0%B4%E5%85%89%22">邓水光</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%B5%99%E6%B1%9F%E5%A4%A7%E5%AD%A6%22">浙江大学</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN101651698A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN101651698A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN101651698A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (7),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (4)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=sk93BwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D200710164757&amp;usg=AFQjCNEISVaRticnFKRCVhjAvqjkaqEIuw"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=sk93BwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D101651698A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNHdfasxq224hnRW9HsmRys1I24VHg"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT92722897" lang="ZH" load-source="patent-office">基于nio和io的面向发布订阅系统的传输方法</invention-title>
      </span><br><span class="patent-number">CN 101651698 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA73846336" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明涉及一种基于NIO和IO的面向发布订阅系统的传输方法，在服务端采用NIO，启用唯一的接收socket连接的线程，这个接收线程包含有Selector对象、读线程组和写线程组，Selector对象从客户端捕捉到各种事件，读线程组和写线程组用来接收来自客户端的socket连接以及向客户端写入数据；每个读线程或写线程分别对应一个socket连接，并将每次接收到的socket都封装起来成为一个可读写数据的对象，将其再注册到唯一的Selector对象上，当客户端连接关闭的时，将连接从读写线程中注销，注销后，读写线程则可以绑定新的连接。本发明优点是：基于java的IO和NIO的混合使用，将NIO用在服务端减少线程数量，从而减少资源的消耗，在客户端利用IO与服务端连接，进而大大提高了消息发送的速度。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(2)</span></span></div><div class="patent-text"><div mxw-id="PCLM29207205" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1、一种基于NIO和IO的面向发布订阅系统的传输方法，其特征在于：在服务端采用了JDK1.4中的NIO，启用唯一的接收socket连接的线程，这个接收线程包含有一个Selector对象和一个读线程组和写线程组，Selector对象主要从客户端捕捉到各种事件，读线程组和写线程组用来接收来自客户端的socket连接以及向客户端写入数据，这个Selector对象注册了一个ServerSocketChannel对象，这个ServerSocketChannel对象用来接收来自客户端的socket连接；每个读线程或写线程分别对应一个socket连接，并将每次接收到的socket都封装起来成为一个可读写数据的SelectableChannel对象，调用java的regist()函数将其再注册到唯一的Selector对象上，当客户端连接关闭的时候，将连接从读写线程中注销，注销后，读写线程则可以绑定新的连接；对于选中的用来读写数据的Channel，包括ReadableByteChannel和WritableByteChannel进行的操作是非阻塞的；在客户端采用基于流的IO操作，按照以上步骤，就完成了一个消息从消息生产者发送到事件通知服务，再从事件通知服务发送到消息订阅者的过程。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2、 根据权利要求1所述的基于NIO和IO的面向发布订阅系统的传输方法，其特征在于：在客户端 采用基于流的IO操作，主要过程包括如下步骤：1) 启动服务器端接收SocketChannel连接的接收线程，并启动读、写线程组；2) 客户端进行操作时，打开一个Socket连接到服务器端，服务器端的接收线程开始接收连接，并把 接收到的SocketChannel向服务器端的读写线程注册，即将连接的SocketChannel绑定到读写线程 上；3) 客户端将要发送的消息作为数据报的一部分，每个数据报格式为数据报头、消息体，其中数据报 头包含一个特殊的标志符和表示消息大小的一个整数，而后将数据报加码为二进制流，然后通过 Socket调用write ()函数将数据报发送到服务器端；4) 服务器端读线程从Socket中读取标志数据报的二进制流，如读取数据为数据报头，则新建一个数 据报，并将此流解码为数据报；然后服务器处理此数据报，并生成返回客户端的数据报，利用 NIO的WriteableByteChaimel,将处理后得到的数据报加码后变为二进制流，发送到客户端；5) 客户端从Socket读取此二进制流，同上解码为数据报，并根据数据报格式判断数据报是否需要客 户端处理器进行处理，如果需要处理，则将此数据报进行处理，否则，什么也不做。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES35673045" lang="ZH" load-source="patent-office" class="description">
    <p>基于NIO和IO的面向发布订阅系统的传输方法</p>
    <p>技术领域</p>
    <p>本发明涉及数据传输领域，主要是一种基于NIO和IO的面向发布订阅系统的传输方法。背景技术</p>
    <p>发布/订阅（publish/subscribe,简称pub/sub)系统是一种分布式中间件系统，是随着复杂大规模的网络计算而出现的一种技术，用于为分布式系统中的各参与者提供一种松耦合的通信方式。在大规模、高度动态的分布式系统中，参与者在时间以及空间位置上通常都是动态变化的，比如在出差途中使用掌上电脑等移动设备，频繁的加入和退出网络，因此需要一种松耦合的方式参与消息交互和协同工作。而发布/订阅系统的松耦合的特性，恰能解决这个问题。</p>
    <p>如图1所示， 一个发布/订阅系统中一般由消息生产者（publisher),消息消费者（subscriber)和事件通知服务组成。在发布/订阅系统中，消息通常被称为"事件"，消息生产者将"事件"发送给事件通知服务；消息消费者则向事件通知服务发出一个"订阅条件"，表示对系统的哪些事件感兴趣；而事件通知服务则保证将发布的事件及时、可靠地送给所有感兴趣的消息消费者。而发布者和消费者在进行消息交互时，都不需要知道对方的存在，使得它们在时间和空间被完全解耦，从而能够满足大规模、动态的分布式系统的需要。</p>
    <p>而在传统的发布/订阅系统中，事件的生产者和消费者之间的传输多采用基于java的老式IO (输入/输出）方式。在这种方式中，服务端将在开始时建立一个监听socket (套接字），socket是主要用来进行客户端和服务器端通讯的工具，当简历一个监听socket后，就等待客户端请求，客户连接后，产生会话，会话完成后，关闭连接；而客户端通过socket对服务端发出连接请求， 一旦连接成功，打开会话，会话完成，关闭socket 。</p>
    <p>在这种传输系统中，系统的瓶颈通常在10读写方面，在打开一个IO通道后，read()方法将一直等待在端口一边读取字节内容，如果没有内容进来，read()也是一直等待，这会影响我们程序继续做其他事情，那么改进做法就是开设线程，让线程去等待，但是这样做也是相当耗费资源的，尤其是在大规模分布式系统中，如果我们要接受大量的客户端的连接，必须要开设大量的线程，而这将是对资源的严重浪费。</p>
    <p>而基于java的NIO (newIO)的出现，则改变了这种现状，使网络传输的协议不再集中在IO读写上。NIO最大的特点有两个： 一个是块状读写；另外一个是多路复用技术（multiplex)。第一个特点改变了老式10中，每次读写只有一个字节（stream)或两个字节（reader)的方式，提高了读写的速度；第二个特点改变了原来读写socket时候阻塞的同步状况，使socket的读写具有异步的功能。</p>
    <p>Java NIO非阻塞技术实际是采取Reactor模式，或者说是Observer模式为我们监察IO端口 ，如果有内容进来，会自动通知我们，这样，我们就不必开启多个线程死等，从外界看，实现了流畅的IO读写，不堵塞了。NK)有一个主要的类Selector,这个类就好像一个观察者，只要我们把需要探知的socketchannel(套接字通道)告诉Selector,我们接着做别的事情，当有事件发生时,他会通知我们，传回一组SelectionKey，我们读取这些Key,就会获得我们刚刚注册过的socketchannel,然后，我们从这个Channel中读取数据，放心，包准能够读到，接着我们可以处理这些数据。</p>
    <p>在我们使用NIO的时候，cpu时间多会消耗在Selector的select操作上（NIO的多路复用），而select操作主要调用的是poll函数，这个操作是一个轮询socket的同步操作，它的主要功能就是不断地去查询向该选择器注册的socket,看看有没有可做的操作，如有，则返回，没有，继续不断地轮询。也就说，分配的cpu的时间基本上被消耗在poll上了 。</p>
    <p>之所以如此，是因为没有东西可以写入或从socket中读取；那么，就应该给"提供读写数据的线程"更多的cpu时间，使得每一次的poll都有可作的操作，使时间耗费在读写socket之上，而不是poll之上。然而，从实际情况中看来，poll线程显然比"提供读写数据的线程(wr线程)"占用了更多的cpu时间，假设他们的优先级相同，也假设操作系统是公平的分配cpu时间，那么它们得到的cpu时间应该是一样的，此时，造成它们占用cpu时间不同的原因就很可能是这样：在相同的时间内，wr线程提供的数据量根本不够poll线程处理，poll线程处理在相同的时间内处理这些数据绰绰有余，那么，poll线程更多的时间就耗费在轮询上了。到这里，我们假设的是这两个线程分配到了相同的时间，所以，即使poll线程大部分时间是在做poll轮询操作，那么所占用的时间最大值也是有限的，不会超过线程分配得到的时间。但是，如果此时尽管wr线程得到了cpu时间，但是它在处理过程中主动放弃cpu (比如执行wait操作），那么，在cpu时间总量相等的情况下，由于poll线程没有执行wait操作，因此，就会得到更多的cpu时间，这样，大部分的cpu时间都给poll的轮询操作了 。</p>
    <p>如果我们可以如果使wr线程不断的运行，而使poll线程在没有数据的时候放弃cpu时间，就应该可以减少poll线程的轮询操作，而使wr线程得到更多的cpu时间，提供更多的可供读写的数据，提高读写的效率。然而，由于poll轮询操作是一个不间断的过程，是sun公司提供的底层的api，是无法修改的。所以，就要放弃poll操作，也就是要放弃选择器。</p>
    <p>发明内容</p>
    <p>本发明要解决上述技术所存在的缺陷，提供一种基于NIO和IO的面向发布订阅系统的传输方法。本发明解决其技术问题所采用的技术方案：这种基于NIO和IO的面向发布订阅系统的传输方法，我</p>
    <p>们的传输协议在服务端摒弃老式的基于流的IO，而采用了 JDK1.4中的NIO，而在客户端仍采用老式的I/O。在服务端我们启用唯一的接收socket连接的线程，这个接收线程包含有一个Selector对象和一个读线</p>
    <p>程组和写线程组，Selector对象主要从客户端捕捉到各种事件（比如向服务器端写入数据），读线程组和写</p>
    <p>线程组用来接收来自客户端的socket连接以及向客户端写入数据，这个Selector对象注册了一个</p>
    <p>ServerSocketChannel(服务器套接字通道）对象，这个ServerSocketChannel对象用来接收来自客户端的socket</p>
    <p>连接。每个读线程或写线程分别对应一个socket连接，并将每次接收到的socket都封装起来成为一个可读</p>
    <p>写数据的SelectableChannel对象，调用Java的regist ()函数将其再注册到唯一的Selector对象上，当客户</p>
    <p>端连接关闭的时候，将连接从读写线程中注销，注销后，读写线程则可以绑定新的连接，这样就可以使用</p>
    <p>固定数目的线程处理任意多的客户端连接。对于选中的用来读写数据的Channel (通道），包括</p>
    <p>ReadableByteChannel (读通道，用来从客户端读取数据）和WritableByteChannel (写通道，用来向客户端</p>
    <p>写入数据）进行的操作是非阻塞的，因而所有的线程都可以真正用来发送、接收消息。在客户端连接数量</p>
    <p>很大的情况下，NIO可以保证线程上下文切换时较小的开销。</p>
    <p>而在客户端，因为我们每个客户端一般只有一个到服务端的连接，所以摒弃NIO，&#37318;用老式IO操作。</p>
    <p>主要过程包括如下步骤：</p>
    <p>1) 启动服务器端接收SocketChannel连接的接收线程，并启动读、写线程组；</p>
    <p>2) 客户端进行操作时，打开一个Socket连接到服务器端，服务器端的接收线程开始接收连接，并把接收到的SocketChannd向服务器端的读写线程注册，即将连接的SocketChannel绑定到读写线程上；</p>
    <p>3) 客户端将要发送的消息作为数据报的一部分，每个数据报格式为数据报头、消息体，其中数据报头包含一个特殊的标志符和表示消息大小的一个整数，而后将数据报加码为二进制流，然后通过Socket调用write ()函数将数据报发送到服务器端；</p>
    <p>4) 服务器端读线程从Socket中读取标志数据报的二进制流，如读取数据为数据报头，则新建一个数据报，并将此流解码为数据报；然后服务器处理此数据报，并生成返回客户端的数据报，利用NIO的WriteableByteChannel，将处理后得到的数据报加码后变为二进制流，发送到客户端；</p>
    <p>5) 客户端从Socket读取此二进制流，同上解码为数据报，并根据数据报格式判断数据报是否需要客户端处理器进行处理，如果需要处理，则将此数据报进行处理，否则，什么也不做。</p>
    <p>按照以上步骤，就完成了一个消息从消息生产者发送到事件通知服务，再从事件通知服务发送到消息订阅者的过程。</p>
    <p>本发明有益的效果是：基于Java的IO和NIO的混合使用，将NIO用在服务端可以以非阻塞的形式处理连入socket,减少线程数量，从而减少资源的消耗，在客户端利用老式IO与服务端连接，进而大大提高 了消息发送的速度，改进了整个系统的性能。对于大规模分布式系统有着重要的意义。</p>
    <p>附图说明</p>
    <p>图1为发布/订阅系统的概念结构示意图。 图2为本发明的传输协议的整体流程图。</p>
    <p>附图标记：&#169;在第五步之前，我们应该确定用户名，并且检&#26619;连接;④接受线程;⑩服务端发报 机；^客户端发报机;[M1读写线程^^客户端处理器；A连接代理；O解码器;^^服务端处理 器；§数据报对列：口客户端连接代理;0客户端读线程;|SDS |服务端发报服务;O客户端发报服务。</p>
    <p>具体实施方式</p>
    <p>下面结合附图和实施例对本发明作进一步介绍：</p>
    <p>图1中，Client2和CUent3为消息订阅者，两个客户端向事件通知服务订阅消息，而Clientl为消息发 布者，负责向事件通知服务发送消息，当事件通知服务接收到消息时，就会向消息订阅者发送其订阅的消 息。此时的消息订阅者和消息发布者统称为客户端，而事件通知服务即为服务端。</p>
    <p>如图2所示，整个系统由客户端和服务端组成，并启动客户端和服务端各自的操作来完成对消息的整 个传输过程。上述各部分具体功能如下-</p>
    <p>接收线程：服务器端监视线程，接收客户端连接，并把其注册到相应的读写线程上 服务端发报机：调用连接向服务器端发送数据报。</p>
    <p>客户端发报机：向客户端发送数据报。</p>
    <p>读写线程：服务端线程，调用连接代理读取客户端数据并将数据写回客户端。</p>
    <p>客户端处理器：处理服务器端返回数据报。</p>
    <p>连接代理：负责向客户端写入数据报，并读取数据报。</p>
    <p>解码器：将二进制流转换为数据报，以及将数据报转换为二进制流。</p>
    <p>服务端处理器：在服务器端处理从客户端接收到的数据报。</p>
    <p>数据报队列：存储数据报。</p>
    <p>客户端连接代理：负责向客户端写入数据报，并读取数据报。 客户端读线程：读取服务端发送的数据报。 服务端发报服务：启动服务端服务，等待客户端连接。 客户端发报服务：启动客户端服务，与服务端建立连接，开始通讯。</p>
    <p>整个过程可描述如下：首先启动服务端服务，这个过程分为2个主要的步骤：</p>
    <p>1、 启动接收SocketChannel连接的接收线程（图中接收线程）；</p>
    <p>2、 启动处理"读""写"任务的读写线程（图中读写线程）；</p>
    <p>在步骤1中，服务器的启动可以根据设定参数来确定同时启动读写线程数目，并只启动一个接收线 程来接收客户端的连接。其中读写线程里维持一个链表，用来存放接收到的客户端连接。 当服务端启动以后，服务端就会有一个接收线程监听来自客户端的socket连接， 一旦有来自客户端的 socket连接，则读、写线程就会开始工作，即通过channel读取socket中数据并将数据写入soclcet。</p>
    <p>然后就开始创建客户端到服务端的连接，这个过程分为5个主要的步骤：</p>
    <p>1、 用户使用通过JNDI&#26619;找到的连接工厂来创建连接；</p>
    <p>2、 根据&#26619;找到的连接类型从服务端发报机工厂中获得相应的服务端发报机（如图）；</p>
    <p>3、 调用服务端发报机的方法，从客户端打开一个Socket连接到服务器端；</p>
    <p>4、 服务器端的接收线程接收连接，并把接收到的SocketChannel向服务器端的读写线程注册；</p>
    <p>5、 启动客户端的通讯层服务，并客户端读线程（如图）。</p>
    <p>在步骤1中，连接工程主要的功能为建立与服务器端的连接，当连接建立好后，才可以发送、接收 消息，其中连接可根据配置文件从连接工厂中创建。</p>
    <p>在步骤2中，连接类型可从配置文件中得到，而服务端发报机工厂为一创建发报机的对象，发报机 则用来向服务端发送消息。</p>
    <p>在步骤3中，我们给服务端发报机定义了发送数据报的方法，利用socket定义的接口 write ()来发 送各种数据报。在发送之前，这些数据报都经过了加码处理，变为二进制流发送到服务器端。</p>
    <p>在步骤4中，服务器端的接收线程不停&#26619;询看是否有新的连接，如果有新的连接，则将此连接加入 读写线程的链表中，并唤醒读写线程来处理链表的连接。</p>
    <p>步骤5中的通讯层服务启动后才可以读取从服务器端发回的消息，读线程主要用来读取从服务端发 回的数据，并交给解码器（如图）处理。</p>
    <p>当客户端与服务端建立连接后，就开始消息的收发过程，此过程分为5个主要的步骤：</p>
    <p>1、 客户端产生消息，把消息封装成数据报中后，调用客户端连接代理（如图）来输出数据报；</p>
    <p>2、 连接代理把数据报发往服务器端；</p>
    <p>3、 服务器端的读写线程从Socket中读到数据，把数据提交给解码器解码；</p>
    <p>4、 解码器解码得到数据报之后，判断这个数据报是否需要提交给服务器端的处理器处理，如果不需 要，什么都不做。如果需要，则服务端的处理器会调用相应的方法来处理这个数据报。</p>
    <p>5、 处理完这个数据报之后，通过连接代理把数据报的回执发往客户端。</p>
    <p>步骤1中产生消息主要是根据SUN公司制定的JMS规范中提供的的API (标准用户接口 ）生产 的，根据JMS规范，在生成消息的时候，可以给消息设置属性。生成消息后，根据前面提到的加码 方法，将本消息封装为一个数据报。步骤2中的发送方式主要为调用socket中的标准write 0函数。</p>
    <p>步骤3中的读写线程读取二进制数据，并将此二进制数据交给解码器解码，将二进制文件还原为 一个标准的数据报。</p>
    <p>步骤4中，数据报可分为多种类型，有的数据报中封装消息，有的数据报中封装请求。而服务器 端的根据不同的数据报类型会有不同的处理方式，比如有的数据报需要需要提取出消息后将消息存 储到数据库中。</p>
    <p>步骤5中，连接代理会调用解码器将数据报回执解码为二进制数据，通过前面提到的 SelectableChannel的write ()方法发往客户端。</p>
    <p>当服务端发送数据报后，客户端会接收服务端发来的数据，并进行处理：</p>
    <p>1、 客户端端的读线程从Socket中读到数据，把数据提交给解码器解码；</p>
    <p>2、 解码器解码得到数据报之后，判断这个数据报是否需要提交给客户端的处理器处理，如果不需 要，则什么也不做。如果需要，则客户端的处理器会调用相应的方法来处理这个数据报。</p>
    <p>步骤1中，客户端通过socket读取一段二进制数据，并根据解码器将此二进制数据解为相应的数 据报。</p>
    <p>步骤2中，根据数据报类型进行处理的时候，根据数据报类型的不同采取不同的处理方式。例如-. 如果数据报中包含有消息，则将此消息提取出来。</p>
    <p>这样，就完成了一个消息从消息发布者发送到事件通知服务，再从事件通知服务发送到消息订阅者 的过程。</p>
    <p>上述实施例用来解释说明本发明，而不是对本发明进行限制，在本发明的精神和权利要求的保护范围 内，对本发明作出的任何修改和改变，都落入本发明的保护范围。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102323894A?cl=zh">CN102323894A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年9月8日</td><td class="patent-data-table-td patent-date-value">2012年1月18日</td><td class="patent-data-table-td ">上海普元信息技术股份有限公司</td><td class="patent-data-table-td ">企业分布式应用间实现非阻塞方式相互调用的系统及方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102323894B?cl=zh">CN102323894B</a></td><td class="patent-data-table-td patent-date-value">2011年9月8日</td><td class="patent-data-table-td patent-date-value">2013年7月10日</td><td class="patent-data-table-td ">上海普元信息技术股份有限公司</td><td class="patent-data-table-td ">企业分布式应用间实现非阻塞方式相互调用的系统及方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102546791A?cl=zh">CN102546791A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年12月30日</td><td class="patent-data-table-td patent-date-value">2012年7月4日</td><td class="patent-data-table-td ">南京师范大学</td><td class="patent-data-table-td ">基于状态机-交互事件模型的分布式服务系统及方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103077246A?cl=zh">CN103077246A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年1月18日</td><td class="patent-data-table-td patent-date-value">2013年5月1日</td><td class="patent-data-table-td ">国网电力科学研究院</td><td class="patent-data-table-td ">一种基于Netty的大屏可视化平台数据推送系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103077246B?cl=zh">CN103077246B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年1月18日</td><td class="patent-data-table-td patent-date-value">2015年7月29日</td><td class="patent-data-table-td ">国网电力科学研究院</td><td class="patent-data-table-td ">一种基于Netty的大屏可视化平台数据推送系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103516788A?cl=zh">CN103516788A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年9月13日</td><td class="patent-data-table-td patent-date-value">2014年1月15日</td><td class="patent-data-table-td ">杭州东方通信软件技术有限公司</td><td class="patent-data-table-td ">一种数据推送方法及其Flash客户端和服务器</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2012034431A1?cl=zh">WO2012034431A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年6月22日</td><td class="patent-data-table-td patent-date-value">2012年3月22日</td><td class="patent-data-table-td ">Shenzhen Temobi Science &amp; Tech Co., Ltd</td><td class="patent-data-table-td ">一种地图显示系统和方法</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=sk93BwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029080000">H04L29/08</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2010年2月17日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2010年4月21日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年7月25日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Granted</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年6月19日</td><td class="patent-data-table-td ">LICC</td><td class="patent-data-table-td ">Enforcement, change and cancellation of record of contracts on the license for exploitation of a patent</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/1006f5c8769b9726e5c1/CN101651698A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_5115ea495017d9115e613207d3810e5a.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E5%9F%BA%E4%BA%8Enio%E5%92%8Cio%E7%9A%84%E9%9D%A2%E5%90%91%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E7%B3%BB.pdf?id=sk93BwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U2YjfT9bgacrx38P-AmwkhG_srenA"},"sample_url":"https://www.google.com/patents/reader?id=sk93BwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>