<!DOCTYPE html><html><head><title>专利 CN102663281A - 检测恶意软件的方法和装置 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="检测恶意软件的方法和装置"><meta name="DC.contributor" content="张子芳" scheme="inventor"><meta name="DC.contributor" content="成都市华为赛门铁克科技有限公司" scheme="assignee"><meta name="DC.date" content="2012-3-16" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种检测恶意软件的方法和装置，用以解决现有技术对基于Android平台的恶意软件进行检测时，准确性较低问题。该方法包括：对待检测应用软件的压缩包进行解析，提取其中包含的可执行文件，并根据可执行文件的结构格式，从所述可执行文件中获取特征内容，所述特征内容是指完成所述待识别应用软件功能必要的内容；采用预定算法，计算所述特征内容的唯一标识值；将计算得到的唯一标识值与已知恶意软件的特征值进行比较，所述特征值是指对已知基于Android平台的恶意软件可执行文件中的特征内容，采用所述预定算法计算后，获得的唯一标识值；若比较结果一致，则确定所述待检测应用软件为基于Android平台的恶意软件。"><meta name="DC.date" content="2012-9-12"><meta name="DC.relation" content="CN:102087605:A" scheme="references"><meta name="DC.relation" content="CN:102236757:A" scheme="references"><meta name="DC.relation" content="US:20090254993:A1" scheme="references"><meta name="DC.relation" content="US:20100058474:A1" scheme="references"><meta name="citation_reference" content="SCHMIDT,A-D.ET.AL: &quot;《Static Analysis of Executables for Collaborative Malware Detection on Android》&quot;, 《COMMUNICATIONS 2009.ICC&quot;09.IEEE INTERNATIONAL CONFERENCE ON》, 18 June 2009 (2009-06-18), pages 1 - 5"><meta name="citation_reference" content="SECURITY ENGINEERING RESEARCH GROUP: &quot;“Analysis of Dalvik Virtual Machine and Class Path Library”&quot;, 《ANALYSIS OF DALVIK VIRTUAL MACHINE AND CLASS PATH LIBRARY》, 30 November 2009 (2009-11-30), pages 13 - 18"><meta name="citation_reference" content="刘泽衡: &quot;《基于Android智能手机的安全检测系统的研究与实现》&quot;, 《CNKI》, 30 June 2011 (2011-06-30)"><meta name="citation_patent_publication_number" content="CN:102663281:A"><meta name="citation_patent_application_number" content="CN:201210070041"><link rel="canonical" href="https://www.google.com/patents/CN102663281A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102663281A?cl=zh"/><meta name="title" content="专利 CN102663281A - 检测恶意软件的方法和装置"/><meta name="description" content="本发明公开了一种检测恶意软件的方法和装置，用以解决现有技术对基于Android平台的恶意软件进行检测时，准确性较低问题。该方法包括：对待检测应用软件的压缩包进行解析，提取其中包含的可执行文件，并根据可执行文件的结构格式，从所述可执行文件中获取特征内容，所述特征内容是指完成所述待识别应用软件功能必要的内容；采用预定算法，计算所述特征内容的唯一标识值；将计算得到的唯一标识值与已知恶意软件的特征值进行比较，所述特征值是指对已知基于Android平台的恶意软件可执行文件中的特征内容，采用所述预定算法计算后，获得的唯一标识值；若比较结果一致，则确定所述待检测应用软件为基于Android平台的恶意软件。"/><meta property="og:title" content="专利 CN102663281A - 检测恶意软件的方法和装置"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102663281A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102663281A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=jcygBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102663281A&amp;usg=AFQjCNFR3Job9GsOf2dc6Fjn_thg30Ephg" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/4e9dfe66d7054f42bed5/CN102663281A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/4e9dfe66d7054f42bed5/CN102663281A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102663281A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102663281A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102663281A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102663281B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102663281A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种检测恶意软件的方法和装置，用以解决现有技术对基于Android平台的恶意软件进行检测时，准确性较低问题。该方法包括：对待检测应用软件的压缩包进行解析，提取其中包含的可执行文件，并根据可执行文件 ...</span><span itemprop="url">https://www.google.com/patents/CN102663281A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102663281A - 检测恶意软件的方法和装置</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102663281A - 检测恶意软件的方法和装置" title="专利 CN102663281A - 检测恶意软件的方法和装置"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102663281 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210070041</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2012年9月12日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年3月16日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年3月16日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102663281B?hl=zh-CN&amp;cl=zh">CN102663281B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210070041.9, </span><span class="patent-bibdata-value">CN 102663281 A, </span><span class="patent-bibdata-value">CN 102663281A, </span><span class="patent-bibdata-value">CN 201210070041, </span><span class="patent-bibdata-value">CN-A-102663281, </span><span class="patent-bibdata-value">CN102663281 A, </span><span class="patent-bibdata-value">CN102663281A, </span><span class="patent-bibdata-value">CN201210070041, </span><span class="patent-bibdata-value">CN201210070041.9</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BC%A0%E5%AD%90%E8%8A%B3%22">张子芳</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%88%90%E9%83%BD%E5%B8%82%E5%8D%8E%E4%B8%BA%E8%B5%9B%E9%97%A8%E9%93%81%E5%85%8B%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">成都市华为赛门铁克科技有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102663281A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102663281A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102663281A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#npl-citations">非专利引用</a> (3),</span> <span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (7),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (2),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (5)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=jcygBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210070041&amp;usg=AFQjCNFj6iagsYMj0d6Yd2PpNin88ItpGw"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=jcygBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102663281A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNHYQhBzGVnzrApXix-MQnE7tJD6MA"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT115272689" lang="ZH" load-source="patent-office">检测恶意软件的方法和装置</invention-title>
      </span><br><span class="patent-number">CN 102663281 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA100184226" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种检测恶意软件的方法和装置，用以解决现有技术对基于Android平台的恶意软件进行检测时，准确性较低问题。该方法包括：对待检测应用软件的压缩包进行解析，提取其中包含的可执行文件，并根据可执行文件的结构格式，从所述可执行文件中获取特征内容，所述特征内容是指完成所述待识别应用软件功能必要的内容；采用预定算法，计算所述特征内容的唯一标识值；将计算得到的唯一标识值与已知恶意软件的特征值进行比较，所述特征值是指对已知基于Android平台的恶意软件可执行文件中的特征内容，采用所述预定算法计算后，获得的唯一标识值；若比较结果一致，则确定所述待检测应用软件为基于Android平台的恶意软件。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(11)</span></span></div><div class="patent-text"><div mxw-id="PCLM45093921" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种检测恶意软件的方法，其特征在于，包括：  对待检测应用软件的压缩包进行解析，提取其中包含的可执行文件，并根据可执行文件的结构格式，从所述可执行文件中获取特征内容，所述特征内容是指完成所述待识别应用软件功能必要的内容；  采用预定算法，计算所述特征内容的唯一标识值；  将计算得到的唯一标识值与已知恶意软件的特征值进行比较，所述特征值是指对已知基于Android平台的恶意软件可执行文件中的特征内容，采用所述预定算法计算后，获得的唯一标识值；  若比较结果一致，则确定所述待检测应用软件为基于Android平台的恶意软件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.如权利要求I所述的方法，其特征在于，所述应用软件的压缩包为apk压缩包，所述可执行文件为dex字节码文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.如权利要求2所述的方法，其特征在于，所述特征内容包括方法集合列表的内容、类集合列表的内容、字符串集合列表的内容中的任意一种、或多种的组合。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.如权利要求2或3所述的方法，其特征在于，所述特征内容为方法集合列表的内容，所述根据可执行文件的结构格式，从所述可执行文件中获取特征内容，包括：  根据dex字节码文件结构格式，从dex字节码文件头中用于描述方法集合列表的地址的字段中读取第一数据，从dex字节码文件头中用于描述方法集合列表中方法数目的字段中读取第二数据；  将所述第二数据与每个方法描述信息的预定长度相乘；  从所述dex字节码文件中，以第一数据指示的数据为起始地址，读取相乘结果所指示长度的数据作为方法集合列表的内容。</div>
    </div>
    </div> <div class="claim"> <div num="5" class="claim">
      <div class="claim-text">5.	一种建立恶意软件特征数据库的方法，其特征在于，包括：  接收输入的已知基于Android平台的恶意软件样本；  对所述恶意软件样本进行解析，提取其中包含的可执行文件；  根据可执行文件的结构格式，从所述可执行文件中获取特征内容，所述特征内容是指完成所述恶意软件功能必要的内容；  采用预定算法，计算所述特征内容的唯一标识值，作为所述恶意软件样本的特征值；并存储所述特征值。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.如权利要求5所述的方法，其特征在于，所述应用软件的压缩包为apk压缩包，所述可执行文件为dex字节码文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.如权利要求6所述的方法，其特征在于，所述特征内容包括方法集合列表的内容、类集合列表的内容、字符串集合列表的内容中的任意一种、或多种的组合。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.如权利要求6或7所述的方法，其特征在于，所述特征内容为方法集合列表的内容，所述根据可执行文件的结构格式，从所述可执行文件中获取特征内容，包括：  根据dex字节码文件结构格式，从dex字节码文件头中用于描述方法集合列表的地址的字段中读取第一数据，从dex字节码文件头中用于描述方法集合列表中方法数目的字段中读取第二数据；  将所述第二数据与每个方法描述信息的预定长度相乘；  以第一数据指示的数据为起始地址，读取相乘结果指示的长度的数据作为方法集合列表的内容。</div>
    </div>
    </div> <div class="claim"> <div num="9" class="claim">
      <div class="claim-text">9.	一种检测恶意软件的装置，其特征在于，包括：  第一解析单元，用于对待检测应用软件的压缩包进行解析，提取其中包含的可执行文件；  第一获取单元，用于根据可执行文件的结构格式，从第一解析单元解析出的所述可执行文件中获取特征内容，所述特征内容是指完成所述待识别应用软件功能必要的内容；第一运算单元，用于采用预定算法，计算所述特征内容的唯一标识值；  比较单元，用于将第一运算单元得到的唯一标识值与已知恶意软件的特征值进行比较，所述特征值是指对已知基于Android平台的恶意软件可执行文件中的特征内容，采用所述预定算法计算后，获得的唯一标识值； 确定单元，用于若比较单元的比较结果一致，则确定所述待检测应用软件为基于Android平台的恶意软件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.如权利要求9所述的装置，其特征在于，所述应用软件的压缩包为apk压缩包，所述可执行文件为dex字节码文件时，第一获取单元具体用于从所述可执行文件中获取方法集合列表的内容、类集合列表的内容、字符串集合列表的内容中的任意一种、或多种的组合。</div>
    </div>
    </div> <div class="claim"> <div num="11" class="claim">
      <div class="claim-text">11.	一种建立恶意软件特征数据库的装置，其特征在于，包括：  接收单元，用于接收输入的已知基于Android平台的恶意软件样本；  第二解析单元，用于对所述恶意软件样本进行解析，提取其中包含的可执行文件；第二获取单元，用于根据可执行文件的结构格式，从第二解析单元得到的所述可执行文件中获取特征内容，所述特征内容是指完成所述恶意软件功能必要的内容；  第二运算单元，用于采用预定算法，计算所述特征内容的唯一标识值，作为所述恶意软件样本的特征值；  存储单元，用于存储第二运算单元得到的特征值。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES51465146" lang="ZH" load-source="patent-office" class="description">
    <p>检测恶意软件的方法和装置</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及计算机及通信技术领域，尤其涉及一种检测恶意软件的方法、�种建立恶意软件特征数据库的方法、一种检测恶意软件的装置及�种建立恶意软件特征数据库的装置。</p>
    <p>背景技术</p>
    <p>[0002]	安卓（Android)是由谷歌（Google)公司发布的�种以Linux系统为核心的、适用 于移动终端的操作系统。Android是�种开放式的操作系统，允许除谷歌和移动终端厂商之外的第三方开发者使用多种编程语言来开发基于Android平台的应用软件，这�特性使得其成为目前使用最为广泛的手机操作系统。随着基于Android平台的应用软件数量的急剧增长，基于Android平台的恶意软件也越来越多，这些恶意软件可以导致用户隐私信息被泄露，影响用户使用。</p>
    <p>[0003]	由于目前绝大多数移动终端都具备连接互联网的功能，基于Android平台的恶意软件主要是通过网络传播，用户从互联网下载恶意软件到移动终端并安装恶意软件之后，恶意软件可以将收集到的用户隐私信息，例如电话薄、本地短信邮箱中的短信等，通过短信或邮件发送至预先指定的接收端。针对上述工作原理，现有技术主要通过网站审核、网关阻断和移动终端扫描等技术来防止基于Android平台的恶意软件传播。</p>
    <p>[0004]	现有在网络侧对基于Android平台的恶意软件进行检测的原理是：检测设备首先对待识别的基于Android平台的应用软件（简称：待识别应用软件）的apk压缩包的内容进行哈希（hash)运算,获取运算结果MD5值,所述apk压缩包中包括资源文件、dex字节码文件、配置文件和界面布局文件等等。然后将所述hash运算获得的MD5值，与对已知恶意软件的特征值进行比较，若比较一致，则确定所述待识别应用软件为恶意软件；否则，确定所述待识别应用软件为正常软件。所述已知恶意软件的特征值是指对已知恶意软件apk压缩包的内容进行hash运算获得的MD5值。</p>
    <p>[0005]	发明人在实现本发明过程中发现，现有技术至少存在以下问题：恶意软件的传播者人为修改待识别应用软件apk压缩包的部分字节，导致其内容发生改变，进一&#27497;使检测设备对其进行hash运算后的结果发生改变，在进行特征值匹配时与已知恶意软件的特征值不同，从而达到逃避检测的目的。</p>
    <p>发明内容</p>
    <p>[0006]	本发明实施例提供一种检测恶意软件的方法，用以解决现有技术对基于Android平台的恶意软件进行检测时，准确性较低问题。</p>
    <p>[0007]	对应地，本发明实施例还提供了�种建立恶意软件特征数据库的方法、一种检测恶意软件的装置和�种建立恶意软件特征数据库的装置。</p>
    <p>[0008]	本发明实施例提供的技术方案如下：</p>
    <p>[0009]	一种检测恶意软件的方法，包括：[0010]	对待检测应用软件的压缩包进行解析，提取其中包含的可执行文件，井根据可执行文件的结构格式，从所述可执行文件中获取特征内容，所述特征内容是指完成所述待识别应用软件功能必要的内容；</p>
    <p>[0011]	采用预定算法，计算所述特征内容的唯一标识值；</p>
    <p>[0012]	将计算得到的唯一标识值与已知恶意软件的特征值进行比较，所述特征值是指对已知基于Android平台的恶意软件可执行文件中的特征内容，采用所述预定算法计算后，获得的唯一标识值； </p>
    <p>[0013]	若比较结果一致，则确定所述待检测应用软件为基于Android平台的恶意软件。</p>
    <p>[0014]	�种建立恶意软件特征数据库的方法，包括：</p>
    <p>[0015]	接收输入的已知基于Android平台的恶意软件样本；</p>
    <p>[0016]	对所述恶意软件样本进行解析，提取其中包含的可执行文件；</p>
    <p>[0017]根据可执行文件的结构格式，从所述可执行文件中获取特征内容，所述特征内容是指完成所述恶意软件功能必要的内容；</p>
    <p>[0018]	采用预定算法，计算所述特征内容的唯一标识值，作为所述恶意软件样本的特征值；并存储所述特征值。</p>
    <p>[0019]	一种检测恶意软件的装置，其特征在于，包括：</p>
    <p>[0020]	第一解析&#21336;元，用于对待检测应用软件的压缩包进行解析，提取其中包含的可执行文件；</p>
    <p>[0021]	第一获取单元，用于根据可执行文件的结构格式，从第一解析&#21336;元解析出的所述可执行文件中获取特征内容，所述特征内容是指完成所述待识别应用软件功能必要的内容；</p>
    <p>[0022]	第一运算单元，用于采用预定算法，计算所述特征内容的唯一标识值；</p>
    <p>[0023]	比较单元，用于将第一运算单元得到的唯一标识值与已知恶意软件的特征值进行比较，所述特征值是指对已知基于Andro i d平台的恶意软件可执行文件中的特征内容,采用所述预定算法计算后，获得的唯一标识值；</p>
    <p>[0024]	确定单元，用于若比较单元的比较结果一致，则确定所述待检测应用软件为基于Android平台的恶意软件。</p>
    <p>[0025]	�种建立恶意软件特征数据库的装置，其特征在于，包括：</p>
    <p>[0026]	接收单元,用于接收输入的已知基于Android平台的恶意软件样本；</p>
    <p>[0027]	第二解析&#21336;元，用于对所述恶意软件样本进行解析，提取其中包含的可执行文件；</p>
    <p>[0028]	第二获取单元，用于根据可执行文件的结构格式，从第二解析&#21336;元得到的所述可执行文件中获取特征内容，所述特征内容是指完成所述恶意软件功能必要的内容；</p>
    <p>[0029]	第二运算单元，用于采用预定算法，计算所述特征内容的唯一标识值，作为所述恶意软件样本的特征值；</p>
    <p>[0030]	存储单元，用于存储第二运算单元得到的特征值。</p>
    <p>[0031]	本发明实施例通过提取待检测应用软件压缩包中可执行文件中的特征内容，所述特征内容是指完成所述待识别应用软件功能必要的内容；然后计算提取的特征内容的唯一标识值，将计算得到的特征值与已知恶意软件的特征码进行比较，根据比较结果判断待检测应用软件是否是恶意软件。解决了现有技术无法识别篡改后的恶意软件的问题，提高了检测的准确性。</p>
    <p>附图说明</p>
    <p>[0032]	为了更清楚地说明本发明实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作�简单地介绍，显而易见地，下面描述中的附图是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。</p>
    <p>[0033]	图Ia为本发明实施例一提供的检测基于Android平台的恶意软件方法的流程图；</p>
    <p>[0034]	图Ib为本发明实施例一提供的建立恶意软件特征数据库的方法的流程图；</p>
    <p>[0035]	图2为本发明实施例ニ提供的实例的详细流程图； </p>
    <p>[0036]	图3为本发明实施例三提供的检测基于Android平台的恶意软件的装置的结构示意图；</p>
    <p>[0037]	图4为本发明实施例三提供的建立恶意软件特征数据库的装置的结构示意图。具体实施方式</p>
    <p>[0038]	基于Android平台的应用软件中，用于实现该应用软件功能的方法（也被称为函数）是封装在可执行文件中的，目前来说，大多数Android平台上的可执行文件为dex字节码文件。在应用软件运行时，通过执行其中的dex字节码文件来实现该应用软件的功能。</p>
    <p>[0039]	在Android平台上开发应用软件时，通常使用java语言，对工程文件进行编译后生成一个压缩文件包，通常大多数为apk格式的压缩文件包，对apk压缩包进行解压缩后，解压缩结果中包含�个dex格式的字节码文件,dex字节码文件是在Dalvik虚拟机上执行的一种可执行文件，其中Dalvik虚拟机是Android操作系统中用于运行应用软件的应用环境。</p>
    <p>[0040]	为了便于Dalvik虚拟机中的解析器进行解析，每个dex文件的内容都符合统�的结构格式。表I为dex文件结构格式中文件头DexHeader部分的简要描述。通过解析DexHeader可以获得字符串集合列表String table、类集合列表class list、域集合列表field table、方法集合列表 method table、类定义集合列表 class definition table 等各部分的内容在dex文件中的存储地址，继而获取各部分内容。每部分内容也都符合统�的结构格式，例如方法集合列表method table在dex文件中的存储格式如表2所示，字符串集合列表String table内容如表3所示。通过上述结构可以在应用软件运行过程中实现方法调用，例如在应用软件运行过程中，若调用到某种方法，则会通过查找DexHeader获得 method table 的存储位置 Absolute offset of the method table,其中 method table中存储了每个方法的描述信息（描述信息中不仅包含该方法的&#21443;数，还包括代码执行语句），而姆个方法描述信息的长度是相同的，例如64k,根据method table的存储位置,结合DexHeader中指不的方法的数量Number of methods in the method table,可以得到姆个方法的描述信息的存储位置。再根据method table的存储位置查找到method table后，根据method table中姆个方法method描述信息中的�些&#21443;数,例如方法归属的类名Classindex of the	class this field belongs to、方法名称 String index of the methodname等，找到待调用的方法的描述信息，执行该描述信息中的代码执行语句，从而实现方法调用。</p>
    <p>[0041]表	I</p>
    <p>[0042]</p>
    <p>[0043]</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102663281A/CN102663281AD00071.png"> <img id="idf0001" file="CN102663281AD00071.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102663281A/CN102663281AD00071.png" class="patent-full-image" alt="Figure CN102663281AD00071"> </a> </div>
    <p>   [0044]表	2</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102663281A/CN102663281AD00081.png"> <img id="idf0002" file="CN102663281AD00081.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102663281A/CN102663281AD00081.png" class="patent-full-image" alt="Figure CN102663281AD00081"> </a> </div>
    <p>[0048]	发明人通过对基于Android平台的应用软件运行过程的分析，发现在可执行文件(例如dex字节码文件）中，有�些内容是不可被修改的，一旦被修改，则无法实现应用软件的功能，也就是说这部分内容是完成所述待识别应用软件功能必要的内容，例如，如果对method table的内容进行修改，则无法正确实现函数调用（例如，方法归属的类名、方法名称改变后，无法找到待调用的函数），导致无法实现应用软件的功能。而另�些内容是可以被修改的，修改后并不会对应用软件的运行发生实质影响，例如，如果修改其中的魔鬼数字'Magic' value的值,则并不影响应用软件的功能。</p>
    <p>[0049]	通过上述分析可以知道，即使恶意软件传播者企图通过篡改apk压缩包来逃避检测，也不会篡改其中会影响应用软件运行的内容，因为那样将导致恶意软件无法运行，也就无法实现传播恶意软件的目的。</p>
    <p>[0050]	根据上述分析结论，发明人提出了�种检测基于Android平台的恶意软件的方案，下面结合各个附图对本发明实施例技术方案的主要实现原理、具体实施方式及其对应能够达到的有益效果进行详细的阐述。</p>
    <p>[0051]	实施例一</p>
    <p>[0052]	如图Ia所示，本发明实施例的主要实现原理流程如下：</p>
    <p>[0053]	步骤10，对待检测应用软件的压缩包进行解析，提取其中包含的可执行文件。</p>
    <p>[0054]	可选地，所述应用软件的压缩包为apk压缩包，可执行文件为dex字节码文件。</p>
    <p>[0055]	步骤20，根据可执行文件的结构格式，从所述可执行文件中获取特征内容，所述特征内容是指完成所述待识别应用软件功能必要的内容。</p>
    <p>[0056]	可选地，当所述可执行文件为dex字节码文件时，所述特征内容包括但不限于方法集合列表的内容、类集合列表的内容、字符串集合列表的内容等中的任意�种、或多种的组合。</p>
    <p>[0057]	可选地，当特征内容为方法集合列表的内容时，获取特征内容的方式包括：</p>
    <p>[0058]	根据dex字节码文件结构格式，从dex字节码文件头中用于描述方法集合列表的地址的字段中读取第一数据，从dex字节码文件头中用于描述方法集合列表中方法数目的字段中读取第二数据；[0059]	将所述第二数据与每个方法描述信息的预定长度相乘；</p>
    <p>[0060]	以第一数据指示的数据为起始地址，读取相乘结果指示的长度的数据作为方法集合列表的内容。</p>
    <p>[0061]当特征内容为类集合列表、字符串集合列表或者其中两种以上的组合时，也可以采用类似的方式来获取特征内容，这里不再一一举例说明。</p>
    <p>[0062]	步骤30，采用预定算法，计算步骤20中获取的所述特征内容的唯一标识值。</p>
    <p>[0063]	可选地，可以采用哈希算法 或单向数学函数，具体地，可以选择采用消息摘要算法第二版(MD2, Message Digest Algorithm 2)、消息摘要算法第四版(MD4, Message DigestAlgorithm 4)、消息摘要算法第五版（MD5, Message Digest Algorithm 5)、安全哈希算法第一版（SHA-1, Secure Hash Algorithm-1)等算法来计算所提取的特征内容的卩隹�标识值。</p>
    <p>[0064]	步骤40，将计算得到的唯一标识值与已知基于Android平台的恶意软件的特征值进行比较，所述特征值是指对已知基于Android平台的恶意软件可执行文件中的特征内容，采用所述预定算法计算后，获得的唯一标识值。若比较结果一致，进入步骤50，若比较结果不一致，则进入步骤60。</p>
    <p>[0065]	步骤50，若比较结果一致，则确定所述待检测应用软件为基于Android平台的恶意软件。</p>
    <p>[0066]	可选地还包括，步骤60，若比较结果不一致，则确定所述待检测应用软件为正常软件。</p>
    <p>[0067]	本发明实施例还提供了�种建立恶意软件特征数据库的方法，其流程示意图如图Ib所示。</p>
    <p>[0068]	步骤11,接收输入的已知基于Android平台的恶意软件样本。可选地,该样本的格式为apk压缩包。</p>
    <p>[0069]	步骤12，对所述恶意软件样本进行解析，提取其中包含的可执行文件。可选地，可执行文件为dex字节码文件。</p>
    <p>[0070]	步骤13，根据可执行文件的文件结构格式，从所述可执行文件中获取特征内容，所述特征内容是指完成所述待识别应用软件功能必要的内容。</p>
    <p>[0071]	可选地，特征内容以及提取特征内容的步骤的介绍与附图Ia中的步骤20类似，在这里不再重复。</p>
    <p>[0072]	步骤14，采用预定算法，对所述特征内容进行运算，获得所述特征内容的唯一标识值，作为所述恶意软件样本的特征值。</p>
    <p>[0073]	步骤15，存储所述特征值。可选地，还可以存储所述样本的标识信息（包括名称、描述信息等等）与所述特征值的对应关系，方便后续检测出恶意软件后，查找到该恶意软件对应的标识信息。</p>
    <p>[0074]	本发明实施例提供的检测恶意软件的方法，首先提取待检测应用软件压缩包中可执行文件中的特征内容，通过对该特征内容执行预定算法，得到该特征内容的唯一标识值，将该唯一标识值与已知恶意软件的特征值进行比较，根据比较结果判断待检测应用软件是否是恶意软件。而不是像现有技术�样，通过对整个应用软件压缩包进行运算获得的标识值与已知恶意软件的特征值进行比较，来确认待检测应用软件是否是恶意软件。由于在本发明实施例提供的方案中，即使恶意软件传播者人为篡改应用软件压缩包的部分内容，仍然不会改变对特征内容执行预定算法后获得的唯一标识值，无法达到逃避检测的目的，因此提高了检测基于Android平台的恶意软件的准确性，降低了漏报几率。</p>
    <p>[0075]	实施例ニ</p>
    <p>[0076]	本发明实施例提供了�个检测基于A ndroid平台的恶意软件的实例,对实施例一中提供的方法进行详细的说明。</p>
    <p>[0077]	如图2所示，在本发明实施例的流程图中，通过步骤201&#12316;步骤205构建样本特征库，通过步骤211&#12316;步骤217检测待识别应用软件是否是基于Android平台的恶意软件。需要说明的是，其中构建样本特征库的过程和检测恶意软件的过程可以分别由不同的设备来完成，例如构建样本特征库由数据库管理设备完成，而检测恶意软件的过程由检测设备来完成，检测设备可以集成于网关设备、或者网站服务器中。对于网关设备而言，需要首先对数据包进行重组处理，从中获得待检测应用软件的apk压缩包。</p>
    <p>[0078]	步骤201，数据库管理设备接收输入的已知基于Android平台的恶意软件样本Malwarel,该样本的格式为apk压缩包。</p>
    <p>[0079]	可选地，上述已知恶意软件样本可以是人工分析得到的、或者是沙箱分析得到的，这里不进行限定。</p>
    <p>[0080]	步骤202，数据库管理设备对所述恶意软件样本Malware I的apk压缩包进行解析，提取其中包含的dex字节码文件，即为dexfile_sl。</p>
    <p>[0081]	步骤203，数据库管理设备根据预定的dex文件结构格式，从所述dex字节码文件dexfile_sl中获取特征内容，所述特征内容是指完成所述待识别应用软件功能必要的内容。在本实施例中以方法集合列表的内容为例进行说明。</p>
    <p>[0082]	数据库管理设备读取dex字节码文件头中0x4c位置上的4字节的内容作为方法集合列表中方法的数目，和0x50位置上的4字节的内容作为方法集合列表的地址。计算方法的数目和每个方法描述信息的预定长度的乘积作为方法集合列表的尺寸，如方法的数目为10，每个方法描述信息的预定长度为64字节，则方法集合列表的尺寸为640字节。从偏移量为0x50的地址上，读取640字节的内容作为方法集合列表。</p>
    <p>[0083]	步骤204，数据库管理设备对所述方法集合列表的内容执行MD5算法，获得运算结果MD5值，作为所述恶意软件样本的特征值。</p>
    <p>[0084]	数据库管理设备将上述读取的640字节输入hash算法，获得运算结果MD5值，作为所述恶意软件样本的特征值f_valuel。</p>
    <p>[0085]	步骤205，数据库管理设备将所述恶意软件样本的特征值存入数据库中。</p>
    <p>[0086]	数据库管理设备针对不同恶意软件样本，重复执行步骤201&#12316;步骤205，在数据库中建立如表4所示的特征值表。</p>
    <p>[0087]表	4</p>
    <p>[0088]</p>
    <p>        恶意样本名称特征值	描述信息</p>
    <p>           Malwarel	fvaluel	略</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102663281A/CN102663281AD00111.png"> <img id="idf0003" file="CN102663281AD00111.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102663281A/CN102663281AD00111.png" class="patent-full-image" alt="Figure CN102663281AD00111"> </a> </div>
    <p>[0089]	可选地，由于数据库存储空间的限制，可以设定�些老化规则，以免数据库的可用空间很快耗尽。例如，老化规则可以设置为：若一个特征值超过10天未被匹配中，则删除该特征值相关记录；或者被匹配中的频率小于3次/天,则删除该特征值相关记录；或者特征值保存时间超过3个月，则删除该特征值相关记录。通过上述规则，从数据库中删除传播性较低、或者较老，大多数移动终端已安装对应补丁的恶意软件的特征值相关记录。</p>
    <p>[0090]	步骤211，检测设备获得待检测的基于Android平台的应用软件。</p>
    <p>[0091]	可选地，当检测设备集成于网关设备时，待检测应用软件为对同一数据流中的数据包进行重组处理后获得的。当检测设备集成于网站服务器时，待检测应用软件为网站用户提交的。当检测设备集成于移动&#32066;端中的客户端时，待检测应用软件为从网站服务器下 载得到的，在这里不进行限定。</p>
    <p>[0092]	步骤212，检测设备对待识别应用软件的apk压缩包进行解析，提取其中包含的dex字节码文件，记为dexfile_test。</p>
    <p>[0093]	步骤213，检测设备根据预定的dex文件结构格式，从所述dex字节码文件dexfile_test中获取方法集合列表的内容。</p>
    <p>[0094]	具体提取特征内容的过程与步骤203类似，在这里不再重复。</p>
    <p>[0095]	步骤214，检测设备对所述方法集合列表的内容执行MD5算法，获得运算结果MD5值。</p>
    <p>[0096]	步骤215，检测设备将步骤214中所述运算结果MD5值与表4所示数据库中存储的各特征值进行比较。若比较结果一致，进入步骤216，否则进入步骤217。</p>
    <p>[0097]	可选地，检测设备为了提高比较效率，在所述数据库和检测设备分别设置于不同的实体设备中时，检测设备可以在本地缓存数据库中的数据，并定期根据数据库中的数据更新缓存数据。</p>
    <p>[0098]	步骤216，若比较结果一致，则确定所述待检测应用软件为基于Android平台的恶意软件。</p>
    <p>[0099]	可选地，在确定所述待检测应用软件为恶意软件之后，还可以采用对应的应对措施，例如当所述检测设备集成于网关设备中&#21515;，检测设备丢弃承载该应用软件的数据包，即阻断承载该应用软件的数据流，达到阻止恶意软件通过网络传播的目的。当所述检测设备集成于网站服务器时，检测设备触发网站服务器删除该应用软件。</p>
    <p>[0100]	步骤217，若比较结果不一致，则确定所述待检测应用软件为基于Android平台的正常软件。</p>
    <p>[0101]	本发明实施例提供的恶意软件的检测方案，首先在构建存储恶意软件特征值的数据库时，是根据已知恶意软件的特征内容（该特征内容是指完成所述待识别应用软件功能必要的内容）来进行哈希运算获得特征值。在检测过程中，从待检测应用软件apk压缩包中dex字节码文件中提取特征内容，再根据提取的特征内容执行hash运算,将hash运算结果与数据库中的特征值进行比较，来确认待检测应用软件是否是恶意软件。在本发明实施例提供的方案中，若恶意软件传播者人为篡改特征内容，则恶意软件无法成功运行，失去了传播的目的，若恶意软件传播者人为篡改除特征内容之外的apk压缩包的其他内容，由于不会改变检测时对特征内容执行hash运算后获得的MD5值，因此检测设备仍然能够识别出被篡改的恶意软件，因此提高了检测基于Android平台的恶意软件的准确性，降低了逃避检测的可能性。</p>
    <p>[0102]	实施例三</p>
    <p>[0103]	与实施例一相对应，本发明实施例还提供了�种检测基于Android平台的恶意软件的装置，如图3所示，该装置包括第一解析&#21336;元301、第一获取单元302、第一运算单元303、比较单元304和确定单元305，具体如下：</p>
    <p>[0104]	第一解析&#21336;元301，用于对待检测应用软件的压缩包进行解析，提取其中包含的可执行文件；</p>
    <p>[0105]	第一获取单元302，用于根据可执行文件的结构格式，从第一解析&#21336;元301解析出的所述可执行文件中获取特征内容，所述特征内容是指完成所述待识别应用软件功能必要的内容；</p>
    <p>[0106]	第一运算单元303，用于采用预定算法，计算所述特征内容的唯一标识值；</p>
    <p>[0107]	比较单元304，用于将第一运算单元得到的唯一标识值与已知恶意软件的特征值 进行比较，所述特征值是指对已知基于Android平台的恶意软件可执行文件中的特征内容，采用所述预定算法计算后，获得的唯一标识值；</p>
    <p>[0108]	确定单元305，用于若比较单元304的比较结果一致，则确定所述待检测应用软件为基于Android平台的恶意软件。</p>
    <p>[0109]	可选地，所述特征内容，以及第一获取单元302获取特征内容的具体方式请&#21443;照实施例一中的介绍，在这里不再赘述。</p>
    <p>[0110]	可选地，附图3所示的装置可以集成于网关设备、网站服务器等实体设备中，在该装置集成于网关设备中时，所述装置还包括：阻断&#21336;元，用于在确定单元305确定所述待检测应用软件为基于Android平台的恶意软件后，阻断承载所述待检测应用软件的数据流。</p>
    <p>[0111]	在该装置集成于网站服务器中时，所述装置还包括：删除单元，用于确定&#21336;元305确定所述待检测应用软件为基于Android平台的恶意软件后，触发删除所述待检测应用软件。</p>
    <p>[0112]	相应地，请&#21443;照附图4，本发明实施例还提供了�种建立恶意软件特征数据库的装置，该装置包括：</p>
    <p>[0113]	接收单元401，用于接收输入的已知基于Android平台的恶意软件样本，可选地，该样本的格式为apk压缩包；</p>
    <p>[0114]	第二解析&#21336;元402，用于对所述恶意软件样本进行解析，提取其中包含的可执行文件；</p>
    <p>[0115]	第二获取单元403，用于根据可执行文件的结构格式，从第二解析单元402得到所述可执行文件中获取特征内容，所述特征内容是指完成所述恶意软件功能必要的内容；</p>
    <p>[0116]	第二运算单元404，用于采用预定算法，计算所述特征内容的唯一标识值，作为所述恶意软件样本的特征值；[0117]	存储单元405，用于存储第二运算单元404得到的特征值。</p>
    <p>[0118]	本领域普通技术人员可以理解实现上述实施例方法中的全部或部分步骤是可以通过程序来指令相关的硬件来完成，该程序可以存储于�计算机可读取存储介质中，如：R0M/RAM、磁碟、光盘等。 [0119]	显然，本领域的技术人员可以对本发明进行各种改动和变型而不脱离本发明的精神和范围。这样，倘若本发明的这些修改和变型属于本发明权利要求及其等同技术的范围之内，则本发明也意图包含这些改动和变型在内。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102087605A?cl=zh">CN102087605A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年1月28日</td><td class="patent-data-table-td patent-date-value">2011年6月8日</td><td class="patent-data-table-td ">宇龙计算机通信科技(深圳)有限公司</td><td class="patent-data-table-td ">一种基于android平台应用安装控制方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102236757A?cl=zh">CN102236757A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年6月30日</td><td class="patent-data-table-td patent-date-value">2011年11月9日</td><td class="patent-data-table-td ">北京邮电大学</td><td class="patent-data-table-td ">一种适用于Android系统的软件保护方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20090254993">US20090254993</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2006年7月31日</td><td class="patent-data-table-td patent-date-value">2009年10月8日</td><td class="patent-data-table-td ">Manuel Leone</td><td class="patent-data-table-td ">System for implementing security on telecommunications terminals</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20100058474">US20100058474</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年8月28日</td><td class="patent-data-table-td patent-date-value">2010年3月4日</td><td class="patent-data-table-td ">Avg Technologies Cz, S.R.O.</td><td class="patent-data-table-td ">System and method for the detection of malware</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="npl-citations"></a><div class="patent-section-header"><span class="patent-section-title">非专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th colspan="3"class="patent-data-table-th">参考文献</th></tr></thead><tr><td class="patent-data-table-td ">1</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">SCHMIDT,A-D.ET.AL: "<a href='http://scholar.google.com/scholar?q="%E3%80%8AStatic+Analysis+of+Executables+for+Collaborative+Malware+Detection+on+Android%E3%80%8B%22%2C+%E3%80%8ACOMMUNICATIONS+2009.ICC"'>《Static Analysis of Executables for Collaborative Malware Detection on Android》", 《COMMUNICATIONS 2009.ICC</a>"09.IEEE INTERNATIONAL CONFERENCE ON》, 18 June 2009 (2009-06-18), pages 1 - 5</td></tr><tr><td class="patent-data-table-td ">2</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">SECURITY ENGINEERING RESEARCH GROUP: "<a href='http://scholar.google.com/scholar?q="%22Analysis+of+Dalvik+Virtual+Machine+and+Class+Path+Library%22"'>"Analysis of Dalvik Virtual Machine and Class Path Library"</a>", 《ANALYSIS OF DALVIK VIRTUAL MACHINE AND CLASS PATH LIBRARY》, 30 November 2009 (2009-11-30), pages 13 - 18</td></tr><tr><td class="patent-data-table-td ">3</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">刘泽衡: "<a href='http://scholar.google.com/scholar?q="%E3%80%8A%E5%9F%BA%E4%BA%8EAndroid%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E7%9A%84%E5%AE%89%E5%85%A8%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B"'>《基于Android智能手机的安全检测系统的研究与实现》</a>", 《CNKI》, 30 June 2011 (2011-06-30)</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102938040A?cl=zh">CN102938040A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年9月29日</td><td class="patent-data-table-td patent-date-value">2013年2月20日</td><td class="patent-data-table-td ">中兴通讯股份有限公司</td><td class="patent-data-table-td ">Android恶意应用程序检测方法、系统及设备</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103093148A?cl=zh">CN103093148A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年12月28日</td><td class="patent-data-table-td patent-date-value">2013年5月8日</td><td class="patent-data-table-td ">广东欧珀移动通信有限公司</td><td class="patent-data-table-td ">一种恶意广告的检测方法、系统及设备</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103365699A?cl=zh">CN103365699A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年12月21日</td><td class="patent-data-table-td patent-date-value">2013年10月23日</td><td class="patent-data-table-td ">北京安天电子设备有限公司</td><td class="patent-data-table-td ">基于apk的系统api和运行时字符串提取方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103440458A?cl=zh">CN103440458A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年9月25日</td><td class="patent-data-table-td patent-date-value">2013年12月11日</td><td class="patent-data-table-td ">西安交通大学</td><td class="patent-data-table-td ">一种启发式静态识别Android系统恶意代码的方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103442360A?cl=zh">CN103442360A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年9月9日</td><td class="patent-data-table-td patent-date-value">2013年12月11日</td><td class="patent-data-table-td ">北京网秦天下科技有限公司</td><td class="patent-data-table-td ">移动应用的安全性检测方法及移动终端</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2014048194A1?cl=zh">WO2014048194A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年8月23日</td><td class="patent-data-table-td patent-date-value">2014年4月3日</td><td class="patent-data-table-td ">Zte Corporation</td><td class="patent-data-table-td ">Android恶意应用程序检测方法、系统及设备</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2015014185A1?cl=zh">WO2015014185A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2014年6月26日</td><td class="patent-data-table-td patent-date-value">2015年2月5日</td><td class="patent-data-table-td ">Tencent Technology (Shenzhen) Company Limited</td><td class="patent-data-table-td ">Method, device and system for detecting malware in mobile terminal</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=jcygBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0021560000">G06F21/56</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=jcygBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0021000000">G06F21/00</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2012年9月12日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年11月7日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年12月12日</td><td class="patent-data-table-td ">C53</td><td class="patent-data-table-td ">Correction of patent for invention or patent application</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年12月12日</td><td class="patent-data-table-td ">COR</td><td class="patent-data-table-td ">Change of bibliographic data</td><td class="patent-data-table-td "><div class="nested-key-value"><span class="nested-key">Free format text: </span><span class="nested-value">CORRECT: APPLICANT; FROM: CHENGDU HUAWEI SYMANTEC TECHNOLOGIES CO., LTD. TO: HUAWEI DIGITAL TECHNOLOGY (CHENGDU) CO., LTD.</span></div></td></tr><tr><td class="patent-data-table-td patent-date-value">2015年3月18日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/4e9dfe66d7054f42bed5/CN102663281A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E6%A3%80%E6%B5%8B%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E7%9A%84%E6%96%B9%E6%B3%95%E5%92%8C%E8%A3%85%E7%BD%AE.pdf?id=jcygBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U245fAwMsmHTPPbH3iGmHxAYNNiBQ"},"sample_url":"https://www.google.com/patents/reader?id=jcygBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>