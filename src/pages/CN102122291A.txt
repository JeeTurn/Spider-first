<!DOCTYPE html><html><head><title>专利 CN102122291A - 一种基于树形日志模式分析的博客好友推荐方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_5115ea495017d9115e613207d3810e5a/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_5115ea495017d9115e613207d3810e5a__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种基于树形日志模式分析的博客好友推荐方法"><meta name="DC.contributor" content="周健" scheme="inventor"><meta name="DC.contributor" content="寿黎但" scheme="inventor"><meta name="DC.contributor" content="胡天磊" scheme="inventor"><meta name="DC.contributor" content="贝毅君" scheme="inventor"><meta name="DC.contributor" content="陈刚" scheme="inventor"><meta name="DC.contributor" content="陈珂" scheme="inventor"><meta name="DC.contributor" content="浙江大学" scheme="assignee"><meta name="DC.date" content="2011-1-18" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种基于树形日志模式分析的博客好友推荐方法。采用离线挖掘方法，通过对服务器日志的解析，提取出访问者对博客页面的访问记录，通过分组，排序，去回环等技术进一步构造出以待推荐的博客为根的访问日志树，对构造出的访问日志树做频繁挖掘，找出符合预设要求的频繁子树，把频繁子树中的节点作为候选博客好友，按设定的公式进行推荐度计算，取分值最高的若干个进行推荐。算法不同于传统的基于频繁项挖掘或频繁序列挖掘的算法，针对博客圈特有的平行链接关系和间接访问特性，采用了频繁树形结构挖掘的方法，充分发掘，提取了博客间潜在的访问联系，并推荐给访问用户，提高了用户体验，是一种高效，实用的博客推荐方法。"><meta name="DC.date" content="2011-7-13"><meta name="citation_patent_publication_number" content="CN:102122291:A"><meta name="citation_patent_application_number" content="CN:201110020478"><link rel="canonical" href="https://www.google.com/patents/CN102122291A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102122291A?cl=zh"/><meta name="title" content="专利 CN102122291A - 一种基于树形日志模式分析的博客好友推荐方法"/><meta name="description" content="本发明公开了一种基于树形日志模式分析的博客好友推荐方法。采用离线挖掘方法，通过对服务器日志的解析，提取出访问者对博客页面的访问记录，通过分组，排序，去回环等技术进一步构造出以待推荐的博客为根的访问日志树，对构造出的访问日志树做频繁挖掘，找出符合预设要求的频繁子树，把频繁子树中的节点作为候选博客好友，按设定的公式进行推荐度计算，取分值最高的若干个进行推荐。算法不同于传统的基于频繁项挖掘或频繁序列挖掘的算法，针对博客圈特有的平行链接关系和间接访问特性，采用了频繁树形结构挖掘的方法，充分发掘，提取了博客间潜在的访问联系，并推荐给访问用户，提高了用户体验，是一种高效，实用的博客推荐方法。"/><meta property="og:title" content="专利 CN102122291A - 一种基于树形日志模式分析的博客好友推荐方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102122291A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102122291A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=MlOXBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102122291A&amp;usg=AFQjCNFBPaW9o5xSbbtjmlsapOtknkNO9w" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/ec63b2bab39babc8445b/CN102122291A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/ec63b2bab39babc8445b/CN102122291A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102122291A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102122291A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102122291A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种基于树形日志模式分析的博客好友推荐方法。采用离线挖掘方法，通过对服务器日志的解析，提取出访问者对博客页面的访问记录，通过分组，排序，去回环等技术进一步构造出以待推荐的博客为根的访问日志...</span><span itemprop="url">https://www.google.com/patents/CN102122291A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102122291A - 一种基于树形日志模式分析的博客好友推荐方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102122291A - 一种基于树形日志模式分析的博客好友推荐方法" title="专利 CN102122291A - 一种基于树形日志模式分析的博客好友推荐方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102122291 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201110020478</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2011年7月13日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2011年1月18日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2011年1月18日</td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201110020478.7, </span><span class="patent-bibdata-value">CN 102122291 A, </span><span class="patent-bibdata-value">CN 102122291A, </span><span class="patent-bibdata-value">CN 201110020478, </span><span class="patent-bibdata-value">CN-A-102122291, </span><span class="patent-bibdata-value">CN102122291 A, </span><span class="patent-bibdata-value">CN102122291A, </span><span class="patent-bibdata-value">CN201110020478, </span><span class="patent-bibdata-value">CN201110020478.7</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%91%A8%E5%81%A5%22">周健</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%AF%BF%E9%BB%8E%E4%BD%86%22">寿黎但</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%83%A1%E5%A4%A9%E7%A3%8A%22">胡天磊</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%B4%9D%E6%AF%85%E5%90%9B%22">贝毅君</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%99%88%E5%88%9A%22">陈刚</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%99%88%E7%8F%82%22">陈珂</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%B5%99%E6%B1%9F%E5%A4%A7%E5%AD%A6%22">浙江大学</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102122291A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102122291A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102122291A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=MlOXBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201110020478&amp;usg=AFQjCNGYo1ArZMZuumTS6OHFHEyxvAzCHw"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=MlOXBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102122291A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNGgfmfybaC-PjdyEANKQ5rIBZi7dQ"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT104269469" lang="ZH" load-source="patent-office">一种基于树形日志模式分析的博客好友推荐方法</invention-title>
    </span><br><span class="patent-number">CN 102122291 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA86172533" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种基于树形日志模式分析的博客好友推荐方法。采用离线挖掘方法，通过对服务器日志的解析，提取出访问者对博客页面的访问记录，通过分组，排序，去回环等技术进一步构造出以待推荐的博客为根的访问日志树，对构造出的访问日志树做频繁挖掘，找出符合预设要求的频繁子树，把频繁子树中的节点作为候选博客好友，按设定的公式进行推荐度计算，取分值最高的若干个进行推荐。算法不同于传统的基于频繁项挖掘或频繁序列挖掘的算法，针对博客圈特有的平行链接关系和间接访问特性，采用了频繁树形结构挖掘的方法，充分发掘，提取了博客间潜在的访问联系，并推荐给访问用户，提高了用户体验，是一种高效，实用的博客推荐方法。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(5)</span></span></div><div class="patent-text"><div mxw-id="PCLM37789981" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种基于树形日志模式分析的博客好友推荐方法，其特征在于该方法采用的步骤如下：1)解析原始日志，提取有效信息，在数据库中创建会话表，用来记录用户的访问路径；2)针对待推荐的博客，在数据库中找出访问过待推荐的博客的用户，根据用户的访问 日志，去回环，构建以待推荐的博客为根的访问日志树；3)对构造出的访问日志树做频繁递归无序树挖掘，找出符合预设要求的频繁子树；4)把频繁子树中的节点作为候选博客好友，按设定的公式进行推荐度计算，取分值最 高的若干个进行推荐。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的一种基于树形日志模式分析的博客好友推荐方法，其特征在 于：所述步骤1)中解析原始日志，提取有效信息，就是用日志解析器提取服务器中的日志， 得到一个时间片内的访问记录，去掉用户请求中的冗余信息，转化成访问三元组〈访问者， 访问时间，访问博客〉存入会话表中，时间片大小的选择依据博客访问量和运行挖掘算法 的计算机的性能，访问者为注册用户的，以用户名为“访问者”的标识，访问者为匿名用户 的，以用户IP为“访问者”的标识。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求1所述的一种基于树形日志模式分析的博客好友推荐方法，其特征在 于：所述步骤2)中针对待推荐的博客，在数据库中找出访问过待推荐的博客的用户，根据 用户的访问日志，去回环，构建以待推荐的博客为根的访问日志树，就是根据网站的组织结 构信息，针对待推荐的博客，在会话表中查找出访问过该博客的用户和用户第一次访问该 博客的时间，针对每个查找得到的访问者，提取出查找得到的访问者在访问待推荐的博客 后访问的其它博客的记录；树形结构生成器以每个访问者为单位构造访问日志树，访问者 访问的每个博客对应一个节点，每个节点包含访问三元组信息，父子节点关系的形成依据 连续访问请求的时间上的先后顺序；对于产生的回环，删除访问时间上最迟的边，产生的访 问日志树具有三个特点：第一，访问日志树具有相同的根节点，即为待推荐的博客；第二， 所有的访问日志树不存在标签相同的兄弟节点；第三，访问日志树是无序的，即每个节点的 子节点是无序的。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求1所述的一种基于树形日志模式分析的博客好友推荐方法，其特 征在于：所述步骤3)中对构造出的访问日志树做频繁递归无序树挖掘，找出符合预设要 求的频繁子树，就是把所有的访问日志树分别记为tl，t2-tn，选择合适的最小支持度 minsupi (0, 1)，用频繁子树挖掘器进行挖掘，具体步骤如下：第一步、遍历tl，t2…tn，把“访问三元组”中“访问博客”相同的节点归为相同节点，统 计每种节点在访问日志树中出现的次数frel，对于frel&gt;minsup*n的节点，记为频繁子树 EQl ；第二步、对EQl做扩展，把两个EQl中的节点做连接操作，构成父子关系，形成包含2 个节点的树，作为候选子树，统计出候选子树在所有访问日志树中的出现次数fre2，对于 fre2&gt;minsup*n的候选子树，记为频繁子树EQ2 ；第三步、从EQ2开始，对于每棵树的最右路径，做枚举扩展，每次扩展一个节点，找出所 有可能的候选子树，统计出出现次数frei&gt;minsUp*n的树，记为新的频繁子树EQi，做类似 的递归操作，不断增加挖掘的频繁子树的节点数目，直到没有符合的候选子树为止。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求1所述的一种基于树形日志模式分析的博客好友推荐方法，其特征在 于：所述步骤4)中把挖掘得到的频繁子树中的节点作为候选博客好友，按设定的公式进行 推荐度计算，取分值最高的若干个进行推荐，就是对节点数大于3的频繁子树，按照出现频 度fre从大到小排序，依次拿出每棵频繁子树，做如下操作：根据宽度优先遍历，从树的第2 层开始，计算每个节点的推荐度R，公式如下：参数说明：fre为频繁子树的频度；T表示是否存在直接的页面链接，存在，则T为1，不 存在，则T为0 ；d是该节点的深度，根节点深度记为0 ； Wk是每层的权重参数，默认为1 ； Bk为每层的分支数目，即同一父节点下兄弟节点数目；计算出所有候选节点的推荐度后，根 据需要，选出分值最高的若干个节点，取节点对应的博客作为博客好友进行推荐。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES43369021" lang="ZH" load-source="patent-office" class="description">
    <p>一种基于树形日志模式分析的博客好友推荐方法</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及对博客服务器日志的数据分析技术和频繁访问模式的挖掘技术， 特别是涉及一种基于树形日志模式分析的博客好友推荐方法。</p>
    <p>背景技术</p>
    <p>[0002]	随着互联网技术的不断发展，博客已经不仅仅是一个单纯的发布个人文章、信息 的平台，在增加了各种类如留言、关注、好友等互动功能后，用户之间会逐渐形成一个博客 圈。博客圈中包含好友、潜在好友（尚未加入好友名单的博客或者是好友的好友）和志趣相 投的其他博客等等。在博客这样的典型《吐2. 0应用中，建立志趣相投的用户社会关系是决 定系统成败的关键，因此面向博客的好友推荐已经成为博客系统的主体功能。博客好友推 荐应用通过用户对博客的访问行为，发现博客用户间潜在的关联性，并试着建议博客根据 关联性将与有可能其具有共同兴趣的人群转化为好友关系。</p>
    <p>[0003]	博客圈是一种复杂的树形或者图形结构，目前已经存在一些面向博客的好友推荐 系统。他们一般基于博客间已经建立的好友关系和服务器记录的访问量来做推荐，这些推 荐方法基于频繁项挖掘或是频繁序列挖掘，存在以下不足和缺点：1)没有考虑博客间特有 的平行链接关系和间接访问特性；2)没有考虑用户访问页面的先后顺序所隐藏的博客页面 间的逻辑关系；3)没有充分考虑网站组织架构的层次关系和深度关系。</p>
    <p>发明内容</p>
    <p>[0004]	针对博客服务器日志所隐含的丰富的用户行为信息和页面组织信息，本发明的目 的在于提供一种基于树形日志模式分析的博客好友推荐方法，是针对博客日志的，基于树 形结构挖掘的博客推荐方法。</p>
    <p>[0005]	本发明解决其技术问题采用的技术方案是： 该方法采用的步骤如下：</p>
    <p>1)解析原始日志，提取有效信息，在数据库中创建会话表，用来记录用户的访问路</p>
    <p>径；</p>
    <p>2)针对待推荐的博客，在数据库中找出访问过待推荐的博客的用户，根据用户的访问 日志，去回环，构建以待推荐的博客为根的访问日志树；</p>
    <p>3)对构造出的访问日志树做频繁递归无序树挖掘，找出符合预设要求的频繁子树；</p>
    <p>4)把频繁子树中的节点作为候选博客好友，按设定的公式进行推荐度计算，取分值最 高的若干个进行推荐。</p>
    <p>[0006]	2、根据权利要求1所述的一种基于树形日志模式分析的博客好友推荐方法，其特 征在于：所述步骤1)中解析原始日志，提取有效信息，就是用日志解析器提取服务器中的 日志，得到一个时间片内的访问记录，去掉用户请求中的冗余信息，转化成访问三元组 &lt; 访 问者，访问时间，访问博客 &gt; 存入会话表中，时间片大小的选择依据博客访问量和运行挖掘 算法的计算机的性能，访问者为注册用户的，以用户名为“访问者”的标识，访问者为匿名用户的，以用户IP为“访问者”的标识。</p>
    <p>[0007]	3、根据权利要求1所述的一种基于树形日志模式分析的博客好友推荐方法，其特 征在于：所述步骤幻中针对待推荐的博客，在数据库中找出访问过待推荐的博客的用户， 根据用户的访问日志，去回环，构建以待推荐的博客为根的访问日志树，就是根据网站的组 织结构信息，针对待推荐的博客，在会话表中查找出访问过该博客的用户和用户第一次访 问该博客的时间，针对每个查找得到的访问者，提取出查找得到的访问者在访问待推荐的 博客后访问的其它博客的记录；树形结构生成器以每个访问者为单位构造访问日志树，访 问者访问的每个博客对应一个节点，每个节点包含访问三元组信息，父子节点关系的形成 依据连续访问请求的时间上的先后顺序；对于产生的回环，删除访问时间上最迟的边，产生 的访问日志树具有三个特点：第一，访问日志树具有相同的根节点，即为待推荐的博客；第 二，所有的访问日志树不存在标签相同的兄弟节点；第三，访问日志树是无序的，即每个节 点的子节点是无序的。</p>
    <p>[0008]	4、根据权利要求1所述的一种基于树形日志模式分析的博客好友推荐方法，其 特征在于：所述步骤幻中对构造出的访问日志树做频繁递归无序树挖掘，找出符合预设 要求的频繁子树，就是把所有的访问日志树分别记为tl，t2…tn，选择合适的最小支持度 minsupi (0, 1)，用频繁子树挖掘器进行挖掘，具体步骤如下：</p>
    <p>第一步、遍历tl，t2…tn，把“访问三元组”中“访问博客”相同的节点归为相同节点，统 计每种节点在访问日志树中出现的次数frel，对于frel&gt;minsup*n的节点，记为频繁子树 EQl ；</p>
    <p>第二步、对EQl做扩展，把两个EQl中的节点做连接操作，构成父子关系，形成包含2 个节点的树，作为候选子树，统计出候选子树在所有访问日志树中的出现次数fre2，对于 fre2&gt;minsup*n的候选子树，记为频繁子树EQ2 ；</p>
    <p>第三步、从EQ2开始，对于每棵树的最右路径，做枚举扩展，每次扩展一个节点，找出所 有可能的候选子树，统计出出现次数frei&gt;minsUp*n的树，记为新的频繁子树EQi，做类似 的递归操作，不断增加挖掘的频繁子树的节点数目，直到没有符合的候选子树为止。</p>
    <p>[0009]	5、根据权利要求1所述的一种基于树形日志模式分析的博客好友推荐方法，其特 征在于：所述步骤4)中把挖掘得到的频繁子树中的节点作为候选博客好友，按设定的公式 进行推荐度计算，取分值最高的若干个进行推荐，就是对节点数大于3的频繁子树，按照出 现频度fre从大到小排序，依次拿出每棵频繁子树，做如下操作：根据宽度优先遍历，从树 的第2层开始，计算每个节点的推荐度R，公式如下：</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102122291A/CN102122291AD00051.png"> <img id="idf0001" file="CN102122291AD00051.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102122291A/CN102122291AD00051.png" class="patent-full-image" alt="Figure CN102122291AD00051"> </a> </div>
    <p>参数说明：fre为频繁子树的频度；T表示是否存在直接的页面链接，存在，则T为1， 不存在，则T为0 ;d是该节点的深度，根节点深度记为0 ； Wk是每层的权重参数，默认 为1 ；&#12316;为每层的分支数目，即同一父节点下兄弟节点数目；计算出所有候选节点的推荐度 后，根据需要，选出分值最高的若干个节点，取节点对应的博客作为博客好友进行推荐。 [0010]本发明具有的有益效果是：</p>
    <p>根据访问者对博客的访问行为和博客网站的结构特点，结合现有的数据挖掘技术，针 对服务器的访问日志，挖掘出树形结构的频繁访问模式。博客的服务提供商根据挖掘出的 频繁访问模式研究分析用户的访问行为，为用户推荐博客好友，改善用户体验；同时也可协 助网站架构师更好地组织网站架构，提高用户对博客的访问率。</p>
    <p>附图说明</p>
    <p>[0011]	图1是基于树形日志模式分析的博客好友推荐方法的总体结构图。</p>
    <p>[0012]	图2是访问会话及其索引。</p>
    <p>[0013]	图3是根据图2中visitorl的会话构造出的访问日志树。</p>
    <p>[0014]	图4是频繁子树挖掘方法的示意图。</p>
    <p>[0015]	图5是推荐度计算方法的示意图。</p>
    <p>具体实施方式</p>
    <p>[0016]	以下结合具体实例和附图对本发明作进一步的描述。</p>
    <p>[0017]	通过本发明所提供的博客日志分析方法，可以快速，有效地提取出频繁访问模式， 通过智能化的筛选过程把潜在的博客好友推荐给访问用户，总体结构图如图1所示，具体 的实施步骤如下：</p>
    <p>1)图1中的日志解析器对一个时间段内的服务器日志进行解析，删除冗余信息，构建 访问三元组&lt;访问者，访问时间，访问博客Xtriple&lt;visitor, access_time, blog_url&gt;), 以Apache服务器日志为例，具体过程如下：</p>
    <p>记录在Apache服务器中的日志可以表示成下面的形式： 117.24.255.86 - - [01/Jul/2010：18：01：25 +0800] 〃GET http://B. blog. 163. com HTTP/1. 0" 200 1231</p>
    <p>"117.24.255.230. 1277794615926482〃 46807 "Mozilla/4. 0 (compatible; MSIE 6.0; Windows NT 5.1; SVl; . NET CLR 2.0.50727; . NET CLR 3.0.04506.30)"</p>
    <p>这条日志记录给出了 IP为117. 24. 255. 86的匿名用户在01/Jul/2010:18:01:25 +0800 时间访问了页面 http://A. blog. 163. com。</p>
    <p>[0018]所以，可以依次构建访问三元组	&lt;117. 24. 255. 86，2010-7-1 18:01:25，blogA〉， 对于访问者为注册用户的，以注册ID作为visitor的标识；为匿名用户的，用IP作为区分， 创建一个临时ID ；对于访问的页面，为了便于下一步的处理，可以结合网站的组织结构信 息，将页面的url地址进行简化，如这里将http://A.bl0g. 163. com简化为blogA，两者必</p>
    <p>须--对应。</p>
    <p>[0019]	2)针对待推荐的博客，图1中的树形结构生成器在数据库中找出访问过待推荐 的博客的用户，根据用户的访问日志，去回环，构建以待推荐的博客为根的访问日志树，具 体步骤如下：</p>
    <p>第一步，根据网站的组织结构信息，针对某个待推荐的博客blogA，树形结构生成器的 分组排序模块在会话表中查找出所有访问过blogA的用户和该用户第一次访问blogA的 时间（SQL 查询：select visitor，distinct access_time from triple where access_ur 1 = blogA)。假设用户visitorO第一次访问blogA的时间是access_timeO,查找用 户visitorO的所有的访问时间在accessjimeO之后的页面，对每个查询得到的用户都做 相同操作（SQL 查询：select visitor , access_time, access_url from triple where visitor = visitorO and access_time &gt; access_timeO,经过以上操作，可以得至Ij如图 2 所示的用户会话信息</p>
    <p>第二步，对查询得到的记录，以访问者为单位构造访问日志树，父子节点关系的形成依 据连续访问请求的时间上的先后顺序；对于产生的回环，树形结构生成器中的去回环模块 通过删除回环上时间最迟的那条边来消除回环，根据图2中visitorl的会话产生的访问日 志树如图3所示。产生的访问日志树有三个特点：第一，所有的访问日志树具有相同的根节 点，即为待推荐的博客；第二，所有的访问日志树中不存在标签相同的节点；第三，访问日 志树是无序的，即不考虑兄弟节点间的先后顺序。</p>
    <p>[0020]	3)图1所示的频繁子树挖掘器对上一步构造出的访问日志树做频繁递归无序树 挖掘，找出符合预设要求的频繁子树，具体步骤如下：树形结构生成器把上一步得到的访问 日志树编号，分别为tl，t2，-tn0</p>
    <p>[0021]	第一步：树形结构生成器中的候选子树生成模块遍历所有的访问日志树，把“访问 三元组”中“访问博客”相同的节点归为相同节点，子树频度统计模块统计每种节点在访问 日志树中出现的位置及含有该种节点的树的总数frel(频度)，对于frel&gt;minsup*n的节点， 记为频繁子树EQl ；</p>
    <p>第二步：对EQl中的节点两两做连接操作，构成父子关系，作为候选的频繁子树，统计 出候选的频繁子树在所有日志中出现的次数fre2，具体步骤如图4所示，节点A和节点B都 属于EQ1，对A，B做连接操作，A为B的父节点，同时记录最后新添加的节点在原树中的位置 (图4中为B节点)，对于fre2&gt;minsup*n的候选子树，记为频繁子树EQ2。</p>
    <p>[0022]	第三步：从EQ2开始，对于每棵树的最右路径，做枚举扩展，每次扩展一个节点，找 出所有可能的候选子树，统计出出现次数frei&gt;minsUp*n的树，记为新的频繁子树EQi。如 图4所示，首先对于节点A做了最右路径的扩展，扩展出了一个新的节点B，也可以对原来 的B节点做扩展，但一次只能扩展一个节点。如此做类似的递归操作，不断增加挖掘的频繁 子树的节点数目，直到没有符合的候选频繁子树为止。挖掘树的过程中，为了便于树的记 录，采用了对树的字符串编码，例如图4中树tl编码为ABC-lBD-lE-l-lB，t2的字符编码为 ABC-1DE-1-1-1B，编码根据深度优先遍历顺序，每次往回走时插入一个-1，根据这种方法， 树和字符串编码是一一对应的。</p>
    <p>[0023]	4)挖掘出所有的频繁子树后，图1所示的候选节点推荐器按照频繁子树的出现频 度fre从大到小排序，依次拿出每棵频繁子树做如下操作：根据宽度优先遍历顺序，从树的 第2层开始，节点推荐度计算模块计算每个节点的推荐度R，公式如下：</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102122291A/CN102122291AD00071.png"> <img id="idf0002" file="CN102122291AD00071.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102122291A/CN102122291AD00071.png" class="patent-full-image" alt="Figure CN102122291AD00071"> </a> </div>
    <p>参数说明：fre为频繁子树的频度；T表示是否存在直接的页面链接，存在，则T为1，不存在，则τ为ο ；d是该节点的深度，根节点深度记为ο ;Wfe是每层的权重参数，默认为ι ；</p>
    <p>Bk为每层的分支数目，即同一父节点下兄弟节点数目。</p>
    <p>[0024]	如图5所示，挖掘出了频繁子树ABC-1D-1-1B (字符串编码），这棵树在tl，t2中 都出现，所以频度fre是100%，计算该候选子树的推荐度R，步骤如下：对于点A，在树的第1 层，所以略过，对于第二层的节点B，若网站结构中不存在A到B的直接链接，则T为0，所以 Rb=O ；若网站结构中存在A到B的直接链接，T=I,则&amp;=1*1*1/2=0. 5。对于节点C，若不存 在节点B到节点C的直接链接，则T=O,从而Rc=O ；若存在，则T=l，则Rc=l*l* (1/2)( 1/3) =0.167。节点D的情况与C相同。</p>
    <p>[0025]	计算出所有候选节点的推荐度后，根据需要，选出分值最高的若干个节点对应的 博客作为博客好友进行推荐。按图5计算的节点，假使都存在直接的链接，根据计算，B节 点，E节点的推荐度都为0. 5，所以这两个节点对应的博客作为博客好友首先被推荐，节点C 和节点D的推荐度为0. 167，如果需要，它们对应的博客作为博客好友被进一步被推荐。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102646122A?cl=zh">CN102646122A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年2月21日</td><td class="patent-data-table-td patent-date-value">2012年8月22日</td><td class="patent-data-table-td ">北京航空航天大学</td><td class="patent-data-table-td ">一种学术社交网络的自动构建方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102646122B?cl=zh">CN102646122B</a></td><td class="patent-data-table-td patent-date-value">2012年2月21日</td><td class="patent-data-table-td patent-date-value">2014年1月22日</td><td class="patent-data-table-td ">北京航空航天大学</td><td class="patent-data-table-td ">一种学术社交网络的自动构建方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103488683A?cl=zh">CN103488683A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年8月21日</td><td class="patent-data-table-td patent-date-value">2014年1月1日</td><td class="patent-data-table-td ">北京航空航天大学</td><td class="patent-data-table-td ">一种微博数据管理系统及其实现方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2013034018A1?cl=zh">WO2013034018A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年6月29日</td><td class="patent-data-table-td patent-date-value">2013年3月14日</td><td class="patent-data-table-td ">Tencent Technology (Shenzhen) Company Limited</td><td class="patent-data-table-td ">基于分类的互联网信息推送方法及装置、计算机存储介质</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=MlOXBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2011年7月13日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2011年8月24日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年1月16日</td><td class="patent-data-table-td ">C12</td><td class="patent-data-table-td ">Rejection of an application for a patent</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/ec63b2bab39babc8445b/CN102122291A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_5115ea495017d9115e613207d3810e5a.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8E%E6%A0%91%E5%BD%A2%E6%97%A5%E5%BF%97%E6%A8%A1%E5%BC%8F%E5%88%86%E6%9E%90%E7%9A%84.pdf?id=MlOXBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U0dQUcISyBM9gZh1luQIlQXUnZ52w"},"sample_url":"https://www.google.com/patents/reader?id=MlOXBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>