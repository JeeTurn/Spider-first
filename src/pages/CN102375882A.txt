<!DOCTYPE html><html><head><title>专利 CN102375882A - 一种快速访问网页的方法、装置及一种浏览器 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_6e802a6b2b28d51711baddc2f3bec198/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_6e802a6b2b28d51711baddc2f3bec198__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种快速访问网页的方法、装置及一种浏览器"><meta name="DC.contributor" content="宗小斌" scheme="inventor"><meta name="DC.contributor" content="陶伟华" scheme="inventor"><meta name="DC.contributor" content="马远真" scheme="inventor"><meta name="DC.contributor" content="奇智软件（北京）有限公司" scheme="assignee"><meta name="DC.date" content="2011-9-19" scheme="dateSubmitted"><meta name="DC.description" content="本发明提供了一种快速访问网页的方法、装置及一种浏览器，以解决浏览器第一次访问无缓存的问题。所述方法包括：预先在本地创建优化缓存区，并在所述优化缓存区中预加载需要访问的所有网页数据；当发起网页访问请求时，查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据，如果已保存，则直接从所述优化缓存区中读取所述网页数据；如果未保存，则触发浏览器默认的缓存机制来查询浏览器的默认缓存区中是否保存所述网页数据。本发明可以提高网页(尤其是复杂脚本页面)的访问速度，还可以避免缓存被浏览器自动清理掉的问题。"><meta name="DC.date" content="2012-3-14"><meta name="DC.relation" content="US:20070276887:A1" scheme="references"><meta name="DC.relation" content="US:6163779" scheme="references"><meta name="citation_reference" content="CONNOR: &quot;《http://keyboardy.com/programming/html5-link-prefetching/》&quot;, 24 July 2010, article &quot;How HTML 5 link prefetching can make your site load faster with one line of code&quot;"><meta name="citation_patent_publication_number" content="CN:102375882:A"><meta name="citation_patent_application_number" content="CN:201110278365"><link rel="canonical" href="https://www.google.com/patents/CN102375882A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102375882A?cl=zh"/><meta name="title" content="专利 CN102375882A - 一种快速访问网页的方法、装置及一种浏览器"/><meta name="description" content="本发明提供了一种快速访问网页的方法、装置及一种浏览器，以解决浏览器第一次访问无缓存的问题。所述方法包括：预先在本地创建优化缓存区，并在所述优化缓存区中预加载需要访问的所有网页数据；当发起网页访问请求时，查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据，如果已保存，则直接从所述优化缓存区中读取所述网页数据；如果未保存，则触发浏览器默认的缓存机制来查询浏览器的默认缓存区中是否保存所述网页数据。本发明可以提高网页(尤其是复杂脚本页面)的访问速度，还可以避免缓存被浏览器自动清理掉的问题。"/><meta property="og:title" content="专利 CN102375882A - 一种快速访问网页的方法、装置及一种浏览器"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102375882A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102375882A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=UCSHBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102375882A&amp;usg=AFQjCNFzeV4xItoqWIFdGMq7PeltlR-55Q" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/51b445ec2fbf46995bf1/CN102375882A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/51b445ec2fbf46995bf1/CN102375882A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102375882A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102375882A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102375882A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102375882B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102375882A?cl=zh" style="display:none"><span itemprop="description">本发明提供了一种快速访问网页的方法、装置及一种浏览器，以解决浏览器第一次访问无缓存的问题。所述方法包括：预先在本地创建优化缓存区，并在所述优化缓存区中预加载需要访问的所有网页数据；当发起网页访问请求时...</span><span itemprop="url">https://www.google.com/patents/CN102375882A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102375882A - 一种快速访问网页的方法、装置及一种浏览器</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102375882A - 一种快速访问网页的方法、装置及一种浏览器" title="专利 CN102375882A - 一种快速访问网页的方法、装置及一种浏览器"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102375882 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201110278365</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2012年3月14日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2011年9月19日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2011年9月19日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102375882B?hl=zh-CN&amp;cl=zh">CN102375882B</a>, </span><span class="patent-bibdata-value"><a href="/patents/US20150154313?hl=zh-CN&amp;cl=zh">US20150154313</a>, </span><span class="patent-bibdata-value"><a href="/patents/WO2013041001A1?hl=zh-CN&amp;cl=zh">WO2013041001A1</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201110278365.7, </span><span class="patent-bibdata-value">CN 102375882 A, </span><span class="patent-bibdata-value">CN 102375882A, </span><span class="patent-bibdata-value">CN 201110278365, </span><span class="patent-bibdata-value">CN-A-102375882, </span><span class="patent-bibdata-value">CN102375882 A, </span><span class="patent-bibdata-value">CN102375882A, </span><span class="patent-bibdata-value">CN201110278365, </span><span class="patent-bibdata-value">CN201110278365.7</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%AE%97%E5%B0%8F%E6%96%8C%22">宗小斌</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%99%B6%E4%BC%9F%E5%8D%8E%22">陶伟华</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%A9%AC%E8%BF%9C%E7%9C%9F%22">马远真</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E5%A5%87%E6%99%BA%E8%BD%AF%E4%BB%B6%EF%BC%88%E5%8C%97%E4%BA%AC%EF%BC%89%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">奇智软件（北京）有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102375882A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102375882A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102375882A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (2),</span> <span class="patent-bibdata-value"><a href="#npl-citations">非专利引用</a> (1),</span> <span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (8),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (2),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=UCSHBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201110278365&amp;usg=AFQjCNFZ0fGbXPoAaghOYeGCNjtD0ARbvA"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=UCSHBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102375882A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNGAMUu5gFXXuMGiqVyaohjZf5P2dw"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT112037009" lang="ZH" load-source="patent-office">一种快速访问网页的方法、装置及一种浏览器</invention-title>
      </span><br><span class="patent-number">CN 102375882 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA95507750" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明提供了一种快速访问网页的方法、装置及一种浏览器，以解决浏览器第一次访问无缓存的问题。所述方法包括：预先在本地创建优化缓存区，并在所述优化缓存区中预加载需要访问的所有网页数据；当发起网页访问请求时，查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据，如果已保存，则直接从所述优化缓存区中读取所述网页数据；如果未保存，则触发浏览器默认的缓存机制来查询浏览器的默认缓存区中是否保存所述网页数据。本发明可以提高网页(尤其是复杂脚本页面)的访问速度，还可以避免缓存被浏览器自动清理掉的问题。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(16)</span></span></div><div class="patent-text"><div mxw-id="PCLM40860827" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种快速访问网页的方法，其特征在于，包括：预先在本地创建优化缓存区，并在所述优化缓存区中预加载需要访问的所有网页数据；当发起网页访问请求时，查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据，如果已保存，则直接从所述优化缓存区中读取所述网页数据；如果未保存，则触发浏览器默认的缓存机制来查询浏览器的默认缓存区中是否保存所述网页数据。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的方法，其特征在于，所述浏览器默认的缓存机制还包括： 当浏览器的默认缓存区中已保存所述网页数据时，直接从浏览器的默认缓存区中读取；当浏览器的默认缓存区中未保存所述网页数据时，从服务器进行下载。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求1所述的方法，其特征在于，所述预先在本地创建优化缓存区，包括： 在本地安装协议处理器，由所述协议处理器创建优化缓存区。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求3所述的方法，其特征在于，所述在优化缓存区中预加载需要访问的所有网页数据，包括：安装完成后，自动从服务器下载需要访问的所有网页数据，并保存到所述优化缓存区中。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求3所述的方法，其特征在于，所述在优化缓存区中预加载需要访问的所有网页数据，包括：在所述协议处理器的安装包中预置需要访问的所有网页数据，并在安装完成后将安装包中需要访问的所有网页数据保存到所述优化缓存区中。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求3所述的方法，其特征在于，当发起网页访问请求时，还包括：浏览器的URL处理模块调用查询函数查看协议处理器是否实现了供外部调用的接口 ； 如果已实现，则通知协议处理器查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据；如果未实现，则通知浏览器默认的缓存模块查询浏览器的默认缓存区中是否保存所述网页访问请求对应的网页数据。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求6所述的方法，其特征在于，所述直接从优化缓存区中读取所述网页数据之前，还包括：所述协议处理器通知浏览器的URL处理模块所述优化缓存区中已保存所述网页数据。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.根据权利要求6所述的方法，其特征在于，所述直接从优化缓存区中读取所述网页数据，包括：所述浏览器的URL处理模块调用协议处理器的读取函数，从优化缓存区中读取所述网页数据。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.根据权利要求1至8任一所述的方法，其特征在于： 所述网页数据包含网页脚本数据。</div>
    </div>
    </div> <div class="claim"> <div num="10" class="claim">
      <div class="claim-text">10.	一种快速访问网页的装置，其特征在于，包括： 优化缓存区创建模块，用于预先在本地创建优化缓存区；预加载模块，用于在所述优化缓存区中预加载需要访问的所有网页数据； 数据获取模块，用于当发起网页访问请求时，查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据，如果已保存，则直接从所述优化缓存区中读取所述网页数据； 如果未保存，则触发浏览器默认的缓存模块来查询浏览器的默认缓存区中是否保存所述网页数据。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="11" class="claim">
      <div class="claim-text">11.根据权利要求10所述的装置，其特征在于：所述浏览器默认的缓存模块还用于当浏览器的默认缓存区中已保存所述网页数据时， 直接从浏览器的默认缓存区中读取；当浏览器的默认缓存区中未保存所述网页数据时，从服务器进行下载。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="12" class="claim">
      <div class="claim-text">12.根据权利要求10或11所述的装置，其特征在于，所述预加载模块包括：数据下载子模块，用于自动从服务器下载需要访问的所有网页数据，并保存到所述优化缓存区中。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="13" class="claim">
      <div class="claim-text">13.根据权利要求10或11所述的装置，其特征在于，所述预加载模块包括：数据存储子模块，用于存储需要访问的所有网页数据；加载子模块，用于将所述数据存储子模块中需要访问的所有网页数据保存到所述优化缓存区中。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="14" class="claim">
      <div class="claim-text">14.根据权利要求10或11所述的装置，其特征在于：所述网页数据包含网页脚本数据。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="15" class="claim">
      <div class="claim-text">15.	一种快速访问网页的浏览器，其特征在于，包括：协议处理器，所述协议处理器包括如上述权利要求10至14任一权利要求所述的快速访问网页的装置。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="16" class="claim">
      <div class="claim-text">16.根据权利要求15所述的浏览器，其特征在于，还包括：URL处理模块，用于当发起网页访问请求时，调用查询函数查看协议处理器是否实现了供外部调用的接口 ；如果已实现，则通知协议处理器查询优化缓存区中是否保存所述网页访问请求对应的网页数据；如果未实现，则通知浏览器默认的缓存模块查询浏览器的默认缓存区中是否保存所述网页访问请求对应的网页数据。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES46323221" lang="ZH" load-source="patent-office" class="description">
    <p>一种快速访问网页的方法、装置及一种浏览器</p>
    <p>技术领域</p>
    <p>[0001]	本申请涉及网页访问技术，特别是涉及一种快速访问网页的方法、装置及一种快速访问网页的浏览器。</p>
    <p>背景技术</p>
    <p>[0002]	在访问网页的过程中，为了提高访问速度，浏览器都会支持网页缓存机制。例如， Windows系统自带的IE浏览器会采用累积式加速的方法来实现网页的缓存，即将用户曾经访问的网页内容（包括图片以及cookie文件等）存放在用户电脑里，并且随着用户访问页面数的增加，缓存也累积。当下一次访问同样的页面时，浏览器会首先搜索这个缓存的目录，如果其中已经有访问过的内容，浏览器就不必从网上下载，而直接从本地缓存中读取出来，从而提高了访问网站的速度。</p>
    <p>[0003]	同时，缓存的大小和个数是有限制的，所以浏览器都有它们自己的一套清理缓存的机制，一旦缓存区内文件占用的空间或者个数超过一定量，就会触发浏览器的缓存清理机制。例如，IE浏览器会给每一个缓存文件评估一个权值，然后把排在最后10%的缓存文件清理掉，而这个权值的算法在不同的IE版本上也有不同，并不一致。</p>
    <p>[0004]	综上所述，这种浏览器普遍采用的网页缓存机制在一定程度上提高了访问网页的速度。但是，也存在以下缺陷：</p>
    <p>[0005]	1)浏览器第一次访问无缓存的缺陷；</p>
    <p>[0006]	目前绝大部分的浏览器都采用累积式加速的方法来实现网页缓存，必须在第一次访问后才能获取网页的缓存文件，所以第一次访问都必须从服务器下载，这就带来第一次访问无法提高访问速度的问题。</p>
    <p>[0007]	2)缓存被浏览器或者其它清理软件定期清理掉的缺陷。</p>
    <p>[0008]	浏览器都有自己的一套清理缓存的机制，一旦缓存文件过大，只能按照浏览器的清理机制决定清理哪些文件，但是此机制无法识别哪些缓存文件是关键的或者重要的，而网站也无法控制自己的缓存页面不被清理。因此，可能会将一些重要文件清理掉，导致需经常性地加载这些页面时很缓慢的问题。</p>
    <p>发明内容</p>
    <p>[0009]	本申请提供了一种快速访问网页的方法、装置及一种浏览器，以解决浏览器第一次访问无缓存的问题。</p>
    <p>[0010]	为了解决上述问题，本申请公开了一种快速访问网页的方法，包括：</p>
    <p>[0011]	预先在本地创建优化缓存区，并在所述优化缓存区中预加载需要访问的所有网页数据；</p>
    <p>[0012]	当发起网页访问请求时，查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据，如果已保存，则直接从所述优化缓存区中读取所述网页数据；如果未保存，则触发浏览器默认的缓存机制来查询浏览器的默认缓存区中是否保存所述网页数据。[0013]	优选的，所述浏览器默认的缓存机制还包括：当浏览器的默认缓存区中已保存所述网页数据时，直接从浏览器的默认缓存区中读取；当浏览器的默认缓存区中未保存所述网页数据时，从服务器进行下载。</p>
    <p>[0014]	优选的，所述预先在本地创建优化缓存区，包括：在本地安装协议处理器，由所述协议处理器创建优化缓存区。</p>
    <p>[0015]	优选的，所述在优化缓存区中预加载需要访问的所有网页数据，包括：安装完成后，自动从服务器下载需要访问的所有网页数据，并保存到所述优化缓存区中。</p>
    <p>[0016]	优选的，所述在优化缓存区中预加载需要访问的所有网页数据，包括：在所述协议处理器的安装包中预置需要访问的所有网页数据，并在安装完成后将安装包中需要访问的所有网页数据保存到所述优化缓存区中。</p>
    <p>[0017]	优选的，当发起网页访问请求时，还包括：浏览器的URL处理模块调用查询函数查看协议处理器是否实现了供外部调用的接口 ；如果已实现，则通知协议处理器查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据；如果未实现，则通知浏览器默认的缓存模块查询浏览器的默认缓存区中是否保存所述网页访问请求对应的网页数据。</p>
    <p>[0018]	优选的，所述直接从优化缓存区中读取所述网页数据之前，还包括：所述协议处理器通知浏览器的URL处理模块所述优化缓存区中已保存所述网页数据。</p>
    <p>[0019]	优选的，所述直接从优化缓存区中读取所述网页数据，包括：所述浏览器的URL处理模块调用协议处理器的读取函数，从优化缓存区中读取所述网页数据。</p>
    <p>[0020]	优选的，所述网页数据包含网页脚本数据。</p>
    <p>[0021]	本申请还提供了一种快速访问网页的装置，包括：</p>
    <p>[0022]	优化缓存区创建模块，用于预先在本地创建优化缓存区；</p>
    <p>[0023]	预加载模块，用于在所述优化缓存区中预加载需要访问的所有网页数据；</p>
    <p>[0024]	数据获取模块，用于当发起网页访问请求时，查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据，如果已保存，则直接从所述优化缓存区中读取所述网页数据；如果未保存，则触发浏览器默认的缓存模块来查询浏览器的默认缓存区中是否保存所述网页数据。</p>
    <p>[0025]	优选的，所述浏览器默认的缓存模块还用于当浏览器的默认缓存区中已保存所述网页数据时，直接从浏览器的默认缓存区中读取；当浏览器的默认缓存区中未保存所述网页数据时，从服务器进行下载。</p>
    <p>[0026]	优选的，所述预加载模块包括：数据下载子模块，用于自动从服务器下载需要访问的所有网页数据，并保存到所述优化缓存区中。</p>
    <p>[0027]	优选的，所述预加载模块包括：</p>
    <p>[0028]	数据存储子模块，用于存储需要访问的所有网页数据；</p>
    <p>[0029]	加载子模块，用于将所述数据存储子模块中需要访问的所有网页数据保存到所述优化缓存区中。</p>
    <p>[0030]	优选的，所述网页数据包含网页脚本数据。</p>
    <p>[0031]	本申请还提供了一种快速访问网页的浏览器，包括：协议处理器，所述协议处理器包括如上述权利要求10至14任一权利要求所述的快速访问网页的装置。</p>
    <p>[0032]	优选的，所述浏览器还包括：URL处理模块，用于当发起网页访问请求时，调用查询函数查看协议处理器是否实现了供外部调用的接口 ；如果已实现，则通知协议处理器查询优化缓存区中是否保存所述网页访问请求对应的网页数据；如果未实现，则通知浏览器默认的缓存模块查询浏览器的默认缓存区中是否保存所述网页访问请求对应的网页数据。</p>
    <p>[0033]	与现有技术相比，本申请包括以下优点：</p>
    <p>[0034]	首先，本申请实现了一种新的可以配置可以运营维护的缓存机制，本身并不替代原有浏览器的缓存机制，而是完全兼容原有的缓存机制，是对浏览器缓存机制的一种补充。 基于本申请，当浏览器访问网页时，先从本申请提供的优化缓存中读取网页数据，当读取不到时再使用浏览器的缓存机制，从浏览器的默认缓存区读取。因此，当第一次访问网页时， 虽然浏览器的默认缓存区没有该网页数据，但是只要这个网页数据预先配置到了优化缓存区中，就可以直接从所述优化缓存区中读取到，从而提高了访问速度。</p>
    <p>[0035]	同时，由于所述优化缓存区中的缓存数据只要配置好后就不会被定期清理，即使浏览器定期执行清理机制，也不会影响所述优化缓存区中的缓存数据。因此，通过这种补充的缓存机制，缓存的文件可以不被浏览器或者其它软件清理掉，解决了网站的缓存文件经常被浏览器自动清理的问题，减少了某些特定网站服务器带宽的占用。本申请尤其适用于具有复杂页面脚本的网页访问。</p>
    <p>[0036]	其次，本申请利用Windows的异步可插入协议(APPS, Asynchronous Pluggable I^otocols)，通过自创建异步可插协议处理器实现HTTP协议的网络请求的接管。通过这种接管，可以很方便快捷地实现所需要的缓存机制。</p>
    <p>[0037]	当然，实施本申请的任一产品不一定需要同时达到以上所述的所有优点。 附图说明</p>
    <p>[0038]	图1是本申请实施例所述一种快速访问网页的方法流程图；</p>
    <p>[0039]	图2是本申请另一实施例所述一种快速访问网页的流程示意图；</p>
    <p>[0040]	图3是本申请实施例所述一种快速访问网页的装置结构图；</p>
    <p>[0041]	图4是本申请实施例所述一种快速访问网页的浏览器结构图。</p>
    <p>具体实施方式</p>
    <p>[0042]	为使本申请的上述目的、特征和优点能够更加明显易懂，下面结合附图和具体实施方式对本申请作进一步详细的说明。</p>
    <p>[0043]	本申请实现了一种新的可以配置可以运营维护的缓存机制，本身并不替代原有浏览器的缓存机制，而是完全兼容原有的缓存机制，是对浏览器缓存机制的一种补充。</p>
    <p>[0044]	下面通过实施例对本申请的实现进行详细说明。</p>
    <p>[0045]	参照图1，是本申请实施例所述一种快速访问网页的方法流程图。</p>
    <p>[0046]	步骤101，预先在本地创建优化缓存区，并在所述优化缓存区中预加载需要访问的所有网页数据；</p>
    <p>[0047]	本实施例中，可以将需要提高访问速度的网站的相关文件和索引文件（统称为网页数据或缓存文件）通过安装包或者客户端的升级模块，提前安装到用户的机器上，并在用户机器上创建优化缓存区来缓存这些网页数据。具体的，所述网页数据或缓存文件可以包含图片、文字等网页本身的内容，也可以包含cookie文件，还可以包含网页脚本等。[0048]	其中，所述优化缓存区区别于浏览器的默认缓存区。浏览器支持的网页缓存机制是将浏览器曾经访问过的网页数据存到所述默认缓存区中，并对该默认缓存区进行自动清理和维护。而本申请实施例所述的优化缓存区并不是将浏览器曾经访问过的网页数据进行缓存，而是通过预加载的方式将所有可能访问的网站的数据进行缓存，这些网页数据浏览器可能一次都没有访问过。</p>
    <p>[0049]	进一步的，本实施例提供了两种预加载方式，如下：</p>
    <p>[0050]	一种方式是在安装包或者客户端升级模块安装完成后，自动从服务器下载需要访问的所有网页数据，并保存到所述优化缓存区中；</p>
    <p>[0051]	另一种方式是所述安装包或者客户端升级模块中自带了需要访问的所有网页数据，也即在所述安装包或者客户端升级模块中预配置需要访问的所有网页数据，并在安装完成后将所有网页数据保存到所述优化缓存区中。</p>
    <p>[0052]	实际应用中采用任何一种预加载方式均可。而且，无论采用哪种预加载方式，预加载的内容都可以进行配置，即可以根据用户的需求配置好哪些网站的网页数据（如脚本、 cookie、图片、文字等）需要进行预加载。</p>
    <p>[0053]	步骤102，当发起网页访问请求时，查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据，如果已保存，则直接从所述优化缓存区中读取所述网页数据；</p>
    <p>[0054]	具体查询时，根据缓存文件的索引进行查询。所述索引是一个索引文件，里面包含有网页URL和优化缓存区中缓存文件的对应关系。在浏览器访问网页发出网页资源的http 请求时，将会去此索引文件内进行搜索，如果可以找到对应的缓存文件则直接读取，否则， 执行步骤103返回给系统做默认处理。</p>
    <p>[0055]	由上可知，当访问网页发出请求时，浏览器会首先查询所述优化缓存区，而不是原来的浏览器默认缓存区。</p>
    <p>[0056]	步骤103，如果未保存，则触发浏览器默认的缓存机制来查询浏览器的默认缓存区中是否保存所述网页数据；</p>
    <p>[0057]	当浏览器的默认缓存区中已保存所述网页数据时，直接从浏览器的默认缓存区中读取；</p>
    <p>[0058]	当浏览器的默认缓存区中未保存所述网页数据时，再从服务器进行下载。</p>
    <p>[0059]	以上就是系统的默认处理，即使用浏览器支持的缓存机制。</p>
    <p>[0060]	总之，无论是从优化缓存区读取，还是从浏览器默认缓存区读取，还是从服务器上下载，当获取到需要访问的缓存文件后，继续进行后续处理，如在客户端显示。</p>
    <p>[0061]	由上述流程可知，当第一次访问网页时，虽然浏览器的默认缓存区没有该网页数据，但是只要这个网页数据预先配置到了优化缓存区中，就可以直接从所述优化缓存区中读取到，从而提高了访问速度。</p>
    <p>[0062]	同时，由于所述优化缓存区中的缓存数据只要配置好后就不会被定期清理，即使浏览器定期执行清理机制，也不会影响所述优化缓存区中的缓存数据。因此，通过这种补充的缓存机制，缓存的文件可以不被浏览器或者其它软件清理掉，解决了网站的缓存文件经常被浏览器自动清理的问题，减少了某些特定网站服务器带宽的占用。为了使本领域技术人员进一步理解本申请的实现，下面通过更具体的例子进行详细说明。</p>
    <p>[0063]	在本实施例中，将利用Windows的异步可插入协议（APPS，AsynchronousPluggable Protocols)，通过自创建异步可插协议处理器实现http协议的网络请求的接管，从而获得浏览器所有http协议方面的处理权限。通过这种接管，可以很方便快捷地实现所需要的缓存机制。</p>
    <p>[0064]	异步可插协议处理器（APPQ是Windows平台上处理自定义URL协议方案或者为指定的MIME类型过滤数据的一种方案，它允许通过APPS替换掉Windows系统默认的URL 协议，比如http协议或者about协议等。</p>
    <p>[0065]	异步可插协议处理器（APPQ是一个用于处理任何注册为协议方案的调用的线程单元COM对象。当客户端程序作出请求，Urlmon (Windows的URL处理模块）在注册表中查看协议方案并创建一个已经为这个协议方案注册的协议处理程序的实例。如果协议注册方案被成功地映射到协议处理器的类标识（CLSID)，将调用IClassFactory接口的 CoCreateInstance 方法。协议处理器通过 IClassFactory: ： CreateInstance 函数来获得实例。</p>
    <p>[0066]	在Windows系统下，原浏览器缓存机制可通过系统的异步可插协议处理器 APPS(简称默认APPQ实现。本实施例自创建异步可插协议处理器APPS(简称自创建 APPS)，并作为对系统默认APPS的补充，二者配合使用可实现网页访问速度的提高，同时可防止缓存被浏览器自动清理。</p>
    <p>[0067]	其中，所述自创建的APPS可单独作为一个插件安装到IE浏览器上使用，也可以作为浏览器功能的一部分，客户端安装具有所述APPS的全新浏览器来实现本申请。无论是安装单独的插件，还是安装一个全新的浏览器，在安装完成后，自创建的APPS都会在客户端创建一个优化缓存区，并将预配置好的需要访问的所有网页数据保存到所述优化缓存区中。</p>
    <p>[0068]	下面的流程图2显示了如何通过APPS实现http的网络请求，从自定义的优化缓存区中读取数据，而不需要从网络上获取。</p>
    <p>[0069]	参照图2，是本申请另一实施例所述一种快速访问网页的流程示意图。</p>
    <p>[0070]	步骤201，当网页发出http请求时，浏览器的URL处理模块⑴rlmon. dll)调用查询函数查看自创建APPS是否实现了供外部调用的接口 ；</p>
    <p>[0071]	具体的，系统的tolmon. dll首先调用QueryInterface函数（它是一个Com的标准函数，功能是查询接口）查看自创建APPS是否实现了 nnternetfrotocol接口。其中， 所述IInternetProtocol接口是一个由自创建APPS暴露给外部调用的一个接口，在下载操作（指的是网络下载过程）中负责和nnternetfrotocolSink接口通讯。</p>
    <p>[0072]	如果该接口已实现，则执行步骤202，通知自创建APPS查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据；</p>
    <p>[0073]	如果该接口未实现，则通知浏览器默认APPS (也可称为浏览器默认的缓存模块） 查询浏览器的默认缓存区中是否保存所述网页访问请求对应的网页数据，后续步骤在此略。</p>
    <p>[0074]	步骤202，通知自创建APPS查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据；</p>
    <p>[0075]	如果已保存，则执行步骤203 ；否则，通知浏览器默认APPS，后续步骤在此略。</p>
    <p>[0076]	具体的，系统 Urlmon. dll 调用自创建 APPS 的 nnternetfrotocolRoot： ： Mart 方法，并且传递 Urlmon. dll 的 nnternetProtocolSink 接口的地址。</p>
    <p>[0077]	其中，nnternetProtocolRoot: Jtart方法可用于查询要访问的URL对应的数据是否在优化缓存区中。</p>
    <p>[0078]	其中，nnternetfrotocolSink接口是一个用来接收来自APPS数据相关的信息和通知的接口。</p>
    <p>[0079]	步骤203，自创建APPS开始查询；</p>
    <p>[0080]	首先从本地的一个优化缓存区查询数据，如果此缓存区存有需要加速的特殊页面对应文件，就从本地优化缓存区读取，而不需要从网络上去请求，这样就实现了复杂网页的加速。否则，若查询不到，再调用系统的默认APPS。</p>
    <p>[0081]	步骤204，当查询到，则自创建APPS通知tolmon. dll所述优化缓存区中已保存所述网页数据；</p>
    <p>[0082]	具体的，当自创建APPS开始从本地优化缓存区读取到对应数据之后，调用 Urlmon. dll 的 IInternetProtocoISink: ：ReportData 方法通知 Urlmon. dll。</p>
    <p>[0083]	步骤205，Urlmon. dll调用自创建APPS的读取函数，从优化缓存区中读取所述网页数据；</p>
    <p>[0084]具体的，系统	Urlmon. dll 调用自创建 APPS 的 HnternetProtocol ： ： Read 方法进行读取。</p>
    <p>[0085]	步骤206，重复步骤204到步骤205，直到自创建APPS完成请求数据的下载任务。</p>
    <p>[0086]	上述流程可以提高网页的加载速度，甚至可以通过客户端软件预先下载用户所需要访问网站的所有网页文件，从而减少网络连接速度和次数。而且，还可以防止缓存被浏览</p>
    <p>器自动清理掉。</p>
    <p>[0087]	此外，还需要说明的是，本申请上述实施例尤其适用于具有复杂页面脚本的网页访问和加载。在访问这些复杂页面的时候，如果从服务器下载复杂的页面脚本，需要花费更多的时间；但如果使用本申请实施例所述的方法，通过预加载的方式先加载到本地的优化缓存区中，再从所述优化缓存区读取，则访问速度大大提高，而且对复杂脚本页面的加速效果更加明显。</p>
    <p>[0088]	需要说明的是，对于前述的方法实施例，为了简单描述，故将其都表述为一系列的动作组合，但是本领域技术人员应该知悉，本申请并不受所描述的动作顺序的限制，因为依据本申请，某些步骤可以采用其他顺序或者同时进行。其次，本领域技术人员也应该知悉， 说明书中所描述的实施例均属于优选实施例，所涉及的动作并不一定是本申请所必须的。</p>
    <p>[0089]	基于上述方法实施例的说明，本申请还提供了相应的装置实施例，如下。</p>
    <p>[0090]	参照图3，是本申请实施例所述一种快速访问网页的装置结构图。</p>
    <p>[0091]	所述快速访问网页的装置10可包括优化缓存区创建模块20、预加载模块30和数据获取模块40，其中，</p>
    <p>[0092]	优化缓存区创建模块20，用于预先在本地创建优化缓存区；</p>
    <p>[0093]	预加载模块30，用于在所述优化缓存区中预加载需要访问的所有网页数据；</p>
    <p>[0094]	数据获取模块40，用于当发起网页访问请求时，查询所述优化缓存区中是否保存所述网页访问请求对应的网页数据，如果已保存，则直接从所述优化缓存区中读取所述网页数据；如果未保存，则触发浏览器默认的缓存模块来查询浏览器的默认缓存区中是否保存所述网页数据。</p>
    <p>[0095]	所述浏览器默认的缓存模块还用于当浏览器的默认缓存区中已保存所述网页数据时，直接从浏览器的默认缓存区中读取；当浏览器的默认缓存区中未保存所述网页数据时，从服务器进行下载。</p>
    <p>[0096]	其中，所述浏览器默认的缓存模块用于实现浏览器自带的网页缓存机制，可以是浏览器自带的APPS。</p>
    <p>[0097]	进一步优选的，在上述方法实施例中提供了两种预加载方式，对应这两种预加载方式，所述预加载模块30可分别包含以下子模块：</p>
    <p>[0098]	所述预加载模块30可以包括：</p>
    <p>[0099]	数据下载子模块，用于自动从服务器下载需要访问的所有网页数据，并保存到所述优化缓存区中。</p>
    <p>[0100]	所述预加载模块30也可以包括：</p>
    <p>[0101]	数据存储子模块，用于存储需要访问的所有网页数据；</p>
    <p>[0102]	加载子模块，用于将所述数据存储子模块中需要访问的所有网页数据保存到所述优化缓存区中。</p>
    <p>[0103]	当然，所述预加载模块30也可以同时包含实现两种配置方式的以上所有子模块。</p>
    <p>[0104]	对于上述装置实施例而言，由于其与方法实施例基本相似，所以描述的比较简单， 相关之处参见方法实施例的部分说明即可。</p>
    <p>[0105]	所述快速访问网页的装置可作为单独的插件安装到IE浏览器上使用，也可以作为浏览器功能的一部分，如图4所示。</p>
    <p>[0106]	参照图4，是本申请实施例所述一种快速访问网页的浏览器结构图。</p>
    <p>[0107]	所述浏览器包含一协议处理器50，所述协议处理器50可包含图3所示的快速访问网页的装置10，可参见图3的说明，在此略。</p>
    <p>[0108]	此外，所述浏览器还可包括缓存模块60，用于实现浏览器默认的网页缓存机制。</p>
    <p>[0109]	优选的，所述浏览器还可以包括URL处理模块70，用于当发起网页访问请求时，调用查询函数查看协议处理器50是否实现了供外部调用的接口 ；如果已实现，则通知协议处理器50查询优化缓存区中是否保存所述网页访问请求对应的网页数据；如果未实现，则通知浏览器默认的缓存模块60查询浏览器的默认缓存区中是否保存所述网页访问请求对应的网页数据。</p>
    <p>[0110]	综上所述，所述快速访问网页的装置或浏览器实现了一种新的可以配置可以运营维护的缓存机制，本身并不替代原有浏览器的缓存机制，而是完全兼容原有的缓存机制，是对浏览器缓存机制的一种补充。通过这种补充的缓存机制，缓存的文件可以不被原浏览器或者其它软件清理掉，解决了网站的缓存文件经常被浏览器自动清理的问题，减少了某些特定网站服务器带宽的占用。</p>
    <p>[0111]	本说明书中的各个实施例均采用递进的方式描述，每个实施例重点说明的都是与其他实施例的不同之处，各个实施例之间相同相似的部分互相参见即可。</p>
    <p>[0112]	以上对本申请所提供的一种快速访问网页的方法、装置及一种浏览器，进行了详细介绍，本文中应用了具体个例对本申请的原理及实施方式进行了阐述，以上实施例的说明只是用于帮助理解本申请的方法及其核心思想；同时，对于本领域的一般技术人员，依据本申请的思想，在具体实施方式及应用范围上均会有改变之处，综上所述，本说明书内容不应理解为对本申请的限制。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US6163779">US6163779</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">1997年9月29日</td><td class="patent-data-table-td patent-date-value">2000年12月19日</td><td class="patent-data-table-td ">International Business Machines Corporation</td><td class="patent-data-table-td ">Method of saving a web page to a local hard drive to enable client-side browsing</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20070276887">US20070276887</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2006年4月28日</td><td class="patent-data-table-td patent-date-value">2007年11月29日</td><td class="patent-data-table-td ">Research In Motion Limited</td><td class="patent-data-table-td ">Method of reflecting on another device a change to a browser cache on a handheld electronic device, and associated device</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="npl-citations"></a><div class="patent-section-header"><span class="patent-section-title">非专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th colspan="3"class="patent-data-table-th">参考文献</th></tr></thead><tr><td class="patent-data-table-td ">1</td><td class="patent-data-table-td "><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td ">CONNOR: "<a href='http://scholar.google.com/scholar?q="%E3%80%8Ahttp%3A%2F%2Fkeyboardy.com%2Fprogramming%2Fhtml5-link-prefetching%2F%E3%80%8B%22%2C+24+July+2010%2C+article+%22How+HTML+5+link+prefetching+can+make+your+site+load+faster+with+one+line+of+code"'>《http://keyboardy.com/programming/html5-link-prefetching/》", 24 July 2010, article "How HTML 5 link prefetching can make your site load faster with one line of code</a>"</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102647481A?cl=zh">CN102647481A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年3月31日</td><td class="patent-data-table-td patent-date-value">2012年8月22日</td><td class="patent-data-table-td ">奇智软件（北京）有限公司</td><td class="patent-data-table-td ">一种访问预设网络地址的装置及方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102647481B?cl=zh">CN102647481B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年3月31日</td><td class="patent-data-table-td patent-date-value">2016年4月6日</td><td class="patent-data-table-td ">北京奇虎科技有限公司</td><td class="patent-data-table-td ">一种访问预设网络地址的装置及方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102663012A?cl=zh">CN102663012A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年3月20日</td><td class="patent-data-table-td patent-date-value">2012年9月12日</td><td class="patent-data-table-td ">北京搜狗信息服务有限公司</td><td class="patent-data-table-td ">一种网页预加载方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103095840A?cl=zh">CN103095840A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年1月22日</td><td class="patent-data-table-td patent-date-value">2013年5月8日</td><td class="patent-data-table-td ">北京锐讯灵通科技有限公司</td><td class="patent-data-table-td ">一种用于移动终端的广告加载方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103455603A?cl=zh">CN103455603A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年9月3日</td><td class="patent-data-table-td patent-date-value">2013年12月18日</td><td class="patent-data-table-td ">小米科技有限责任公司</td><td class="patent-data-table-td ">网页内容缓存、网页加载方法、装置及终端设备</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US9325633">US9325633</a></td><td class="patent-data-table-td patent-date-value">2015年4月15日</td><td class="patent-data-table-td patent-date-value">2016年4月26日</td><td class="patent-data-table-td ">International Business Machines Corporation</td><td class="patent-data-table-td ">Cache control for web application resources</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US9331957">US9331957</a></td><td class="patent-data-table-td patent-date-value">2015年4月15日</td><td class="patent-data-table-td patent-date-value">2016年5月3日</td><td class="patent-data-table-td ">International Business Machines Corporation</td><td class="patent-data-table-td ">Cache control for web application resources</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2013041001A1?cl=zh">WO2013041001A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年9月13日</td><td class="patent-data-table-td patent-date-value">2013年3月28日</td><td class="patent-data-table-td ">Beijing Qihoo Technology Company Limited</td><td class="patent-data-table-td ">一种访问网页的方法、装置、浏览器以及程序</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=UCSHBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span></td></tr><tr><td class="patent-data-table-td "> 合作分类</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=UCSHBwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F17/30902">G06F17/30902</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2012年3月14日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年4月25日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2014年10月15日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/51b445ec2fbf46995bf1/CN102375882A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_6e802a6b2b28d51711baddc2f3bec198.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E5%BF%AB%E9%80%9F%E8%AE%BF%E9%97%AE%E7%BD%91%E9%A1%B5%E7%9A%84%E6%96%B9%E6%B3%95_%E8%A3%85%E7%BD%AE.pdf?id=UCSHBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U26qmITuPiasBz1nbF_1V12RM6Vkw"},"sample_url":"https://www.google.com/patents/reader?id=UCSHBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>