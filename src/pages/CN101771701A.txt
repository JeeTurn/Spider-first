<!DOCTYPE html><html><head><title>专利 CN101771701A - Web服务客户端自动化生成方法和装置 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="Web服务客户端自动化生成方法和装置"><meta name="DC.contributor" content="刘旭东" scheme="inventor"><meta name="DC.contributor" content="吴茜" scheme="inventor"><meta name="DC.contributor" content="杜宗霞" scheme="inventor"><meta name="DC.contributor" content="金若凡" scheme="inventor"><meta name="DC.contributor" content="北京航空航天大学" scheme="assignee"><meta name="DC.date" content="2010-1-4" scheme="dateSubmitted"><meta name="DC.description" content="本发明提供一种Web服务客户端自动化生成方法和装置，其中，方法包括接收Web服务的WSDL文档；对所述WSDL文档进行基本信息解析和复杂数据类型参数解析，得到简单数据类型对象和复杂数据类型对象；根据所述简单数据类型对象和复杂数据类型对象，生成分别与之对应的简单类型数据接口和复杂类型数据接口；通过所述接口获取数据；检验所述数据是否符合数据结构，若是，则根据所述数据生成用于调用Web服务的SOAP请求报文；接收SOAP应答报文，解析得到Web服务调用结果，完成Web服务客户端的生成。本发明实施例实现了对WSDL文档中复杂数据类型的解析，有利于Web服务客户端自动化的生成。"><meta name="DC.date" content="2010-7-7"><meta name="citation_patent_publication_number" content="CN:101771701:A"><meta name="citation_patent_application_number" content="CN:201010033676"><link rel="canonical" href="https://www.google.com/patents/CN101771701A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN101771701A?cl=zh"/><meta name="title" content="专利 CN101771701A - Web服务客户端自动化生成方法和装置"/><meta name="description" content="本发明提供一种Web服务客户端自动化生成方法和装置，其中，方法包括接收Web服务的WSDL文档；对所述WSDL文档进行基本信息解析和复杂数据类型参数解析，得到简单数据类型对象和复杂数据类型对象；根据所述简单数据类型对象和复杂数据类型对象，生成分别与之对应的简单类型数据接口和复杂类型数据接口；通过所述接口获取数据；检验所述数据是否符合数据结构，若是，则根据所述数据生成用于调用Web服务的SOAP请求报文；接收SOAP应答报文，解析得到Web服务调用结果，完成Web服务客户端的生成。本发明实施例实现了对WSDL文档中复杂数据类型的解析，有利于Web服务客户端自动化的生成。"/><meta property="og:title" content="专利 CN101771701A - Web服务客户端自动化生成方法和装置"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN101771701A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN101771701A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=WjV_BwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN101771701A&amp;usg=AFQjCNF_yY-arUIAMp7ecb1_N8OoLWGiCw" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/0f3888ccc42f78b1efff/CN101771701A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/0f3888ccc42f78b1efff/CN101771701A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN101771701A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN101771701A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN101771701A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN101771701B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN101771701A?cl=zh" style="display:none"><span itemprop="description">本发明提供一种Web服务客户端自动化生成方法和装置，其中，方法包括接收Web服务的WSDL文档；对所述WSDL文档进行基本信息解析和复杂数据类型参数解析，得到简单数据类型对象和复杂数据类型对象；根据所述简单数据类型对象 ...</span><span itemprop="url">https://www.google.com/patents/CN101771701A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN101771701A - Web服务客户端自动化生成方法和装置</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN101771701A - Web服务客户端自动化生成方法和装置" title="专利 CN101771701A - Web服务客户端自动化生成方法和装置"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN101771701 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201010033676</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2010年7月7日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2010年1月4日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2010年1月4日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN101771701B?hl=zh-CN&amp;cl=zh">CN101771701B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201010033676.2, </span><span class="patent-bibdata-value">CN 101771701 A, </span><span class="patent-bibdata-value">CN 101771701A, </span><span class="patent-bibdata-value">CN 201010033676, </span><span class="patent-bibdata-value">CN-A-101771701, </span><span class="patent-bibdata-value">CN101771701 A, </span><span class="patent-bibdata-value">CN101771701A, </span><span class="patent-bibdata-value">CN201010033676, </span><span class="patent-bibdata-value">CN201010033676.2</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%88%98%E6%97%AD%E4%B8%9C%22">刘旭东</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%90%B4%E8%8C%9C%22">吴茜</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%9D%9C%E5%AE%97%E9%9C%9E%22">杜宗霞</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%87%91%E8%8B%A5%E5%87%A1%22">金若凡</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E5%8C%97%E4%BA%AC%E8%88%AA%E7%A9%BA%E8%88%AA%E5%A4%A9%E5%A4%A7%E5%AD%A6%22">北京航空航天大学</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN101771701A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN101771701A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN101771701A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (8),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (2),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=WjV_BwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201010033676&amp;usg=AFQjCNEQlSlvLeomJCZLHDkC5A2_fRvBuw"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=WjV_BwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D101771701A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNHSY392kPkQ_3ko6M1H-NPgPxFdVw"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT96528013" lang="ZH" load-source="patent-office">Web服务客户端自动化生成方法和装置</invention-title>
      </span><br><span class="patent-number">CN 101771701 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA79171929" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明提供一种Web服务客户端自动化生成方法和装置，其中，方法包括接收Web服务的WSDL文档；对所述WSDL文档进行基本信息解析和复杂数据类型参数解析，得到简单数据类型对象和复杂数据类型对象；根据所述简单数据类型对象和复杂数据类型对象，生成分别与之对应的简单类型数据接口和复杂类型数据接口；通过所述接口获取数据；检验所述数据是否符合数据结构，若是，则根据所述数据生成用于调用Web服务的SOAP请求报文；接收SOAP应答报文，解析得到Web服务调用结果，完成Web服务客户端的生成。本发明实施例实现了对WSDL文档中复杂数据类型的解析，有利于Web服务客户端自动化的生成。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(10)</span></span></div><div class="patent-text"><ol mxw-id="PCLM32362643" lang="ZH" load-source="patent-office" class="claims">
    <li class="claim"> <div num="1" class="claim">
      <div class="claim-text">一种Web服务客户端自动化生成方法，其特征在于，包括：步骤1、接收Web服务的WSDL文档；步骤2、对所述WSDL文档进行基本信息解析，得到简单数据类型对象和复杂数据类型参数，所述简单数据类型对象包括调用所述Web服务所需的简单类型数据结构；步骤3、解析所述复杂数据类型参数，得到复杂数据类型对象，所述复杂数据类型对象包括调用所述Web服务所需的复杂类型数据结构；步骤4、根据所述简单数据类型对象生成简单类型数据接口，根据所述复杂数据类型对象生成复杂类型数据接口；步骤5、通过所述简单类型数据接口获取调用简单类型数据，通过所述复杂类型数据接口获取复杂类型数据；步骤6、检验所述简单类型数据是否符合所述简单类型数据结构，检验所述复杂类型数据是否符合所述复杂类型数据结构，若是，则执行步骤7，否则，执行报错；步骤7、根据所述简单类型数据和复杂类型数据生成用于调用Web服务的SOAP请求报文；步骤8、接收调用所述Web服务返回的SOAP应答报文，对SOAP应答报文进行解析，生成简单数据类型对象和复杂数据类型对象，解析得到Web服务调用结果，完成Web服务客户端的生成。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2. 根据权利要求1所述的Web服务客户端自动化生成方法，其特征在于，所述步骤3中 为采用深度优先递归算法解析所述复杂数据类型参数，得到复杂类型数据结构，包括：依次遍历所述复杂数据类型参数，将未完全遍历的所述复杂数据类型参数保存为复杂 数据类型对象中的父节点，并将完全遍历所述复杂数据类型参数得到的简单数据类型参数 保存为简单数据类型对象，作为所述复杂数据类型对象中的叶节点。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3. 根据权利要求2所述的Web服务客户端自动化生成方法，其特征在于，所述步骤7包括：采用所述深度优先递归算法，遍历所述复杂类型数据结构，将所述复杂类型数据写入 XML节点，生成SOAP请求报文。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4. 根据权利要求2所述的Web服务客户端自动化生成方法，其特征在于，所述步骤3还 包括：采用所述深度优先递归算法对所述SOAP应答报文中的XML节点进行解析，生成复杂数 据类型对象，得到Web服务调用结果。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5. 根据权利要求1所述的Web服务客户端自动化生成方法，其特征在于，所述步骤4具 体为：根据所述简单数据类型对象生成基于RCP的简单类型数据接口 ，根据所述复杂数据类 型对象生成基于RCP的复杂类型数据接口 。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6. 根据权利要求4所述的Web服务客户端自动化生成方法，其特征在于，所述步骤8还 包括：将解析得到的所述Web服务调用结果在基于RCP的简单类型数据接口和复杂类型数据 接口进行显示。</div>
    </div>
    </li> <li class="claim"> <div num="7" class="claim">
      <div class="claim-text">7. &#8212;种Web服务客户端自动化生成装置，其特征在于，包括：接收模块，用于接收Web服务的WSDL文档；解析模块，用于对所述WSDL文档进行基本信息解析，得到简单数据类型对象和复杂数 据类型参数，所述简单数据类型对象包括调用所述Web服务所需的简单类型数据结构；以 及，解析所述复杂数据类型参数，得到复杂数据类型对象，所述复杂数据类型对象包括调用 所述Web服务所需的复杂类型数据结构；接口模块，用于根据所述简单数据类型对象生成简单类型数据接口 ，根据所述复杂数 据类型对象生成复杂类型数据接口 ；并通过所述简单类型数据接口获取调用所述Web服务 所需的简单类型数据，通过所述复杂类型数据接口获取调用所述Web服务所需的复杂类型 数据；检验模块，用于检验所述简单类型数据是否符合所述简单类型数据结构，检验所述复 杂类型数据是否符合所述复杂类型数据结构；SOAP报文生成模块，用于在所述检验模块的检验结果为是时，根据所述简单类型数据 和复杂类型数据生成SOAP请求报文；SOAP报文处理模块，用于接收调用所述Web服务返回的SOAP应答报文，并将所述SOAP 应答报文进行解析，生成简单数据类型对象和复杂数据类型对象，得到Web服务调用结果。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8. 根据权利要求7所述的Web服务客户端自动化生成装置，其特征在于，所述解析模块 包括：搜索单元，用于依次遍历所述复杂数据类型参数；存储单元，用于将未完全遍历的所述复杂数据类型参数保存为复杂数据类型对象中的 父节点，并将完全遍历所述复杂数据类型参数得到的简单数据类型参数保存为简单数据类 型对象，作为所述复杂数据类型对象中的叶节点。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9. 根据权利要求8所述的Web服务客户端自动化生成装置，其特征在于， 所述SOAP报文生成模块包括：第一复杂数据类型处理单元，用于采用所述深度优先递归算法，遍历所述复杂类型数 据结构，将所述复杂类型数据写入XML节点，生成SOAP请求报文； 所述解析模块还包括：第二复杂数据类型处理单元，用于采用所述深度优先递归算法对所述SOAP应答报文 中的XML节点进行解析，生成复杂数据类型对象，得到Web服务调用结果。</div>
    </div>
    </li> <li class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10. 根据权利要求7所述的Web服务客户端自动化生成装置，其特征在于，所述接口模 块包括：RCP单元，用于根据所述简单数据类型对象生成基于RCP的简单类型数据接口，根据所 述复杂数据类型对象生成基于RCP的复杂类型数据接口 ；或者，用于将解析得到的所述Web 服务调用结果在所述基于RCP的简单类型数据接口和复杂类型数据接口进行显示。</div>
    </div>
  </li> </ol>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES37719631" lang="ZH" load-source="patent-office" class="description">
    <p>Web服务客户端自动化生成方法和装置</p>
    <p>技术领域</p>
    <p>[0001] 本发明实施例涉及Web服务技术领域，尤其涉及一种Web服务客户端自动化生成 方法和装置。</p>
    <p>背景技术</p>
    <p>[0002] 当今，Web服务作为一种新兴的模式，正在逐渐应用于人们的计算当中。Web服务 使用了开放的标准，促进了完全不同的应用程序和平台之间的通信。支持Web服务的一个 重要标准就是WSDL，即Web服务描述语言，WSDL是一种基于XML的语言。每个Web服务都 配有相关的WSDL文档，该WSDL文档记录了使开发人员能够运用这个服务的信息，其中列举 了该服务的功能，说明了服务在Web上的位置，并提供了使用它的指令；还定义了 Web服务 能够发送和接受的消息种类，以及规定了调用程序必须提供给Web服务的数据，以便该服 务能够执行等信息。如果要调用Web服务， 一般是通过一 Web服务客户端自动化的生成装 置，接收该Web服务的WSDL文档，对其进行解析，得到文档中所记录的使用Web服务所需要 的相关信息，并根据此信息生成可以调用Web服务的客户端。 [0003] 在实现本发明的过程中，发明人发现现有技术中至少存在如下问题： [0004] 随着Web服务种类的增多以及实现难度的加深，在上述Web服务客户端自动化的 生成过程中，作为描述Web服务的WSDL文档的结构不再仅仅由简单数据类型构成，而是增 加了许多复杂数据类型结构，这些复杂数据类型结构关联繁复，自定义性强且形式多样；但 是，现有的Web服务客户端自动化的生成装置不能够支持WSDL文档中复杂数据类型的解 析，在客户端的生成过程中不对复杂数据类型进行解析，从而给Web服务客户端自动化的 生成和用户端的Web服务调用带来了不便。</p>
    <p>发明内容</p>
    <p>[0005] 本发明实施例提供一种Web服务客户端自动化生成方法和装置，用以解决现有技 术中不能够支持WSDL文档中复杂数据类型解析的缺陷，实现对WSDL文档中复杂数据类型 解析，有利于Web服务客户端自动化的生成。</p>
    <p>[0006]     本发明实施例提供一种Web服务客户端自动化生成方法，包括： [0007]     步骤1、接收Web服务的WSDL文档；</p>
    <p>[0008]     步骤2、对所述WSDL文档进行基本信息解析，得到简单数据类型对象和复杂数据 类型参数，所述简单数据类型对象包括调用所述Web服务所需的简单类型数据结构； [0009] 步骤3、解析所述复杂数据类型参数，得到复杂数据类型对象，所述复杂数据类型 对象包括调用所述Web服务所需的复杂类型数据结构；</p>
    <p>[0010] 步骤4、根据所述简单数据类型对象生成简单类型数据接口 ，根据所述复杂数据类 型对象生成复杂类型数据接口 ；</p>
    <p>[0011] 步骤5、通过所述简单类型数据接口获取调用简单类型数据，通过所述复杂类型数 据接口获取复杂类型数据；</p>
    <p>4[0012]     步骤6、检验所述简单类型数据是否符合所述简单类型数据结构，检验所述复杂类 型数据是否符合所述复杂类型数据结构，若是，则执行步骤7，否则，执行报错； [0013]     步骤7、根据所述简单类型数据和复杂类型数据生成用于调用Web服务的SOAP请 求报文；</p>
    <p>[0014] 步骤8、接收调用所述Web服务返回的SOAP应答报文，对SOAP应答报文进行解析， 生成简单数据类型对象和复杂数据类型对象，解析得到Web服务调用结果，完成Web服务客 户端的生成。</p>
    <p>[0015]     本发明实施例提供一种Web服务客户端自动化生成装置，包括： [0016]     接收模块，用于接收Web服务的WSDL文档；</p>
    <p>[0017] 解析模块，用于对所述WSDL文档进行基本信息解析，得到简单数据类型对象和复 杂数据类型参数，所述简单数据类型对象包括调用所述Web服务所需的简单类型数据结 构；以及，解析所述复杂数据类型参数，得到复杂数据类型对象，所述复杂数据类型对象包 括调用所述Web服务所需的复杂类型数据结构；</p>
    <p>[0018] 接口模块，用于根据所述简单数据类型对象生成简单类型数据接口 ，根据所述复 杂数据类型对象生成复杂类型数据接口 ；并通过所述简单类型数据接口获取调用所述Web 服务所需的简单类型数据，通过所述复杂类型数据接口获取调用所述Web服务所需的复杂</p>
    <p>类型数据；</p>
    <p>[0019] 检验模块，用于检验所述简单类型数据是否符合所述简单类型数据结构，检验所 述复杂类型数据是否符合所述复杂类型数据结构；</p>
    <p>[0020] SOAP报文生成模块，用于在所述检验模块的检验结果为是时，根据所述简单类型 数据和复杂类型数据生成SOAP请求报文；</p>
    <p>[0021] SOAP报文处理模块，用于接收调用所述Web服务返回的SOAP应答报文，并将所述 SOAP应答报文进行解析，生成简单数据类型对象和复杂数据类型对象，得到Web服务调用 结果。</p>
    <p>[0022] 本发明实施例的Web服务客户端自动化生成方法和装置，通过采用深度优先递归 算法对WSDL文档中的复杂数据类型进行解析，克服了现有技术中不能够支持WSDL文档中 复杂数据类型解析的缺陷，实现了对WSDL文档中复杂数据类型的解析，有利于Web服务客 户端自动化的生成。</p>
    <p>附图说明</p>
    <p>[0023] 为了更清楚地说明本发明实施例或现有技术中的技术方案，下面将对实施例或现 有技术描述中所需要使用的附图作一简单地介绍，显而易见地，下面描述中的附图是本发 明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动性的前提下，还可以 根据这些附图获得其他的附图。</p>
    <p>[0024]     图1为本发明Web服务客户端自动化生成方法实施例的流程示意图； [0025]      图2为图1中的基本信息解析的流程示意图； [0026]      图3为图1中的复杂数据解析的流程示意图；</p>
    <p>[0027]     图4为本发明Web服务客户端自动化生成装置实施例的结构示意图。具体实施方式</p>
    <p>[0028] 为使本发明实施例的目的、技术方案和优点更加清楚，下面将结合本发明实施例</p>
    <p>中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是</p>
    <p>本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员</p>
    <p>在没有作出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。</p>
    <p>[0029]     本发明实施例的主要技术方案为，接收与Web服务对应的WSDL文档，可以采用深</p>
    <p>度优先递归算法解析其中的复杂数据类型参数，得到复杂类型数据结构，包括参数名称、类</p>
    <p>型以及参数间的继承关系等信息；根据该复杂类型数据结构生成与之对应的数据接口 ，通</p>
    <p>过该数据接口输入调用所需的参数，并可以采用深度优先递归算法生成包含该参数的SOAP</p>
    <p>请求报文，进行Web服务的调用，并对返回的SOAP应答报文进行解析，完成Web服务客户端</p>
    <p>的生成。下面通过附图和具体实施例，对本发明的技术方案作进一步的详细描述。</p>
    <p>[0030]     图1为本发明Web服务客户端自动化生成方法实施例的流程示意图，如图l所示，</p>
    <p>本实施例的方法可以包括以下步骤：</p>
    <p>[0031]     步骤101、接收Web服务的WSDL文档。</p>
    <p>[0032] 由于本实施例的Web服务客户端自动化的生成方法是针对WSDL文档的，所以在该 步骤中，需要对接收的Web服务的相关文档进行校验和筛选，排除非WSDL文档的部分；并 将WSDL文档的绝对地址保存至信息存储器。通过将WSDL文档的绝对地址保存至信息存储 器，可以使得后续对WSDL文档解析时，直接从该信息存储器中按照文档地址获取要解析的 WSDL文档，对于各Web服务对应的WSDL文档具有通用性。 [0033]     步骤102、对所述WSDL文档进行基本信息解析。</p>
    <p>[0034]     由于Web服务的复杂度不同，所对应的WSDL文档的复杂度也不同，因此，WSDL文</p>
    <p>档的解析根据其复杂度，可以划分为两个处理过程，即WSDL基本信息解析和WSDL复杂数据</p>
    <p>类型处理。对于简单的WSDL文档，其中只包括简单数据类型，则只需调用WSDL基本信息解</p>
    <p>析过程即可；对于包括复杂数据类型的WSDL文档，则需要在基本信息解析的基础上，对其</p>
    <p>中的复杂数据类型做进一步的解析。本步骤中是说明WSDL基本信息解析的过程。</p>
    <p>[0035]     在进行基本信息解析时，首先，解析出WSDL文档中所包含的域名空间URL以及</p>
    <p>SOAP的地址，然后，解析出WSDL文档中的各种元素，得到调用Web服务所需的简单数据类型</p>
    <p>参数定义，其中规定了该参数的名称和类型等信息。对于这些元素的具体解析步骤可以参</p>
    <p>见图2，图2为图1中的基本信息解析的流程示意图，其可以包括以下步骤：</p>
    <p>[0036]     步骤201、解析Service元素，获取Web服务地址，并读取出其下面的所有Port元素。</p>
    <p>[0037]     步骤202、解析Port元素，读取出其address元素。</p>
    <p>[0038]     在构建S0AP消息时，它是S0AP的目标URL，将会把它放在每一个Operation类中 (因为Operation类对应一条SOAP消息）。读取出其对应的Binding元素。 [0039]     步骤203、解析Binding元素。</p>
    <p>[0040]     读取该Binding元素的style,将其放入每一个Operation中，它对应的是调用方 式是"document"或"rpc"。读取出它所绑定的所有Operation元素。 [0041]     步骤204、解析Operation元素。</p>
    <p>[0042]     读取其name属性，作为Operation类的targetmethodname，将是SOAP消息中的方法名。读取其soapAction，作为SOAP消息的目标命名空间。读取它的Bindinginput和 Bindingoutput，分别描述了输入SOAP消息和输出SOAP消息。将每个Operation元素放入 Service对象中。</p>
    <p>[0043]     步骤205、解析Bindinginput禾口 Bindingoutput 。</p>
    <p>[0044]     读取其encodingstyle将其放入其对应的Operation中，SAAJ需要据此设置SOAP 的编码类型。读取它们各自对应的Message元素。将inmessage放入Operation中，用于 调用时构建SOAP消息的有效负载。 [0045]     步骤206、解析Message元素。</p>
    <p>[0046] Message元素是WSDL文档中最复杂的部分，它描述了 SOAP消息的有效负载。通 过解析该Message元素获取多个paramter，并对每个paramter的数据类型进行判断。若 paramter为简单数据类型，则将parameter的名和类型直接保存至List队列，即简单数据 类型对象，执行步骤104 ;若paramter为复杂数据类型，则继续执行步骤103，对该复杂数据 类型的paramter作进一步的解析。</p>
    <p>[0047]     步骤103、对具有复杂数据类型的信息进行解析；</p>
    <p>[0048]     复杂数据类型信息在WSDL文档中以〈complextype〉节点表述，当检索到该节点</p>
    <p>时，WSDL解析将由WSDL基本信息解析过程转入WSDL复杂数据类型处理过程。</p>
    <p>[0049]     例如，该步骤对通过解析message元素获取的复杂数据类型的parameter进行进</p>
    <p>一步的解析。本实施例中可以采用WSDL4J和Castor的技术进行文档到对象的转换，并采用</p>
    <p>深度优先递归算法解析该复杂数据类型的parameter。深度优先递归算法是一种优先扩展</p>
    <p>尚未扩展的且具有最大深度的节点，在搜索过程中，该算法可以记下完整的搜索树。在WSDL</p>
    <p>文档复杂数据类型的解析过程中，若某一 parameter为复杂数据类型，则转到该parameter</p>
    <p>的子节点继续遍历，直到该parameter的所有子节点被遍历完全，且均为简单数据类型为</p>
    <p>止；再遍历与该parameter并行的其余树节点。在遍历过程中，将未完全遍历的所述复杂数</p>
    <p>据类型参数保存为父节点，并将完全遍历所述复杂数据类型参数得到的简单数据类型参数</p>
    <p>保存为简单数据类型对象，作为叶节点。</p>
    <p>[0050] 具体的解析流程可以参见图3，图3为图1中复杂数据解析的流程示意图，可以包 括以下步骤：</p>
    <p>[0051] 步骤301、判断Message中的元素p是否为空或完全遍历，若是，则结束；否则，执 行步骤302。</p>
    <p>[0052] 步骤302、依次获取Message中的元素p中的各子元素p [i]，包括p [i]的名称和 数据类型。</p>
    <p>[0053] 步骤303、判断p [i]的数据类型是否为复杂数据类型，若否，则执行步骤304 ;否 是，则执行步骤305。</p>
    <p>[0054]     步骤304、保存元素的名称、类型到简单数据类型对象，作为叶节点；</p>
    <p>[0055]     在步骤303之后，即为保存p[i]的名称、类型到简单数据类型对象。</p>
    <p>[0056]     步骤305、将所述p[i]转到WSDL文档中的type下，得到其在type下相应的数据</p>
    <p>类型pl。</p>
    <p>[0057] 步骤306、判断pi的数据类型是否为复杂数据类型，若否，则返回执行步骤304，保 存pl的名称、类型到简单数据类型对象；否则，将其保存为父节点，执行步骤307。[0058] 步骤307、判断pi中的元素是否完全遍历；若否，则执行步骤310 ;否则，执行步骤 308。</p>
    <p>[0059] 步骤308、判断pi是否为与p[i]对应的type下的pi ;若否，则执行步骤309 ;否 则，返回执行步骤301。</p>
    <p>[0060]     步骤309、查找pi的父节点，pi的父节点力pl，返回执行步骤307。</p>
    <p>[0061]     步骤310、保存pi的元素名称、数据类型到复杂数据类型对象；并依次获取pi中</p>
    <p>的p2[j]，包括p2[j]的名称和数据类型。</p>
    <p>[0062] 步骤311、判断p2[j]的数据类型是否为复杂数据类型，若否，则执行步骤312 ;否 则，令p2[j]-〉pl，返回执行步骤307。</p>
    <p>[0063]     步骤312、保存p2[j]为pl的子节点（名称、数据类型），返回执行步骤307。 [0064]     经过上述解析步骤，对于WSDL文档中的简单数据类型的parameter和复杂数据 类型的parameter均进行了解析，将XML的WSDL文档转换为了对象。其中，对于复杂数据 类型的parameter,&#8212;方面解析出了其名、类型等基本信息；另一方面解析出了每个复杂数 据类型节点的继承关系，从而建立一个前后继承的复杂数据类型树形结构。最后可以以 ArrayList数组队列的形式存储对复杂数据类型解析的结果，生成复杂数据类型对象。 [0065]     步骤104、根据WSDL文档解析结果生成可供Web服务使用者操作的数据接口 。 [0066]     在解析出WSDL文档中的元素后，需要提供一个可供Web服务使用者操作的输入输 出数据的接口 ，该接口需要明确表示出WSDL文档中输入输出变量的数据结构。需要强调说 明的是，该步骤中生成的数据接口与现有技术中的数据接口存在明显不同。现有技术中，通 常可以将WSDL文档解析得到的数据类型存储为Java类语言描述形式，但是，这种表示方式 不提供调用Web服务所需的SOAP请求消息，在调用Web服务时，仍然需要人工编写调用代 码，对于从未接触过WSDL和Java的用户来说，是很困难的；而且数据表示结构对用户端不 透明，无法满足用户端透明性操作的需求。</p>
    <p>[0067] 区别于此，也为了解决上述问题，本实施例的方法中，数据接口的生成，将WSDL文 档解析结果基于RCP生成可视化的数据接口，RCP为富客户端平台，富客户端可以提供可承 载已编译客户端应用程序的运行环境，客户端应用程序使用异步客户/服务器架构连接现 有的后端应用服务器。该数据接口明确表示出了 WSDL文档中输入输出变量的数据结构，并 根据数据类型的不同，提供不同的接口。例如，对于简单数据类型对象，生成简单类型的数 据接口，表示了简单数据类型参数的名称和类型；对于复杂数据类型对象，生成与复杂数据 类型相对应的接口 ，该接口可提供可视化的复杂数据类型结构表示，且能够清晰地表达复 杂数据类型节点间的继承关系。</p>
    <p>[0068] 该步骤中生成的数据接口为基于RCP的用户操作界面，用户只需要调用WSDL文档 地址，而不需知道WSDL的文件格式、文件内容以及如何完成服务调用，就可以完成WSDL文 档的解析，以及后续的SOAP报文的生成等，最终提供给用户直观的结果显示，而且此过程 中不需要用户自行编写客户端代码，也不需要理解XML文本，从而满足了用户端透明性操 作的需求，以及客户端自动化和良好的用户界面的系统要求。 [0069]     步骤105、通过所述数据接口输入调用所需数据。</p>
    <p>[0070] 在上述的步骤中，对WSDL文档中的简单数据类型和复杂数据类型的元素均进行 了解析，得到了生成Web服务客户端所需的参数，以及参数的名称、类型等基本信息，对其中的复杂数据类型参数还解析出了其继承关系，清晰的表示了WSDL文档中所含的数据结 构信息；并且在步骤104中，还将该数据信息以可视化数据接口的形式呈现给用户端。 [0071]     在此基础上，当进行调用Web服务的操作时，用户即Web服务使用者只需输入与 Parameter相对应的参数，并将输入的参数值设定为Parameter的Value属性即可。该参数 为后续生成SOAP消息所需的参数。</p>
    <p>[0072] 步骤106、对输入的所述数据进行检验，检查是否符合数据类型，若是，则执行步骤 107，否则，执行报错。</p>
    <p>[0073] 该步骤用于检验生成SOAP消息的数据的类型是否符合WSDL文档解析结果中所规 定的类型，其主要包括两方面的检验，检验必填数据的值是否存在，若存在，则进一步判断 所填入的数据的值的类型是否符合规定的数据类型。对于必填数据的值不存在，或者数据 类型错误的情况，提供报错提示。</p>
    <p>[0074]     步骤107、根据输入的所述数据生成用以调用Web服务的SOAP请求报文。 [0075]     本步骤中，SOAP请求报文的生成，可以根据WSDL文档中不同复杂度的数据类型， 根据一定的递归算法，生成不同难易度的可供服务调用的SOAP请求报文。该SOAP请求报 文与输入的数据相关。</p>
    <p>[0076] SOAP请求报文中主要包括三方面信息，包括Web服务绑定协议的调用类型、Web 服务的URI地址和Web服务调用所需的参数。具体的，首先，可以通过查找WSDL文档中的 Binding元素，得到所调用Web服务的绑定协议，分析该绑定协议的调用类型。然后，查找 WSDL文档对象中的Port信息，确定Web服务的具体访问点，例如，如果是基于HTTP的SOAP 调用，则取出服务的URI地址。最后，在得到具体的访问点后，构造调用所需的参数；对于简 单的数据类型，则将简单数据类型对象的名称、类型和值直接写入XML节点；对于复杂数据 类型，则依次遍历复杂数据类型对象各节点，对于父节点则将父节点的名称写入XML节点 中，对于叶节点则将叶节点的名称、类型和值写入XML节点中，生成可供服务调用的SOAP请 求报文，就可以利用该SOAP请求报文发起Web服务调用了 。 [0077]     上述SOAP请求报文的生成过程具体可以包括以下步骤：</p>
    <p>[0078] 步骤401、根据用户输入，在简单数据类型对象\复杂数据类型对象中查找相同对 象；</p>
    <p>[0079] 步骤402、判断该对象是否为简单数据类型对象；若是，执行步骤403，否则，执行 步骤404 ;</p>
    <p>[0080]     步骤403、根据简单数据类型对象生成含有名称、值信息的XML节点； [0081]     步骤404、根据复杂数据类型对象生成XML节点。</p>
    <p>[0082] 具体的，遍历该复杂数据类型对象中的元素，判断元素是否为父节点，若是，只生</p>
    <p>成含有名称的XML节点，否则，生成含有名称、值信息的XML节点，并将其嵌套到该子节点的</p>
    <p>父节点生成的XML节点中。</p>
    <p>[0083]     步骤108、接收并解析SOAP应答报文。</p>
    <p>[0084] 由于Web服务客户端要求不仅能够生成SOAP请求报文，对Web服务发起调用，还 要能够对返回的SOAP应答报文进行解析，告知Web服务使用者调用结果，因此， 一个完整的 Web服务客户端的生成方法还包括对SOAP应答报文的解析。</p>
    <p>[0085]     本步骤中，在接收到SOAP应答报文后，可以采用前述的WSDL文档的信息解析过程，对报文进行解析，生成简单数据类型对象和复杂数据类型对象，将XML格式转换为数据 对象。对于解析得到的结果数据，在进行数据检验后，可以通过可视化的数据接口进行显 示。</p>
    <p>[0086]      上述解析SOAP应答报文的过程具体可以包括以下步骤： [0087]     步骤501 、遍历XML文件格式的SOAP应答报文，获取XML中的头节点元素p ; [0088]     步骤502、判断p是否有子节点，若有，则将其保存为复杂数据类型对象，遍历其子 节点pl，反复执行步骤502，否则，将pl的名称、类型、值保存至简单数据类型对象，执行步 骤503 ;</p>
    <p>[0089] 步骤503、判断pl是否有父节点，若有，则将其作为该父节点的子节点，否则，作为 简单数据类型对象存储。</p>
    <p>[0090] 本发明实施例的Web服务客户端自动化生成方法，通过采用深度优先递归算法对 WSDL文档中的复杂数据类型进行解析，克服了现有技术中不能够支持WSDL文档中复杂数 据类型解析的缺陷，实现了对WSDL文档中复杂数据类型的解析，有利于Web服务客户端自 动化的生成；并且，通过生成基于RCP的可视化的数据接口，满足了用户端透明性操作的需 求，实现了 Web服务客户端生成的完全自动化。</p>
    <p>[0091 ]     图4为本发明Web服务客户端自动化生成装置实施例的结构示意图，如图4所示，</p>
    <p>本实施例的生成装置可以包括接收模块61、解析模块62、接口模块63、检验模块64、S0AP报</p>
    <p>文生成模块65和SOAP报文处理模块66。</p>
    <p>[0092]     其中，接收模块61，接收Web服务的WSDL文档；</p>
    <p>[0093] 解析模块62，对接收模块61接收到的所述WSDL文档进行基本信息解析，得到简单 数据类型对象和复杂数据类型参数，所述简单数据类型对象包括调用所述Web服务所需的 简单类型数据结构；以及，解析所述复杂数据类型参数，得到复杂数据类型对象，所述复杂 数据类型对象包括调用所述Web服务所需的复杂类型数据结构；</p>
    <p>[0094]     具体的，对基本信息的解析包括解析出WSDL文档中所包含的域名空间URL以及 SOAP的地址，并解析出WSDL文档中的各种元素。对该具体元素的解析可以参见方法实施例 中的步骤102。在解析得到WSDL文档中复杂数据类型的Message元素中的paramter后，执 行复杂数据解析。在该复杂数据解析过程中，可以采用深度优先递归算法。 [0095]     相应的，解析模块62可以包括搜索单元和存储单元。在采用深度优先递归算法解</p>
    <p>析复杂数据类型时：</p>
    <p>[0096] 搜索单元，可以用于依次遍历所述复杂数据类型参数。存储单元，可以用于将未完 全遍历的所述复杂数据类型参数保存为复杂数据类型对象中的父节点，并将完全遍历所述 复杂数据类型参数得到的简单数据类型参数保存为简单数据类型对象，作为所述复杂数据 类型对象中的叶节点，生成具有树形结构的复杂数据类型对象。</p>
    <p>[0097] 接口模块63，用于根据解析模块62得到的所述简单数据类型对象生成简单类型 数据接口 ，根据所述复杂数据类型对象生成复杂类型数据接口 。上述接口明确表示出了 WSDL文档中输入输出变量的数据结构。接着，接口模块63可以通过所述简单类型数据接口 获取Web服务使用者输入的调用所述Web服务所需的简单类型数据，通过所述复杂类型数 据接口获取调用所述Web服务所需的复杂类型数据。</p>
    <p>[0098]     在此基础上，接口模块63可以包括RCP单元，用于根据所述简单数据类型对象生</p>
    <p>10成基于RCP的简单类型数据接口，根据所述复杂数据类型对象生成基于RCP的复杂类型数 据接口。</p>
    <p>[0099] 检验模块64，用于检验获取的所述简单类型数据是否符合所述简单类型数据结 构，检验所述复杂类型数据是否符合所述复杂类型数据结构；</p>
    <p>[0100] S0AP报文生成模块65，用于在所述检验模块64的检验结果为是，即输入数据符合 数据结构的规定时，根据所述简单类型数据和复杂类型数据生成SOAP请求报文，即可利用 该报文进行Web服务的调用。</p>
    <p>[0101] 具体的，SOAP报文生成模块65可以包括第一复杂数据类型处理单元，用于采用所 述深度优先递归算法，遍历所述复杂类型数据结构，将所述复杂类型数据写入XML节点，生 成SOAP请求报文。</p>
    <p>[0102] SOAP报文处理模块66，用于接收调用所述Web服务返回的SOAP应答报文，并将所 述SOAP应答报文发送至所述解析模块62进行解析，生成简单数据类型对象和复杂数据类 型对象，得到Web服务调用结果。相应的，解析模块62可以包括第二复杂数据类型处理单 元，用于采用所述深度优先递归算法对所述SOAP应答报文中的XML节点进行解析，生成复 杂数据类型对象，得到Web服务调用结果。</p>
    <p>[0103] 在此基础上，接口模块63中的RCP单元还可以将解析得到的所述Web服务调用结 果在所述基于RCP的简单类型数据接口和复杂类型数据接口进行显示。 [0104] 本发明实施例的Web服务客户端自动化生成装置，通过采用深度优先递归算法对 WSDL文档中的复杂数据类型进行解析，克服了现有技术中不能够支持WSDL文档中复杂数 据类型解析的缺陷，实现了对WSDL文档中复杂数据类型的解析，有利于Web服务客户端自 动化的生成；并且，通过生成基于RCP的可视化的数据接口，满足了用户端透明性操作的需 求，实现了 Web服务客户端生成的完全自动化。</p>
    <p>[0105] 本领域普通技术人员可以理解：实现上述方法实施例的全部或部分步骤可以通过 程序指令相关的硬件来完成，前述的程序可以存储于一计算机可读取存储介质中，该程序 在执行时，执行包括上述方法实施例的步骤；而前述的存储介质包括：ROM、 RAM、磁碟或者 光盘等各种可以存储程序代码的介质。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102567400A?cl=zh">CN102567400A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年12月31日</td><td class="patent-data-table-td patent-date-value">2012年7月11日</td><td class="patent-data-table-td ">阿里巴巴集团控股有限公司</td><td class="patent-data-table-td ">一种实现Web访问的方法和Web服务器</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102567400B?cl=zh">CN102567400B</a></td><td class="patent-data-table-td patent-date-value">2010年12月31日</td><td class="patent-data-table-td patent-date-value">2014年9月3日</td><td class="patent-data-table-td ">阿里巴巴集团控股有限公司</td><td class="patent-data-table-td ">一种实现Web访问的方法和Web服务器</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102812690A?cl=zh">CN102812690A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年5月30日</td><td class="patent-data-table-td patent-date-value">2012年12月5日</td><td class="patent-data-table-td ">华为技术有限公司</td><td class="patent-data-table-td ">获取数据类型定义的方法、装置和系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102812690B?cl=zh">CN102812690B</a></td><td class="patent-data-table-td patent-date-value">2012年5月30日</td><td class="patent-data-table-td patent-date-value">2014年6月11日</td><td class="patent-data-table-td ">华为技术有限公司</td><td class="patent-data-table-td ">获取数据类型定义的方法和装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103064674A?cl=zh">CN103064674A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年12月20日</td><td class="patent-data-table-td patent-date-value">2013年4月24日</td><td class="patent-data-table-td ">北京思特奇信息技术股份有限公司</td><td class="patent-data-table-td ">Soap文件的生成方法及装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103473034A?cl=zh">CN103473034A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年6月6日</td><td class="patent-data-table-td patent-date-value">2013年12月25日</td><td class="patent-data-table-td ">阿里巴巴集团控股有限公司</td><td class="patent-data-table-td ">一种动态发布Web 服务的方法和装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2012126440A2?cl=zh">WO2012126440A2</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年5月30日</td><td class="patent-data-table-td patent-date-value">2012年9月27日</td><td class="patent-data-table-td ">Huawei Technologies Co., Ltd.</td><td class="patent-data-table-td ">获取数据类型定义的方法、装置和系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2012126440A3?cl=zh">WO2012126440A3</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年5月30日</td><td class="patent-data-table-td patent-date-value">2013年4月18日</td><td class="patent-data-table-td ">Huawei Technologies Co., Ltd.</td><td class="patent-data-table-td ">获取数据类型定义的方法、装置和系统</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=WjV_BwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029060000">H04L29/06</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=WjV_BwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029080000">H04L29/08</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2010年7月7日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2010年9月8日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年12月26日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Granted</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/0f3888ccc42f78b1efff/CN101771701A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/Web%E6%9C%8D%E5%8A%A1%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%87%AA%E5%8A%A8%E5%8C%96%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95.pdf?id=WjV_BwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U0w8lnO151V9IZhn2UkoUDFiHTxLA"},"sample_url":"https://www.google.com/patents/reader?id=WjV_BwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>