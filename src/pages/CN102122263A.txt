<!DOCTYPE html><html><head><title>专利 CN102122263A - 一种java应用系统运行时监控方法和装置 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种java应用系统运行时监控方法和装置"><meta name="DC.contributor" content="廖昕" scheme="inventor"><meta name="DC.contributor" content="杨涛" scheme="inventor"><meta name="DC.contributor" content="胡百国" scheme="inventor"><meta name="DC.contributor" content="陈松" scheme="inventor"><meta name="DC.contributor" content="成都勤智数码科技有限公司" scheme="assignee"><meta name="DC.date" content="2011-3-23" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种JAVA应用系统运行时监控方法和装置。该方法的主要步骤包括：1)通过配置文件描述要监控的类或方法，以及监控指标；2)修改应用程序启动参数，JVM启动时加载Agent；3)Agent读取配置文件，并根据监控要求向JVM注册要得到通知的事件；4)应用程序运行时，当指定的类被加载时，Agent得到通知；5)Agent修改对应类的字节码，加入监控所需逻辑;6）Agent初始化相关指标变量；7)当被监控的方法调用时，自动执行监控逻辑，得到相关指标原始数据；8)Agent根据配置文件的描述，计算相关指标的值。应用上述方法，可以显著提高IT运维人员诊断、分析、定位和解决IT系统故障的能力。"><meta name="DC.date" content="2011-7-13"><meta name="DC.relation" content="CN:101226497:A" scheme="references"><meta name="DC.relation" content="CN:101551842:A" scheme="references"><meta name="DC.relation" content="CN:101847116:A" scheme="references"><meta name="DC.relation" content="US:20040031020:A1" scheme="references"><meta name="DC.relation" content="WO:2003090085:A2" scheme="references"><meta name="citation_patent_publication_number" content="CN:102122263:A"><meta name="citation_patent_application_number" content="CN:201110069405"><link rel="canonical" href="https://www.google.com/patents/CN102122263A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102122263A?cl=zh"/><meta name="title" content="专利 CN102122263A - 一种java应用系统运行时监控方法和装置"/><meta name="description" content="本发明公开了一种JAVA应用系统运行时监控方法和装置。该方法的主要步骤包括：1)通过配置文件描述要监控的类或方法，以及监控指标；2)修改应用程序启动参数，JVM启动时加载Agent；3)Agent读取配置文件，并根据监控要求向JVM注册要得到通知的事件；4)应用程序运行时，当指定的类被加载时，Agent得到通知；5)Agent修改对应类的字节码，加入监控所需逻辑;6）Agent初始化相关指标变量；7)当被监控的方法调用时，自动执行监控逻辑，得到相关指标原始数据；8)Agent根据配置文件的描述，计算相关指标的值。应用上述方法，可以显著提高IT运维人员诊断、分析、定位和解决IT系统故障的能力。"/><meta property="og:title" content="专利 CN102122263A - 一种java应用系统运行时监控方法和装置"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102122263A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102122263A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=TVOXBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102122263A&amp;usg=AFQjCNE70tviQ7Ij5tCo-bY1vK7J5osIFQ" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/923f5bec07fdd11eea6a/CN102122263A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/923f5bec07fdd11eea6a/CN102122263A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102122263A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102122263A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102122263A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种JAVA应用系统运行时监控方法和装置。该方法的主要步骤包括：1)通过配置文件描述要监控的类或方法，以及监控指标；2)修改应用程序启动参数，JVM启动时加载Agent；3)Agent读取配置文件，并根据监控要求向JVM注 ...</span><span itemprop="url">https://www.google.com/patents/CN102122263A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102122263A - 一种java应用系统运行时监控方法和装置</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102122263A - 一种java应用系统运行时监控方法和装置" title="专利 CN102122263A - 一种java应用系统运行时监控方法和装置"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102122263 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201110069405</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2011年7月13日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2011年3月23日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2011年3月23日</td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201110069405.7, </span><span class="patent-bibdata-value">CN 102122263 A, </span><span class="patent-bibdata-value">CN 102122263A, </span><span class="patent-bibdata-value">CN 201110069405, </span><span class="patent-bibdata-value">CN-A-102122263, </span><span class="patent-bibdata-value">CN102122263 A, </span><span class="patent-bibdata-value">CN102122263A, </span><span class="patent-bibdata-value">CN201110069405, </span><span class="patent-bibdata-value">CN201110069405.7</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BB%96%E6%98%95%22">廖昕</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%9D%A8%E6%B6%9B%22">杨涛</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%83%A1%E7%99%BE%E5%9B%BD%22">胡百国</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%99%88%E6%9D%BE%22">陈松</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%88%90%E9%83%BD%E5%8B%A4%E6%99%BA%E6%95%B0%E7%A0%81%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">成都勤智数码科技有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102122263A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102122263A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102122263A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (5),</span> <span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (1),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (2)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=TVOXBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201110069405&amp;usg=AFQjCNEkK5w_DDcAafqh1FJdpu6FrpxNPA"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=TVOXBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102122263A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNG2opwSRI39zr-jYd_ijLV9uqgLHg"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT104269441" lang="ZH" load-source="patent-office">一种java应用系统运行时监控方法和装置</invention-title>
      </span><br><span class="patent-number">CN 102122263 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA86172505" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种JAVA应用系统运行时监控方法和装置。该方法的主要步骤包括：1)通过配置文件描述要监控的类或方法，以及监控指标；2)修改应用程序启动参数，JVM启动时加载Agent；3)Agent读取配置文件，并根据监控要求向JVM注册要得到通知的事件；4)应用程序运行时，当指定的类被加载时，Agent得到通知；5)Agent修改对应类的字节码，加入监控所需逻辑;6）Agent初始化相关指标变量；7)当被监控的方法调用时，自动执行监控逻辑，得到相关指标原始数据；8)Agent根据配置文件的描述，计算相关指标的值。应用上述方法，可以显著提高IT运维人员诊断、分析、定位和解决IT系统故障的能力。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(9)</span></span></div><div class="patent-text"><div mxw-id="PCLM37789953" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	JAVA应用系统运行时监控方法，其特征在于该方法包括以下步骤：1)通过Agent配 置文件配置要监控的类或方法，以及监控指标；幻修改应用程序启动参数，JVM启动时加 载Agent ；3) Agent读取配置文件，并根据监控要求向JVM注册要得到通知的事件；4)应用 程序运行时，当指定的类被加载时，Agent得到通知；5)Agent修改对应类的字节码，加入监 控所需逻辑；6) Agent初始化相关指标变量；7)当被监控的方法调用时，自动执行监控逻 辑，得到相关指标原始数据；8) Agent根据配置文件的描述，定期计算相关指标的值，并将 数据发送给数据收集单元，并重置相关指标变量；9)数据收集单元汇聚数据，建立数据索 引等操作；10)数据展现单元按照用户操作，根据数据索引提取指标数据，并以表格、线性 图、柱状图进行展示。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.	一种应用如权利要求1所述的JAVA应用系统运行时监控方法的装置，其特征在于： 由Agent、数据收集单元、数据展现单元结合服务器硬件完成。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求2所述的装置，其特征在于=Agent由一个动态链接库和相关jar包 构成，需和被监控的业务系统部署在同一台服务器，由被监控JVM启动时根据JVMTI接口加载。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求2所述的装置，其特征在于=Agent通过修改被监控系统的字节码，增 加监控所需代码，且修改是在业务系统运行过程中加载类的时候动态完成的。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求2所述的装置，其特征在于：监控指标采集逻辑是嵌入在被监控方法 中，被监控方法被调用时一起执行。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求2所述的装置，其特征在于：可以通过配置文件灵活定义要监控的类 和方法，且可以通过指定公共基类实现对其派生类的监控。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求2所述的装置，其特征在于=Agent通过一个单独的线程，定期计算统 计监控指标，并将其主动发送给数据收集装置，其统计周期可以自定义。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.根据权利要求2所述的装置，其特征在于=Agent和数据收集单元之间可以是多到多 的连接关系，一个Agent可以连接到多个数据收集单元，一个数据收集单元也可以接收来 自多个Agent的数据。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.根据权利要求2所述的装置，其特征在于：其数据收集和展现单元所驻留服务器内 存容量需不低于2G。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES43368993" lang="ZH" load-source="patent-office" class="description">
    <p>一种JAVA应用系统运行时监控方法和装置</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及IT运维领域，尤其是一种对Java应用系统运行时监控的方法。 背景技术</p>
    <p>[0002]	随着IT建设的不断深入和完善，计算机软硬件系统的运行维护变得日益重要。 保证应用系统正常持续运行的一个重要方面是对应用系统的行为进行监控，当发现其行为 不符合预期或出现异常时及时告警，以便维护人员对问题进行处理，排除故障或潜在的问 题。业务的快速变化和技术的不断创新导致应用系统日益复杂，大型企业可能存在数十甚 至上百个业务系统，当故障发生时问题的定位、诊断和修复一直是信息服务部门面临的挑 战。在监控技术中，一般是采用各种探针从外部观测应用系统占用的CPU、内存资源等，不能 监测应用系统内部行为和效果，无法对深层次系统问题进行定位、分析。传统的软件单步跟 踪和调试技术可以准确观察系统内部行为，主要适用于软件开发阶段，当系统投入正式运 行之后，由于源代码、符号文件缺失等原因，很难再对系统进行单步跟踪调试；并且单步跟 踪、断点等会影响应用系统行为，一般也不允许在生产环境中使用。</p>
    <p>[0003]	因此，如何在应用系统运行环境中，在对业务系统影响尽可能低的情况下，准确监 测软件内部行为，如方法执行所耗时长，创建的对象数量，是否有操作异常发生等，并且将 这些数据及时有效的展现和分析，是IT运维领域的技术人员面临的一个突出问题。</p>
    <p>发明内容</p>
    <p>[0004]	Java语言是目前应用系统开发的主流编程语言。本发明提出了一种针对Java开 发的应用系统的运行时监控方法，其主要步骤如下：</p>
    <p>1)通过配置文件描述要监控的类或方法，以及监控指标；</p>
    <p>2)修改应用程序启动参数，JVM启动时加载Agent	；</p>
    <p>3)	Agent读取配置文件，并根据监控要求向JVM注册要得到通知的事件；</p>
    <p>4)应用程序运行时，当指定的类被加载时，Agent得到通知；</p>
    <p>5)Agent修改对应类的字节码，加入监控所需逻辑；</p>
    <p>6)	Agent初始化相关指标变量；</p>
    <p>7)当被监控的方法调用时，自动执行监控逻辑，得到相关指标原始数据；</p>
    <p>8)	Agent根据配置文件的描述，定期计算相关指标的值，并将数据发送给数据收集单 元，并重置相关指标变量；</p>
    <p>9)数据收集单元汇聚数据，建立数据索引等操作；</p>
    <p>10)数据展现单元按照用户操作，根据数据索引提取指标数据，并以表格、线性图、柱状 图等进行展示。</p>
    <p>[0005]	应用上述方法的装置由监控Agent，数据收集单元和数据展现单元组成。监控 Agent包括动态链接库和相关的一些jar包，当Java程序启动时将其作为程序的一部分进 行加载，其工作原理如图2所示。当JVM启动时，JVM根据运行参数查找动态链接库，根据JVMTI (Java Virtual Machine Tool Interface) ^&#190;&#190;，ijf M Agent_0nLo&#163;id 力夕去。&#162;1&#190;&#190;^&#190; 中，Agent会读取配置文件，确定要监控的类和方法，然后据此向JVM声明自己感兴趣的事 件。当这些事件发生时，相关的回调函数会被执行。通过这种机制，Agent可以在Java类加 载时，动态修改Java程序的字节码，根据要求嵌入自己的监控指标采集代码。当对应类的 方法被执行时，相关的采集代码会被执行，从而掌握应用程序的行为统计。比如要监测Card 类的余额查询方法QueryValue执行时延，Agent会在Card类加载时修改QueryValue方法 的字节码，在进入方法时取得系统时间，在方法执行完毕时再取一次系统时间，并计算两者 的差，就可得到该方法的执行耗时。同样的，如果要计算程序中某方法一直执行，还未结束 的数量，则可以针对该方法设置一变量，当方法进入时该变量加一，当方法退出时变量减去 一，那么这个变量的值就代表了当前正在执行，还未结束的调用数。Agent加载后会启动数 据计算发送线程，该线程定期计算数据并通过网络发送给数据收集单元；该间隔不宜过短， 过短会增加系统负载；也不宜过长，过长会导致监控粒度过大，不能发现问题。优选地，该间 隔宜设在30秒到60秒之间。另外一个要注意的是，为尽可能降低对应用程序的影响，Agent 本身并不在磁盘上保存任何数据；所有数据均是通过网络保存在数据收集单元上。</p>
    <p>[0006]	如上所述，配置文件描述了要关注的应用程序类和方法。作为一个面向对象的编 程语言，Java的一个特点是继承。本发明可以通过监测基类的行为实现对其派生类相关的 监控。此特性具有两方面的好处：首先，技术人员可以在不清楚应用程序代码(如函数名，方 法名）的情况下即可实现对J2EE公共基础设施的众多监控；比如，按照Java规范，所有的 Servlet都必须实现javax. servlet. krvlet接口，系统只需要设置了对该接口的监控，即 可轻易掌握应用程序中众多krvlet的行为，而无需掌握应用程序％1^1讨的具体情况，这 大大降低了监控的技术要求。另一方面，因为对众多派生类只需要配置公共的基类，减少了 部署工作量，提高了工作效率。</p>
    <p>[0007]	Agent和数据收集单元之间可以是多到多的连接关系。即一个Agent可以连接到 多个数据收集单元；单个数据收集单元也可以同时接收多个Agent的数据。Agent的数据 同时只会发送到特定的数据收集单元，但当这个数据收集单元无法连接时，Agent会查找下 一个备选的收集单元，直到找到可用的单元，这样可以提高系统可靠性和扩展性。</p>
    <p>[0008]	数据收集单元接收到数据后需要建立监控数据索引，数据展现单元根据索引可以 确定特定指标，特定时间段数据的存放位置，据此从对应数据收集单元提取数据并呈现给 技术人员。</p>
    <p>[0009]	综上所述，和传统方法相比，本发明方法优点在于：第一，降低了对被监控服务器 的硬件开销，能够在不影响生产系统正常运行，并且不需对应用程序源代码进行任何修改 的情况下，实现对生产环境中应用程序内部行为的细粒度监控；第二，高灵活性，可以根据 应用系统的具体情况灵活定制要监控的事项或指标，并且能够通过对基类或公共接口的监 控实现对应用派生类的监控。第三，高可靠性和扩展性，能够对大规模复杂系统进行监控。</p>
    <p>附图说明</p>
    <p>[0010]	本发明将通过例子并参照附图的方式说明，其中： 图1是本发明方法的示意流程图。</p>
    <p>[0011]	图2是Agent工作原理图。[0012]	图3是本发明方法的一个实施例。</p>
    <p>[0013]	图4是本发明方法的另一个实施例。</p>
    <p>具体实施方式</p>
    <p>[0014]	JDBC (Java Database Connectivity)是 Java 应用程序中执行 SQL 语句的 API, 可以为多种关系数据库提供统一访问，在Java应用程序中得到了极其广泛的应用；同时， 数据库是目前业务系统重要的基础设施，其经常是业务故障频发的组件，如果实现对JDBC 的操作进行监控，能显著提高问题诊断、定位的能力。下面是本发明方法实现对JDBC操作 监控的一个具体实施例。</p>
    <p>[0015]	如前所述，应用本发明方法时，第一步就是要确定要监控那些类和方法。JDBC规范 包括下列主要的接口和方法：</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102122263A/CN102122263AD00051.png"> <img id="idf0001" file="CN102122263AD00051.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102122263A/CN102122263AD00051.png" class="patent-full-image" alt="Figure CN102122263AD00051"> </a> </div>
    <p>表1. JDBC接口监控示意</p>
    <p>从上述类和方法确定监控项的原则是：第一，如果某方法不会被程序调用，不应作为监 控项；要监控的项目应该从会被执行的方法中挑选。第二，如果某方法不会出错，出错概率 很低，或者出错也不会影响业务功能正常处理，不应作为监控项；比如，一个只执行变量初 始化的方法不应该被监控。要监控的方法执行效率或结果应该要对程序行为有着重要影 响。第三，如果某方法在运行时出错概率很小，原则上也不应该纳入监控范畴。这主要是有 些方法在开发环境中可能出错，但在安装调试好的环境中则不会出错。所以，为了保证本 方法监控的有效性，仔细选择监控项是非常重要的，一方面防止大量无用数据淹没真正有 价值的数据。另一方面是防止无效监控对系统造成不必要的性能损耗。根据上述原则，对 JDBC,可以石角定 Driver, connect, Statement. executeQuery, Statement. executeUpdate, PreparedStatement. executeUpdate, PreparedStatement. executeUpdate 等方法纳入 监控。而像Connect. createStatement,出错可能性较小，可以不监控。 [0016] 在确定接口和方法后，根据需要定义相应的监控指标，监控指标可以是：方法执行 的平均耗时，方法执行的次数，方法执行阻塞(未结束）的数量，类的实例数量等。对方法执行的平均耗时，Agent会修改该方法的字节码，增加如下逻辑： 方法入口处： 取系统当前时间tl ； 方法体代码…… 方法出口处 取系统当前时间t2 ； ExecuteTime0fMethodName=t2-tl； ExecuteCountOfMethodName++；</p>
    <p>Agent会定期在统计周期开始前将相关变量清零，然后再周期结束时将累加的执行耗 时Timeof &#171;除以累计执行次数，得到本周期内该方法的平均执行耗时。</p>
    <p>[0017]	对方法执行次数的指标，则是在字节码中增加如下逻辑： 方法入口处：</p>
    <p>ExecuteCountOfMethodName ++; 方法体代码……</p>
    <p>周期结束时，ExecuteCountOfMethodName即为本周期内方法执行次数。</p>
    <p>[0018]	对方法阻塞数量的指标，则是在字节码中增加如下逻辑： 方法入口 ：</p>
    <p>DelayedCountOfMethodName ++; 方法体代码…… 方法出口处：</p>
    <p>DelayedCountOfMethodName &#8212;；</p>
    <p>周期结束时，DelayedCountOfMethodName即为本周期内被阻塞的方法执行次数。</p>
    <p>[0019]	对类的实例数量，需同时修改构造函数和析构函数： 构造函数入口处：</p>
    <p>InstanceOfClassName ++; 析构函数出口处 InstanceOfClassName &#8212;；</p>
    <p>周期结束时，InstanceOfClassName即为本周期内被阻塞的方法执行次数。</p>
    <p>[0020]	从上述代码可以看到，新增加的代码逻辑非常简单，大部分都是执行效率很高的 整数加减操作，其对系统处理性能的损耗几乎可以忽略不计，每个指标对内存的存储要求 也仅为数个字节，如果我们监控1000个指标，对内存的增加量仅为数K。但获得的性能指标 是问题诊断、分析最重要的第一手数据。</p>
    <p>[0021]	在每个周期结束时，Agent进行必要的计算，然后将数据批量发送到数据收集单元 进行存储；数据展示单元进行相关数据的呈现、分析等。在本实施例中，数据收集单元和展 示单元均采用联想万全R520服务器QCPU，8G内存）。</p>
    <p>[0022]	具体实施方式2</p>
    <p>下面将结合附图4对本发明做进一步的说明。</p>
    <p>[0023]	该实施例说明了如何对包含JBoss，WebLogic等多个业务系统进行分布式部署监 控。对JBoss，按照前述原则，可确定监控下列接口 ：org. apache, jasper, runtime. JspSourceDependent</p>
    <p>org. jboss. remoting. transport, servlet. web. ServerInvokerServlet</p>
    <p>org. jboss. webservice. server. PortComponentLinkServlet</p>
    <p>org. jboss. ws. core, server. PortComponentLinkServlet</p>
    <p>org. apache, catalina. servlets. DefaultServlet</p>
    <p>org. apache, catalina. servlets. InvokerServlet</p>
    <p>org. jboss. axis, transport, http. AxisServletBase</p>
    <p>org. jboss. webservice. server. AbstractServlet</p>
    <p>org. jboss. jmx. adaptor, html. HtmlAdaptorServlet</p>
    <p>org. jboss. ejb. StatelessImpl</p>
    <p>org. jboss. ejb. StatefulImpl</p>
    <p>org. jboss. persistence. EntityImpl</p>
    <p>org. jboss. ejb. MessageDrivenImpl</p>
    <p>上述接口基本涵盖了 JBoss中JSP，Servlet，EJB等方面，也可以按照需要加入其它如 JTA, JNDI等方面内容。类似的，对WebLogic，可监控下列内容： weblogic. servlet. jsp. JspBase weblogic. servlet. JSPServlet org. apache, struts, action. ActionServlet weblogic. webservice. server, jms. JMSListener weblogic. jms. extensions. ServerSessionPooIListener weblogic. work. WorkAdapter weblogic. wsee. buffer. BaseDispatchMDB weblogic.wsee. server, jms. JmsQueueListener weblogic. ejb. GenericSessionBean weblogic. ejb. GenericMessageDrivenBean weblogic. ejb. GenericEntityBean</p>
    <p>如图所示，对每个需要监控的业务系统，均部署监控Agent，每个Agent定期收集配 置文件中指定接口的相关指标，并发送给指定的数据收集单元。如果指定的数据收集单元 无法连接，Agent可以搜索备用的数据收集单元，直到找到可用的单元。数据展现单元管理 有数据分布存储的信息；其可以根据要展示的指标和时间段确定数据存放的确切位置，并 从相应的数据收集单元提取对应的数据进行展示。Agent、数据收集单元和展现单元之间的 连接结构具有高度的可扩展性和可靠性。在本实施例中，数据收集单元采用联想万全R520 服务器OCPU，8G内存），而数据展现单元则采用联想万全R680服务器0CPU，8G内存），以 保证在大数据量情况下展现流畅。</p>
    <p>[0024]	本说明书中公开的所有特征，或公开的所有方法或过程中的步骤，除了互相排斥 的特征和/或步骤以外，均可以以任何方式组合。</p>
    <p>[0025]	本说明书(包括任何附加权利要求、摘要和附图）中公开的任一特征，除非特别叙 述，均可被其他等效或具有类似目的的替代特征加以替换。即，除非特别叙述，每个特征只 是一系列等效或类似特征中的一个例子而已。[0026] 本发明并不局限于前述的具体实施方式。本发明扩展到任何在本说明书中披露的 新特征或任何新的组合，以及披露的任一新的方法或过程的步骤或任何新的组合。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101226497A?cl=zh">CN101226497A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2007年12月10日</td><td class="patent-data-table-td patent-date-value">2008年7月23日</td><td class="patent-data-table-td ">金蝶软件（中国）有限公司</td><td class="patent-data-table-td ">应用程序监控系统和监控方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101551842A?cl=zh">CN101551842A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年5月5日</td><td class="patent-data-table-td patent-date-value">2009年10月7日</td><td class="patent-data-table-td ">天津大学</td><td class="patent-data-table-td ">一种基于模型驱动的安全测试方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101847116A?cl=zh">CN101847116A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年5月5日</td><td class="patent-data-table-td patent-date-value">2010年9月29日</td><td class="patent-data-table-td ">中兴通讯股份有限公司</td><td class="patent-data-table-td ">一种基于j2ee架构的监控系统和方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20040031020">US20040031020</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2002年12月31日</td><td class="patent-data-table-td patent-date-value">2004年2月12日</td><td class="patent-data-table-td ">International Business Machines Corporation</td><td class="patent-data-table-td ">Method and system for modifying a class file to monitor data flow</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2003090085A2?cl=zh">WO2003090085A2</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2003年4月18日</td><td class="patent-data-table-td patent-date-value">2003年10月30日</td><td class="patent-data-table-td ">Computer Associates Think, Inc.</td><td class="patent-data-table-td ">System and method for monitoring a computer application</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103440161A?cl=zh">CN103440161A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年8月15日</td><td class="patent-data-table-td patent-date-value">2013年12月11日</td><td class="patent-data-table-td ">北京京东尚科信息技术有限公司</td><td class="patent-data-table-td ">一种Java虚拟机内部对象监控方法、装置和系统</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=TVOXBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0011320000">G06F11/32</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2011年7月13日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2011年8月24日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/923f5bec07fdd11eea6a/CN102122263A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8Djava%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%BF%90%E8%A1%8C%E6%97%B6%E7%9B%91%E6%8E%A7%E6%96%B9.pdf?id=TVOXBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U3WAziAZoolSSlCAyAZNZjdqs-cYA"},"sample_url":"https://www.google.com/patents/reader?id=TVOXBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>