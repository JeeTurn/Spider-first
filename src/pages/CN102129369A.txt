<!DOCTYPE html><html><head><title>专利 CN102129369A - 在Android手机上整合TinxX图形界面的方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="在Android手机上整合TinxX图形界面的方法"><meta name="DC.contributor" content="徐鼎鼎" scheme="inventor"><meta name="DC.contributor" content="毛德操" scheme="inventor"><meta name="DC.contributor" content="王承志" scheme="inventor"><meta name="DC.contributor" content="浙大网新科技股份有限公司" scheme="assignee"><meta name="DC.date" content="2010-12-22" scheme="dateSubmitted"><meta name="DC.description" content="本发明涉及一种在Android手机上整合TinxX图形界面的方法，1.1)每当启动一个LinuxGUI应用时，就在Android系统中为其创建一个代理进程AppProxy，这个进程与实际的应用进程有着相同的生存期；1.2)由应用代理进程AppProxy创建一个FB刷新线程；1.3)修改TinyX的代码，将本来要写入FB的内容作为一个Bitmap写入一个中间文件；1.4)FB刷新线程每隔一段时间就将这个中间文件的当前内容通过drawBitmap()画入FB，就象一个普通的Android应用需要画一个Bitmap一样。本发明有益的效果是：本发明提供了一种代理机制，在Android系统中为运行于Android以外的Linux GUI应用提供一个作为Android进程的代理，使Linux GUI应用通过TinyX进行的屏幕显示最终要通过这个代理才能显示出来，其效果是实现了TinyX图形界面与Android的整合。"><meta name="DC.date" content="2011-7-20"><meta name="DC.relation" content="CN:101344849:A" scheme="references"><meta name="DC.relation" content="CN:101853296:A" scheme="references"><meta name="citation_patent_publication_number" content="CN:102129369:A"><meta name="citation_patent_application_number" content="CN:201010619543"><link rel="canonical" href="https://www.google.com/patents/CN102129369A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102129369A?cl=zh"/><meta name="title" content="专利 CN102129369A - 在Android手机上整合TinxX图形界面的方法"/><meta name="description" content="本发明涉及一种在Android手机上整合TinxX图形界面的方法，1.1)每当启动一个LinuxGUI应用时，就在Android系统中为其创建一个代理进程AppProxy，这个进程与实际的应用进程有着相同的生存期；1.2)由应用代理进程AppProxy创建一个FB刷新线程；1.3)修改TinyX的代码，将本来要写入FB的内容作为一个Bitmap写入一个中间文件；1.4)FB刷新线程每隔一段时间就将这个中间文件的当前内容通过drawBitmap()画入FB，就象一个普通的Android应用需要画一个Bitmap一样。本发明有益的效果是：本发明提供了一种代理机制，在Android系统中为运行于Android以外的Linux GUI应用提供一个作为Android进程的代理，使Linux GUI应用通过TinyX进行的屏幕显示最终要通过这个代理才能显示出来，其效果是实现了TinyX图形界面与Android的整合。"/><meta property="og:title" content="专利 CN102129369A - 在Android手机上整合TinxX图形界面的方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102129369A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102129369A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=yXmXBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102129369A&amp;usg=AFQjCNHbjWrdImJyc6X7bYs_TB38tkLk9Q" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/26eeefda5e5011dfb8c4/CN102129369A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/26eeefda5e5011dfb8c4/CN102129369A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102129369A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102129369A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102129369A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102129369B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102129369A?cl=zh" style="display:none"><span itemprop="description">本发明涉及一种在Android手机上整合TinxX图形界面的方法，1.1)每当启动一个LinuxGUI应用时，就在Android系统中为其创建一个代理进程AppProxy，这个进程与实际的应用进程有着相同的生存期；1.2)由应用代理进程AppProxy创建一个FB刷新线程；1.3)修改TinyX的代码，将本来要写入FB的内容作为一个Bitmap写入一个中间文件；1.4)FB刷新线程每隔一段时间就将这个中间文件的当前内容通过drawBitmap()画入FB，就象一个普通的Android应用需要画一个Bitmap一样。本发明有益的效果是：本发明提供了一种代理机制，在Android系统中为运行于Android以外的Linux...</span><span itemprop="url">https://www.google.com/patents/CN102129369A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102129369A - 在Android手机上整合TinxX图形界面的方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102129369A - 在Android手机上整合TinxX图形界面的方法" title="专利 CN102129369A - 在Android手机上整合TinxX图形界面的方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102129369 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201010619543</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2011年7月20日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2010年12月22日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2010年12月22日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102129369B?hl=zh-CN&amp;cl=zh">CN102129369B</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201010619543.3, </span><span class="patent-bibdata-value">CN 102129369 A, </span><span class="patent-bibdata-value">CN 102129369A, </span><span class="patent-bibdata-value">CN 201010619543, </span><span class="patent-bibdata-value">CN-A-102129369, </span><span class="patent-bibdata-value">CN102129369 A, </span><span class="patent-bibdata-value">CN102129369A, </span><span class="patent-bibdata-value">CN201010619543, </span><span class="patent-bibdata-value">CN201010619543.3</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BE%90%E9%BC%8E%E9%BC%8E%22">徐鼎鼎</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%AF%9B%E5%BE%B7%E6%93%8D%22">毛德操</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%8E%8B%E6%89%BF%E5%BF%97%22">王承志</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%B5%99%E5%A4%A7%E7%BD%91%E6%96%B0%E7%A7%91%E6%8A%80%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">浙大网新科技股份有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102129369A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102129369A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102129369A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (2),</span> <span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (3),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (2),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (3)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=yXmXBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201010619543&amp;usg=AFQjCNEpDroKm4fvc1sOMZkI2gNDmVBIIQ"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=yXmXBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102129369A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNEwVogRzFDVP6YKK8ZRzdNOQVrkdg"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT104296822" lang="ZH" load-source="patent-office">在Android手机上整合TinxX图形界面的方法</invention-title>
      </span><br><span class="patent-number">CN 102129369 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA86193998" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明涉及一种在Android手机上整合TinxX图形界面的方法，1.1)每当启动一个LinuxGUI应用时，就在Android系统中为其创建一个代理进程AppProxy，这个进程与实际的应用进程有着相同的生存期；1.2)由应用代理进程AppProxy创建一个FB刷新线程；1.3)修改TinyX的代码，将本来要写入FB的内容作为一个Bitmap写入一个中间文件；1.4)FB刷新线程每隔一段时间就将这个中间文件的当前内容通过drawBitmap()画入FB，就象一个普通的Android应用需要画一个Bitmap一样。本发明有益的效果是：本发明提供了一种代理机制，在Android系统中为运行于Android以外的Linux&#160;GUI应用提供一个作为Android进程的代理，使Linux&#160;GUI应用通过TinyX进行的屏幕显示最终要通过这个代理才能显示出来，其效果是实现了TinyX图形界面与Android的整合。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(1)</span></span></div><div class="patent-text"><div mxw-id="PCLM37806567" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1. 一种在Android手机上整合TinxX图形界面的方法，其特征在于： 1.1)每当启动一个Linux⑶I应用时，就在Android系统中为其创建一个代理进程 AppProxy，这个进程与实际的应用进程有着相同的生存期； 1. 2)由应用代理进程AppProxy创建一个FB刷新线程；1. 3)修改TinyX的代码，将本来要写入FB的内容作为一个Bitmap写入一个中间文件； 1. 4)FB刷新线程每隔一段时间就将这个中间文件的当前内容通过drawBitmapO画入 FB,就象一个普通的Android应用需要画一个Bitmap &#8212;样。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES43385607" lang="ZH" load-source="patent-office" class="description">
    <p>在Android手机上整合TinxX图形界面的方法</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及Android手机领域，尤其是一种在Android手机上整合TinxX图形界 面的方法。</p>
    <p>背景技术</p>
    <p>[0002]	以手机为代表的智能化移动终端设备既是计算机技术的一个重要发展方向，又是 一个竞争十分激烈的市场。自从谷歌公司和开放手机联盟推出Android操作系统和基于 Android的手机以来，很快就在世界手机市场上占有了不小的份额，各种Android手机层出 不穷，由中国移动开发并推出的OPhone也是基于Android的，也是一种Android手机。</p>
    <p>[0003]	所谓Android操作系统，实际上是对Linux操作系统的一种改编和扩充，它的内核 基本上就是Linux的内核，但是在用户空间却专门针对手机和移动终端设备的特点作了大 幅的改进和增强，这些改动大都与编程模式和图形界面、即图形化用户界面（GUI)有关。</p>
    <p>[0004]	在带图形界面的Linux操作系统中，有关图形界面的功能都是由X视窗系统提供 的。运行着应用软件的进程都不直接访问显示屏，也不直接进行图形方面的操作运算，而只 是通过进程间通信将绘图命令发送给X服务进程，由X服务进程加以实施。X视窗属于另一 个开源软件项目，早在Unix时代即已存在。由于Linux系统大多离不开图形界面，X视窗 实际上已经成了 Linux操作系统的一部分。为适应手机和其它嵌入式系统的需要，人们还 将X视窗加以裁剪、缩编、简化，成为一个小型化的版本称为TinyX，所以TinyX是专门与嵌 入式Linux配对使用的X视窗系统。</p>
    <p>[0005]	而在包括Android手机在内的Android系统中，则甩开了 X视窗，所有的图形界面 功能全都由Android自己提供。所以，Android手机上的图形界面是Android自己“原生” 的。之所以如此，主要是因为Android需要向应用软件提供一个Java语言的程序设计界面 (API)和运行环境，预期中的Android应用都是用Java语言编写的。</p>
    <p>[0006]	可是原来为Linux开发的应用却并不使用Android的API和运行环境，这些软件 大多使用C/C++语言，并且是依赖于X视窗的。要在Android系统上运行这些软件，就还是 得要在Android系统上安装TinyX。显然，Android的设计者原来是不打算在Android系统 上运行此类软件的，但是实际上在一些特殊的条件下仍有这样的必要。例如，正在进行中的 一个项目是要在OPhone上直接运行WinCE和WM(Windows Mobile)的应用软件，这显然有 助于扩展OPhone的应用软件来源。为达到这个目的，我们可以借助一个称为Wine的开源 软件，把这个软件移植到手机上。但是在这种情况下WinCE/WM软件是作为Linux的GUI应 用运行的，都离不开TinyX。</p>
    <p>[0007]	然而，当TinyX和Android并存于同一台机器上时，就有了问题，那就是两个图形 界面互相冲突、干扰的问题。</p>
    <p>[0008]	一般而言，不管是手机还是别的什么系统，也不管在上面运行什么软件，使用者看 到的总是同一个显示屏，如果有两个进程都要显示，那就得有个仲裁和协调的机制，不能各 自无序地在显示屏上写，否则就会互相干扰。这个问题不解决，就实际上不能在Android系统上运行Linux的⑶I应用。</p>
    <p>[0009]	其实Android内部也有类似的问题。Android是个多任务、多进程的系统，其内部 的不同进程之间也共用同一个显示屏，也有可能会互相冲突，也需要有仲裁和协调的机制； 而Android也确实提供了这样的机制。Android有个函数drawBitmap ()，这个函数内部就 有对于显示屏的仲裁和协调，如有多个Android进程通过调用这个函数显示一幅画面的 Bitmap (位图），就会自动受到Android的仲裁和协调。但是，TinyX服务进程并非Android 内部的进程，TinyX和Android是两个不同的系统，所以drawBitmapO无法把TinyX也纳 入其仲裁和协调的范围。这样，要在Android系统上运行Linux的⑶I应用，图形界面的整 合就还是成为问题。</p>
    <p>[0010]	而本发明的内容和特点就是：为这个问题的解决提供一种方法，将TinyX提供的 图形界面整合到Android原生的图形界面中，使Linux的⑶I应用可以在包括Android手 机在内的Android系统上正常运行。</p>
    <p>发明内容</p>
    <p>[0011]	为解决整合TinyX和Android两个图形界面的问题，本发明提供了一种在Android 手机上整合不同图形界面的方法，使嵌入式Linux操作系统上由TinyX提供的图形界面与 Android手机原生的图形界面相整合，使得在Android手机上可以和谐自然地运行带图形 界面的Linux软件。</p>
    <p>[0012]	无论是TinyX还是Android，最终都是通过“画面缓冲区（Frame Buffer，下面简 称FB) ”将图形画在屏幕上。所谓FB，是将Linux的设备文件/dev/fb映射到内存中的一个 缓冲区中，有了这样的映射之后，写入FB的内容就会出现在屏幕上。可是，如果让TinyX和 Android都互相独立地使用FB，就会出现双方抢夺FB，互相干扰、互相覆盖的现象。所以必 须要加以协调，由一个统一的机制来控制FB的使用。</p>
    <p>[0013]	本发明采用的方法是：在Android这一边为Linux⑶I应用创建一个代理，凡是 Linux⑶I通过TinyX实施的屏幕显示必须经由这个代理；由Android统一管理FB的使用。</p>
    <p>[0014]	1. 1)每当启动一个Linux⑶I应用时，就在Android系统中为其创建一个代理进 程AppProxy，这个进程与实际的应用进程“同生共死”，有着相同的生存期。</p>
    <p>[0015]	1. 2)由应用代理进程AppProxy创建一个FB刷新线程；</p>
    <p>[0016]	1. 3)修改TinyX的代码，将本来要写入FB的内容作为一个Bitmap写入一个中间 文件；</p>
    <p>[0017]	1. 4)FB刷新线程每隔一段时间就将这个中间文件的当前内容通过drawBitmapO 画入FB，就象一个普通的Android应用需要画一个Bitmap &#8212;样。</p>
    <p>[0018]	这样，Linux⑶I应用把屏幕显示委托给TinyX，而TinyX并不直接访问与显示屏 相连的FB，而是把显示的内容写入一个中间文件，而对于FB的写入则是由AppProxy通过调 用由Android提供的drawBitmapO完成的，所以会受到Android的仲裁和协调，其效果是 实现了 TinyX图形界面与Android的整合。</p>
    <p>[0019]	由于TinyX是X视窗的一个子集，其源代码就是X视窗的源代码的一部分，本发明 所述方法同样也适用于X视窗。</p>
    <p>[0020]	本发明有益的效果是：本发明提供了一种代理机制，在Android系统中为运行于Android以外的Linux⑶I应用提供一个作为Android进程的代理，使Linux⑶I应用通过 TinyX进行的屏幕显示最终要通过这个代理才能显示出来。而这个代理，则由于是Android 内部的进程，也通过drawBitmapO进行显示，因此也受到Android内部的仲裁和协调；其效 果是实现了 TinyX图形界面与Android的整合。</p>
    <p>附图说明</p>
    <p>[0021]	附图1是TinyX的图形界面与Android整合之前的系统示意图；</p>
    <p>[0022]	附图2是按本发明所述方法将TinyX的图形界面与Android整合之后的系统示意 图；</p>
    <p>[0023]	附图3是AppProxy的程序流程图。 具体实施方式</p>
    <p>[0024]	下面结合附图和实施例对本发明作进一步说明：</p>
    <p>[0025]	附图1中的竖直虚线将系统分成两半，右边是Android系统及其应用，左边是 Linux本身的应用，二者共用同一个Linux内核。图中有两个Android进程，它们都通过 Android访问内核中的一个屏幕缓冲区FB，而FB则与物理的显示屏相连。由于都经过 Android,两个Android进程对FB的访问都受到Android的仲裁和协调，不会互相干扰。而 Linux这一边，则Linux应用进程通过进程间通信（IPC，由图中的大箭头表示）将显示命令 发送给TinyX服务进程，由TinyX执行具体的绘图命令，然后写入内核中的另一个FB、或者 也可以是同一个FB，但是最终这两个FB都通往同一个物理显示屏。由于TinyX无法调用 Android内部的功能，它对FB的访问是独立于Android之外的，所以不受其仲裁和协调，于 是就有了互相冲突和干扰的问题。</p>
    <p>[0026]	附图2中在Android这一边多了一个应用代理进程AppProxy，而FB则只有一个， 并且都要经过Android才能访问。TinyX将原本要写入FB的信息写入一个中间文件，这个 中间文件相当于一个屏幕缓冲区。然后，AppProxy每隔一段时间、例如每隔50毫秒，就将 中间文件的内容通过Android抄写到FB中。这样，TinyX的输出就受到Android的仲裁和 协调，因此就不会发生因争夺屏幕而致的冲突和干扰。换言之，TinyX的图形界面被整合到 了 Android 里面。</p>
    <p>[0027]	注意这里采用中间文件只是众多实施方式中的一种，实际上也可以采用共享内存 区（amredMemory)等等别的方式，这并不影响本发明的实质。</p>
    <p>[0028]	附图3是AppProxy的程序流程。当用户要启动一个带图形界面的Linux应用时， 实际启动的是AppProxy，原本用来启动Linux应用所需的命令行则作为（对于AppProxy 的)命令行参数传给AppProxy。启动之后，AppProxy首先创建一个FB刷新线程，而主线程 则根据命令行参数启动Linux应用，然后就等待Linux应用的运行结束。一旦Linux应用 结束运行，整个AppProxy进程便立即退出运行。注意这里是整个AppProxy进程退出运行， 包括FB刷新线程在内。这样，AppProxy与具体的Linux应用便有（基本）相同的生存期， 成为同生共死的关系。</p>
    <p>[0029]	至于FB刷新线程的流程则很简单，只是在一个定时的循环中把中间文件的内容 通过由Android提供的drawBitmap ()抄写到FB中，下面给出了具体的实施方式。[0030]	本方法的具体实施涉及对TinyX即X的源代码的修改，X是开源软件，其源代码可 从有关网站获取。下面分三个方面说明本方法的一个实施例。注意同一个方法可以有多种 不同的实施，这里所提供的只是其中之一。</p>
    <p>[0031]	1、修改TinyX的源代码，使其将输出不写入FB而写入一个中间文件</p>
    <p>[0032]	TinyX 在一个函数 fbdevlnitialize ()中通过 mmap ()将设备文件 /dev/fbO 映射 到内存中的一个区间，这段代码在源文件)(server\hw\kdrive\fbdev\fbdev. c中：</p>
    <p>[0033]</p>
    <p>6Bool fbdevlnitialize (KdCardInfo *card, FbdevPriv *priv) {</p>
    <p>int k;</p>
    <p>unsigned long off;</p>
    <p>if((priv-&gt;fd = open("/dev/fbO", 0_RDWR)) &lt; 0) { Il 将"/dev/fbO"改成"/tmp/TinyXfb，’ perror("Error opening /dev/fbO\n"); return FALSE;</p>
    <p>}</p>
    <p>if ((k=ioctl(priv-&gt;fd, FBIOGET FSCREENINFO, &amp;priv-&gt;fix)) &lt; 0) { //删去 perror("Error with /dev/fb ioctl FIOGET_FSCREENINFO")； close (priv-&gt;fd); return FALSE;</p>
    <p>}</p>
    <p>if((k=ioctl(priv-&gt;fd, FBIOGET&#8212;VSCREENINFO，&amp;priv-&gt;var)) &lt; 0) { //删去 perror("Error with /dev/fb ioctl FIOGET_VSCREENINFO"); close (priv-&gt;fd); return FALSE;</p>
    <p>priv-&gt;fb&#8212;base = (unsigned char *) mmap ((caddr&#8212;t) NULL, priv-&gt;fix.smem_len, PROT_READ|PROT_WRITE, MAP&#8212;SHARED，</p>
    <p>priv-&gt;fd, 0); //将中间文件“/tmp/TinyXfb”映射成虚拟的FB</p>
    <p>if (priv-&gt;fb_base == (char *)-l) [0034]{</p>
    <p>perror("ERROR: mmap framebuffer fails!"); close (priv-&gt;fd); return FALSE;</p>
    <p>off = (unsigned long) priv-&gt;fix.smem一start % (unsigned long) getpagesize(); priv-&gt;fb = priv-&gt;fb_base + off; return TRUE;</p>
    <p>}</p>
    <p>[0035]	这个函数先打开设备文件/dev/fbO，然后将其映射到某个内存地址（由内核决 定)，并将这个地址保存在priv- &gt; fb_base中。这样，priv- &gt; fb_base、实际上是与页面 边界对齐以后的priv- &gt; fb，就成了 FB即屏幕在Xserver中的映像。</p>
    <p>[0036]	现在要做的是用一个中间文件/tmp/TinyXfb取代/dev/fbO，然后同样把这个文 件mmapO到内存中的一个区间，这就为Xserver建立了一个虚拟的FB。这样，Xserver写 入这个内存区间、并且自以为写入了屏幕FB的图形，就实际上写入了这个中间文件。于是， feerver成为这个中间文件的内容提供者。</p>
    <p>[0037]	将/dev/fbO替换成TinyXfb之后，这里的priv- &gt; fd就代表着这个中间文件， 而不再是设备文件/dev/fbO。但是针对设备文件/dev/fbO的ioctl ()操作FBI0GET_ FSCREENINFC^P FBI0GET_VSCREENINF0对于中间文件TinyXfb是无意义的，所以要将这里的 两个调用ioctlO的语句删去。</p>
    <p>[0038]	注意这里把打开设备文件直接改成打开中间文件是因为TinyX的实现建立在 mmapO的基础上，此后对FB的访问已不再采用文件读写、而改成了对内存缓冲区的访问， 有关的计算（例如计算像素位置等等）都由TinyX自身提供的代码完成，而并不依赖于FB 设备文件的驱动程序。反之，如果不采用mmap()，而采用read ()、Write()等文件操作实现 对FB的读写，那就不能这样简单替换了，因为中间文件是普通文件，与FB设备文件的驱动 不同。</p>
    <p>[0039]	另一方面，TinyX通过访问内存读写这个映射到内存的中间文件时是把它看成FB 的，TinyX的有关代码保证了这一点，所以中间文件的大小始终是固定的，而不会随时间而 不断增大，文件的大小取决于显示屏的分辨率和显示模式。</p>
    <p>[0040]	2、作为应用代理的可执行程序AppProxy</p>
    <p>[0041]	为把Linux应用的人机交互输入整合到Android，需要在Android这一边为Linux 应用创建一个代理进程，由这个代理进程在Android这一边定期将（TinyX生成的）中间文 件的内容刷新到Android这一边的屏幕缓冲区FB中。</p>
    <p>[0042]	在Android系统中，一个应用进程称为一个Activity，是一个Java语言中的“类 (Class) ”，将这种类扩展成一个自定义的类，就是一个Android应用，最后在Android的显示屏上就会有一个图标，点击这个图标就会执行这个类中的“方法（Method)，，onCreate ()。</p>
    <p>所以，onCreateO就相当于C程序中的main()。下面给出有关的伪代码</p>
    <p>[0043]</p>
    <p>public class RunAppActivity extends Activity {</p>
    <p>......	//这个自定义类中扩充出来的其它方法</p>
    <p>private JniMethod mJniMethod = new JniMethod(); //需要用到 JNI</p>
    <p>/** Called when the activity is first created. */ @Override</p>
    <p>public void onCreate(Bundle savedlnstanceState) { //相当于C程序中的main() super.onCreate(savedlnstanceState);</p>
    <p>创建FB刷新线程；</p>
    <p>JniMethod.startApp(StartAppName.getBytes()); //启动执行 Linux那一边的 App</p>
    <p>} //end onCreate</p>
    <p>......	//这个自定义类中扩充出来的更多方法</p>
    <p>}</p>
    <p>[0044]	这个Activity的任务之一是创建FB刷新线程，另一个任务就是启动Linux那一 边的应用，具体方法是通过Java语言的JNI机制调用其方法startApp，而JNI机制会自动 将其转化成对 C 语言函数 Java_Android_AppProxy_jni_JniMethod_startApp ()的调用：</p>
    <p>[0045]JNIEXPORTjint JNICALL</p>
    <p>Java_Android_AppProxyJni_JniMethod_startApp( JNIEnv *env,</p>
    <p>j class clazz, j byte Array appName)</p>
    <p>{</p>
    <p>先将有关环境变量与appName整合出一个Linux App的全路径名name; pid_t pid = fork(); //创建子进程</p>
    <p>if(pid == 0) {</p>
    <p>//这是被创建的子进程，这个进程将运行Linux App。 system("/bin/sh", "/bin/sh", name, NULL) &lt; 0); kill_proxy()； //使整个代理进程退出运行</p>
    <p>return 1; //这是当前进程本身</p>
    <p>}</p>
    <p>[0046]	这段程序通过Linux的系统调用fork()创建一个子进程，然后让这子进程执行 Linux那一边的具体应用程序，并等待其退出，一旦应用程序推出就使整个代理进程退出运 行，这样就保证了代理进程与应用进程的“同生共死”。</p>
    <p>[0047]	有关的这些程序设计对于Android应用的开发者而言应该没有什么困难，如有困 难可参阅“深入浅出Google Android","Pro Android”等参考书。</p>
    <p>[0048]	注意这里的系统调用systemO要到作为目标的Linux应用退出运行或运行失败 时才会返回，所以一旦程序从systemO返回便退出整个AppProxy的运行。</p>
    <p>[0049]	3、FB刷新线程。</p>
    <p>[0050]	FB刷新线程的实现也很简单，下面给出其伪代码：</p>
    <p>[0051]void fb_flush()</p>
    <p>{</p>
    <p>打开中间文件“/tmp/TinyXfb"; while(l) {</p>
    <p>从中间文件读入其内容至一个缓冲区; 调用由 Android 提供的 drawBitmapO; 睡眠50毫秒；</p>
    <p>[0052]	以上三个方面的实施保证了应用代理AppProxy具有与具体Linux应用基本相同 的生存期，而TinyX的输出都要经过AppProxy才能到达FB和显示屏，由于AppProxy通过 由Android提供的drawBitmap ()访问FB，受到Android的仲裁和协调，这就把TinyX的图 形界面整合进了 Android。</p>
    <p>[0053]	最后，TinyX是X视窗的一个子集，TinyX的源代码是X视窗源代码的一部分，本发 明所述的方法虽以TinyX为目标，但同样也适用于X视窗。</p>
    <p>[0054]	除上述实施例外，本发明还可以有其他实施方式。凡采用等同替换或等效变换形 成的技术方案，均落在本发明要求的保护范围。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101344849A?cl=zh">CN101344849A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2008年8月22日</td><td class="patent-data-table-td patent-date-value">2009年1月14日</td><td class="patent-data-table-td ">四川长虹电器股份有限公司</td><td class="patent-data-table-td ">嵌入式gui环境下实现输入法叠加的方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101853296A?cl=zh">CN101853296A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年5月28日</td><td class="patent-data-table-td patent-date-value">2010年10月6日</td><td class="patent-data-table-td ">华为终端有限公司</td><td class="patent-data-table-td ">管理应用程序的方法和装置</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102331927A?cl=zh">CN102331927A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年6月24日</td><td class="patent-data-table-td patent-date-value">2012年1月25日</td><td class="patent-data-table-td ">浙大网新科技股份有限公司</td><td class="patent-data-table-td ">Wine与安卓手机软键盘输入的整合方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102331927B?cl=zh">CN102331927B</a></td><td class="patent-data-table-td patent-date-value">2011年6月24日</td><td class="patent-data-table-td patent-date-value">2014年6月25日</td><td class="patent-data-table-td ">浙大网新科技股份有限公司</td><td class="patent-data-table-td ">Wine与安卓手机软键盘输入的整合方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102945180A?cl=zh">CN102945180A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年11月29日</td><td class="patent-data-table-td patent-date-value">2013年2月27日</td><td class="patent-data-table-td ">深圳市万兴软件有限公司</td><td class="patent-data-table-td ">一种启动应用程序的方法及装置</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=yXmXBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0009440000">G06F9/44</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=yXmXBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04M0001725000">H04M1/725</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2011年7月20日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2011年8月31日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2014年5月21日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/26eeefda5e5011dfb8c4/CN102129369A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E5%9C%A8Android%E6%89%8B%E6%9C%BA%E4%B8%8A%E6%95%B4%E5%90%88TinxX%E5%9B%BE%E5%BD%A2%E7%95%8C.pdf?id=yXmXBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U2JAw06_72F_1kVOIuHtQZ04Q0I5A"},"sample_url":"https://www.google.com/patents/reader?id=yXmXBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>