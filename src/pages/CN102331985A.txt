<!DOCTYPE html><html><head><title>专利 CN102331985A - 网页页面的分片嵌套缓存的处理方法和装置 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_6e802a6b2b28d51711baddc2f3bec198/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_6e802a6b2b28d51711baddc2f3bec198__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="网页页面的分片嵌套缓存的处理方法和装置"><meta name="DC.contributor" content="岳旭强" scheme="inventor"><meta name="DC.contributor" content="董旗宇" scheme="inventor"><meta name="DC.contributor" content="阿里巴巴集团控股有限公司" scheme="assignee"><meta name="DC.date" content="2010-7-12" scheme="dateSubmitted"><meta name="DC.description" content="本申请提供了一种网页页面的分片嵌套缓存的处理方法和装置，所述包括：当接收到针对网页页面的请求时，获取所述网页页面包括的第一层分片信息；依据所述第一层分片信息依次对第一层分片执行分片解析过程，所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；将所述分片解析过程的结果组合成所述网页的完整的第一层分片内容。本申请实施例可以在对网页页面的分片嵌套缓存，同时在网页页面的分片进行嵌套缓存时还能够递归地获取到各个分片的HTML代码，从而向用户展示出完整的网页内容，弥补了现有技术的一项空白。"><meta name="DC.date" content="2012-1-25"><meta name="DC.relation" content="CN:101539912:A" scheme="references"><meta name="DC.relation" content="CN:101582075:A" scheme="references"><meta name="citation_patent_publication_number" content="CN:102331985:A"><meta name="citation_patent_application_number" content="CN:201010225186"><link rel="canonical" href="https://www.google.com/patents/CN102331985A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102331985A?cl=zh"/><meta name="title" content="专利 CN102331985A - 网页页面的分片嵌套缓存的处理方法和装置"/><meta name="description" content="本申请提供了一种网页页面的分片嵌套缓存的处理方法和装置，所述包括：当接收到针对网页页面的请求时，获取所述网页页面包括的第一层分片信息；依据所述第一层分片信息依次对第一层分片执行分片解析过程，所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；将所述分片解析过程的结果组合成所述网页的完整的第一层分片内容。本申请实施例可以在对网页页面的分片嵌套缓存，同时在网页页面的分片进行嵌套缓存时还能够递归地获取到各个分片的HTML代码，从而向用户展示出完整的网页内容，弥补了现有技术的一项空白。"/><meta property="og:title" content="专利 CN102331985A - 网页页面的分片嵌套缓存的处理方法和装置"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102331985A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102331985A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=9suEBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102331985A&amp;usg=AFQjCNGNXBZewbif1NTEfCBjnCktYsCmzg" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/a7025b40ae758b700bad/CN102331985A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/a7025b40ae758b700bad/CN102331985A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102331985A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102331985A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102331985A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102331985B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102331985A?cl=zh" style="display:none"><span itemprop="description">本申请提供了一种网页页面的分片嵌套缓存的处理方法和装置，所述包括：当接收到针对网页页面的请求时，获取所述网页页面包括的第一层分片信息；依据所述第一层分片信息依次对第一层分片执行分片解析过程，所述分片解...</span><span itemprop="url">https://www.google.com/patents/CN102331985A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102331985A - 网页页面的分片嵌套缓存的处理方法和装置</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102331985A - 网页页面的分片嵌套缓存的处理方法和装置" title="专利 CN102331985A - 网页页面的分片嵌套缓存的处理方法和装置"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102331985 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201010225186</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2012年1月25日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2010年7月12日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2010年7月12日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102331985B?hl=zh-CN&amp;cl=zh">CN102331985B</a>, </span><span class="patent-bibdata-value"><a href="/patents/EP2593882A1?hl=zh-CN&amp;cl=zh">EP2593882A1</a>, </span><span class="patent-bibdata-value"><a href="/patents/US9195638?hl=zh-CN&amp;cl=zh">US9195638</a>, </span><span class="patent-bibdata-value"><a href="/patents/US20130111325?hl=zh-CN&amp;cl=zh">US20130111325</a>, </span><span class="patent-bibdata-value"><a href="/patents/US20150363369?hl=zh-CN&amp;cl=zh">US20150363369</a>, </span><span class="patent-bibdata-value"><a href="/patents/WO2012009191A1?hl=zh-CN&amp;cl=zh">WO2012009191A1</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201010225186.2, </span><span class="patent-bibdata-value">CN 102331985 A, </span><span class="patent-bibdata-value">CN 102331985A, </span><span class="patent-bibdata-value">CN 201010225186, </span><span class="patent-bibdata-value">CN-A-102331985, </span><span class="patent-bibdata-value">CN102331985 A, </span><span class="patent-bibdata-value">CN102331985A, </span><span class="patent-bibdata-value">CN201010225186, </span><span class="patent-bibdata-value">CN201010225186.2</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%B2%B3%E6%97%AD%E5%BC%BA%22">岳旭强</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E8%91%A3%E6%97%97%E5%AE%87%22">董旗宇</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E9%9B%86%E5%9B%A2%E6%8E%A7%E8%82%A1%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">阿里巴巴集团控股有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102331985A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102331985A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102331985A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (2),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (9),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (5)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=9suEBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201010225186&amp;usg=AFQjCNGX5jCStBsupUxaNhsWw_iYToupSg"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=9suEBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102331985A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNHJZ4b5gwFsJoe0ELZTU-6BzUYciw"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT110164011" lang="ZH" load-source="patent-office">网页页面的分片嵌套缓存的处理方法和装置</invention-title>
      </span><br><span class="patent-number">CN 102331985 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA92391963" lang="ZH" load-source="patent-office">
    <div class="abstract">本申请提供了一种网页页面的分片嵌套缓存的处理方法和装置，所述包括：当接收到针对网页页面的请求时，获取所述网页页面包括的第一层分片信息；依据所述第一层分片信息依次对第一层分片执行分片解析过程，所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；将所述分片解析过程的结果组合成所述网页的完整的第一层分片内容。本申请实施例可以在对网页页面的分片嵌套缓存，同时在网页页面的分片进行嵌套缓存时还能够递归地获取到各个分片的HTML代码，从而向用户展示出完整的网页内容，弥补了现有技术的一项空白。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(13)</span></span></div><div class="patent-text"><div mxw-id="PCLM39650211" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种网页页面的分片嵌套缓存的处理方法，其特征在于，包括：当接收到针对网页页面的请求时，获取所述网页页面包括的第一层分片信息； 依据所述第一层分片信息依次对第一层分片执行分片解析过程，所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；将所述分片解析过程的结果组合成所述网页的完整的第一层分片内容。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的方法，其特征在于，所述获取所述网页页面包括的第一层分片信息，具体包括：获取所述网页的统一资源定位符URL ；依据所述网页的URL查询得到该网页的模板；获得该网页的模板中第一层分片对应的分片名称和分片参数。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求2所述的方法，其特征在于，所述依据所述第一层分片的嵌套信息对所述第一层分片进行渲染，具体包括：依次依据第一层分片的分片名称和分片参数获取所述第一层分片的HTML代码和嵌套 fn息；依据所述嵌套信息判断所述第一层分片是否包括第二层分片；如果是，则对所述第二层分片进行递归渲染处理；继续判断所述第二层分片是否包括第三层分片，如果是，则对所述第三层分片进行所述递归渲染处理，直至最后判断得到第N层分片不再包括其他分片为止，所述N为大于3的整数，如果否，则结束渲染过程；所述递归渲染处理的方式为：在待处理分片的上一层分片上生成所述待处理分片的占位符；依据所述待处理分片的分片名称和分片参数，获取所述待处理分片的上一层分片的 HTML代码；将所述待处理分片的HTML代码替换所述待处理分片的占位符。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求3所述的方法，其特征在于，所述依次依据第一层分片的分片名称和分片参数获取所述第一层分片的HTML代码，具体包括：从配置服务器中查询所述第一层分片的缓存信息，所述缓存信息包括分片是否需要缓存的信息；依据所述第一层分片的缓存信息判断第一层分片是否需要缓存，如果是，则将所述第一层分片的分片名称和分片参数进行哈希运算以得到第一层分片的分片标识ID ；并依据所述分片ID从缓存系统中查找与该分片ID对应的第一层分片的HTML代码； 如果否，则由WEB服务器的业务系统查找该分片ID对应的HTML代码。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求4所述的方法，其特征在于，如果所述第一层分片需要缓存而所述缓存系统中不包括所述第一层分片的HTML代码，还包括：由WEB服务器的业务系统查找该分片ID对应的HTML代码；将所述查找得到的HTML代码及其与所述分片ID的对应关系缓存至缓存系统中。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求4所述的方法，其特征在于，所述缓存信息还包括需要缓存的分片的缓存时间长度信息，则所述方法还包括：当在所述缓存时间长度内某个分片的内容发生变化时，按照所述分片的分片名称和分片参数进行哈希运算以得到该分片的分片ID ；按照所述分片ID在缓存系统中查找并删除与该ID对应的HTML代码。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求5所述的方法，其特征在于，如果还包括头缓存，则所述方法还包括： 将所述分片的HTML代码对应的头HEADER的值缓存至所述缓存系统中。</div>
    </div>
    </div> <div class="claim"> <div num="8" class="claim">
      <div class="claim-text">8.	&#8212;种网页页面的缓存处理方法，其特征在于，包括： 接收到针对网页页面的请求；判断请求的所述网页页面是否需要进行全页缓存，如果需要，则对所述网页页面直接进行渲染，以获取所述网页页面的内容；如果不需要，则获取所述网页页面包括的第一层分片信息；依据所述第一层分片信息依次对第一层分片执行分片解析过程，所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；将所述分片解析过程的结果组合成所述网页的完整的第一层分片内容。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.根据权利要求8所述的方法，其特征在于，所述判断请求的所述网页页面是否需要进行全页缓存，具体包括：获取所述网页页面的URL，并依据所述URL查找预置的缓存信息，所述缓存信息包括所述网页页面是否需要进行全页缓存的信息，以及所述网页页面的缓存时间长度信息。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.根据权利要求9所述的方法，其特征在于，对所述网页页面直接进行渲染，具体包括：在所述缓存时间长度还未到达时，将所述网页页面的URL与页面参数生成32位的页面ID ；依据所述页面ID从缓存系统中查找对应的页面HTML代码。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="11" class="claim">
      <div class="claim-text">11.根据权利要求10所述的方法，其特征在于，如果查询不到HTML代码，则所述方法还包括：由WEB服务器中的业务系统查找该页面ID对应的HTML代码；将所述查找得到的HTML代码及其与所述页面ID的对应关系缓存至缓存系统中。</div>
    </div>
    </div> <div class="claim"> <div num="12" class="claim">
      <div class="claim-text">12.	一种网页页面的分片嵌套缓存的处理装置，其特征在于，该装置包括：获取模块，用于当接收到针对网页页面的请求时，获取所述网页页面包括的第一层分片信息；分片解析模块，用于依据所述第一层分片信息依次对第一层分片执行分片解析过程， 所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；组合拼装模块，用于将所述渲染的渲染结果组合成所述网页的完整的第一层分片内容。</div>
    </div>
    </div> <div class="claim"> <div num="13" class="claim">
      <div class="claim-text">13.	&#8212;种网页页面的缓存处理装置，其特征在于，该装置包括： 接收网页页面请求模块，用于接收针对网页页面的请求；判断模块，用于判断所述请求的网页页面是否需要进行全页缓存； 直接渲染模块，用于当所述判断模块的结果为是时，对所述网页页面直接进行渲染，以获取所述网页页面的内容；嵌套缓存处理装置，用于当所述判断模块的结果为否时，获取所述网页页面包括的第一层分片信息；依据所述第一层分片信息依次对第一层分片执行解析过程，所述解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；将所述渲染的渲染结果组合成所述网页的完整的第一层分片内容。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES45157742" lang="ZH" load-source="patent-office" class="description">
    <p>网页页面的分片嵌套缓存的处理方法和装置</p>
    <p>技术领域</p>
    <p>[0001]	本申请涉及网络数据处理领域，特别涉及网页（WEB)页面的分片嵌套缓存的处理方法和装置。</p>
    <p>背景技术</p>
    <p>[0002]	在用户向网页服务器第一次请求网页页面时，为了提高访问网页的速度，通常网络资源浏览器（例如IE浏览器）会采用累积式加速的方法，将用户曾经访问的网页内容 (包括图片以及cookie文件等）存放在电脑里，电脑里的这个存放空间，被称为IE缓存空间。以后每次访问网页时，IE浏览器会首先搜索这个缓存空间，如果其中已经缓存当前访问的内容，那IE浏览器就不必从网上下载这部分内容，而是直接从缓存读取，以提高访问网页的速度。</p>
    <p>[0003]	对于网页的缓存目前现有技术中有两种方式，一种是全页缓存，指针对访问的网页整个页面进行缓存；另一种是分片缓存，指将访问的网页页面划分成若干部分的分片，例如，某个分片为图片信息，某个分片为文字信息等，然后针对某一分片的内容进行缓存。</p>
    <p>[0004]	但是，有一些网页的分片之间因为其内容相关，所以有时候需要在某些分片之间实现嵌套缓存，例如，嵌套形式分片A包括分片B，而分片B又包括分片C的形式，对于分片 A需要缓存，B不需要缓存，C又需要缓存的形式，现有技术无法实现。</p>
    <p>[0005]	目前，需要本领域技术人员迫切解决的一个技术问题就是：如何能够创新地提出一种网页页面的分片嵌套缓存的处理方法，以解决现有技术中无法实现分片嵌套缓存及其后续递归处理的技术问题。</p>
    <p>发明内容</p>
    <p>[0006]	本申请所要解决的技术问题是提供一种页面缓存的处理方法，用以解决现有技术中无法实现分片嵌套缓存及其后续递归处理的技术问题。</p>
    <p>[0007]	本申请还提供了一种页面缓存的处理装置，用以保证上述方法在实际中的实现及应用。</p>
    <p>[0008]	为了解决上述问题，本申请公开了一种页面缓存的处理方法，包括：</p>
    <p>[0009]	当接收到针对网页页面的请求时，获取所述网页页面包括的第一层分片信息；</p>
    <p>[0010]	依据所述第一层分片信息依次对第一层分片执行分片解析过程，所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；</p>
    <p>[0011]	将所述分片解析过程的结果组合成所述网页的完整的第一层分片内容。</p>
    <p>[0012]	本申请还公开了一种网页页面的缓存处理方法，包括：</p>
    <p>[0013]	接收到针对网页页面的请求；</p>
    <p>[0014]	判断请求的所述网页页面是否需要进行全页缓存，如果需要，则对所述网页页面直接进行渲染，以获取所述网页页面的内容；[0015]	如果不需要，则获取所述网页页面包括的第一层分片信息；依据所述第一层分片信息依次对第一层分片执行分片解析过程，所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；将所述分片解析过程的结果组合成所述网页的完整的第一层分片内容。</p>
    <p>[0016]	本申请公开了一种网页页面的分片嵌套缓存的处理装置，包括：</p>
    <p>[0017]	获取模块，用于当接收到针对网页页面的请求时，获取所述网页页面包括的第一层分片信息；</p>
    <p>[0018]	分片解析模块，用于依据所述第一层分片信息依次对第一层分片执行分片解析过程，所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；</p>
    <p>[0019]	组合拼装模块，用于将所述渲染的渲染结果组合成所述网页的完整的第一层分片内容。</p>
    <p>[0020]	本申请还提供了一种网页页面的缓存处理装置，该装置包括：</p>
    <p>[0021]	接收网页页面请求模块，用于接收针对网页页面的请求；</p>
    <p>[0022]	判断模块，用于判断所述请求的网页页面是否需要进行全页缓存；</p>
    <p>[0023]	直接渲染模块，用于当所述判断模块的结果为是时，对所述网页页面直接进行渲染，以获取所述网页页面的内容；</p>
    <p>[0024]	嵌套缓存处理装置，用于当所述判断模块的结果为否时，获取所述网页页面包括的第一层分片信息；依据所述第一层分片信息依次对第一层分片执行解析过程，所述解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；将所述渲染的渲染结果组合成所述网页的完整的第一层分片内容。</p>
    <p>[0025]	与现有技术相比，本申请包括以下优点：</p>
    <p>[0026]	在本申请实施例中，可以在对网页页面的分片嵌套缓存，同时在网页页面的分片进行嵌套缓存时还能够递归地获取到各个分片的HTML代码，从而向用户展示出完整的网页内容，弥补了现有技术的一项空白。在本实施例中，缓存系统可以采用分布式集群服务器来实现，所述分布式集群服务器可以采用水平扩容的方式，增加充当缓存系统的服务器台数，这样就可以实现某一台服务器存储了分片的HTML代码之后，其他的分布式集群服务器就不再进行存储。同时采用本申请实施例的技术方案，可以实现分片之间不限层数的递归嵌套，同时也可以将每个分片的缓存时间设置为不相同的。当然，实施本申请的任一产品并不一定需要同时达到以上所述的所有优点。</p>
    <p>附图说明</p>
    <p>[0027]	为了更清楚地说明本申请实施例中的技术方案，下面将对实施例描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本申请的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动性的前提下，还可以根据这些附图获得其他的附图。</p>
    <p>[0028]	图1是本申请实施例中所涉及到的系统框架图；</p>
    <p>[0029]	图2是本申请的一种页面缓存的处理方法实施例一的流程图；[0030]	图3是本申请的一种页面缓存的处理方法实施例二的流程图；</p>
    <p>[0031]	图4是本申请方法实施例二中步骤304的流程图；</p>
    <p>[0032]	图5是本申请方法实施例二中第一层分片的分片名称示意图；</p>
    <p>[0033]	图6是本申请的一种页面缓存的处理方法实施例三的流程图；</p>
    <p>[0034]	图7是本申请的一种页面缓存的处理方法实施例四的流程图；</p>
    <p>[0035]	图8是本申请的一种页面缓存的处理方法实施例五的流程图；</p>
    <p>[0036]	图9是本申请的一种页面缓存的处理装置实施例六的结构框图；</p>
    <p>[0037]	图10是本申请的一种页面缓存的处理装置实施例七的结构框图；</p>
    <p>[0038]	图11是本申请装置实施例七中获取嵌套信息子模块1004的结构框图；</p>
    <p>[0039]	图12是本申请的一种页面缓存的处理装置实施例八的结构框图；</p>
    <p>[0040]	图13是本申请的一种页面缓存的处理装置实施例九的结构框图；</p>
    <p>[0041]	图14是本申请的一种页面缓存的处理装置实施例十的结构框图。</p>
    <p>具体实施方式</p>
    <p>[0042]	下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员所获得的所有其他实施例，都属于本申请保护的范围。</p>
    <p>[0043]	本申请可用于众多通用或专用的计算装置环境或配置中。例如：个人计算机、服务器计算机、手持设备或便携式设备、平板型设备、多处理器装置、包括以上任何装置或设备的分布式计算环境等等。</p>
    <p>[0044]	本申请可以在由计算机执行的计算机可执行指令的一般上下文中描述，例如程序模块。一般地，程序模块包括执行特定任务或实现特定抽象数据类型的例程、程序、对象、组件、数据结构等等。也可以在分布式计算环境中实践本申请，在这些分布式计算环境中，由通过通信网络而被连接的远程处理设备来执行任务。在分布式计算环境中，程序模块可以位于包括存储设备在内的本地和远程计算机存储介质中。</p>
    <p>[0045]	本申请的主要思想之一可以包括，预先设置网页页面的各个分片的嵌套信息和缓存信息，所述嵌套信息为分片是否包括其他分片的信息；所述各个分片与对应的嵌套信息可保存在WEB服务器的网页模板中，在对当前分片解析时一并从网页模板中读取得到该嵌套信息。在所述网页模板中的信息还可包括分片名称和分片参数，所述分片名称可以标识出每一个分片，而分片参数是根据业务确定的。所述业务是指用户的某种需求，而实现用户某种需求的功能就是具体的业务。所述缓存信息为所述分片是否需要缓存的信息，以及需要缓存的分片的缓存时间长度信息。所述缓存信息可以保存在配置服务器中，在网页页面进行缓存或者网页页面的分片进行嵌套缓存时，可以从所述配置服务器中动态获得所述缓存信息。本申请中在接收到针对某个网页页面的请求时，首先可以判断所述网页页面是否需要进行全页缓存，如果需要，则对所述网页页面直接进行渲染，以获取所述网页页面的内容；如果不需要，则获取所述网页页面包括的第一层分片信息；依据所述第一层分片信息依次对第一层分片执行解析过程，所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信</p>
    <p>7息；将所述分片解析过程的结果组合成所述网页的完整的第一层分片内容。</p>
    <p>[0046]	需要说明的是，在本申请实施例中，所提及的网页页面包括的分片，可以允许至少具有两层的分片，并且各层分片可以有一个或多个，其中，所述第一层分片与第二层分片是父子关系，但是并不一定是所有的第一层分片都会包括第二层分片，也可以是其中的一个或者多个第一层分片包括第二层分片。其中所述第二层分片还可以包括第三层分片，依此类推，本申请实施例中将这种嵌套关系称为递归嵌套。并且本申请实施例中的各个层次的分片之间的缓存信息是相互独立的，例如，可以预先将当前层分片设置为需要缓存，而其下一层的子分片设置为不需要缓存，并且该下一层的子分片的子分片又可以设置为需要缓存等。缓存信息都可以预先设置好并存贮在配置服务器中，当然，配置服务器中的这些设置好的缓存信息在后续使用过程中也可以实时更新。</p>
    <p>[0047]	参考图1所示，为本申请实施例中所涉及到的系统框架图，用户向网页服务器请求网页，所述缓存处理装置可以集成在WEB服务器上。所述缓存处理装置可以是WEB服务器新增的一个功能实体，也可以是单独作为一个功能实体来实现，该缓存处理装置可以执行本申请实施例中对网页的分片嵌套缓存时的递归处理方法。缓存系统用于存储各个分片或页面的HTML代码，缓存处理装置可以向所述缓存系统请求分片或者页面的HTML代码，如果缓存系统中未包括分片或页面的HTML代码，则TOB服务器中的业务系统负责提供该分片或者页面的HTML代码，所述业务系统可以理解为TOB服务器中完成某个用户请求业务的若干个模块组成的当前系统。</p>
    <p>[0048]	需要说明的是，本申请在实际应用中，也可以不采用缓存系统来缓存HTML代码， 而是直接在客户端进行本地保存，例如，直接缓存至客户端的计算机内存中，此时客户端和 WEB服务器之间直接进行HTML代码的交互，如果客户端在本地查找不到对应分片或者页面的HTML代码，则触发TOB服务器的业务系统进行查找，如果客户端在本地查找到相应的 HTML代码，则直接在用户请求的网页页面上进行显示。不过因为此种方式对本地内存或者计算机的性能要求较高，并且网页页面的种类非常繁多，因此，一般采用单独的分布式集群服务器来作为本申请实施例中的缓存系统。</p>
    <p>[0049]	本申请实施例中的系统框架还可以包括配置服务器，所述配置服务器可以向所述缓存处理装置提供各个分片的缓存信息，但是在本申请实现过程中也可以不需要该配置服务器，此时所述缓存信息可以在WEB服务器中预先给每个分片都一次性设置完毕，类似于分片的固定参数不可改变，而此时缓存系统的各个分片的缓存信息就无法动态修改。</p>
    <p>[0050]	在本申请的实施例中，所述缓存信息可以采用文本方式实现，也可以将缓存信息封装成程序中的对象。当把缓存信息封装成程序中的对象时，这样可以使得当前分片是否包括了其他分片的嵌套方式或者某个嵌套中是否有死循环，都可以从THREAD_L0CAL中获取相应的缓存信息进行判断即可。所述THREAD_L0CAL为TOB服务器的一个线程级别的变量，可以在某一个请求过程中从配置服务器中向缓存处理装置提供缓存信息。</p>
    <p>[0051]	采用本申请实施例中的网页页面缓存的处理方法，即可以实现现有技术中可以实现的全页缓存，也可以实现现有技术中无法实现的网页页面的分片嵌套缓存，弥补了现有技术的缺陷。</p>
    <p>[0052]	实施例一</p>
    <p>[0053]	图2示出了本申请一种页面缓存的处理方法实施例一的流程图，可以包括以下步骤：</p>
    <p>[0054]	步骤201 ：当接收到针对网页页面的请求时，获取所述网页页面包括的第一层分</p>
    <p>片fn息。</p>
    <p>[0055]	在本实施例中，网页页面如果确定了，该网页页面包括的第一层分片信息也可以确定，因为同一个网页页面的分片格式是相同的，即该网页页面需要划分为哪几个分片，这些分片的位置和名称等信息。其中，每一个分片在网页页面上实质上都是一个占位符，这个占位符可以在任何其他网页页面上使用，只有当最后渲染出该分片结果的时候才会将占位符替换成分片的具体内容。一般情况下，所述分片的具体内容指的是该分片的具体内容对应的超文本标记语言(HyperText Mark-up Language, HTML)代码。</p>
    <p>[0056]	在本实施例中，所述网页页面包括的分片可以嵌套缓存，所述嵌套缓存的含义可以理解为，如果第一层分片A包括第二层分片B，且该第二层分片B也包括第三层分片C，则依据对分片A、B和C预置的缓存信息，来实现对分片A和C缓存，而分片B不缓存的功能。 但是不管第一层分片有没有包括其他分片，在本步骤获取到的都是第一层分片信息，而后续在对该第一层分片进行解析时，才能依次获取到分片的嵌套信息。</p>
    <p>[0057]	步骤202 ：依据所述第一层分片信息依次对第一层分片执行分片解析过程，所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息。</p>
    <p>[0058]	获得所述网页页面的第一层分片信息之后，执行对第一层分片的解析过程。因为在解析分片的过程中，可以从配置服务器中动态获取到所述各个第一层分片的嵌套信息， 即是当前第一层分片是否包括了第二层分片的信息，以及所包括的第二层分片信息。在本步骤中，需要对所有的第一层分片都进行解析，其中，各个第一层分片的解析过程可以同时执行，也可以先后执行，其执行顺序不影响本申请实施例的实现。</p>
    <p>[0059]	其中，本步骤提及的渲染过程为，依据第一层分片的分片名称和分片参数查找所述第一层分片的具体内容对应的HTML代码的。其中，该渲染过程和现有技术中的渲染过程类似，在此就不再多做介绍。</p>
    <p>[0060]	步骤203 ：将所述渲染的渲染结果组合成所述网页的完整的第一层分片内容。</p>
    <p>[0061]	在本步骤中，当第一层分片不包括其他分片时，则渲染结果即是该第一层分片的 HTML代码；当第一层分片包括第二层分片时，或者第二层分片又包括了第三层分片时，甚至按照递归的方式直至第N-I层分片包括第N层分片，则第一层分片的渲染结果则是包括了第二层至第N层分片的HTML代码，因此，可以将所述第一层分片的渲染内容组合生成该网页的第一层分片内容。</p>
    <p>[0062]	实施例二</p>
    <p>[0063]	图3示出了本申请一种页面缓存的处理方法实施例二的流程图，可以包括以下步骤：</p>
    <p>[0064]	步骤301 ：当接收到针对网页页面的请求时，获取所述网页的统一资源定位符 (URL)。</p>
    <p>[0065]	在本步骤中，在接收到某个网页页面的请求时，首先获取到该网页对应的统一资源定位符（Uniform/Universal Resource Locator，URL)。以某网络交易平台中“宝贝详情” 页面为例，假设该“宝贝详情”页面的URL地址为：xxx. XXX. com/detail, html ？ id = 123。</p>
    <p>9[0066]	步骤302 ：依据所述网页的URL查询得到该网页的模板。</p>
    <p>[0067]	因为每一个网页都有唯一的URL，同时每一个网页也都有一个模板，所以依据所述网页的URL即可知道该网页页面所采用的模板。假设“宝贝详情”页面的模板信息为 "detail, vm”，在本步骤中根据“宝贝详情”的页面地址得到模板信息为“detail, vm”。</p>
    <p>[0068]	需要说明的是，每个页面所采用的模板即可以是独立的，也可以是多个页面共用的。页面在采用模板时需要将模板中规定的分片部分进行填充。</p>
    <p>[0069]	步骤303 ：获得该网页的模板中第一层分片对应的分片名称和分片参数。</p>
    <p>[0070]	当网页的模板确定之后，相应地确定了该模板对应的页面的分片格式。本申请与现有技术不同的是，本申请中网页页面不仅包括第一层分片，而且其包括的第一层分片还可以递归的包括至少一层分片。但是在本步骤通过网页页面所获得的分片仅仅为第一层分片对应的分片名称和分片参数。其中，所述分片参数是根据业务确定的，所述业务是指用户的某种需求，而实现用户某种需求的功能就是具体的业务。以“掌柜信息”为例，其分片参数就是卖家的用户ID ；以“宝贝详情”页面为例时，其分片参数就是宝贝的信息和卖家的用户ID。</p>
    <p>[0071]	在一个模板中引入某个分片，可通过如下方式实现：例如，分片名称为“掌柜信息”，而模板名称为“宝贝详情”，则如果在“宝贝详情”中引用“掌柜信息”分片，则代码如下：</p>
    <p>[0072]	control, set ( "userlnfo"). addPrams ( "userld，，，1234)</p>
    <p>[0073]	其中，“ addPrams ”中的内容即是对应的分片“掌柜信息”的分片参数，其中的 userld即是用户ID，为“1234”；而“control, set ( “useHnfo”）”则表示在宝贝详情模板中引用了这个分片。当然，该代码的实现仅仅是一个具体例子，其所公开的内容不应理解为对本申请的限定。</p>
    <p>[0074]	步骤304 ：依据第一层分片的分片名称和分片参数获得所述第一层分片的嵌套信息，并依据所述第一层分片的嵌套信息获得所述第一层分片的HTML代码；所述嵌套信息为当前分片是否包括其他分片的信息。</p>
    <p>[0075]	在步骤304中，当获得所述第一层分片的分片名称和分片参数时，可以获得该第一层分片嵌套信息和HTML代码。具体地，所述嵌套信息可以从配置服务器中获得，而配置服务器也可以向WEB服务器中的缓存处理装置发送。分片对应的HTML代码可以是网页页面将要显示的图片、文字等信息，而该分片及其对应的HTML代码都可以被其他网页页面的模板所共用。例如，对于网络交易平台中的卖方用户的“宝贝详情”页面的“掌柜信息”分片，其与“店铺页面”的“掌柜信息”分片就属于同一个分片。</p>
    <p>[0076]	同时，在获取所有的第一层分片的HTML代码的时候，参考图4所示，该获取第一层分片的HTML代码的步骤可以包括：</p>
    <p>[0077]	步骤401 ：从配置服务器中查询所述第一层分片的缓存信息，所述缓存信息包括分片是否需要缓存的信息，以及需要缓存的分片的缓存时间长度信息。</p>
    <p>[0078]	在所述配置服务器中保存着网页页面的各个层的分片的缓存信息，所述缓存信息包括分片是否需要缓存的信息，以及需要缓存的分片的缓存时间长度信息。所述缓存时间长度信息用于表示当前分片的在缓存系统中的有效时间，当分片在缓存系统中的缓存时间超过所述时间长度时，该分片就会失效，所述缓存系统中就不会再有该分片的具体内容。所述缓存信息可以是预先设置好的。当然，后续如果需要对某个分片的缓存信息进行更改时， 也可以直接对配置服务器中保存的信息进行更改即可，这样从配置服务器中查询得到的就是最新的缓存信息。对于缓存信息的实现，可以采用“1”来表示当前分片需要保存，并采用 “0”来表示当前分片不需要保存；对于缓存时间长度信息的实现，可以采用直接将时间长度信息与所述分片名称或者分片参数信息等进行关联即可。当然，缓存信息的实现可以在实际应用中有多种方式，本申请实施例无需对此做出特别的限定。</p>
    <p>[0079]	需要说明的是，因为缓存失效的时间是由缓存系统控制，单独对于缓存处理装置来讲，在执行本申请实施例的过程中并不知道当前处理的页面或者分片还有多久才会失效，所以在查询缓存系统时，如果查询不到的话就证明当前分片的内容已经失效了。</p>
    <p>[0080]	步骤402 ：依据所述第一层分片的缓存信息判断第一层分片是否需要缓存；如果是，则进入步骤403 ；如果否，则进入步骤404。</p>
    <p>[0081]	针对步骤401中所举的例子来讲，如果获取到的表示分片是否需要缓存的信息为 “ 1”，则认为该分片的判断结果是需要缓存。</p>
    <p>[0082]	步骤403 ：将所述第一层分片的分片名称和分片参数进行哈希运算以得到第一层分片的分片标识（ID)；并依据所述分片ID从缓存系统中查找与该分片ID对应的第一层分片的HTML代码，进入步骤405。</p>
    <p>[0083]	其中，所述第一层分片的分片名称可以参考图5所示，所述网页页面的第一层分片包括分片A “宝贝描述”、分片B “导航”、分片C “掌柜信息”以及分片D “店铺类目”。其中，第一层分片C “掌柜信息”还包括第二层分片Cl “掌柜信用度”。</p>
    <p>[0084]	在本步骤中，可以将第一层分片的分片名称和分片参数进行哈希（HASH)运算，运算的结果即是所述第一层分片的分片ID，该ID &#8212;般情况下为32位。依据该32位的分片 ID，可以从缓存系统中查找获取到该分片ID对应的HTML代码，而缓存系统中则保存着各个分片ID与HTML代码之间的对应关系和该HTML代码。</p>
    <p>[0085]	需要说明的是，在对第一层分片进行渲染时，其具体方式为：先将该第一层分片在网页上的位置生成一个占位符，并获取对应的HTML代码，获得之后将该HTML代码替换所述第一层分片的占位符。在对分片进行渲染时，不管其处于网页的哪一层，都可以按照上述方式进行渲染。其中，所述占位符可以理解为该分片的一个位置，后续可以在该位置中添加内容。</p>
    <p>[0086]	步骤404 ：由TOB服务器中的业务系统查找该第一层分片的分片ID对应的HTML代码，进入步骤405。</p>
    <p>[0087]	当某个分片标识为不需要缓存时，需要由TOB服务器中的业务系统来进行当前分片的渲染，渲染结果就是当前分片的HTML代码。具体的，是由所述业务系统的渲染模块从数据库或者搜索引擎或者文件系统中查找该分片ID对应的HTML代码。</p>
    <p>[0088]	步骤405 ：依据第一层分片预置的嵌套信息判断所述第一层分片是否包括第二层分片；如果是，则进入步骤406 ；如果否，则结束对第一层分片的渲染过程。</p>
    <p>[0089]	在本步骤可依据嵌套信息来判断当前解析的第一层分片是否包括第二层分片。</p>
    <p>[0090]	步骤406 ：对所述第二层分片进行递归渲染处理，所述递归渲染处理的方式为：在待处理分片的上一层分片上生成所述待处理分片的占位符；依据所述待处理分片的分片名称和分片参数，获取所述待处理分片的HTML代码；将所述待处理分片的HTML代码替换所述待处理分片的占位符，进入步骤407。</p>
    <p>[0091]	本步骤是在第一层分片包括第二层分片时，实现对第二层分片的递归渲染处理， 即是在第一层分片上首先生成第二层分片的占位符，然后依据第二层分片的分片名称和分片参数，采用相同的方式获取所述第二层分片的HTML代码，其中，所述采用相同的方式的含义为：对所述第二层分片的分片名称和分片参数进行哈希运算以得到32位的第二层分片ID，当所述第二层分片需要缓存时，则依据该ID到缓存系统中查询获取对应的HTML代码，如果该缓存系统中没有对应的HTML代码，或者所述第二层分片是不需要缓存的，则依据业务性能从数据库中或者从互联网上获取到对应的HTML代码，查找之后再将所述第二层分片的占位符部分替换为所述第二层分片的HTML代码。</p>
    <p>[0092]	步骤407 ：继续判断所述第二层分片是否包括第三层分片，如果是，则进入步骤 408 ；如果否，则结束第二层分片的渲染流程。</p>
    <p>[0093]	在对所述第二层分片的HTML代码查找结束之后，则继续判断所述第二层分片是否包括第三层分片，如果第二层分片不再包括第三层分片，则结束第二层分片的渲染过程。</p>
    <p>[0094]	更具体的来讲，如果第二层分片继续包含第三层分片的话，先将第二层分片的内容进行渲染，同时将第三层分片的部分在第二层分片上生成占位符，然后再渲染第三层分片，并将第三层分片的渲染内容填充进该第二层分片的占位符中，所得到的结果即是第二层分片的HTML代码。以上面掌柜信息的例子来讲，“掌柜信息”分片中包含“信用度”分片， 那么在递归渲染处理的时候，先将“掌柜信息”分片的信息渲染，“信用度”分片在“掌柜信息”分片上的位置先设置为占位符，然后再渲染该“信用度”分片，并将“信用度”分片的渲染内容填充进“掌柜信息”分片的占位符中，最后返回“掌柜信息”分片的渲染结果。</p>
    <p>[0095]	步骤408 ：对所述第三层分片进行所述递归渲染处理，直至最后判断得到第N层分片不再包括其他分片为止，所述N为大于3的整数。</p>
    <p>[0096]	在本步骤，按照对第一层分片和第二层分片所做的递归渲染处理，直至最后判断得到第N层分片不再包括其他层级的分片位置，所述N为大于3的整数。</p>
    <p>[0097]	步骤305 ：将获取到的所有的第一层分片的HTML代码组合成所述网页的完整的第一层分片内容。</p>
    <p>[0098]	在本步骤中，需要将对第一层分片进行渲染的渲染结果进行组合，所述渲染结果即是第一层分片的HTML，如果第一层分片还递归的包括了至少一层分片，则所述第一层分片的渲染结果还包括所述至少一层分片的HTML代码，此步骤中需要将所述各个分片的 HTML代码组合形成所述网页的完整的第一层分片内容。</p>
    <p>[0099]	步骤306 ：将所述完整的第一层分片内容在客户端的网页上向用户进行展示。</p>
    <p>[0100]	将组合成的完整的第一层分片的内容在客户端的网页上向用户进行展示，展示结果即是用户看到的网页内容。</p>
    <p>[0101]	本实施例中，可以在对网页页面的分片嵌套缓存，同时在网页页面的分片进行嵌套缓存时还能够递归地获取到各个分片的HTML代码，从而向用户展示出完整的网页内容， 弥补了现有技术的一项空白。</p>
    <p>[0102]	实施例三</p>
    <p>[0103]	参考图6，示出了本申请一种页面缓存的处理方法实施例三的流程图，本实施例可以理解为将本申请的页面缓存的处理方法应用于实际中的一个具体例子，可以包括以下步骤：</p>
    <p>[0104]	步骤601 ：当接收到针对网页页面的请求时，获取所述网页页面包括的第一层分</p>
    <p>片fn息。</p>
    <p>[0105]	步骤602 ：从配置服务器中查询所述第一层分片的缓存信息，所述缓存信息包括分片是否需要缓存的信息，以及需要缓存的分片的缓存时间长度信息。</p>
    <p>[0106]	步骤603 ：依据所述第一层分片的缓存信息判断第一层分片是否需要缓存，如果是，则进入步骤604 ；如果否，则进入步骤605。</p>
    <p>[0107]	步骤604 ：将所述第一层分片的分片名称和分片参数进行哈希运算以得到第一层分片的分片标识ID ；依据所述分片ID从缓存系统中查找与该分片ID对应的第一层分片的 HTML代码，如果查找到该HTML代码，则进入步骤606 ；如果没有查找到对应的HTML代码，则进入步骤605。</p>
    <p>[0108]	在本步骤中，虽然所述第一层分片是需要缓存的，但是所述缓存系统中却可能查询不到所述第一层分片对应的HTML代码。例如，当所述第一层分片的缓存时间已到，所述缓存的第一层分片的内容失效，这种情况下就可能查询不到。其中，所述各个层的分片的缓存时间是预先设置好的，也可以存储在配置服务器中。</p>
    <p>[0109]	步骤605 ：由TOB服务器的业务系统负责查找该分片ID对应的HTML代码。</p>
    <p>[0110]	步骤606 ：当第一层分片需要缓存而缓存系统中却不存在该分片的HTML代码时， 将所述查找得到的HTML代码及其与所述分片ID的对应关系缓存至缓存系统中。</p>
    <p>[0111]	在本步骤中，第一层分片需要缓存的HTML代码却没有被存储进缓存系统中，因此在执行步骤605之后，可以将查找到的HTML代码存储到缓存系统中。而如果第一层分片不需要缓存，那么查找到该第一层分片的HTML代码时，就无需存储到缓存系统中。</p>
    <p>[0112]	需要说明的是，步骤606虽然在步骤605之后，但是步骤606只有在第一层分片需要缓存的HTML代码没有被存储进缓存系统时才执行，因此步骤606并不是本实施例所必须的步骤。</p>
    <p>[0113]	步骤607 ：依据预置的嵌套信息判断所述第一层分片是否包括第二层分片；如果是，则对所述第二层分片进行递归渲染处理，所述递归渲染处理的方式为：在待处理分片的上一层分片上生成所述待处理分片的占位符；依据所述待处理分片的分片名称和分片参数，获取所述待处理分片的上一层分片的HTML代码；将所述待处理分片的HTML代码替换所述待处理分片的占位符。</p>
    <p>[0114]	步骤608 ：继续判断所述第二层分片是否包括第三层分片，如果是，则对所述第三层分片进行所述递归渲染处理，直至最后判断得到第N层分片不再包括其他分片为止，所述N为大于3的整数，如果否，则结束渲染过程。</p>
    <p>[0115]	本实施例中的步骤607和步骤608在上一个实施例中都进行了详细的描述，因为本实施例的实现方式与上一个实施例相同，因此此处不再赘述。</p>
    <p>[0116]	步骤609 ：当某个分片的内容发生变化时，按照所述分片的分片名称和分片参数进行哈希运算以得到该分片的分片ID。</p>
    <p>[0117]	在本实施例中，所述步骤609和步骤610可以实现对缓存系统中所存储的分片的 HTML代码实现主动失效的功能。主动失效的含义为，即便某个分片的缓存时间还未过期，也可通过执行步骤609和610将缓存系统中该分片对应的HTML代码删除。[0118]	步骤610 ：按照所述分片ID，在缓存系统中查找并删除与该ID对应的HTML代码。</p>
    <p>[0119]	在实际应用中，有一些应用场景需要在分片的HTML代码未到达预定的缓存时间就失效掉。以“掌柜信息”分片为例，假设“掌柜信息”分片的缓存时间是1天，但是如果还未到1天的时候，“掌柜信息”发生了变化，这时可更新缓存系统中保存的该分片的HTML代码，将之前的缓存内容进行删除。</p>
    <p>[0120]	需要说明的是，可以从步骤609和步骤610中看出，对分片的HTML代码进行失效的时候，通过对分片名称和分片参数进行哈希运算，并将计算得到的32位结果作为分片 ID,以删除该分片ID在缓存系统中对应的HTML代码。</p>
    <p>[0121]	步骤611 ：将所述分片除了 HTML代码以外的其他响应头的值缓存至所述缓存系统中。</p>
    <p>[0122]	在本申请实施例中，如果开启了头（HEDER)缓存，在向缓存系统新增某个分片的 HTML代码时，有些业务需要将除了所述HTML代码以外的其他响应头（RESPONE HEDER)中的信息也一起缓存，而如果只缓存了 HTML代码不缓存响应头的值的话，可能会导致这些业务无法正常工作。例如，访问“宝贝详情”页面的分片时，有相应的语言版本信息，这些语言版本信息在响应头中保存的方式是“_lang = gbk”的方式，当“宝贝详情”页面向客户端返回结果的时候，对应的“_lang = gbk”也将返回，这样就可以在保证对于某个分片的HTML代码能够在不同的网页中都相同。</p>
    <p>[0123]	在本步骤实现的时候，预先配置好当前使用的业务系统中响应头的哪些值需要缓存，该配置信息和分片的相关信息一起存放在缓存系统中。缓存之后，如果用户请求的网页页面中的分片在缓存系统中对应的也有响应头的值，则在返回HTML代码的同时也返回对应的响应头的值。</p>
    <p>[0124]	在本实施例中，缓存系统可以采用分布式集群服务器来实现，所述分布式集群服务器可以采用水平扩容的方式，增加充当缓存系统的服务器台数，这样就可以实现某一台服务器存储了分片的HTML代码之后，其他的分布式集群服务器就不再进行存储。同时采用本申请实施例的技术方案，可以实现分片之间不限层数的递归嵌套，同时也可以将每个分片的缓存时间设置为不相同的。同时本实施例中，如果存在头缓存，在分片的HTML代码进行缓存的同时也缓存某个分片的响应头中需要的值。</p>
    <p>[0125]	实施例四</p>
    <p>[0126]	参考图7，示出了本申请一种页面缓存的处理方法实施例四的流程图，本实施例可以理解为将本申请的页面缓存的处理方法应用于实际中的一个具体例子，可以包括以下步骤：</p>
    <p>[0127]	步骤701 ：接收到针对网页页面的请求。</p>
    <p>[0128]	步骤702 ：判断所述请求的网页页面是否需要进行全页缓存；如果需要，则进入步骤703 ；如果不需要，则进入步骤704。</p>
    <p>[0129]	在本申请实施例中，所描述的是对网页页面的缓存处理过程。前述三个实施例所描述的技术方案是网页页面不需要缓存而网页页面的某些分片需要缓存的情况。本实施例中对所述网页页面是否需要缓存进行判断，在当前用户请求的网页页面需要缓存时，在后续进行处理时，可直接对该网页页面进行渲染；而在当前用户请求的网页页面不需要缓存时，执行对网页页面包括的各个分片的渲染过程。[0130]	步骤703 ：对所述网页页面直接进行渲染，以获取所述网页页面的内容。</p>
    <p>[0131]	在本步骤中，通过对整个网页页面直接进行渲染，以获得所述网页页面的HTML代码。在实际应用中，可以直接利用网页页面的页面名称和页面参数进行哈希运算以得到32 位页面ID，以该页面ID到缓存系统中查找对应的页面的HTML代码，如果查询不到，则从数据库中或者互联网上查询相应的HTML代码，并根据返回的查询结果获得所述网页页面的具体内容。所述页面参数是指WEB服务器依据用户所请求的网页传递给缓存处理装置的参数，例如，用户查询页面，页面的URL都是相同的，唯独不同的就是参数不同，例如：</p>
    <p>[0132]	www. XXX. com/aaa. htm ？ user = [x]&amp;userName = [χ] 0</p>
    <p>[0133]	步骤704 :对该网页页面执行页面解析过程，所述页面解析过程具体包括：获取所述网页页面包括的第一层分片信息；依据所述第一层分片信息依次对第一层分片执行分片解析过程。所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；将所述渲染的渲染结果组合成所述网页的完整的第一层分片内容。</p>
    <p>[0134]	本步骤针对的是网页页面不需要缓存而其中的某些分片需要缓存的应用场景，该应用场景下的实现过程在前述三个实施例中已经介绍得很详细，在此不再赘述。</p>
    <p>[0135]	在本实施例中，可以实现对网页页面缓存时的缓存处理，能够实现网页页面需要缓存而分片不缓存，或者网页页面不需要缓存而其中的某些分片需要嵌套缓存时相应的渲染过程。</p>
    <p>[0136]	实施例五</p>
    <p>[0137]	参考图8，其示出了本申请一种页面缓存的处理方法实施例五的流程图，本实施例可以理解为将本申请的页面缓存的处理方法应用于实际中的一个具体例子，可以包括以下步骤：</p>
    <p>[0138]	步骤801 ：接收到针对网页页面的请求。</p>
    <p>[0139]	步骤802:获取所述网页页面的URL，并依据所述URL查找预置的缓存信息，所述缓存信息包括所述网页页面是否需要进行全页缓存的信息。如果需要进行全页缓存，则进入步骤803，如果不需要进行全页缓存，则进入步骤805。</p>
    <p>[0140]	在本实施例中也可以由配置服务器对所述网页页面的缓存信息进行存储，而配置服务器可以更新存储的缓存信息，并向缓存处理装置发送更新后的缓存信息；缓存处理装置也可以从配置服务器中主动获取相应的缓存信息。所述缓存信息中包括所述网页页面是否需要进行全页缓存的信息。</p>
    <p>[0141]	步骤803 ：将所述网页页面的URL与页面参数生成32位的页面ID，进入步骤804。</p>
    <p>[0142]	本步骤中需要将所述网页页面的URL与页面参数采用哈希运算生成32位的页面 ID。</p>
    <p>[0143]	步骤804 ：依据所述页面ID从缓存系统中查找对应的页面HTML代码，进入步骤 806。</p>
    <p>[0144]	以步骤803中得到的32位的页面ID为关键词从缓存系统中查询对应的页面HTML 代码。</p>
    <p>[0145]	步骤805 ：由TOB服务器的业务系统负责查找该页面ID对应的HTML代码。</p>
    <p>[0146]	步骤806 ：将所述查找得到的HTML代码及其与所述页面ID的对应关系缓存至缓存系统中。</p>
    <p>[0147]	在本步骤中，如果网页页面需要缓存，但是却在缓存系统中查询不到，则在步骤 805之后继续将查询得到的HTML代码及页面ID的对应关系，同时还有HTML代码都存储至缓存系统中。</p>
    <p>[0148]	需要说明的是，在进行网页页面的缓存处理时，如果网页页面需要缓存，也可以在该网页页面的缓存时间还未到来，但是网页页面的HTML代码又进行了更新的情况下，对所述网页页面进行主动失效。主动失效的含义及其实现方式在前述实施例中已经介绍，在此不再赘述。</p>
    <p>[0149]	对于前述的各方法实施例，为了简单描述，故将其都表述为一系列的动作组合，但是本领域技术人员应该知悉，本申请并不受所描述的动作顺序的限制，因为依据本申请，某些步骤可以采用其他顺序或者同时进行。其次，本领域技术人员也应该知悉，说明书中所描述的实施例均属于优选实施例，所涉及的动作和模块并不一定是本申请所必须的。</p>
    <p>[0150]	实施例六</p>
    <p>[0151]	与上述本申请一种页面缓存的处理方法实施例一所提供的方法相对应，参见图 9，本申请还提供了一种页面缓存的处理装置实施例六，在本实施例中，该装置具体可以包括：</p>
    <p>[0152]	获取模块901，用于当接收到针对网页页面的请求时，获取所述网页页面包括的第</p>
    <p>一层分片信息。</p>
    <p>[0153]	分片解析模块902，用于依据所述第一层分片信息依次对第一层分片执行分片解析过程，所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息。</p>
    <p>[0154]	组合拼装模块903，用于将所述渲染的渲染结果组合成所述网页的完整的第一层分片内容。</p>
    <p>[0155]	本实施例中，可以实现当网页页面的分片采用了嵌套缓存的方式时，能够递归地获取到所述网页页面各个分片的HTML代码，最后组合拼装成该网页页面的第一层分片，解决了现有技术中无法对网页页面的分片进行嵌套缓存的问题，以及分片进行嵌套缓存之后的递归渲染问题。</p>
    <p>[0156]	实施例七与上述本申请一种页面缓存的处理方法实施例二所提供的方法相对应， 参见图10，本申请还提供了一种页面缓存的处理装置的优选实施例七，在本实施例中，该装置具体可以包括：</p>
    <p>[0157]	获取URL子模块1001，用于获取所述网页的统一资源定位符（URL)；</p>
    <p>[0158]	查询模板子模块1002，用于依据所述网页的URL查询得到该网页的模板；</p>
    <p>[0159]	获得分片信息子模块1003，用于获得该网页的模板中第一层分片对应的分片名称和分片参数；</p>
    <p>[0160]	获取嵌套信息子模块1004，用于依次依据第一层分片的分片名称和分片参数获取所述第一层分片的HTML代码和嵌套信息。</p>
    <p>[0161]	参考图11所示，所述获取嵌套信息子模块1004具体可以包括：</p>
    <p>[0162]	查询缓存信息子模块1101，用于从配置服务器中查询所述第一层分片的缓存信息，所述缓存信息包括分片是否需要缓存的信息，以及需要缓存的分片的缓存时间长度信息；</p>
    <p>[0163]	判断子模块1102，用于在当前时间还未到达所述缓存时间长度时，依据所述第一层分片的缓存信息判断第一层分片是否需要缓存；</p>
    <p>[0164]	第一查找HTML代码子模块1103，用于当所述判断子模块1102的结果为是时，则将所述第一层分片的分片名称和分片参数进行哈希运算以得到第一层分片的分片标识ID ； 并依据所述分片ID从缓存系统中查找与该分片ID对应的第一层分片的HTML代码；</p>
    <p>[0165]	第二查找HTML代码子模块1104，用于当所述判断子模块1102的结果为否时，则触发WEB服务器的业务系统查找该分片ID对应的HTML代码。</p>
    <p>[0166]	递归渲染处理子模块1005，用于依据所述嵌套信息判断所述第一层分片是否包括第二层分片；如果是，则对所述第二层分片进行递归渲染处理，所述递归渲染处理的方式为：在待处理分片的上一层分片上生成所述待处理分片的占位符；依据所述待处理分片的分片名称和分片参数，获取所述待处理分片的上一层分片的HTML代码；将所述待处理分片的HTML代码替换所述待处理分片的占位符；并继续判断所述第二层分片是否包括第三层分片，如果是，则对所述第三层分片进行所述递归渲染处理，直至最后判断得到第N层分片不再包括其他分片为止，所述N为大于3的整数；如果第一层分片不包括第二层分片，则结束渲染过程。</p>
    <p>[0167]	客户端展示模块1006，用于将所述完整的第一层分片内容在客户端的网页上展</p>
    <p>7J\ ο</p>
    <p>[0168]	本实施例中，可以在对网页页面的分片嵌套缓存，同时在网页页面的分片进行嵌套缓存时还能够递归地获取到各个分片的HTML代码，从而向用户展示出完整的网页内容， 弥补了现有技术的一项空白。</p>
    <p>[0169]	实施例八</p>
    <p>[0170]	与上述本申请一种页面缓存的处理方法实施例三所提供的方法中的内容相对应， 参见图12，本申请还提供了一种页面缓存的处理装置的优选实施例八，在本实施例中，该装置具体还可以包括：</p>
    <p>[0171]	缓存模块1201，用于将所述查找得到的HTML代码及其与所述分片ID的对应关系缓存至缓存系统中；</p>
    <p>[0172]	哈希运算模块1202，用于当某个分片的内容发生变化时，按照所述分片的分片名称和分片参数进行哈希运算以得到该分片的分片ID ；</p>
    <p>[0173]	删除模块1203，用于按照所述分片ID在缓存系统中查找并删除与该ID对应的 HTML代码；</p>
    <p>[0174]	所述缓存模块1204，具体用于将所述分片的HTML代码对应的头HEADER的值缓存至所述缓存系统中。</p>
    <p>[0175]	实施例九</p>
    <p>[0176]	与上述本申请一种页面缓存的处理方法实施例四所提供的方法相对应，参见图 13，本申请还提供了一种页面缓存的处理装置的优选实施例九，在本实施例中，该装置具体可以包括：</p>
    <p>[0177]	接收网页页面请求模块1301，用于接收针对网页页面的请求；</p>
    <p>[0178]	判断模块1302，用于判断所述请求的网页页面是否需要进行全页缓存；[0179]	直接渲染模块1303，用于当所述判断模块1302的结果为是时，对所述网页页面直接进行渲染，以获取所述网页页面的内容；</p>
    <p>[0180]	嵌套缓存处理装置1304，用于当所述判断模块1302的结果为否时，获取所述网页页面包括的第一层分片信息；依据所述第一层分片信息依次对第一层分片执行解析过程， 所述解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；将所述渲染的渲染结果组合成所述网页的完整的第一层分片内容。</p>
    <p>[0181]	实施例十</p>
    <p>[0182]	与上述本申请一种页面缓存的处理方法实施例五所提供的方法相对应，参见图 14，本申请还提供了一种页面缓存的处理装置的优选实施例十，在本实施例中，该装置具体可以包括：</p>
    <p>[0183]	接收网页页面请求模块1301，用于接收针对网页页面的请求；</p>
    <p>[0184]	所述判断模块1302具体可以包括：</p>
    <p>[0185]	获取缓存信息子模块1401，用于获取所述网页页面的URL ；</p>
    <p>[0186]	查找子模块1402，用于依据所述URL查找预置的缓存信息，所述缓存信息包括所述网页页面是否需要进行全页缓存的信息，以及所述网页页面的缓存时间长度信息。</p>
    <p>[0187]	所述直接渲染模块1303具体可以包括：</p>
    <p>[0188]	生成页面ID模块1403，用于在所述缓存时间长度还未到达时，将所述网页页面的 URL与页面参数生成32位的页面ID ；</p>
    <p>[0189]	第一查找HTML代码模块1404，用于依据所述页面ID从缓存系统中查找对应的页面HTML代码。</p>
    <p>[0190]	所述装置具体还可以包括：</p>
    <p>[0191]	第二查找HTML代码模块1405，用于触发TOB服务器的业务系统查找该页面ID对应的HTML代码；</p>
    <p>[0192]	缓存模块1406，用于将所述查找得到的HTML代码及其与所述页面ID的对应关系缓存至缓存系统中。</p>
    <p>[0193]	实施例i^一</p>
    <p>[0194]	与前述本申请提供的一种网页页面的分片嵌套缓存的处理方法和装置相对应，本申请还提供了一种网页页面的分片嵌套缓存的处理系统实施例十，所述系统具体可以包括客户端和TOB服务器：</p>
    <p>[0195]	所述客户端，用于向WEB服务器请求网页页面；</p>
    <p>[0196]	所述WEB服务器包括所述缓存处理装置，所述缓存处理装置包括：</p>
    <p>[0197]	获取模块，用于当接收到针对网页页面的请求时，获取所述网页页面包括的第一层分片信息；</p>
    <p>[0198]	分片解析模块，用于依据所述第一层分片信息依次对第一层分片执行分片解析过程，所述分片解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；</p>
    <p>[0199]	组合拼装模块，用于将所述渲染的渲染结果组合成所述网页的完整的第一层分片内容。[0200]	同时本申请还提供了一种网页页面的缓存处理系统实施例，所述系统具体可以包括客户端和WEB服务器：</p>
    <p>[0201]	所述客户端，用于向TOB服务器请求网页页面；</p>
    <p>[0202]	所述WEB服务器包括所述缓存处理装置，所述缓存处理装置包括：</p>
    <p>[0203]	接收网页页面请求模块，用于接收针对网页页面的请求；</p>
    <p>[0204]	判断模块，用于判断所述请求的网页页面是否需要进行全页缓存；</p>
    <p>[0205]	直接渲染模块，用于当所述判断模块的结果为是时，对所述网页页面直接进行渲染，以获取所述网页页面的内容；</p>
    <p>[0206]	嵌套缓存处理装置，用于当所述判断模块的结果为否时，获取所述网页页面包括的第一层分片信息；依据所述第一层分片信息依次对第一层分片执行解析过程，所述解析过程具体为：依据所述第一层分片的预置的嵌套信息对所述第一层分片进行渲染；所述嵌套信息为当前分片是否包括其他分片的信息；将所述渲染的渲染结果组合成所述网页的完整的第一层分片内容。</p>
    <p>[0207]	需要说明的是，本说明书中的各个实施例均采用递进的方式描述，每个实施例重点说明的都是与其他实施例的不同之处，各个实施例之间相同或相似的部分互相参见即可。对于装置类实施例而言，由于其与方法实施例基本相似，所以描述的比较简单，相关之处参见方法实施例的部分说明即可。</p>
    <p>[0208]	最后，还需要说明的是，在本文中，诸如第一和第二等之类的关系术语仅仅用来将一个实体或者操作与另一个实体或操作区分开来，而不一定要求或者暗示这些实体或操作之间存在任何这种实际的关系或者顺序。而且，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者设备不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、物品或</p>
    <p>者设备所固有的要素。在没有更多限制的情况下，由语句“包括一个......”限定的要素，</p>
    <p>并不排除在包括所述要素的过程、方法、物品或者设备中还存在另外的相同要素。</p>
    <p>[0209]	以上对本申请所提供的一种页面缓存的处理方法、装置及系统进行了详细介绍， 本文中应用了具体个例对本申请的原理及实施方式进行了阐述，以上实施例的说明只是用于帮助理解本申请的方法及其核心思想；同时，对于本领域的一般技术人员，依据本申请的思想，在具体实施方式及应用范围上均会有改变之处，综上所述，本说明书内容不应理解为对本申请的限制。</p>
    <p>19</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101539912A?cl=zh">CN101539912A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2008年3月18日</td><td class="patent-data-table-td patent-date-value">2009年9月23日</td><td class="patent-data-table-td ">林福来</td><td class="patent-data-table-td ">树型浏览器浏览网页的方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101582075A?cl=zh">CN101582075A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年6月24日</td><td class="patent-data-table-td patent-date-value">2009年11月18日</td><td class="patent-data-table-td ">大连海事大学</td><td class="patent-data-table-td ">Web信息抽取系统</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=9suEBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0017300000">G06F17/30</a></span></td></tr><tr><td class="patent-data-table-td "> 合作分类</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=9suEBwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=H04L67/2842">H04L67/2842</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=9suEBwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=H04L67/02">H04L67/02</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=9suEBwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=H04L41/0293">H04L41/0293</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=9suEBwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F17/248">G06F17/248</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=9suEBwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F17/2229">G06F17/2229</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=9suEBwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F17/2247">G06F17/2247</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=9suEBwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F17/30902">G06F17/30902</a></span></td></tr><tr><td class="patent-data-table-td "> 欧洲专利分类号</td><td class="patent-data-table-td "><span class="nested-value">G06F17/30W9C</span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2012年1月25日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年3月14日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年8月10日</td><td class="patent-data-table-td ">REG</td><td class="patent-data-table-td ">Reference to a national code</td><td class="patent-data-table-td "><div class="nested-key-value"><span class="nested-key">Ref country code: </span><span class="nested-value">HK</span></div><div class="nested-key-value"><span class="nested-key">Ref legal event code: </span><span class="nested-value">DE</span></div><div class="nested-key-value"><span class="nested-key">Ref document number: </span><span class="nested-value">1161924</span></div><div class="nested-key-value"><span class="nested-key">Country of ref document: </span><span class="nested-value">HK</span></div></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年9月25日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2014年2月21日</td><td class="patent-data-table-td ">REG</td><td class="patent-data-table-td ">Reference to a national code</td><td class="patent-data-table-td "><div class="nested-key-value"><span class="nested-key">Ref country code: </span><span class="nested-value">HK</span></div><div class="nested-key-value"><span class="nested-key">Ref legal event code: </span><span class="nested-value">GR</span></div><div class="nested-key-value"><span class="nested-key">Ref document number: </span><span class="nested-value">1161924</span></div><div class="nested-key-value"><span class="nested-key">Country of ref document: </span><span class="nested-value">HK</span></div></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/a7025b40ae758b700bad/CN102331985A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_6e802a6b2b28d51711baddc2f3bec198.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E7%BD%91%E9%A1%B5%E9%A1%B5%E9%9D%A2%E7%9A%84%E5%88%86%E7%89%87%E5%B5%8C%E5%A5%97%E7%BC%93%E5%AD%98%E7%9A%84%E5%A4%84.pdf?id=9suEBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U1VPp8gN2ciB-PMvFZD99a6au8qRQ"},"sample_url":"https://www.google.com/patents/reader?id=9suEBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>