<!DOCTYPE html><html><head><title>专利 CN102254120A - 恶意代码的检测方法、系统及相关装置 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="恶意代码的检测方法、系统及相关装置"><meta name="DC.contributor" content="云朋" scheme="inventor"><meta name="DC.contributor" content="王鹏" scheme="inventor"><meta name="DC.contributor" content="成都市华为赛门铁克科技有限公司" scheme="assignee"><meta name="DC.date" content="2011-8-9" scheme="dateSubmitted"><meta name="DC.description" content="本发明公开了一种恶意代码的检测方法、系统及相关装置，用以解决现有技术中检测效率低、占用资源较多的问题。该方法包括：在宿主机的虚拟机监视器中监控指令的执行情况，所述指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的；根据所述指令的执行情况，获得所述程序代码的执行特征；将获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，在比对结果相符时确定所述程序代码为恶意代码。提高了检测效率，节约了在各虚拟机中重复安装杀毒软件所占用的宿主机的存储资源、以及各虚拟机分别运行杀毒软件所占用的宿主机的处理资源。"><meta name="DC.date" content="2011-11-23"><meta name="DC.relation" content="CN:101131677:A" scheme="references"><meta name="DC.relation" content="CN:101162485:A" scheme="references"><meta name="DC.relation" content="CN:102034050:A" scheme="references"><meta name="DC.relation" content="CN:102082802:A" scheme="references"><meta name="DC.relation" content="US:20100257608:A1" scheme="references"><meta name="citation_patent_publication_number" content="CN:102254120:A"><meta name="citation_patent_application_number" content="CN:201110226659"><link rel="canonical" href="https://www.google.com/patents/CN102254120A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN102254120A?cl=zh"/><meta name="title" content="专利 CN102254120A - 恶意代码的检测方法、系统及相关装置"/><meta name="description" content="本发明公开了一种恶意代码的检测方法、系统及相关装置，用以解决现有技术中检测效率低、占用资源较多的问题。该方法包括：在宿主机的虚拟机监视器中监控指令的执行情况，所述指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的；根据所述指令的执行情况，获得所述程序代码的执行特征；将获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，在比对结果相符时确定所述程序代码为恶意代码。提高了检测效率，节约了在各虚拟机中重复安装杀毒软件所占用的宿主机的存储资源、以及各虚拟机分别运行杀毒软件所占用的宿主机的处理资源。"/><meta property="og:title" content="专利 CN102254120A - 恶意代码的检测方法、系统及相关装置"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN102254120A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN102254120A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=zviaBwABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN102254120A&amp;usg=AFQjCNH0WKEcFGWwHwCPtYYEz-94QKAaog" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/0137786427b7e94b25d3/CN102254120A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/0137786427b7e94b25d3/CN102254120A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN102254120A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN102254120A?cl=en&amp;hl=zh-CN"></a><a class="appbar-application-grant-link" data-selected="true" data-label="申请" href="/patents/CN102254120A?hl=zh-CN&amp;cl=zh"></a><a class="appbar-application-grant-link" data-label="授权" href="/patents/CN102254120B?hl=zh-CN&amp;cl=zh"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN102254120A?cl=zh" style="display:none"><span itemprop="description">本发明公开了一种恶意代码的检测方法、系统及相关装置，用以解决现有技术中检测效率低、占用资源较多的问题。该方法包括：在宿主机的虚拟机监视器中监控指令的执行情况，所述指令是该宿主机的虚拟机中执行程序代码时...</span><span itemprop="url">https://www.google.com/patents/CN102254120A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN102254120A - 恶意代码的检测方法、系统及相关装置</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN102254120A - 恶意代码的检测方法、系统及相关装置" title="专利 CN102254120A - 恶意代码的检测方法、系统及相关装置"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN102254120 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201110226659</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2011年11月23日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2011年8月9日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2011年8月9日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102254120B?hl=zh-CN&amp;cl=zh">CN102254120B</a>, </span><span class="patent-bibdata-value"><a href="/patents/EP2725510A1?hl=zh-CN&amp;cl=zh">EP2725510A1</a>, </span><span class="patent-bibdata-value"><a href="/patents/EP2725510A4?hl=zh-CN&amp;cl=zh">EP2725510A4</a>, </span><span class="patent-bibdata-value"><a href="/patents/US20140137255?hl=zh-CN&amp;cl=zh">US20140137255</a>, </span><span class="patent-bibdata-value"><a href="/patents/WO2013020400A1?hl=zh-CN&amp;cl=zh">WO2013020400A1</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201110226659.5, </span><span class="patent-bibdata-value">CN 102254120 A, </span><span class="patent-bibdata-value">CN 102254120A, </span><span class="patent-bibdata-value">CN 201110226659, </span><span class="patent-bibdata-value">CN-A-102254120, </span><span class="patent-bibdata-value">CN102254120 A, </span><span class="patent-bibdata-value">CN102254120A, </span><span class="patent-bibdata-value">CN201110226659, </span><span class="patent-bibdata-value">CN201110226659.5</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E4%BA%91%E6%9C%8B%22">云朋</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%8E%8B%E9%B9%8F%22">王鹏</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%88%90%E9%83%BD%E5%B8%82%E5%8D%8E%E4%B8%BA%E8%B5%9B%E9%97%A8%E9%93%81%E5%85%8B%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">成都市华为赛门铁克科技有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN102254120A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102254120A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN102254120A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (5),</span> <span class="patent-bibdata-value"><a href="#forward-citations"> 被以下专利引用</a> (11),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (2),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (5)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=zviaBwABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201110226659&amp;usg=AFQjCNGPP-239Dq18vra9S7U7eQEvBVKsA"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=zviaBwABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D102254120A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNFwNGGAR15Bp7l71K-4IUxG2_VbXw"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT104728085" lang="ZH" load-source="patent-office">恶意代码的检测方法、系统及相关装置</invention-title>
      </span><br><span class="patent-number">CN 102254120 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA86635952" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明公开了一种恶意代码的检测方法、系统及相关装置，用以解决现有技术中检测效率低、占用资源较多的问题。该方法包括：在宿主机的虚拟机监视器中监控指令的执行情况，所述指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的；根据所述指令的执行情况，获得所述程序代码的执行特征；将获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，在比对结果相符时确定所述程序代码为恶意代码。提高了检测效率，节约了在各虚拟机中重复安装杀毒软件所占用的宿主机的存储资源、以及各虚拟机分别运行杀毒软件所占用的宿主机的处理资源。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(15)</span></span></div><div class="patent-text"><div mxw-id="PCLM37094750" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.	一种恶意代码的检测方法，其特征在于，包括：在宿主机的虚拟机监视器中监控指令的执行情况，所述指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的；根据所述指令的执行情况，获得所述程序代码的执行特征；将获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，在比对结果相符时确定所述程序代码为恶意代码。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.如权利要求1所述的方法，其特征在于，所述执行特征包括以下任意一个、或多个的组合：执行该程序代码时产生的读写访问请求转义生成的指令的内容、所述指令在所述虚拟机监视器中的行为特征、或所述指令访问硬件的行为特征；当所述执行特征包括转义生成的指令的内容时，所述根据所述指令的执行情况，获得所述程序代码的执行特征，具体为：通过读取监控到的指令的内容，获得转义生成的指令的内容；当所述执行特征包括所述指令在所述虚拟机监视器中的行为特征时，所述根据所述指令的执行情况，获得所述程序代码的执行特征，具体为：通过监控虚拟机监视器中预定应用程序编程接口 API被所述指令调用时传入的参数，获得所述指令在所述虚拟机监视器中的行为特征；当所述执行特征包括所述指令访问硬件的行为特征时，所述根据所述指令的执行情况，获得所述程序代码的执行特征，具体为：通过监控虚拟机监视器中预定API被所述指令调用时传入的参数、或者监控所述指令执行过程中宿主机上存储资源或处理资源使用情况，获得所述指令访问硬件的行为特征的。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.如权利要求2所述的方法，其特征在于，所述指令在所述虚拟机监视器中的行为特征包括以下任意一个、或多个的组合：修改所述虚拟机监视器中的系统文件的内容、位置或参数信息；所述指令访问硬件的行为特征包括以下任意一个、或多个的组合：访问存储空间超过第一设定阈值的持续时间、占用CPU比例超过第二设定阈值的持续时间、或是否读写设定范围的输入输出接口。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.如权利要求1至3任一所述的方法，其特征在于，所述将获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，比对结果不相符之后，还包括：将获得的所述执行特征发送给集群查杀设备，并接收所述集群查杀设备返回的所述程序代码是否为恶意代码的判定结果，所述判定结果是所述集群查杀设备将所述特征与该集群查杀设备数据库中已知恶意代码的执行特征进行比对确定出的，或者将所述程序代码发送给集群查杀设备，并接收所述集群查杀设备返回的所述程序代码是否为恶意代码的判定结果，所述判定结果是所述集群查杀设备利用沙箱技术执行所述程序代码后，根据执行结果确定出的。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.如权利要求1所述的方法，其特征在于，在确定出所述程序代码为恶意代码后，还包括：记录该程序代码的标识，并根据记录结果统计设定时间段内该程序代码被检测到的次数；将所述程序代码的标识及所述次数发送给集群查杀设备；接收集群查杀设备返回的数据库内容，并根据接收到数据库内容替换本地数据库的内容，所述接收到的数据库内容是所述集群查杀设备根据所述程序代码的标识及所述次数筛选出的，所述数据库内容包含已知恶意代码的执行特征。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.如权利要求1、2、3、或5所述的方法，其特征在于，当确定出所述程序代码为恶意代码后，还包括：阻止执行所述程序代码的读写请求转义生成的指令。</div>
    </div>
    </div> <div class="claim"> <div num="7" class="claim">
      <div class="claim-text">7.	&#8212;种恶意代码的检测方法，其特征在于，包括：接收宿主机发来的程序代码，在预先构建的用于模拟虚拟机监视器环境的第一沙箱中执行所述程序代码，获得执行结束后所述第一沙箱的安全状态报告；和/或在预先构建的用于模拟虚拟机环境的第二沙箱中执行所述程序代码，获得执行结束后所述第二沙箱的安全状态报告；根据所述安全状态报告中预设参数的参数值、以及预设的判别规则的集合，判定所述程序代码是否为恶意代码，所述判别规则中包含至少一个所述预设参数的阈值判断范围；将判定结果发送给所述宿主机。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.如权利要求7所述的方法，其特征在于，当判定所述程序代码是否为恶意代码后，还包括：若判定所述程序代码为恶意代码，则将该程序代码的标识和对应的执行特征添加到数据库的黑名单中；所述将判断结果发送给所述宿主机之后，还包括：接收宿主机发来的程序代码的标识和设定时间段内该程序代码的标识被检测到的次数；根据预定的筛选规则、以及所述程序代码的标识和所述次数，从所述数据库中筛选出部分内容，所述筛选规则包括统计指标判断阈值，所述统计指标的值根据所述程序代码的标识和所述次数确定出；将筛选出的数据库的内容发送给宿主机，以便宿主机更新本地数据库。</div>
    </div>
    </div> <div class="claim"> <div num="9" class="claim">
      <div class="claim-text">9.	一种宿主机，包括虚拟机监视器和至少一个虚拟机，其特征在于，还包括恶意代码的检测装置，其中：所述恶意代码的检测装置，用于在宿主机的虚拟机监视器中监控指令的执行情况，所述指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时， 转义生成的；根据所述指令的执行情况，获得所述程序代码的执行特征；将获取单元获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，并在比对结果不相符时确定所述程序代码为恶意代码。</div>
    </div>
    </div> <div class="claim"> <div num="10" class="claim">
      <div class="claim-text">10.	一种恶意代码的检测装置，其特征在于，包括：监控单元，用于在宿主机的虚拟机监视器中监控指令的执行情况，所述指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的；获取单元，用于根据所述指令的执行情况，获得所述程序代码的执行特征；确定单元，用于将获取单元获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，并在比对结果相符时确定所述程序代码为恶意代码。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="11" class="claim">
      <div class="claim-text">11.如权利要求10所述的装置，其特征在于，还包括：第一发送单元，用于在确定单元的比对结果不相符时，将获得的所述执行特征发送给集群查杀设备，或者将所述程序代码发送给集群查杀设备；第一接收单元，用于接收所述集群查杀设备根据第一发送单元发送的所述执行特征， 返回的所述程序代码是否为恶意代码的判定结果，所述判定结果是所述集群查杀设备将所述特征与该集群查杀设备数据库中已知恶意代码的执行特征进行比对确定出的；或者接收所述集群查杀设备根据第一发送单元发送的程序代码，返回的所述程序代码是否为恶意代码的判定结果，所述判定结果是所述集群查杀设备利用沙箱技术执行所述程序代码后，根据执行结果确定出的。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="12" class="claim">
      <div class="claim-text">12.如权利要求10、或11所述的装置，其特征在于，还包括：记录统计单元，用于在确定单元确定出所述程序代码为恶意代码后，记录该程序代码的标识，并根据记录结果统计设定时间段内该程序代码被检测到的次数；第二发送单元，用于将所述程序代码的标识及所述次数发送给集群查杀设备； 第二接收单元，用于接收集群查杀设备返回的数据库内容，并根据接收到数据库内容替换本地数据库的内容，所述接收到的数据库内容是所述集群查杀设备根据所述程序代码的标识及所述次数确定出的，所述数据库内容包含已知恶意代码的执行特征。</div>
    </div>
    </div> <div class="claim"> <div num="13" class="claim">
      <div class="claim-text">13.	&#8212;种恶意代码的检测装置，其特征在于，包括： 第一接收单元，用于接收宿主机发来的程序代码；执行单元，用于在预先构建的用于模拟虚拟机监视器环境的第一沙箱中执行所述程序代码，获得执行结束后所述第一沙箱的安全状态报告；和/或在预先构建的用于模拟虚拟机环境的第二沙箱中执行所述程序代码，获得执行结束后所述第二沙箱的安全状态报告；判定单元，用于根据所述安全状态报告中预设参数的参数值、以及预设的判别规则的集合，判定所述程序代码是否为恶意代码，所述判别规则中包含至少一个所述预设参数的阈值判断范围；第一发送单元，用于将判定单元的判定结果发送给所述宿主机。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="14" class="claim">
      <div class="claim-text">14.如权利要求13所述的设备，其特征在于，还包括：第一更新单元，用于在判定单元判定所述程序代码为恶意代码时，则将该程序代码的标识和对应的执行特征添加到数据库的黑名单中；第二接收单元，用于接收宿主机发来的程序代码的标识和设定时间段内该程序代码的标识被检测到的次数；筛选单元，用于根据第二接收单元接收的所述程序代码的标识、所述次数、以及所述集群查杀设备中预定的筛选规则，从所述数据库中筛选出部分内容，所述筛选规则包括统计指标判断阈值，所述统计指标的值根据所述程序代码的标识和所述次数确定出；第二发送单元，用于将所述筛选单元筛选出的内容发送给宿主机，以便宿主机更新本地数据库。</div>
    </div>
    </div> <div class="claim"> <div num="15" class="claim">
      <div class="claim-text">15.	一种恶意代码的检测系统，其特征在于，包括至少一个宿主机和至少一个集群查杀设备，其中：所述宿主机，用于在该宿主机的虚拟机监视器中捕获指令，所述执行指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的；根据所述指令获得所述程序代码的执行特征；将获得的所述执行特征与本地数据库黑名单中的已知恶意代码的执行特征进行比对，若比对结果相符，则确定所述程序代码为恶意代码；若比对结果不相符，则将所述程序代码发送给集群查杀设备，并接收所述集群查杀设备返回的所述程序代码是否为恶意代码的判定结果；所述集群查杀设备，用于接收宿主机发来的程序代码，在预先构建的用于模拟虚拟机监视器环境的第一沙箱中执行所述程序代码，获得执行结束后所述第一沙箱的安全状态报告；和/或在预先构建的用于模拟虚拟机环境的第二沙箱中执行所述程序代码，获得执行结束后所述第二沙箱的安全状态报告；根据所述安全状态报告中预设参数的参数值、以及预设的判别规则的集合，判定所述程序代码是否为恶意代码，所述判别规则中包含至少一个所述预设参数的参数值范围；将判定结果发送给所述宿主机。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES42762956" lang="ZH" load-source="patent-office" class="description">
    <p>恶意代码的检测方法、系统及相关装置</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及计算机安全技术领域，尤其涉及一种恶意代码的检测方法、一种宿主机、一种恶意代码的检测装置和一种恶意代码的检测系统。</p>
    <p>背景技术</p>
    <p>[0002]	硬件虚拟化技术被广泛应用于软件测试、并行计算等领域。硬件虚拟化技术在一台物理主机上虚拟出一台或多台虚拟机，从而使得几个甚至几十个虚拟机可以共用一个物理主机的硬件资源，该物理主机也被称为宿主机。</p>
    <p>[0003]	云计算将各个终端设备的数据处理任务集中交给网络来执行，以便由网络向使用多种不同终端设备的用户提供数据服务，从而克服终端设备的差异性。云计算中网络侧的分布式计算成为硬件虚拟化技术的一个新的重要应用场景。由于同一宿主机上的各个虚拟机之间可以不通过网络设备，而是仅通过公共的宿主机产生数据交互，因此采用硬件虚拟化技术实现云计算时，一个感染病毒的虚拟机很容易通过宿主机感染其他与其同在一个宿主机上的虚拟机。因此云计算容易成为计算机病毒和网络攻击的对象。</p>
    <p>[0004]	针对如何在以上场景中检测包括病毒在内的恶意代码（Malware)，现有技术提出： 在同一个宿主机的各个虚拟机上分别安装杀毒软件，利用每个虚拟机上所安装的杀毒软件对该虚拟机上的恶意代码进行查杀。</p>
    <p>[0005]	发明人在实现本发明的过程中，发现现有技术存在以下缺陷：恶意代码执行时实际发生作用的场所是宿主机的内存、CPU等物理硬件，并不是逻辑上的虚拟机中。但现有方案要求在同一宿主机上的所有虚拟机上都分别安装杀毒软件，并在虚拟机上执行恶意代码检测，因此使用该方案检测恶意代码存在效率低下、占用宿主机较多存储资源和处理资源的问题。</p>
    <p>发明内容</p>
    <p>[0006]	本发明实施例提供一种恶意代码的检测方法，用以解决现有技术中检测效率低、 占用资源较多的问题。</p>
    <p>[0007]	对应地，本发明实施例还提供了一种宿主机、一种恶意代码的检测装置和一种恶意代码的检测系统。</p>
    <p>[0008]	本发明实施例提供的技术方案如下：</p>
    <p>[0009]	一种恶意代码的检测方法，包括：</p>
    <p>[0010]	在宿主机的虚拟机监视器中监控指令的执行情况，所述指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的；</p>
    <p>[0011]	根据所述指令的执行情况，获得所述程序代码的执行特征；</p>
    <p>[0012]	将获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，在比对结果相符时确定所述程序代码为恶意代码。</p>
    <p>[0013]	一种恶意代码的检测方法，包括：[0014]	接收宿主机发来的程序代码，在预先构建的用于模拟虚拟机监视器环境的第一沙箱中执行所述程序代码，获得执行结束后所述第一沙箱的安全状态报告；和/或在预先构建的用于模拟虚拟机环境的第二沙箱中执行所述程序代码，获得执行结束后所述第二沙箱的安全状态报告；</p>
    <p>[0015]	根据所述安全状态报告中预设参数的参数值、以及预设的判别规则的集合，判定所述程序代码是否为恶意代码，所述判别规则中包含至少一个所述预设参数的阈值判断范围；</p>
    <p>[0016]	将判定结果发送给所述宿主机。</p>
    <p>[0017]	一种宿主机，包括虚拟机监视器和至少一个虚拟机，还包括恶意代码的检测装置， 其中：</p>
    <p>[0018]	所述恶意代码的检测装置，用于在宿主机的虚拟机监视器中监控指令的执行情况，所述指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的；根据所述指令的执行情况，获得所述程序代码的执行特征；将获取单元获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，并在比对结果不相符时确定所述程序代码为恶意代码。</p>
    <p>[0019]	一种恶意代码的检测装置，包括：</p>
    <p>[0020]	监控单元，用于在宿主机的虚拟机监视器中监控指令的执行情况，所述指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的；</p>
    <p>[0021]	获取单元，用于根据所述指令的执行情况，获得所述程序代码的执行特征；</p>
    <p>[0022]	确定单元，用于将获取单元获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，并在比对结果相符时确定所述程序代码为恶意代码。</p>
    <p>[0023]	一种恶意代码的检测装置，包括：</p>
    <p>[0024]	第一接收单元，用于接收宿主机发来的程序代码；</p>
    <p>[0025]	执行单元，用于在预先构建的用于模拟虚拟机监视器环境的第一沙箱中执行所述程序代码，获得执行结束后所述第一沙箱的安全状态报告；和/或在预先构建的用于模拟虚拟机环境的第二沙箱中执行所述程序代码，获得执行结束后所述第二沙箱的安全状态报</p>
    <p>生 P=I ；</p>
    <p>[0026]	判定单元，用于根据所述安全状态报告中预设参数的参数值、以及预设的判别规则的集合，判定所述程序代码是否为恶意代码，所述判别规则中包含至少一个所述预设参数的阈值判断范围；</p>
    <p>[0027]	第一发送单元，用于将判定单元的判定结果发送给所述宿主机。</p>
    <p>[0028]	一种恶意代码的检测系统，包括至少一个宿主机和至少一个集群查杀设备，其中：</p>
    <p>[0029]	所述宿主机，用于在该宿主机的虚拟机监视器中捕获指令，所述执行指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的； 根据所述指令获得所述程序代码的执行特征；将获得的所述执行特征与本地数据库黑名单中的已知恶意代码的执行特征进行比对，若比对结果相符，则确定所述程序代码为恶意代码；若比对结果不相符，则将所述程序代码发送给集群查杀设备，并接收所述集群查杀设备返回的所述程序代码是否为恶意代码的判定结果；</p>
    <p>[0030]	所述集群查杀设备，用于接收宿主机发来的程序代码，在预先构建的用于模拟虚拟机监视器环境的第一沙箱中执行所述程序代码，获得执行结束后所述第一沙箱的安全状态报告；和/或在预先构建的用于模拟虚拟机环境的第二沙箱中执行所述程序代码，获得执行结束后所述第二沙箱的安全状态报告；根据所述安全状态报告中预设参数的参数值、 以及预设的判别规则的集合，判定所述程序代码是否为恶意代码，所述判别规则中包含至少一个所述预设参数的参数值范围；将判定结果发送给所述宿主机。</p>
    <p>[0031]	本发明实施例提供的恶意代码的检测方法在宿主机的虚拟机监视器中监控转义生成的指令，并根据指令获得所述程序代码的执行特征；将获得的执行特征与预先存储的已知恶意代码的执行特征进行比对，并根据比对结果确定所述程序代码是否为恶意代码。 提高了检测效率，节约了在各虚拟机中重复安装杀毒软件所占用的宿主机的存储资源、以及各虚拟机分别运行杀毒软件所占用的宿主机的处理资源。</p>
    <p>附图说明</p>
    <p>[0032]	为了更清楚地说明本发明实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作一简单地介绍，显而易见地，下面描述中的附图是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。</p>
    <p>[0033]	图1为本实施例中硬件虚拟化场景下的宿主机的结构原理示意图；</p>
    <p>[0034]	图2为本发明实施例一提供的恶意代码的检测方法的流程图；</p>
    <p>[0035]	图3为本发明实施例二提供的恶意代码判定方法的流程图；</p>
    <p>[0036]	图如为本发明实施例三提供的恶意代码判定方法的流程图；</p>
    <p>[0037]	图4b为本发明实施例三提供的另一种恶意代码判定方法的流程图；</p>
    <p>[0038]	图5为本发明实施例五提供的宿主机上本地数据库更新方法的流程图；</p>
    <p>[0039]	图6a为本发明实施例六提供的恶意代码的检测方法的流程图；</p>
    <p>[0040]	图6b为本发明实施例六提供的另一种恶意代码的检测方法的流程图；</p>
    <p>[0041]	图7为本发明实施例七提供的集群查杀设备上数据库的更新方法的流程图；</p>
    <p>[0042]	图8为本发明实施例七提供的集群查杀设备中数据库的架构示意图；</p>
    <p>[0043]	图9为本发明实施例七提供的集群查杀设备上数据库的更新方法的详细流程图；</p>
    <p>[0044]	图10为本发明实施例八提供的宿主机设备的结构示意图；</p>
    <p>[0045]	图11为本发明实施例八提供的恶意代码的检测装置的结构示意图；</p>
    <p>[0046]	图12为本发明实施例八提供的另一种恶意代码的检测装置的结构示意图；</p>
    <p>[0047]	图13为本发明实施例九提供的一种集群查杀设备的结构示意图；</p>
    <p>[0048]	图14为本发明实施例十提供的一种恶意代码的检测系统的结构示意图。</p>
    <p>具体实施方式</p>
    <p>[0049]	由于恶意代码在虚拟机上的执行时，无论是恶意代码读写宿主机存储器的操作、 还是访问CPU的操作都由虚拟化平台转发给宿主机的物理硬件，所以恶意代码执行时实际发生作用的场所是宿主机的物理硬件，并不是逻辑上的虚拟机。而现有虚拟机恶意代码检测方案要求在同一宿主机上的所有虚拟机上都分别安装杀毒软件执行恶意代码检测，因此现有技术存在着检测效率低下、占用宿主机资源较多的问题。</p>
    <p>[0050]	另外，在升级杀毒软件时要保证同步升级所有虚拟机上的杀毒软件，否则杀毒软件版本较低的虚拟机仍然可能被感染恶意代码，因此现有技术还存在着管理更新维护较为复杂的问题。</p>
    <p>[0051]	本发明实施例一至实施例五从宿主机的角度对恶意代码的检测方法进行介绍。实施例六、实施例七从集群查杀设备的角度对恶意代码的检测方法进行介绍。</p>
    <p>[0052]	下面结合各个附图对本发明实施例技术方案的主要实现原理、具体实施方式及其对应能够达到的有益效果进行详细的阐述。</p>
    <p>[0053]	实施例一</p>
    <p>[0054]	附图1为本实施例中硬件虚拟化场景下的宿主机的结构原理示意图。为了便于描述，这里将宿主机抽象为三层逻辑架构，分别为上层的各个虚拟机VM1&#12316;VMn、中间层的虚拟机监视器（hypervisor)和底层硬件。底层硬件包括中央处理器（CPU，Center Processing Unit)、内存、网络适配器、磁盘等等。</p>
    <p>[0055]	请参照附图2a，对本发明实施例提供的恶意代码的检测方法的流程进行详细描述：</p>
    <p>[0056]	步骤201，在宿主机的虚拟机监视器中监控指令的执行情况；</p>
    <p>[0057]	具体地，当虚拟机上执行程序代码时，对各种物理硬件设备的读写访问请求被发送到虚拟机监视器时，会被转义为所述虚拟机所在的宿主机虚拟机监视器中的执行指令， 并通过虚拟机监视器来真正地访问物理硬件设备。</p>
    <p>[0058]	其中，转义操作是现有虚拟机监视器本身的功能，转义操作将虚拟机对虚拟硬件设备的访问转换成虚拟机监视器对真正物理硬件设备的访问，是虚拟机中的程序代码在执行过程中不可缺少的一个环节，其详细的技术细节在这里不再赘述。</p>
    <p>[0059]	需要说明的是，本发明实施例在宿主机的虚拟机监视器中所监控的指令的执行情况，是指虚拟机监视器转义后的指令的执行情况，而并非转义前虚拟机中程序代码的执行情况。</p>
    <p>[0060]	步骤202，根据所述指令的执行情况，获得所述程序代码的执行特征；</p>
    <p>[0061]	其中，程序代码的执行特征包括：执行该程序代码时产生的读写访问请求转义生成的指令的内容、所述指令在所述虚拟机监视器中的行为特征、或所述指令访问物理硬件设备的行为特征。</p>
    <p>[0062]	其中，所述指令在虚拟机监视器中的行为特征包括：该指令所要修改的该虚拟机监视器中的系统文件的内容、存储位置、或者文件参数信息等，文件参数信息包括系统文件的名称标识、生成时间、版本号、访问权限等等。</p>
    <p>[0063]	所述指令访问物理硬件设备的行为特征，包括：访问内存、硬盘、闪存等存储设备的存储空间超过第一设定阈值的情况所持续时间、占用CPU比例超过第二设定阈值的持续时间、是否读写设定范围的输入输出接口等等。可选地，所述第一设定阈值可以为预先根据已知恶意代码转义后的指令访问存储设备的情况统计得出的，所述第二设定阈值可以为预先根据已知恶意代码转义后的指令执行时占用CPU的情况统计得出的。</p>
    <p>[0064]	下面将结合附图2b所示的实例，对获得所述程序代码的执行特征的具体过程进</p>
    <p>9行介绍。</p>
    <p>[0065]	虚拟机中的程序代码al. exe在执行时所产生的读写访问请求集被转义后的指令集为al，，其中包含cmdO&#12316;cmd9总共10个指令；</p>
    <p>[0066]	通过读取监控到的指令的内容，可以获得执行所述程序代码时产生的读写请求所转义生成的指令的内容（如表1所示），可选地，可以只读取其中部分指令的内容，例如读取 cmdl的内容为“0xl95fd3”，读取cmd6的内容为“0xl3457e”。</p>
    <p>[0067]	表 1</p>
    <p>[0068]</p>
    <div class="patent-image small-patent-image"> <a href="//patentimages.storage.googleapis.com/CN102254120A/CN102254120AD00101.png"> <img id="idf0001" file="CN102254120AD00101.tif" img-content="drawing" img-format="tif" src="//patentimages.storage.googleapis.com/CN102254120A/CN102254120AD00101.png" class="patent-full-image" alt="Figure CN102254120AD00101"> </a> </div>
    <p>[0069]</p>
    <p>[0070]	可选地，通过以下方式可以获得转义生成的指令在所述虚拟机监视器中的行为特征或所述指令访问物理硬件设备的行为特征：</p>
    <p>[0071]	监控虚拟机监视器中预定应用程序编程接口（API，Application Programming Interface)，例如文件系统API、Input/Output操作API等等，是否被转义生成的指令所调用，若被转义生成的指令cmdl&#12316;cmdlO所调用，则根据指令调用所述API时传入的参数，获得转义生成的指令在所述虚拟机监视器中的行为特征或所述指令访问物理硬件设备的行为特征。所述传入的参数包括文件路径、文件标识等文件参数信息，或者所要读取或写入的接口的标识、读取或写入文件或接口的数据等等。例如根据cmd2调用文件系统API时传入的参数可以得到，cmd2要修改路径/boot/下的名称为xen. gz的系统文件的内容。</p>
    <p>[0072]	此外，也可以通过监控预定的API获知所述指令执行过程中，宿主机上存储资源或处理资源使用情况，从而进一步获得所述指令访问硬件的行为特征，如存储设备的存储空间的大小、及占用CPU的比例。[0073]	步骤203，将获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，并根据比对结果确定所述程序代码是否为恶意代码。</p>
    <p>[0074]	其中，在设置具体的比对方式时可以根据安全等级的需求、宿主机的处理性能等因素综合考虑，例如，如果对安全等级的需求较高，可以设置只要获得的执行特征中存在至少一个执行特征与已知恶意代码的执行特征一致，就说明比对结果相符，判定所述程序代码为恶意代码，如只要程序代码的标识与已知恶意代码的标识一致，就判定所述程序代码为恶意代码；或者如果宿主机的处理性能较低，则可以只比对部分容易获得的执行特征是否一致，若一致则说明比对结果相符，否则比对结果不相符。如只比对程序代码的标识、数字签名、发布者标识，省略比对相对获取难度较大的执行特征，如上述访问物理硬件设备的行为特征等。在这里不再一一列举。</p>
    <p>[0075]	其中，比对流程包括但不限于：</p>
    <p>[0076]	流程一：宿主机的本地数据库中存储黑名单，黑名单中包含已知恶意代码的执行特征。</p>
    <p>[0077]	宿主机将获得的所述程序代码的执行特征与本地数据库黑名单中已知恶意代码的执行特征进行比对；若比对结果相符，确定所述程序代码为恶意代码，否则确定所述程序代码为非恶意代码。</p>
    <p>[0078]	例如，黑名单中包含已知恶意代码malwarel. exe、malware2. exe禾口 malware3. exe 的执行特征，宿主机将上述获得的程序代码al. exe的执行特征与黑名单中3个恶意代码的执行特征逐一进行比对，以程序代码al. exe的执行特征与malwarel. exe的比对为例：</p>
    <p>[0079]	已知恶意代码malwarel. exe的执行特征包括：</p>
    <p>[0080]	(1)转义生成的指令集malwarel，中cmdl的内容为“0xl95fd3”，cmd6的内容为 "0xl3457e",</p>
    <p>[0081]	(2)转义生成的指令在虚拟机监视器中的行为特征为“修改路径/boot/下的名称为xen. gz的系统文件的内容”。</p>
    <p>[0082]	将程序代码al. exe执行时转义生成的指令集al，中cmdl、cmd6的内容与指令集 malwarel'中cmdl、cmd6的内容进行比对、并将指令集al，中的指令在所述虚拟机监视器中的行为特征与malwarel’中的指令在所述虚拟机监视器中的行为特征进行比对；比对结果为cmdl、cmd6的内容一致，且指令集al’中的指令在所述虚拟机监视器中的行为特征与 mall’中的指令在所述虚拟机监视器中的行为特征均为“修改路径/boot/下的名称为xen. gz的系统文件的内容”。故比对结果为程序代码al. exe与恶意代码mall, exe的执行特征相符，说明程序代码al. exe为恶意代码。</p>
    <p>[0083]	可选地，所述本地数据库可以定时更新。</p>
    <p>[0084]	可选地，在比对结果不相符时，还可以提醒用户是否运行所述程序代码。</p>
    <p>[0085]	可选地，上述步骤201&#12316;步骤203可以是宿主机中的恶意代码的检测装置来执行的。</p>
    <p>[0086]	本发明实施例提供的恶意代码的检测方法在宿主机的虚拟机监视器中监控转义生成的指令，并根据指令获得所述程序代码的执行特征；将获得的执行特征与预先存储的已知恶意代码的执行特征进行比对，并根据比对结果确定所述程序代码是否为恶意代码。 无需在每个虚拟机中都安装杀毒软件，从而提高了检测效率，减少了重复安装杀毒软件所</p>
    <p>11占用的宿主机的存储资源、以及各虚拟机分别运行杀毒软件所占用的宿主机的处理资源。</p>
    <p>[0087]	实施例二</p>
    <p>[0088]	为了提高恶意代码检测的准确性，本实施例提供了实施例一中步骤203的另一种确定所述程序代码是否为恶意代码的流程，宿主机的本地数据库中还存储有白名单，宿主机根据黑白名单的比对结果来确定所述程序代码是否为恶意代码，并在根据本地数据库比对结果无法确定所述程序代码是否为恶意代码时，将执行特征或者程序代码发送给集群查杀设备进行判定，并接收集群查杀设备返回的判定结果，具体如附图3所示。</p>
    <p>[0089]	在宿主机的本地数据库中不仅存储黑名单，还存储白名单，白名单中包含已知正常代码的执行特征。</p>
    <p>[0090]	步骤301，宿主机将获得的所述程序代码的执行特征与本地数据库黑名单中的已知恶意代码的执行特征进行第一次比对，若比对结果相符，则确定所述程序代码为恶意代码，否则进入步骤302 ；</p>
    <p>[0091]	本实施例中的具体的比对方式参照实施例一。</p>
    <p>[0092]	步骤302，若第一次比对结果不相符，将获得的所述执行特征与本地数据库白名单中的已知正常代码的执行特征进行第二次比对；</p>
    <p>[0093]	若第二次比对结果相符，则确定所述程序代码为非恶意代码；</p>
    <p>[0094]	若第二次比对结果不相符，则进入步骤303a或步骤30&#190; ；</p>
    <p>[0095]	步骤303a，宿主机将获得的所述执行特征发送给集群查杀设备，进入3(Ma。</p>
    <p>[0096]	步骤30&#189;，宿主机接收所述集群查杀设备返回的所述程序代码是否为恶意代码的判定结果，所述判定结果是所述集群查杀设备将所述特征与该集群查杀设备扩展数据库中已知恶意代码的执行特征进行比对确定出的。</p>
    <p>[0097]	与宿主机相比，集群查杀设备可以利用分布式计算技术的计算性能优势、或分布式存储的存储容量优势，将宿主机发来的执行特征与扩展数据库黑名单中已知恶意代码的执行特征进行比对，从而得到判定结果，具体比对的方式与宿主机相类似，在这里不再重复介绍。</p>
    <p>[0098]	步骤30北，宿主机将所述程序代码发送给集群查杀设备，进入步骤304b。</p>
    <p>[0099]	步骤304b，宿主机接收所述集群查杀设备返回的所述程序代码是否为恶意代码的判定结果，所述判定结果是所述集群查杀设备利用沙箱技术或者其他类似沙箱的技术执行所述程序代码后，根据执行结果确定出的。</p>
    <p>[0100]	沙箱（或称沙盘）技术是一种现有虚拟化安全隔离技术，该技术按照安全策略限制程序行为的执行环境，在沙箱中运行的代码不能够修改或查看用户系统。集群查杀设备采用沙箱技术模拟运行可疑代码，根据运行结果给出可疑代码是否为恶意代码的判定结果。</p>
    <p>[0101]	可选地，上述各个步骤可以是宿主机中的恶意代码的检测装置来执行的。</p>
    <p>[0102]	进一步地，在步骤303a、步骤303b中，恶意代码的检测装置可以指示执行所示程序代码的虚拟机将所述程序代码发送给集群查杀设备，如恶意代码的检测装置可以通过向虚拟机中的查杀代理发送通知消息，来指示虚拟机将所述程序代码发送给集群查杀设备； 恶意代码的检测装置也可以从虚拟机中获得所述程序代码，并将获得的所述程序代码发送给集群查杀设备，如恶意代码的检测装置可以通过向虚拟机中的查杀代理发送请求消息，并从接收到的对应的响应消息中获得所述程序代码。</p>
    <p>[0103]	除了实施例一和本实施例中提供的宿主机中的比对方案，还可以有其他比对方案，如宿主机中先将获得的程序代码的执行特征与白名单中的执行特征进行比对，在比对结果不相符时再与黑名单中的执行特征进行第二次比对；或者并行地将程序代码的执行特征分别与黑名单中已知恶意代码的执行特征、白名单中已知正常代码的执行特征进行比对等等，在这里不再一一列举。</p>
    <p>[0104]	另外，在本发明实施例中本地数据库中也可以不存储白名单或者不与白名单进行比对，在步骤301比对结果不相符时，可以跳过步骤302，直接进入步骤303a或步骤30北。 这样，可以减少本地数据库占用的存储空间，但是可能会造成宿主机与集群查杀设备之间的交换消息较多。实际应用中可以根据宿主机的存储资源、网络传输资源等因素灵活选择。</p>
    <p>[0105]	在本发明实施例提供的恶意代码的检测方法中，宿主机根据本地数据库比对结果无法确定所述程序代码是否为恶意代码时，将执行特征或者程序代码发送给集群查杀设备进行判定，并接收集群查杀设备返回的判定结果。利用集群查杀设备分布式计算系统的性能优势，根据扩展数据库或者沙箱来确认宿主机发来的程序代码是否为恶意代码，从而提高了检测的准确性。</p>
    <p>[0106]	实施例三</p>
    <p>[0107]	在实施例二中，步骤303a、304a的分布式行为特征比对判定方式与步骤30北、 304b的沙箱判定方式相比，前者处理效率较高、但无法识别出之前未出现过的新的恶意代码；后者能够识别出之前未出现过的新的恶意代码，但处理效率较低。为了能够结合这两种判定方式的优势，既具有较高的处理效率，同时也能识别出新的恶意代码，本实施例又提供了一种将所述程序代码的执行特征与预先存储的已知恶意代码的执行特征进行比对，并根据比对结果确定所述程序代码是否为恶意代码方法，具体流程如附图如所示。</p>
    <p>[0108]	在附图如中，步骤401与附图3中步骤301类似、步骤402与附图3中步骤302 类似。</p>
    <p>[0109]	步骤401，宿主机将获得的所述程序代码的执行特征与本地数据库黑名单中的已知恶意代码的执行特征进行第一次比对，若比对结果相符，则确定所述程序代码为恶意代码，否则进入步骤402 ；本实施例中的具体的比对方式参照实施例一。</p>
    <p>[0110]	步骤402，若第一次比对结果不相符，将获得的所述执行特征与本地数据库白名单中的已知正常代码的执行特征进行第二次比对；</p>
    <p>[0111]	若第二次比对结果相符，则确定所述程序代码为非恶意代码；</p>
    <p>[0112]	若第二次比对结果不相符，则进入步骤403 ；</p>
    <p>[0113]	步骤403，宿主机将获得的所述执行特征发送给集群查杀设备；</p>
    <p>[0114]	步骤404，宿主机接收所述集群查杀设备返回的所述程序代码为恶意代码或非恶意代码的判定结果、或者用于表明程序代码无法识别的标识，若宿主机接收到用于表明程序代码无法识别的标识，则进入步骤405 ；</p>
    <p>[0115]	其中，若所述集群查杀设备确定接收到的所述执行特征和扩展数据库黑名单中已知恶意代码的执行特征符合，则能够判定所述程序代码为恶意代码，则返回所述程序代码为恶意代码的判定结果；</p>
    <p>[0116]	若所述集群查杀设备确定接收到的所述执行特征和扩展数据库白名单中已知正</p>
    <p>13常代码的执行特征符合，则能够判定所述程序代码为非恶意代码，则返回所述程序代码为非恶意代码的判定结果；</p>
    <p>[0117]	若所述集群查杀设备确定接收到的所述执行特征与扩展数据库黑名单中已知恶意代码的执行特征、扩展数据库白名单中已知正常代码的执行特征均不符合，则返回用于表明程序代码无法识别的标识。</p>
    <p>[0118]	步骤405，宿主机将所述程序代码发送给集群查杀设备；</p>
    <p>[0119]	步骤406，宿主机接收所述集群查杀设备返回的所述程序代码是否为恶意代码的判定结果，所述判定结果是所述集群查杀设备利用沙箱技术执行所述程序代码后，根据执行结果确定出的。</p>
    <p>[0120]	请参照附图4b，本发明实施例提供的上述检测方法也可以进行如下调整，用步骤 410&#12316;步骤411替换附图如中的步骤403&#12316;步骤406 ；</p>
    <p>[0121]	步骤410，宿主机将所述程序代码、以及获得的所述执行特征发送给集群查杀设备；</p>
    <p>[0122]	集群查杀设备可以首先将接收到的执行特征与扩展数据库黑名单中已知恶意代码的执行特征进行比对，若比对结果相符，能够确定出所述程序代码为恶意代码，则直接返回所述程序代码为恶意代码的判定结果；若比对结果不相符，则进一步在沙箱中执行所述程序代码，根据执行结果判定所述程序代码是否为恶意代码。</p>
    <p>[0123]	步骤411，宿主机接收集群查杀设备返回的判定结果。</p>
    <p>[0124]	实施例四</p>
    <p>[0125]	在实施例一至实施例三中，当宿主机根据本地数据库、或者集群查杀设备返回的判定结果确定出所述程序代码为恶意代码后，还包括：阻止执行所述程序代码的读写请求转义的指令；</p>
    <p>[0126]	可选地，还可以隔离所述程序代码的读写请求转义的指令，或者提示用户删除所述程序代码。</p>
    <p>[0127]	当确定出所述程序代码为非恶意代码时，还包括：继续执行所述程序代码的读写请求转义的指令。</p>
    <p>[0128]	本发明实施例宿主机在检测出恶意代码后，可以阻止执行恶意代码发起的读写请求转义的指令，从而解决宿主机上多个虚拟机之间的恶意代码传播问题，提高安全性。</p>
    <p>[0129]	实施例五</p>
    <p>[0130]	请参照附图5，在实施例一至实施例四中，若宿主机根据本地数据库、或者根据集群查杀设备返回的判定结果确定出所述程序代码为恶意代码后，还包括：</p>
    <p>[0131]	步骤501，记录该程序代码的标识，继而统计设定时间段内该程序代码的标识被检测出的次数，所述设定时间段可以根据此前恶意代码被检测频度的历史记录、或者宿主机的性能等因素来确定；</p>
    <p>[0132]	步骤502，定期或不定期地将记录的程序代码的标识及设定时间段内该程序代码的标识被记录的次数发送给集群查杀设备；</p>
    <p>[0133]	步骤503，接收集群查杀设备返回的数据库内容，所述接收到的数据库内容是所述集群查杀设备根据宿主机发送所述程序代码的标识及所述次数确定出的；</p>
    <p>[0134]	步骤504，根据接收到数据库内容替换本地数据库的内容，从而更新本地数据库。[0135]	可选地，所述接收到的数据库内容是所述集群查杀设备根据设定地理区域、或者网络区域（例如某一局域网、某大学的网络、或某城市的网络）中各宿主机发送的程序代码的标识及对应被记录的次数更新的。</p>
    <p>[0136]	通过上述方案，使得宿主机的本地数据库能够被及时更新，一方面可以提高实施例一中检测恶意代码的准确率；另一方面可以提高宿主机将获得的所述程序代码的执行特征与本地数据库黑名单中恶意代码的执行特征进行比对，即可判定出所述程序代码为恶意代码的几率，从而减少实施例二、实施例三中宿主机频繁将程序代码、或程序代码的执行特征发送给集群查杀设备所耗费的网络传输资源，提高了检测效率。</p>
    <p>[0137]	本发明实施例中宿主机的本地数据库可以用以检测各虚拟机中的程序代码是否为恶意代码，不但本地数据库中数据的利用率高，并且更新升级方案较为简便，避免了现有技术在每个虚拟机上分别安装杀毒软件所带来的更新维护较为复杂的问题。</p>
    <p>[0138]	实施例六</p>
    <p>[0139]	请参照附图6a，本发明实施例从集群查杀设备的角度，对恶意代码的检测方法进行描述。</p>
    <p>[0140]	步骤601，集群查杀设备接收宿主机发来的程序代码、或程序代码的执行特征，若接收到得是程序代码，则进入步骤602 ；若接收到得是程序代码的执行特征，则进入步骤 605 ；</p>
    <p>[0141]	步骤602，集群查杀设备利用沙箱技术或者其他类似沙箱的技术执行所述程序代码，获得执行结果，进入步骤603 ；</p>
    <p>[0142]	步骤603，集群查杀设备根据执行结果中预设参数的参数值、以及预设的判别规则的集合，判定所述程序代码是否为恶意代码，所述判别规则中包含至少一个所述预设参数的阈值判断范围；</p>
    <p>[0143]	具体地，所述预设参数可以是沙箱的环境参数（如注册表中的某些参数），或者预定范围（例如预定路径下的文件夹）内文件的数量、文件大小、文件的链接、文件的读写权限等等。如，其中的一个预设规则:R1 = (if path = /boot/xen. gz,operation = writing or changing link, then Malware)，即“若路径/boot/下名称为xen. gz的文件、在程序代码的执行过程中被执行的操作是修改文件内容、或修改文件的链接，则为恶意代码”。在沙箱中执行所述程序代码后执行结果命中规则R1，则说明所述程序代码为恶意代码；</p>
    <p>[0144]	可选地，所述预设规则是根据已知恶意代码的执行结果分析得到的。</p>
    <p>[0145]	步骤604，集群查杀设备将步骤603的判定结果发送给宿主机；</p>
    <p>[0146]	步骤605，集群查杀设备将宿主机发来的执行特征与扩展数据库黑名单中已知恶意代码的执行特征进行比对，若与黑名单中已知恶意代码的执行特征相符，则进入步骤 606，若不相符，则进入步骤607 ；</p>
    <p>[0147]	步骤606，集群查杀设备返回所述程序代码为恶意代码的判定结果；</p>
    <p>[0148]	步骤607，集群查杀设备将宿主机发来的执行特征与扩展数据库白名单中已知正常代码的执行特征进行比对，若与白名单中已知正常代码的执行特征相符，则进入步骤 608，若不相符，则进入步骤609 ；</p>
    <p>[0149]	步骤608，集群查杀设备返回所述程序代码为非恶意代码的判定结果；</p>
    <p>[0150]	步骤609，集群查杀设备返回用于表明所述程序代码返回无法识别的标识。</p>
    <p>15[0151]	这里需要特别说明的是：步骤601、步骤602、步骤603和步骤604组成的利用沙箱技术判定宿主机中的程序代码是否为恶意代码的方案、与步骤601、步骤605&#12316;步骤609组成的通常查询扩展数据库的方式判定宿主机中的程序代码是否为恶意代码的方案可以独立实施，并无相互依赖关系。</p>
    <p>[0152]	请参照附图6b，本发明实施例附图6a中提供的上述检测方法也可以进行如下调&#38626;</p>
    <p>iF. ο</p>
    <p>[0153]	步骤610，集群查杀设备接收宿主机发来的程序代码、以及该程序代码的执行特征；</p>
    <p>[0154]	步骤611，集群查杀设备将接收到的执行特征与扩展数据库黑名单中已知恶意代码的执行特征进行比对，若与黑名单中已知恶意代码的执行特征相符，则进入步骤612，否则进入步骤613 ；</p>
    <p>[0155]	步骤612，集群查杀设备返回的所述程序代码为恶意代码的判定结果。</p>
    <p>[0156]	步骤613，集群查杀设备将宿主机发来的执行特征与扩展数据库白名单中已知正常代码的执行特征进行比对，若与白名单中已知正常代码的执行特征相符，则进入步骤 614，若不相符，则进入步骤615 ；</p>
    <p>[0157]	步骤614，集群查杀设备返回所述程序代码为非恶意代码的判定结果。</p>
    <p>[0158]	步骤615，集群查杀设备利用沙箱技术执行所述程序代码，获得执行结果，进入步骤 616 ；</p>
    <p>[0159]	步骤616，集群查杀设备根据执行结果中预设参数的参数值、以及预设的判别规则的集合，判定所述程序代码是否为恶意代码，所述判别规则中包含至少一个所述预设参数的参数值范围；</p>
    <p>[0160]	步骤617，集群查杀设备将步骤616的判定结果发送给宿主机。</p>
    <p>[0161]	附图6a所提供的方案，宿主机与集群查杀设备单次传输的数据量较小，但交互的次数较多；附图6b所提供的方案，宿主机与集群查杀设备单次传输的数据量较大，但可以减少交互次数。在实施时可以根据实际网络情况灵活选择。</p>
    <p>[0162]	可选地，在附图6a的步骤602、或附图6b的步骤615中，集群查杀设备利用沙箱技术执行所述程序代码，获得执行结果的具体方式包括但不限于以下方式或者方式的组合：</p>
    <p>[0163]	方式一：在预先构建的用于模拟虚拟机监视器环境的第一沙箱中执行所述程序代码，获得的执行结果为执行结束后所述第一沙箱的安全状态报告。依据方式一，可以发现虚拟机利用宿主机传播恶意代码的行为。</p>
    <p>[0164]	方式二：在预先构建的用于模拟虚拟机环境的第二沙箱中执行所述程序代码，获得的执行结果为执行结束后所述第二沙箱的安全状态报告。依据方式二，可以获得恶意代码在虚拟机、或虚拟机对应的虚拟硬件设备中的运行情况。</p>
    <p>[0165]	本发明实施例提供的恶意代码的检测方法能够利用集群查杀设备分布式计算系统的性能优势，将宿主机发来的程序代码的执行特征和扩展数据库中已知恶意代码的执行特征进行比对，判定所述程序代码是否为恶意代码；或者，或者利用沙箱技术虚拟执行宿主机发来的程序代码，根据执行结果来确认宿主机发来的程序代码是否为恶意代码，从而提高了检测的准确性。</p>
    <p>[0166]	实施例七[0167]	本发明实施例提供的集群查杀设备中数据库的更新方式如附图7所示。</p>
    <p>[0168]	步骤701，根据沙箱技术的执行结果，判定宿主机发来的程序代码是否为恶意代码后，根据所述判定结果更新集群查杀设备中的数据库；</p>
    <p>[0169]	集群查杀设备若判定所述程序代码为恶意代码，则将该程序代码的标识和对应的执行特征添加到数据库的黑名单中；</p>
    <p>[0170]	可选地，集群查杀设备若判定所述程序代码为非恶意代码，将该程序代码的标识和对应的执行特征添加到数据库的白名单中。</p>
    <p>[0171]	步骤702，接收宿主机发来的程序代码的标识和设定时间段内该程序代码的标识被检测到的次数；</p>
    <p>[0172]	步骤703，根据预定的筛选规则、以及接收到得所述程序代码的标识和所述次数， 从所述数据库中筛选出部分内容，所述筛选规则包括统计指标判断阈值，所述统计指标的值可以根据所述程序代码的标识和设定时间段内该程序代码被检测到的次数确定出；</p>
    <p>[0173]	步骤704，将筛选出的数据库的内容发送给宿主机，以便宿主机更新本地数据库。</p>
    <p>[0174]	本发明实施例还提供了一种集群查杀设备中数据库的具体架构，如附图8所示。 集群查杀设备中数据库包括更新规则库、扩展数据库和基本数据库，其中更新规则库中存储有至少一个更新规则。扩展数据库和基本数据库的形成流程如附图9所示。</p>
    <p>[0175]	步骤901，集群查杀设备利用沙箱技术执行宿主机发来的程序代码，并根据执行结果判定所述程序代码是否为恶意代码后（利用沙箱执行程序代码并根据执行结果判定是否为恶意代码的具体实现方式请参照实施例六中的内容），根据所述判定结果更新扩展数据库；</p>
    <p>[0176]	可选地，集群查杀设备在判定结果为所述程序代码为恶意代码时，将该程序代码的标识和对应的执行特征添加到扩展数据库的黑名单中；</p>
    <p>[0177]	可选地，集群查杀设备在判定结果为所述程序代码为非恶意代码时，将该程序代码的标识和对应的执行特征添加到扩展数据库的白名单中。</p>
    <p>[0178]	步骤902，接收宿主机定期或不定期发来的程序代码的标识、以及设定时间段内该程序代码的标识被检测出的次数；</p>
    <p>[0179]	可选地，集群查杀设备还可以从宿主机发来的承载有程序代码的标识和被检测出的次数的数据包的包头中获取宿主机的标识、发送时间等附加信息。</p>
    <p>[0180]	步骤903，集群查杀设备根据宿主机发来的程序代码的标识和对应的次数，计算扩展数据库中各程序代码的预定统计指标值；</p>
    <p>[0181]	可选地，所述统计指标包括：恶意代码被各宿主机检测出的总次数（也可以理解为恶意代码感染虚拟机的总次数）、或者恶意代码被各宿主机检测出的速度（也可以理解为恶意代码感染虚拟机的速度）、恶意代码被不同宿主机检测出的情况（也可以理解为恶意代码感染虚拟机的普遍性，即传播的广度）、恶意代码被各个虚拟机检测出的时间、恶意代码被第一个宿主机检测出的时间等等（也可以理解为恶意代码首次感染虚拟机的时间）。</p>
    <p>[0182]	步骤904，集群查杀设备根据预定的筛选规则从扩展数据库筛选出符合所述筛选规则的恶意代码的标识、及对应的执行特征，更新到基本数据库中，所述筛选规则包括至少一个所述统计指标判断阈值；</p>
    <p>17[0183]	下面将对筛选规则进行举例说明：</p>
    <p>[0184]	1、根据恶意代码被各宿主机检测出的总数设定的筛选规则Rll ：若恶意代码被检测出的总次数超过1000次，则更新该恶意代码的标识和执行特征到基本数据库。</p>
    <p>[0185]	2、根据恶意代码被各宿主机检测出的速度设定的筛选规则R12 ：若恶意代码被检测出的速度超过每天500次，则更新该恶意代码的标识和执行特征到基本数据库；通过该类筛选规则，集群查杀设备可以筛选出传播速度快的恶意代码。</p>
    <p>[0186]	3、根据恶意代码被不同宿主机检测出的情况设定的筛选规则R13 ：若恶意代码被超过80%的宿主机检测到，则更新该恶意代码的标识和执行特征到基本数据库；通过该类筛选规则，集群查杀设备可以筛选出传播范围广的恶意代码。</p>
    <p>[0187]	4、根据恶意代码被宿主机首次检测出的时间设定的筛选规则R14 ：若恶意代码被首次检测到的时间至今超过1个月（即持续感染宿主机的时间超过1个月），则更新该恶意代码的标识和执行特征到基本数据库；通过此类筛选规则，集群查杀设备可以筛选出感染时间长的恶意代码。</p>
    <p>[0188]	步骤905，集群查杀设备将所述基本数据库的内容发送给各宿主机，以便宿主机更新本地数据库。</p>
    <p>[0189]	可选地，为了有效控制各宿主机本地数据库的容量，节约各宿主机的存储资源，在步骤904之前，还包括：</p>
    <p>[0190]	步骤906，根据预定的更新规则，从基本数据库中删除符合所述更新规则的程序代码的标识、及该程序代码的执行特征，所述更新规则包括至少一个所述统计指标判断阈值。</p>
    <p>[0191]	下面也对更新规则进行举例说明：</p>
    <p>[0192]	1、根据恶意代码近期感染虚拟机的强度设定的更新规则R21 ：若恶意代码在最近设定时间段内感染虚拟机的次数小于设定次数（如10次或100次），则从基本数据库黑名单中剔除该恶意代码的标识及对应的执行特征；</p>
    <p>[0193]	2、根据恶意代码近期感染虚拟机的广度设定的更新规则R22 ：若恶意代码在最近设定时间段内感染不同虚拟机的数量小于设定次数（如10个或100个），则从基本数据库黑名单中剔除该恶意代码的标识及对应的执行特征。</p>
    <p>[0194]	所述恶意代码在最近设定时间段内感染不同虚拟机的数量可以根据接收到宿主机发送程序代码和次数的时间、以及宿主机的标识来确定。</p>
    <p>[0195]	3、根据恶意代码的处于非激活状态的时间设定的更新规则R23 ：若恶意代码在最近设定时间段内（如3个月或1年）在所有虚拟机中从未再次出现，则从基本数据库黑名单中剔除该恶意代码的标识及对应的执行特征。</p>
    <p>[0196]	本发明实施例提供的更新方案能够从集群查杀设备的数据库中筛选出检测率较高的数据库内容，根据筛选出的数据库内容更新宿主机的本地数据库，从而提高宿主机根据本地数据库就可以判定虚拟机中执行的程序代码是否为恶意代码的几率，减少将程序代码或程序代码的执行特征发送给集群查杀设备进行判定的次数，从而降低所占用的宿主机与集群查杀设备之间的传输带宽，缩短判定时间，提高判定效率。</p>
    <p>[0197]	实施例八</p>
    <p>[0198]	请参照附图10，本发明实施例提供了一种宿主机设备101，包括虚拟机监视器102 和至少一个虚拟机103，还包括恶意代码的检测装置104，其中：[0199]	所述恶意代码的检测装置104，用于在宿主机101的虚拟机监视器102中监控指令的执行情况，所述指令是该宿主机的虚拟机103中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的；根据所述指令的执行情况，获得所述程序代码的执行特征；将获取单元获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，并在比对结果不相符时确定所述程序代码为恶意代码。</p>
    <p>[0200]	相应地，本发明实施例还提供了一种恶意代码的检测装置，其结构示意图如图11 所示，该装置包括监控单元1041、获取单元1042和确定单元1043，具体如下：</p>
    <p>[0201]	监控单元1041，用于在宿主机的虚拟机监视器中监控指令的执行情况，所述指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的；</p>
    <p>[0202]	获取单元1042，用于根据监控单元1041监控得到的所述指令的执行情况，获得所述程序代码的执行特征；</p>
    <p>[0203]	确定单元1043，用于将获取单元1042获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，并在比对结果相符时确定所述程序代码为恶意代码。</p>
    <p>[0204]	进一步地，所述恶意代码的检测装置还包括：</p>
    <p>[0205]	第一发送单元1046，用于在确定单元1043的比对结果不相符时，将获得的所述执行特征发送给集群查杀设备，或者将所述程序代码发送给集群查杀设备；</p>
    <p>[0206]	第一接收单元1047，用于接收所述集群查杀设备根据第一发送单元1046发送的所述执行特征，返回的所述程序代码是否为恶意代码的判定结果，所述判定结果是所述集群查杀设备将所述特征与该集群查杀设备数据库中已知恶意代码的执行特征进行比对确定出的；或者</p>
    <p>[0207]	接收所述集群查杀设备根据第一发送单元1046发送的程序代码，返回的所述程序代码是否为恶意代码的判定结果，所述判定结果是所述集群查杀设备利用沙箱技术执行所述程序代码后，根据执行结果确定出的。</p>
    <p>[0208]	可选地，附图11中的确定单元1043具体包括：</p>
    <p>[0209]	第一确定子单元1044，用于将获得的所述执行特征与本地数据库黑名单中的已知恶意代码的执行特征进行比对，若比对结果相符，则确定所述程序代码为恶意代码；</p>
    <p>[0210]	第二确定子单元1045，用于在第一确定子单元1044的比对结果不相符时，将获得的所述执行特征与本地数据库白名单中的已知正常代码的执行特征进行第二次比对，若第二次比对结果相符，则确定所述程序代码为非恶意代码；</p>
    <p>[0211]	所述第一发送单元1046还用于若第二确定子单元1045第二次比对结果不相符， 则将获得的所述执行特征发送给集群查杀设备，或者将所述程序代码发送给集群查杀设备。</p>
    <p>[0212]	可选地，请参照附图12，附图11中的所述恶意代码的检测装置还包括：</p>
    <p>[0213]	记录统计单元1048，用于在确定单元1043确定出所述程序代码为恶意代码后，记录该程序代码的标识，并根据记录结果统计设定时间段内该程序代码被检测到的次数；</p>
    <p>[0214]	第二发送单元1049，用于将记录统计单元1048得到的所述程序代码的标识及所述次数发送给集群查杀设备；</p>
    <p>[0215]	第二接收单元1040，用于接收集群查杀设备返回的数据库内容，并根据接收到数据库内容替换本地数据库的内容，所述接收到的数据库内容是所述集群查杀设备根据所述程序代码的标识及所述次数确定出的，所述数据库内容包含已知恶意代码的执行特征。</p>
    <p>[0216]	可选地，第一发送单元1046具体包括：通知子单元用于通过向虚拟机中的查杀代理发送通知消息，来指示虚拟机将所述程序代码发送给集群查杀设备；</p>
    <p>[0217]	或者第一发送单元1046具体包括：第一发送子单元、第一接收子单元和第二发送子单元，其中：</p>
    <p>[0218]	第一发送子单元，用于向虚拟机中的查杀代理发送请求消息；</p>
    <p>[0219]	第一接收子单元，用于接收虚拟机中的查杀代理根据所述请求消息，返回的响应消息；</p>
    <p>[0220]	第二发送子单元，用于从所述响应消息中获得程序代码，并将获得的程序代码发送给集群查杀设备。</p>
    <p>[0221]	本发明实施例提供的恶意代码的检测装置可以集成在宿主机的虚拟机监视器中， 也可以由独立的硬件或软件模块来实现。</p>
    <p>[0222]	本发明实施例提供了一种宿主机设备、以及一种宿主机中的恶意代码的检测装置。该装置在宿主机的虚拟机监视器中监控转义生成的指令，并根据指令获得所述程序代码的执行特征；将获得的执行特征与预先存储的已知恶意代码的执行特征进行比对，并根据比对结果确定所述程序代码是否为恶意代码。与现有的在每个虚拟机中都安装杀毒软件来实现恶意代码检测的方案相比，提高了检测效率，减少了在所有虚拟机上重复安装杀毒软件所占用的宿主机的存储资源、以及各虚拟机分别运行杀毒软件所占用的宿主机的处理资源。</p>
    <p>[0223]	实施例九</p>
    <p>[0224]	请参照附图13，本发明实施例提供了一种恶意代码的检测装置，该恶意代码的检测装置可以为集群查杀设备，该装置包括第一接收单元131、执行单元132、判定单元133和第一发送单元134，其中：</p>
    <p>[0225]	第一接收单元131，用于接收宿主机发来的程序代码；</p>
    <p>[0226]	执行单元132，用于利用沙箱技术执行第一接收单元131接收的所述程序代码，获得执行结果；</p>
    <p>[0227]	判定单元133，用于根据所述执行结果中预设参数的参数值、以及预设的判别规则的集合，判定所述程序代码是否为恶意代码，所述判别规则中包含至少一个所述预设参数的阈值判断范围；</p>
    <p>[0228]	第一发送单元134，用于将判定单元133的判定结果发送给所述宿主机。</p>
    <p>[0229]	可选地，所述执行单元132具体用于在预先构建的用于模拟虚拟机监视器环境的第一沙箱中执行所述程序代码，获得的执行结果为执行结束后所述第一沙箱的安全状态报告；和/或，在预先构建的用于模拟虚拟机环境的第二沙箱中执行所述程序代码，获得的执行结果为执行结束后所述第二沙箱的安全状态报告。</p>
    <p>[0230]	可选地，所述集群查杀设备还包括：</p>
    <p>[0231]	数据库130，该数据库130中的黑名单用于保存已知恶意代码的标识及对应的执行特征，可选地，该数据库130中的白名单用于保存已知正常代码的标识及对应的执行特征。</p>
    <p>20[0232]	第一更新单元135，用于在判定单元133判定所述程序代码为恶意代码时，则将该程序代码的标识和对应的执行特征添加到数据库的黑名单中；</p>
    <p>[0233]	可选地，为了提高检测效果，还可以包括第二更新单元136，用于在判定单元133 判定所述程序代码为非恶意代码时，将该程序代码的标识和对应的执行特征添加到数据库的白名单中。</p>
    <p>[0234]	进一步地，为了能够及时更新宿主机的本地数据库，所述集群查杀设备还包括：</p>
    <p>[0235]	第二接收单元137，用于接收宿主机发来的程序代码的标识和设定时间段内该程序代码的标识被检测到的次数；</p>
    <p>[0236]	筛选单元138，用于根据第二接收单元137接收的所述程序代码的标识、所述次数、以及所述集群查杀设备中预定的筛选规则，从所述数据库130中筛选出部分内容，所述筛选规则包括统计指标判断阈值，所述统计指标的值根据所述程序代码的标识和所述次数确定出；</p>
    <p>[0237]	第二发送单元139，用于将所述筛选单元138筛选出的内容发送给宿主机，以便宿主机更新本地数据库。</p>
    <p>[0238]	本发明实施例提供的集群查杀设备能够利用分布式计算系统的性能优势，将宿主机发来的程序代码的执行特征和扩展数据库中已知恶意代码的执行特征进行比对，判定所述程序代码是否为恶意代码；或者，或者利用沙箱技术虚拟执行宿主机发来的程序代码，根据执行结果来确认宿主机发来的程序代码是否为恶意代码，从而提高了检测的准确性。</p>
    <p>[0239]	实施例十</p>
    <p>[0240]	请参照附图14，本发明实施例提供了一种恶意代码的检测系统，其中包括至少一个实施例八中所给出的宿主机101，其中的每个所述宿主机用于在该宿主机的虚拟机监视器中捕获指令，所述执行指令是该宿主机的虚拟机中执行程序代码时产生的读写请求被下发至虚拟机监视器时，转义生成的；根据所述指令获得所述程序代码的执行特征；将获得的所述执行特征与预先存储的已知恶意代码的执行特征进行比对，并在比对结果相符时确定所述程序代码为恶意代码。</p>
    <p>[0241]	进一步，所述恶意代码的检测系统还包括至少一个集群查杀设备100 ：</p>
    <p>[0242]	所述宿主机101，还用于将获得的所述执行特征与本地数据库黑名单中的已知恶意代码的执行特征进行比对，若比对结果不相符，则将所述程序代码或执行特征发送给集群查杀设备100，并接收所述集群查杀设备返回的所述程序代码是否为恶意代码的判定结果；所述判定结果是所述集群查杀设备将所述特征与该集群查杀设备数据库中已知恶意代码的执行特征进行比对确定出的，或者利用沙箱技术执行所述程序代码后，根据执行结果确定出的。</p>
    <p>[0243]	具体地，宿主机可以在比对结果不相符时，将获得的所述执行特征与本地数据库白名单中的已知正常代码的执行特征进行第二次比对，若第二次比对结果相符，则确定所述程序代码为非恶意代码；若第二次比对结果不相符，则将所述程序代码或执行特征发送给集群查杀设备100，或者，</p>
    <p>[0244]	宿主机可以在第一次比对结果不相符时，直接将所述程序代码或执行特征发送给集群查杀设备100。</p>
    <p>[0245]	所述集群查杀设备100，用于接收宿主机101发来的程序代码，利用沙箱技术执行所述程序代码，获得执行结果；根据所述执行结果中预设参数的参数值、以及预设的判别规则的集合，判定所述程序代码是否为恶意代码，所述判别规则中包含至少一个所述预设参数的参数值范围；将判定结果发送给所述宿主机101。</p>
    <p>[0246]	所述集群查杀设备100利用沙箱技术执行所述程序代码，获得执行结果的过程请参照实施例六、实施例九中的描述。</p>
    <p>[0247]	本发明实施例提供的恶意代码的检测系统，利用集群查杀设备分布式计算系统的性能优势，提高宿主机中恶意代码检测的准确性。</p>
    <p>[0248]	本领域普通技术人员可以理解实现上述实施例方法中的全部或部分步骤是可以通过程序来指令相关的硬件来完成，该程序可以存储于一计算机可读取存储介质中，如： ROM/RAM、磁碟、光盘等。</p>
    <p>[0249]	显然，本领域的技术人员可以对本发明进行各种改动和变型而不脱离本发明的精神和范围。这样，倘若本发明的这些修改和变型属于本发明权利要求及其等同技术的范围之内，则本发明也意图包含这些改动和变型在内。</p>
    <p>22</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101131677A?cl=zh">CN101131677A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2006年8月23日</td><td class="patent-data-table-td patent-date-value">2008年2月27日</td><td class="patent-data-table-td ">联想(北京)有限公司</td><td class="patent-data-table-td ">一种虚拟技术下硬盘数据的保护方法和保护系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101162485A?cl=zh">CN101162485A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2006年10月11日</td><td class="patent-data-table-td patent-date-value">2008年4月16日</td><td class="patent-data-table-td ">飞塔信息科技（北京）有限公司</td><td class="patent-data-table-td ">一种计算机恶意代码处理方法和系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102034050A?cl=zh">CN102034050A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年1月25日</td><td class="patent-data-table-td patent-date-value">2011年4月27日</td><td class="patent-data-table-td ">四川大学</td><td class="patent-data-table-td ">基于虚拟机和敏感Native API调用感知的恶意软件动态检测方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102082802A?cl=zh">CN102082802A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年3月1日</td><td class="patent-data-table-td patent-date-value">2011年6月1日</td><td class="patent-data-table-td ">陈彪</td><td class="patent-data-table-td ">一种基于行为的移动终端的安全防护系统和方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20100257608">US20100257608</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2010年3月31日</td><td class="patent-data-table-td patent-date-value">2010年10月7日</td><td class="patent-data-table-td ">Samsung Electronics Co., Ltd.</td><td class="patent-data-table-td ">Apparatus and method for preventing virus code execution</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="forward-citations"></a><div class="patent-section-header"><span class="patent-section-title"> 被以下专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102521542A?cl=zh">CN102521542A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年12月19日</td><td class="patent-data-table-td patent-date-value">2012年6月27日</td><td class="patent-data-table-td ">北京大学</td><td class="patent-data-table-td ">一种计算机软件漏洞利用的捕获方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102521542B?cl=zh">CN102521542B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年12月19日</td><td class="patent-data-table-td patent-date-value">2015年1月7日</td><td class="patent-data-table-td ">北京大学</td><td class="patent-data-table-td ">一种计算机软件漏洞利用的捕获方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102592080A?cl=zh">CN102592080A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年12月26日</td><td class="patent-data-table-td patent-date-value">2012年7月18日</td><td class="patent-data-table-td ">北京奇虎科技有限公司</td><td class="patent-data-table-td ">flash恶意文件检测方法及装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102779257A?cl=zh">CN102779257A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年6月28日</td><td class="patent-data-table-td patent-date-value">2012年11月14日</td><td class="patent-data-table-td ">奇智软件（北京）有限公司</td><td class="patent-data-table-td ">一种Android应用程序的安全检测方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103186740A?cl=zh">CN103186740A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年12月27日</td><td class="patent-data-table-td patent-date-value">2013年7月3日</td><td class="patent-data-table-td ">北京大学</td><td class="patent-data-table-td ">一种Android恶意软件的自动化检测方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103186740B?cl=zh">CN103186740B</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年12月27日</td><td class="patent-data-table-td patent-date-value">2015年9月23日</td><td class="patent-data-table-td ">北京大学</td><td class="patent-data-table-td ">一种Android恶意软件的自动化检测方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103294947A?cl=zh">CN103294947A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2013年2月22日</td><td class="patent-data-table-td patent-date-value">2013年9月11日</td><td class="patent-data-table-td ">株式会社日立制作所</td><td class="patent-data-table-td ">程序解析系统及方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN103294950A?cl=zh">CN103294950A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年11月29日</td><td class="patent-data-table-td patent-date-value">2013年9月11日</td><td class="patent-data-table-td ">北京安天电子设备有限公司</td><td class="patent-data-table-td ">一种基于反向追踪的高威窃密恶意代码检测方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US9213839">US9213839</a></td><td class="patent-data-table-td patent-date-value">2014年3月13日</td><td class="patent-data-table-td patent-date-value">2015年12月15日</td><td class="patent-data-table-td ">Huawei Technologies Co., Ltd.</td><td class="patent-data-table-td ">Malicious code detection technologies</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2013020400A1?cl=zh">WO2013020400A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年5月11日</td><td class="patent-data-table-td patent-date-value">2013年2月14日</td><td class="patent-data-table-td ">Huawei Technologies Co., Ltd.</td><td class="patent-data-table-td ">恶意代码的检测方法、系统及相关装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/WO2013097176A1?cl=zh">WO2013097176A1</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2011年12月30日</td><td class="patent-data-table-td patent-date-value">2013年7月4日</td><td class="patent-data-table-td ">Huawei Technologies Co., Ltd.</td><td class="patent-data-table-td ">一种用户体验指标监控方法及监控虚拟机</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=zviaBwABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0021560000">G06F21/56</a></span></td></tr><tr><td class="patent-data-table-td "> 合作分类</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=zviaBwABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=G06F21/566">G06F21/566</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2011年11月23日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年1月4日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Entry into substantive examination</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年12月12日</td><td class="patent-data-table-td ">C53</td><td class="patent-data-table-td ">Correction of patent for invention or patent application</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2012年12月12日</td><td class="patent-data-table-td ">COR</td><td class="patent-data-table-td ">Change of bibliographic data</td><td class="patent-data-table-td "><div class="nested-key-value"><span class="nested-key">Free format text: </span><span class="nested-value">CORRECT: APPLICANT; FROM: CHENGDU HUAWEI SYMANTEC TECHNOLOGIES CO., LTD. TO: HUAWEI DIGITAL TECHNOLOGY (CHENGDU) CO., LTD.</span></div></td></tr><tr><td class="patent-data-table-td patent-date-value">2014年5月21日</td><td class="patent-data-table-td ">C14</td><td class="patent-data-table-td ">Grant of patent or utility model</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/0137786427b7e94b25d3/CN102254120A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E7%9A%84%E6%A3%80%E6%B5%8B%E6%96%B9%E6%B3%95_%E7%B3%BB%E7%BB%9F%E5%8F%8A%E7%9B%B8.pdf?id=zviaBwABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U2mIRJHKyZLDGerSJwTL7IVhk2KyA"},"sample_url":"https://www.google.com/patents/reader?id=zviaBwABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>