<!DOCTYPE html><html><head><title>专利 CN103188248A - 基于单点登录的身份认证系统及方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_6e802a6b2b28d51711baddc2f3bec198/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_6e802a6b2b28d51711baddc2f3bec198__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="基于单点登录的身份认证系统及方法"><meta name="DC.contributor" content="邓羽" scheme="inventor"><meta name="DC.contributor" content="罗建伟" scheme="inventor"><meta name="DC.contributor" content="杨严冬" scheme="inventor"><meta name="DC.contributor" content="陈振民" scheme="inventor"><meta name="DC.contributor" content="李继勇" scheme="inventor"><meta name="DC.contributor" content="廖炳才" scheme="inventor"><meta name="DC.contributor" content="卓望数码技术（深圳）有限公司" scheme="assignee"><meta name="DC.date" content="2011-12-31" scheme="dateSubmitted"><meta name="DC.description" content="本发明提供一种基于单点登录的身份认证系统，对至少一应用系统实现单点登录，包括：对用户身份进行认证，对通过认证的用户生成令牌及会话信息的认证服务器；分别部署在至少一应用系统，将需要对用户身份进行认证的访问请求重定向到认证服务器，根据收到的令牌保护应用系统上的受保护资源的至少一认证客户端；和缓存包括令牌在内的会话信息，供认证服务器使用的外部缓存。本发明还提供一种基于单点登录的身份认证文件。本发明的认证服务器使用外部缓存来实现缓存，降低对认证服务器的数据存取压力，提高了访问速度。本发明还采用令牌替代现有技术中的服务票据，省去了认证客户端再次向认证服务器确认用户是否通过身份认证的步骤。"><meta name="DC.date" content="2013-7-3"><meta name="DC.relation" content="CN:101202753:A" scheme="references"><meta name="DC.relation" content="CN:101335626:A" scheme="references"><meta name="DC.relation" content="CN:101764806:A" scheme="references"><meta name="DC.relation" content="CN:102098158:A" scheme="references"><meta name="DC.relation" content="CN:1812403:A" scheme="references"><meta name="citation_patent_publication_number" content="CN:103188248:A"><meta name="citation_patent_application_number" content="CN:201110459220"><link rel="canonical" href="https://www.google.com/patents/CN103188248A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN103188248A?cl=zh"/><meta name="title" content="专利 CN103188248A - 基于单点登录的身份认证系统及方法"/><meta name="description" content="本发明提供一种基于单点登录的身份认证系统，对至少一应用系统实现单点登录，包括：对用户身份进行认证，对通过认证的用户生成令牌及会话信息的认证服务器；分别部署在至少一应用系统，将需要对用户身份进行认证的访问请求重定向到认证服务器，根据收到的令牌保护应用系统上的受保护资源的至少一认证客户端；和缓存包括令牌在内的会话信息，供认证服务器使用的外部缓存。本发明还提供一种基于单点登录的身份认证文件。本发明的认证服务器使用外部缓存来实现缓存，降低对认证服务器的数据存取压力，提高了访问速度。本发明还采用令牌替代现有技术中的服务票据，省去了认证客户端再次向认证服务器确认用户是否通过身份认证的步骤。"/><meta property="og:title" content="专利 CN103188248A - 基于单点登录的身份认证系统及方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN103188248A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN103188248A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=Q-vDCAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN103188248A&amp;usg=AFQjCNEmyXvrP1vEIbeNu0W9Jwv3FxzAsg" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/10da1b1fd246734e2d76/CN103188248A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/10da1b1fd246734e2d76/CN103188248A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN103188248A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN103188248A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN103188248A?cl=zh" style="display:none"><span itemprop="description">本发明提供一种基于单点登录的身份认证系统，对至少一应用系统实现单点登录，包括：对用户身份进行认证，对通过认证的用户生成令牌及会话信息的认证服务器；分别部署在至少一应用系统，将需要对用户身份进行认证的访...</span><span itemprop="url">https://www.google.com/patents/CN103188248A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN103188248A - 基于单点登录的身份认证系统及方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN103188248A - 基于单点登录的身份认证系统及方法" title="专利 CN103188248A - 基于单点登录的身份认证系统及方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN103188248 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201110459220</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年7月3日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2011年12月31日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2011年12月31日</td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201110459220.7, </span><span class="patent-bibdata-value">CN 103188248 A, </span><span class="patent-bibdata-value">CN 103188248A, </span><span class="patent-bibdata-value">CN 201110459220, </span><span class="patent-bibdata-value">CN-A-103188248, </span><span class="patent-bibdata-value">CN103188248 A, </span><span class="patent-bibdata-value">CN103188248A, </span><span class="patent-bibdata-value">CN201110459220, </span><span class="patent-bibdata-value">CN201110459220.7</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%82%93%E7%BE%BD%22">邓羽</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E7%BD%97%E5%BB%BA%E4%BC%9F%22">罗建伟</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%9D%A8%E4%B8%A5%E5%86%AC%22">杨严冬</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E9%99%88%E6%8C%AF%E6%B0%91%22">陈振民</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%9D%8E%E7%BB%A7%E5%8B%87%22">李继勇</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E5%BB%96%E7%82%B3%E6%89%8D%22">廖炳才</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E5%8D%93%E6%9C%9B%E6%95%B0%E7%A0%81%E6%8A%80%E6%9C%AF%EF%BC%88%E6%B7%B1%E5%9C%B3%EF%BC%89%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">卓望数码技术（深圳）有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103188248A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103188248A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103188248A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (5),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (2),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (2)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=Q-vDCAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201110459220&amp;usg=AFQjCNHJDCgpaqF9_X4u8lG07j9ESTEkpw"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=Q-vDCAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D103188248A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNFCaFyB72KB1S4uMTYAAYGEsLN5iw"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT125794962" lang="ZH" load-source="patent-office">基于单点登录的身份认证系统及方法</invention-title>
      </span><br><span class="patent-number">CN 103188248 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA117199958" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明提供一种基于单点登录的身份认证系统，对至少一应用系统实现单点登录，包括：对用户身份进行认证，对通过认证的用户生成令牌及会话信息的认证服务器；分别部署在至少一应用系统，将需要对用户身份进行认证的访问请求重定向到认证服务器，根据收到的令牌保护应用系统上的受保护资源的至少一认证客户端；和缓存包括令牌在内的会话信息，供认证服务器使用的外部缓存。本发明还提供一种基于单点登录的身份认证文件。本发明的认证服务器使用外部缓存来实现缓存，降低对认证服务器的数据存取压力，提高了访问速度。本发明还采用令牌替代现有技术中的服务票据，省去了认证客户端再次向认证服务器确认用户是否通过身份认证的步骤。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(10)</span></span></div><div class="patent-text"><div mxw-id="PCLM53496993" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.一种基于单点登录的身份认证系统，对至少一应用系统实现单点登录，其特征在于，包括:  对用户身份进行认证、对通过认证的用户生成令牌及会话信息的认证服务器；  分别部署在至少一应用系统、将需要对用户身份进行认证的访问请求重定向到认证服务器、并根据收到的令牌保护所述应用系统上的受保护资源的至少一认证客户端；和缓存包括令牌在内的会话信息以供认证服务器使用的外部缓存。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的基于单点登录的身份认证系统，其特征在于:  所述认证客户端接收用户发出的对应用系统上受保护资源的访问请求；  所述认证客户端查找令牌以判断发出访问请求的用户是否已通过身份认证；  对于用户已通过身份认证的，允许其访问受保护资源；  对于用户未通过身份认证的，将所述访问请求重定向到所述认证服务器，由其对用户身份进行认证；  所述认证客户端接收认证服务器返回的令牌；  对所述令牌进行校验，令牌校验成功的，所述认证客户端认为用户已通过应用系统的身份认证，允许其访问受保护资源，保存令牌；对于令牌校验失败的，所述认证客户端将访问请求重定向到所述认证服务器，由其对用户身份进行认证。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求1所述的基于单点登录的身份认证系统，其特征在于，所述认证客户端包括:  权限框架组件，在认证服务器对用户完成身份认证后重定向回应用系统时，实现用户在应用系统的登录；在认证服务器对用户完成登出后，权限框架组件根据认证服务器的通知，实现用户在应用系统的登出；  资源保护过滤器，保护应用系统受保护的资源仅供完成身份认证的用户访问，对于尚未通过身份认证的用户，将其访问请求重定向到认证服务器；  框架缓存组件，保存用户令牌。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求1所述的基于单点登录的身份认证系统，其特征在于:  所述认证服务器接收来自认证客户端的访问请求；  所述认证服务器根据用户登录状态判断用户是否已通过身份认证；  对于已通过身份认证的，认证服务器从外部缓存中获取已经产生的令牌，加密并根据令牌生成令牌校验码，将访问请求重定向到应用系统受保护资源；  对未通过身份认证的，引导用户在页面输入身份认证信息，对用户进行身份认证；  对于身份认证失败的，认证服务器引导用户继续身份认证；  对于身份认证成功的，认证服务器设定用户状态为已通过身份认证；产生与用户身份相应的令牌，设置到所述用户的浏览器中；并将包括令牌在内的用户的会话信息保存到外部缓存；认证服务器将产生的令牌加密，并根据令牌生成令牌校验码，将访问请求重定向到应用系统受保护资源。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求1至4任意一项所述的基于单点登录的身份认证系统，其特征在于:  所述认证服务器还包括数据库，存储包括身份认证信息在内的用户信息；  认证服务器到数据库中查找用户信息进行身份认证。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求1至4任意一项所述的基于单点登录的身份认证系统，其特征在于:所述外部缓存为单个外部缓存，或集群部署的分布式缓存系统；  所述认证服务器为单独部署的一服务器，或集群部署的多个服务器；  所述外部缓存与认证服务器为一对一、一对多、多对一或多对多关系。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求1至4任意一项所述的基于单点登录的身份认证系统，其特征在于:  至少一认证客户端与认证服务器之间采用http通信协议实现通信，通过浏览器重定向通信和/或直接通信。</div>
    </div>
    </div> <div class="claim"> <div num="8" class="claim">
      <div class="claim-text">8.一种基于单点登录的身份认证方法，基于认证服务器、至少一认证客户端和外部缓存对至少一应用系统实现单点登录，其特征在于，包括:  根据用户提出的对受保护资源的访问请求，认证客户端查找令牌以判断用户是否已通过身份认证的步骤；  对于已通过身份认证的，认证客户端允许访问受保护的资源的步骤；  对于未通过身份认证的，认证客户端将访问请求重定向到认证服务器的步骤；  所述认证服务器根据用户登录状态判断用户是否已通过身份认证的步骤；  对于已通过身份认证的用户，认证服务器从外部缓存中获取已经产生的令牌，加密并根据令牌生成令牌校验码，将访问请求重定向到应用系统受保护资源的步骤；  对未通过身份认证的用户，引导用户在页面输入身份认证信息，对用户进行身份认证的步骤；  对于身份认证失败的，认证服务器引导用户继续身份认证的步骤；  对于身份认证成功的，认证服务器设定用户登录状态为已通过身份认证；产生与用户身份相应的令牌，设置到所述用户的浏览器中；并将包括令牌在内的用户的会话信息保存到外部缓存；认证服务器将产生的令牌加密，并根据令牌生成令牌校验码，将访问请求重定向到应用系统受保护资源的步骤；  所述认证客户端接收令牌，对令牌进行校验的步骤；  认证客户端对所述令牌进行校验，令牌校验成功的，所述认证客户端认为用户已通过应用系统的身份认证，允许其访问受保护资源，保存令牌；对于令牌校验失败的，所述认证客户端将访问请求重定向到所述认证服务器，由其对用户身份进行认证的步骤。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.根据权利要求8所述的基于单点登录的身份认证方法，其特征在于，所述认证服务器还包括数据库，存储包括用户账号、密码在内的用户的信息，所述方法还包括:  认证服务器优先到所述外部缓存中查找用户信息的步骤；  对于在外部缓存中未查找到用户信息的，认证服务器到数据库中查找用户信息，将找至IJ的用户信息同用户输入的信息进行比对，同时把用户信息缓存到外部缓存的步骤。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.根据权利要求8或9所述的基于单点登录的身份认证方法，其特征在于，所述认证服务器预设用户信息分级配置；所述方法还包括:  对于接收到的访问请求，认证服务器根据访问请求附带的应用系统的标识，查找与其对应的用户信息分级，生成符合用户信息分级的用户信息，返回给认证客户端的步骤。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES60536411" lang="ZH" load-source="patent-office" class="description">
    <p>基于单点登录的身份认证系统及方法</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及电数字数据处理领域，特别是涉及一种基于单点登录的身份认证系统及方法。</p>
    <p>背景技术</p>
    <p>[0002]	单点登录(Single Sign On，简称SS0)是目前比较流行的服务于企业业务整合的解决方案之一。单点登录的定义是在多个应用系统中，用户只需要通过一次身份认证，即登录一次就可以访问所有相互信任的应用系统。</p>
    <p>[0003]	现有技术中，耶鲁大学开发的JA-SIG Central Authentication Service (以下简称CAS)是一种针对Web应用的单点登录系统。CAS包含服务器和客户端。服务器需要独立部署，主要负责对用户的身份认证工作；客户端负责处理对应用系统中受保护资源的访问请求，对于用户尚未通过身份认证的情况，将访问请求重定向到服务器，由其对用户进行身份认证。</p>
    <p>[0004]	参照图1示出的现有技术CAS实现身份认证的拓扑图，流程如下:</p>
    <p>[0005]	步骤SI I，客户端与应用系统部署在一起，以Filter方式保护应用系统上中的受保护资源。对于访问受保护资源的每个Web请求，如果用户未登录，客户端分析该请求是否包含服务票据(Service Ticket)，如果没有服务票，则说明当前用户尚未登录；</p>
    <p>[0006]	步骤S12，客户端将访问请求重定向到服务器，并传递受保护资源地址，以便登录成功过后重定向回该地址；</p>
    <p>[0007]	步骤S13，服务器与用户交互，要求用户提供用户名、密码等凭证(Credentials)以核对用户身份，若核对无误则用户身份认证成功；</p>
    <p>[0008]	步骤S14，服务器随机产生一个相当长度、唯一、不可伪造的服务票据，并缓存以待将来验证，之后系统自动重定向到应用系统所在地址，并为客户端浏览器设置一个授权票据Ticket Granted Cookie(TGC);当用户去访问其它应用，其它应用来服务器认证时,服务器发现客户端浏览器已经携带了授权票据，就不需要用户提供用户名，密码等凭证，而是直接产生服务票据并缓存以待将来验证，返回给应用；</p>
    <p>[0009]	步骤S15，客户端收到应用系统所在地址和服务票据，到服务器进行身份验证，以确保服务票据的合法性；</p>
    <p>[0010]	步骤S16，服务器返回用户信息，客户端允许用户访问受保护资源。</p>
    <p>[0011]	当用户在同一个浏览器窗口访问另一个应用系统，则系统执行上述步骤S11、步骤S12，略过步骤S13，执行步骤S14、步骤S15及步骤S16，对用户而言访问另一个应用系统不</p>
    <p>需要再次登录。</p>
    <p>[0012]	现有技术的服务器是一套基于Java实现的服务，该服务以一个Java WebApplication单独部署在与servlet2.3兼容的Web服务器上。服务器生成的服务票据,TGC以及用户的信息等，都存放在自己的内存中，并依赖于web的会话机制。当用户量增加需要服务器做集群部署时，CAS的内存和会话机制限制了横向扩展，不能简单的通过集群部署来  增加处理能力。</p>
    <p>发明内容</p>
    <p>[0013]	本发明要解决的技术问题在于，针对现有技术的上述缺陷，提供一种基于单点登录的身份认证系统和方法。</p>
    <p>[0014]	本发明提供一种基于单点登录的身份认证系统，对至少一应用系统实现单点登录，包括:对用户身份进行认证、对通过认证的用户生成令牌及会话信息的认证服务器；分别部署在至少一应用系统、将需要对用户身份进行认证的访问请求重定向到认证服务器、并根据收到的令牌保护应用系统上的受保护资源的至少一认证客户端；和缓存包括令牌在内的会话信息以供认证服务器使用的外部缓存。</p>
    <p>[0015]	优选地，上述认证客户端接收用户发出的对应用系统上受保护资源的访问请求；认证客户端查找令牌以判断发出访问请求的用户是否已通过身份认证；对于用户已通过身份认证的，允许其访问受保护资源；对于用户未通过身份认证的，将访问请求重定向到认证服务器，由其对用户身份进行认证；认证客户端接收认证服务器返回的令牌；对令牌进行校验，令牌校验成功的，认证客户端认为用户已通过应用系统的身份认证，允许其访问受保护资源，保存令牌；对于令牌校验失败的，认证客户端将访问请求重定向到认证服务器，由其对用户身份进行认证。</p>
    <p>[0016]	优选地，上述认证客户端包括:权限框架组件，在认证服务器对用户完成身份认证后重定向回应用系统时，实现用户在应用系统的登录；在认证服务器对用户完成登出后，权限框架组件根据认证服务器的通知，实现用户在应用系统的登出；资源保护过滤器，保护应用系统受保护的资源仅供完成身份认证的用户访问，对于尚未通过身份认证的用户，将其访问请求重定向到认证服务器；框架缓存组件，保存用户令牌。</p>
    <p>[0017]	优选地，上述认证服务器接收来自认证客户端的访问请求；认证服务器根据用户登录状态判断用户是否已通过身份认证；对于已通过身份认证的，认证服务器从外部缓存中获取已经产生的令牌，加密并根据令牌生成令牌校验码，将访问请求重定向到应用系统受保护资源；对未通过身份认证的，引导用户在页面输入身份认证信息，对用户进行身份认证；对于身份认证失败的，认证服务器引导用户继续身份认证；对于身份认证成功的，认证服务器设定用户状态为已通过身份认证；产生与用户身份相应的令牌，设置到用户的浏览器中；并将包括令牌在内的用户的会话信息保存到外部缓存；认证服务器将产生的令牌加密，并根据令牌生成令牌校验码，将访问请求重定向到应用系统受保护资源。</p>
    <p>[0018]	优选地，上述认证服务器还包括数据库，存储包括身份认证信息在内的用户信息；认证服务器到数据库中查找用户信息进行身份认证。</p>
    <p>[0019]	优选地，上述外部缓存为单个外部缓存，或集群部署的分布式缓存系统；认证服务器为单独部署的一服务器，或集群部署的多个服务器；外部缓存与认证服务器为一对一、一对多、多对一或多对多关系。</p>
    <p>[0020]	优选地，上述至少一认证客户端与认证服务器之间采用http通信协议实现通信，通过浏览器重定向通信和/或直接通信。</p>
    <p>[0021]	本发明还提出一种基于单点登录的身份认证方法，基于认证服务器、至少一认证客户端和外部缓存对至少一应用系统实现单点登录，包括:根据用户提出的对受保护资源的访问请求，认证客户端查找令牌以判断用户是否已通过身份认证的步骤；对于已通过身份认证的，认证客户端允许访问受保护的资源的步骤；对于未通过身份认证的，认证客户端将访问请求重定向到认证服务器的步骤；认证服务器根据用户登录状态判断用户是否已通过身份认证的步骤；对于已通过身份认证的用户，认证服务器从外部缓存中获取已经产生的令牌，加密并根据令牌生成令牌校验码，将访问请求重定向到应用系统受保护资源的步骤；对未通过身份认证的用户，引导用户在页面输入身份认证信息，对用户进行身份认证的步骤；对于身份认证失败的，认证服务器引导用户继续身份认证的步骤；对于身份认证成功的，认证服务器设定用户登录状态为已通过身份认证；产生与用户身份相应的令牌，设置到用户的浏览器中；并将包括令牌在内的用户的会话信息保存到外部缓存；认证服务器将产生的令牌加密，并根据令牌生成令牌校验码，将访问请求重定向到应用系统受保护资源的步骤；认证客户端接收令牌，对令牌进行校验的步骤；认证客户端对令牌进行校验，令牌校验成功的，认证客户端认为用户已通过应用系统的身份认证，允许其访问受保护资源，保存令牌；对于令牌校验失败的，认证客户端将访问请求重定向到认证服务器，由其对用户身份进行认证的步骤。</p>
    <p>[0022]	优选地，上述认证服务器还包括数据库，存储包括用户账号，密码在内的用户的信息，基于单点登录的身份认证方法还包括:认证服务器优先到外部缓存中查找用户信息的步骤；对于在外部缓存中未查找到用户信息的，认证服务器到数据库中查找用户信息，将找至IJ的用户信息同用户输入的信息进行比对，同时把用户信息缓存到外部缓存的步骤。</p>
    <p>[0023]	优选地，上述认证服务器预设用户信息分级配置；基于单点登录的身份认证方法还包括:对于接收到的访问请求，认证服务器根据访问请求附带的应用系统的标识，查找与其对应的用户信息分级，生成符合用户信息分级的用户信息，返回给认证客户端的步骤。</p>
    <p>[0024]	本发明认证服务器使用外部缓存来实现缓存，降低对认证服务器的数据存取压力，提高了访问速度。采用外部缓存很容易通过集群部署分布式缓存系统，支撑因用户量增加带来的内存使用量的增长。本发明还采用令牌(token)替代现有技术中的服务票据。认证服务器对通过身份认证的用户生成相应令牌并存放在外部缓存中。用户再次访问本发明身份认证系统中的所有应用系统，重定向到认证服务器，认证服务器认证后，从外部缓存获取令牌，携带加密后的令牌重定向回应用系统，与应用系统配套的认证客户端根据该令牌即可确定用户是否已通过身份认证，从而省去了认证客户端再次向认证服务器确认用户是否通过身份认证的步骤。</p>
    <p>附图说明</p>
    <p>[0025]	图1为现有技术CAS实现身份认证的拓扑图；</p>
    <p>[0026]	图2为本发明一实施例系统结构示意图；</p>
    <p>[0027]	图3为本发明一实施例系统拓扑图；</p>
    <p>[0028]	图4为本发明另一实施例认证客户端工作流程示意图；</p>
    <p>[0029]	图5为本发明另一实施例认证服务器工作流程示意图；</p>
    <p>[0030]	图6为本发明又一实施例认证服务器工作流程示意图；</p>
    <p>[0031]	图7为本发明再一实施例认证客户端时序示意图；</p>
    <p>[0032]	图8为本发明一实施例认证客户端工作流程图；[0033]	图9为本发明又一实施例身份认证系统工作原理图；</p>
    <p>[0034]	图10为本发明再一实施例集群认证服务器和一外部缓存结构示意图；</p>
    <p>[0035]	图11为本发明再一实施例集群认证服务器和集群外部缓存结构示意图；</p>
    <p>[0036]	图12为本发明又一实施例认证服务器、外部缓存及数据库工作关系图；</p>
    <p>[0037]	图13为本发明一实施例基于单点登录的身份认证方法流程示意图。</p>
    <p>具体实施方式</p>
    <p>[0038]	为详细说明本发明的技术内容、构造特征、所达成的目的及效果，下面将结合实施例并配合附图予以详细说明。</p>
    <p>[0039]	请参阅图2示出的基于单点登录的身份认证系统结构示意图，对第I到第n应用系统1-1到1-n实现单点登录，包括:对用户身份进行认证，对通过认证的用户生成令牌及会话信息的认证服务器3 ;分别部署在第I到第n应用系统1-1到1-n，将需要对用户身份进行认证的访问请求重定向到认证服务器3，根据收到的令牌保护应用系统上的受保护资源的第I到第n认证客户端2-1到2-n ;和缓存包括令牌在内的会话信息，供认证服务器3使用的外部缓存4。</p>
    <p>[0040]	参见图本实施例的3示出的本实施例基于单点登录的身份认证系统拓扑图,认证服务器采用发放令牌(token)替代现有技术中的服务票据。当用户访问本发明身份认证系统中的第I应用系统1-1，认证服务器3自行生成令牌，用于标明用户已通过身份认证的用户标识。认证服务器3对通过身份认证的用户生成相应令牌并通过cookie方式设置到用户的浏览器；包括令牌在内的会话信息存放在外部缓存4中。当用户再次访问本发明身份认证系统中的第2应用系统1-2，第2应用系统1-2配套的第2认证客户端2-2会重定向到认证服务器3来认证。若认证服务器3获取到保存到cookie中的令牌，校验证实是认证服务器3签发的，则可不需要用户再次输入用户密码认证，而是把令牌加密后返回给第2应用系统1-2配套的第2认证客户端2-2，第2认证客户端2-2完成解密校验令牌无误后，即可确定用户是否已通过身份认证，从而省去了第2认证客户端2-2再次向认证服务器3确认用户是否通过身份认证的步骤。</p>
    <p>[0041]	本实施例并未使用认证服务器3自带的内存，而是使用了外部缓存来存储包括令牌在内的会话信息，降低对认证服务器3的数据存取压力，提高了访问速度。采用外部缓存很容易通过集群部署分布式缓存系统，支撑因用户量增加带来的内存使用量的增长。</p>
    <p>[0042]	本发明另一实施例提出，设置令牌校验码，用于对令牌进行校验。令牌校验码可采用多种方案生成，其中一种是认证服务器根据令牌、用户登录状态及为应用系统分配的密钥生成令牌校验码。认证服务器将令牌及令牌校验码随访问请求传送到受保护资源所在的应用系统。</p>
    <p>[0043]	参照图4示出的认证客户端工作流程示意图，以第一认证客户端2-1及第一应用系统1-1为例，至少一认证客户端的工作流程如下:</p>
    <p>[0044]	步骤S21，第一认证客户端2-1接收用户发出的对第一应用系统1-1上受保护资源的访问请求；</p>
    <p>[0045]	步骤S22，第一认证客户端2-1查找用户令牌以判断发出访问请求的用户是否已通过身份认证；对于用户已通过身份认证的，进行步骤S27 ；[0046]	步骤S23，对于用户尚未通过身份认证的，将访问请求重定向到认证服务器3，由其对用户身份进行认证；</p>
    <p>[0047]	步骤S24，若第一认证客户端2-1接收来自认证服务器3返回的令牌，则进行步骤S26，否则进行步骤S25 ；</p>
    <p>[0048]	步骤S25，引导用户继续进行身份认证，进行步骤S23 ；</p>
    <p>[0049]	步骤S26，根据令牌校验码对令牌进行校验，对于令牌校验成功的，进行步骤S27 ；否则进行步骤S23 ；</p>
    <p>[0050]	步骤S27，第一认证客户端2-1端认为用户已通过第一应用系统1-1的身份认证，允许其访问受保护资源。</p>
    <p>[0051]	参照图5示出的认证服务器工作流程示意图，仍以第一认证客户端2-1及第一应用系统1-1为例，认证服务器3的工作流程如下:</p>
    <p>[0052]	步骤S31，认证服务器3接收来自第一认证客户端2-1的访问请求；</p>
    <p>[0053]	步骤S32，认证服务器3根据用户登录状态判断用户是否已通过身份认证；</p>
    <p>[0054]	步骤S33，对于已通过身份认证的，认证服务器3从外部缓存中获取已经产生的令牌，加密并根据令牌生成令牌校验码，进行步骤S36 ；</p>
    <p>[0055]	步骤S34，对于未通过身份认证的，认证服务器3引导用户在页面输入身份认证信息，对用户进行身份认证；对于身份认证失败的，认证服务器3引导用户继续身份认证；对于身份认证成功的，进行步骤S35 ；</p>
    <p>[0056]	步骤S35，认证服务器3设定用户登录状态为已通过身份认证；产生与用户身份相应的令牌，设置到用户的浏览器中；并将包括令牌在内的用户的会话信息保存到外部缓存；认证服务器3将产生的令牌加密，并根据令牌生成令牌校验码，进行步骤S36 ；</p>
    <p>[0057]	步骤S36，将访问请求重定向到受保护资源，将令牌及令牌校验码传送到受保护资源所在的应用系统。</p>
    <p>[0058]	上述步骤S34，认证服务器3对用户进行身份认证，是要求提供包括用户名、密码等以核对用户身份，若核对无误则用户身份认证成功；本实施例的身份认证可采用两种方式实现:1)认证服务器3作为用户登录点，通过登录界面，引导用户进行身份认证；2)认证服务器3端作为已有单点登录系统的认证客户端，引导用户到已有单点登录系统做身份认证。</p>
    <p>[0059]	本实施例在用户已通过身份认证的情况下，第一认证客户端2-1只需要找出用户相应令牌就允许用户访问受保护资源，从而省去了认证客户端再次向认证服务器确认用户是否通过身份认证或确认的步骤，大大简化了身份认证流程，减少网络通讯，提高系统效率。</p>
    <p>[0060]	本实施例的用户再次访问身份认证系统中的其它应用系统，其它应用系统配套的认证客户端会重定向到认证服务器来认证，认证服务器能获取到保存到cookie中的令牌，校验证实是服务器签发的后，可不需要用户再次输入用户密码认证，而是把令牌加密后返回给应用系统配套的认证客户端，客户端完成解密校验令牌无误后，即可确定用户是否已通过身份认证，从而省去了认证客户端再次向认证服务器确认用户是否通过身份认证的步骤。</p>
    <p>[0061]	基于上述实施例，本发明又一实施例还提出设置访问校验码，用于认证服务器对访问请求的校验。访问校验码可采用多种方案生成，其中一种是认证客户端根据收到的访问请求所指向的应用系统的标识、受保护资源地址及为应用系统分配的密钥组合生成字符串，通过MD5产生信息摘要作为访问校验码。本实施例认证客户端的工作流程中步骤S23，对于用户尚未通过身份认证的，将访问请求重定向到认证服务器3，由其对用户身份进行认证，可将访问校验码随访问请求重定向到认证服务器。</p>
    <p>[0062]	而参照图6示出的认证服务器工作流程示意图，认证服务器的工作流程中步骤S31，认证服务器3接收来自第一认证客户端2-1的访问请求之后增加步骤:</p>
    <p>[0063]	步骤S37，认证服务器根据访问校验码校验访问请求；</p>
    <p>[0064]	步骤S38，对于访问请求通过校验的，进行步骤S32 ;否则进行步骤S38 ；</p>
    <p>[0065]	步骤S39，认证服务器返回“访问请求错误”信息，由第一认证客户端2-1向用户显示错误信息页面。</p>
    <p>[0066]	基于上述实施例，本发明再一实施例。参照图7示出的认证客户端时序示意图，认证客户端2包括:</p>
    <p>[0067]	权限框架组件(AuthFilter) 211，在认证服务器3对用户完成身份认证后重定向回应用系统I时，实现用户在应用系统的登录；在认证服务器3对用户完成登出后，权限框架组件211根据认证服务器3的通知，实现用户在应用系统I的登出；资源保护过滤器组件(ProtectFilter) 212，保护应用系统I受保护的资源仅供完成身份认证的用户访问，对于尚未通过身份认证的用户，将其访问请求重定向到认证服务器3 ;框架缓存组件213:保存用户在应用系统I的登录信息。</p>
    <p>[0068]	参照图8示出的认证客户端工作流程图，以第一认证客户端2-1及第一应用系统1-1为例，本实施例认证客户端的工作流程如下:</p>
    <p>[0069]	步骤S201，第一认证客户端2-1接收用户发出的访问第一应用系统1-1保护资源的访问请求；</p>
    <p>[0070]	步骤S202，请求进入权限框架组件211，权限框架组件211判断访问请求的url中是否携带令牌；对于访问请求中携带令牌的，进行步骤S212 ;否则进入步骤S203 ；</p>
    <p>[0071]	步骤S203，请求进入资源保护过滤器组件212 ；</p>
    <p>[0072]	步骤S204，资源保护过滤器组件212到框架缓存组件213中获取用户登录信息；</p>
    <p>[0073]	步骤S205，若框架缓存组件213返回“用户并未登录”的登录信息，则进行步骤S206 ;否则进行步骤S215 ；</p>
    <p>[0074]	步骤S206，资源保护过滤器组件212重定向访问请求到认证服务器3 ；</p>
    <p>[0075]	步骤S207，权限框架组件211重定向请求到认证服务器3 ；</p>
    <p>[0076]	步骤S208，用户的浏览器访问认证服务器3的认证接口 ；</p>
    <p>[0077]	步骤S209，认证服务器3对用户完成身份认证后，认证服务器3重定向用户请求回第一应用系统1-1 ;</p>
    <p>[0078]	步骤S210，用户的浏览器再次访问第一应用系统1-1的受保护资源，访问请求的url后携带了令牌；</p>
    <p>[0079]	步骤S211，请求进入权限框架组件211，权限框架组件211解析令牌；</p>
    <p>[0080]	步骤S212，若权限框架组件211解析令牌成功，则进行步骤S213 ;否则进行步骤S203 ；[0081]	步骤S213，权限框架组件211完成登录，在框架缓存213保存用户登录信息；</p>
    <p>[0082]	步骤S214，框架缓存213返回保存结果；</p>
    <p>[0083]	步骤S215，请求进入资源保护过滤器组件212请求通过资源保护过滤器组件212，访问第一应用系统1-1受保护的资源；</p>
    <p>[0084]	步骤S216，第一应用系统1-1返回业务页面；</p>
    <p>[0085]	步骤S217，资源保护过滤器组件212返回业务页面；</p>
    <p>[0086]	步骤S218，权限框架组件211返回业务页面，流程结束。</p>
    <p>[0087]	参照图9所示的身份认证系统工作原理图，本发明提出又一实施例，认证客户端和认证服务器之间的通信，可以通过浏览器重定向，也可以是服务器之间直接通信，都采用http通信协议方式的明文通信。其中直接通信指认证客户端应用和认证服务器之间，直接通过http协议建立连接进行通信；而通过浏览器重定向，用户通过浏览器访问应用系统，应用系统给浏览器返回一个重定向指令，让浏览器去访问认证服务器，并可以携带一些参数。浏览器收到指令后，自动转为访问认证服务器。而当用户通过浏览器去访问认证服务器的时候，认证服务器也可以给浏览器返回重定向指令，让浏览器自动去访问应用，并可以携带一些参数。</p>
    <p>[0088]	现有技术采用https的方式实现客户端和服务器之间的通信，该方案虽然安全，但存在以下不足:</p>
    <p>[0089]	现有技术的客户端和服务器之间没有单独的认证机制，要建立服务器和客户端的信任只有通过https的访问方式，即由服务器颁发证书，客户端于服务器的交互安全通过证书建立起https的通道。使用证书方式有如下问题:</p>
    <p>[0090]	1、生成证书时，只支持域名方式，不支持IP方式。也就是服务器必须是有独立域名的，不能直接通过IP的方式访问，这限制了很多使用场景；</p>
    <p>[0091]	2、部署服务器需要配置证书支持SSL协议。如果需要客户端信任该证书，服务器的证书需要到证书提供商去购买；如果不购买证书，由服务器自行签发证书，则需要服务器创建证书、导出证书；每个客户端的JVM中导入证书等步骤，客户端才会信任服务器的证书。证书的颁发和导入导出步骤复杂，涉及到证书的格式，导入JVM的路径等。对于系统中需要接入多个客户端来说，操作繁琐；</p>
    <p>[0092]	3、客户端和服务器之间的访问通过https的方式建立连接，之间会多次交互并加解密传输，使用HTTPS协议传输数据的工作效率只有使用HTTP协议传输的十分之一，存在性能瓶颈。</p>
    <p>[0093]	本实施例采用http方式通信，从以下几方面保证通信安全:</p>
    <p>[0094]	1、传输过程中的关键数据，采用DES对称加密。加密的密钥由认证服务器线下分发给认证客户端，认证服务器保存有颁布的所有的认证客户端的ID和对应的密钥。交互时，认证服务器和认证客户端使用同一个密钥进行加解密。除了对关键数据进行加密外，在http协议中还定义了消息发送端会对本次消息的字段以某种方式组合后，计算消息摘要，以保证消息在传输的过程中不被更改；</p>
    <p>[0095]	2、不同的认证客户端与认证服务器进行交互，都使用自己独立的密钥进行加解密以及计算消息摘要，增加本发明身份认证系统的安全性；</p>
    <p>[0096]	3、令牌作为用户登录身份标识，在认证服务器可以具有时效性，只在用户登录成功的一段时间内有效(可配置)。令牌过期后认证客户端再向认证服务器提交访问请求，就需要对用户再次进行身份认证。</p>
    <p>[0097]	基于上述实施例，本发明还提出一实施例，采用多外部缓存实现用户会话信息的缓存，采用集群认证服务器实现大量用户的身份认证管理。现有技术的WEB容器普遍采用session机制做会话期管理，会话保存在web的内存中。一个web服务器保存的会话数受内存大小限制，如果登录的用户太多，一个web服务器不能支撑时，不容易通过增加web服务器来横向扩展，因为要涉及到请求的黏性分发或者是session同步机制。本实施例的外部缓存可以为单个外部缓存或集群部署的分布式缓存系统；认证服务器可以为单独部署的一服务器或集群部署的多个服务器；外部缓存与认证服务器可以是一对一、一对多、多对一或多对多关系。</p>
    <p>[0098]	本发明的认证服务器的web应用中并不保存用户登录状态，用户登录状态保存在外部缓存4中。因此根据用户总数和访问量的大小，可以很容易的横向扩展认证服务器。本实施例第I至第n认证服务器3-1至3-n和一外部缓存4的部署方式参照图10示出的集群认证服务器和一外部缓存结构示意图。</p>
    <p>[0099]	而当本身份认证系统的登录用户量增大，一个外部缓存不足以支撑用户数量和响应时间时，就需要横向扩展缓存，本实施例提出通过集群部署缓存来分布式存储用户会话信息。缓存的存储格式是key-value的形式。在认证服务器3存取缓存时，通过对key进行hash计算，把数据分布 到多个缓存实例上。因存取的时候都是对key进行相同的hash算法，能够保证同一数据的存取都在同一个缓存实例上。认证服务器3的hash算法选用“统一性哈希”算法。保障当增加或删除一个节点时，只会影响到邻近节点上的数据。</p>
    <p>[0100]	本实施例第I至第n认证服务器3-1至3-n和第I至第n外部缓存4_1至4_n的部署方式参照图11示出的集群认证服务器和集群外部缓存结构示意图。</p>
    <p>[0101]	本发明再提出一实施例，认证服务器3还包括数据库31，存储包括身份认证信息在内的用户信息。认证服务器3需要认证用户身份时到数据库中查找用户信息进行身份认证。</p>
    <p>[0102]	参照图12示出的认证服务器、外部缓存及数据库工作关系图，本实施例认证服务器3的用户名、密码等用户信息持久保存在数据库31中，包括令牌等用户的会话信息保存在外部缓存中。认证服务器对尚未通过身份认证的用户进行身份认证，是从数据库中获取该用户的用户名、密码等用户信息以核对用户身份。身份认证完成后，认证服务器产生令牌，并把令牌等该用户的会话信息放到外部缓存。当该用户访问其它应用系统，其它应用系统再重定向请求到认证服务器认证时，认证服务器先查找外部缓存中的会话信息，如果找到该用户的会话信息中已经存在令牌，就直接把令牌加密，生成令牌校验码重定向回其他应用系统。</p>
    <p>[0103]	基于上述实施例，本发明提出，至少一认证服务器生成令牌可以采用多种规则，其中一种规则是由数字和英文字母组成的字符串。令牌组成结构如下:认证服务器编号(三位)+当前时间^ddHHmmss (十位)+流水号(四位)+随机数(十位)，上述字符串用base64编码后的字符串。上述令牌结构保证至少一认证服务器产生的令牌在本WEB容器中不会重复，不同的认证服务器产生的令牌相互也不会重复。令牌不重复的机制能够保证认证服务器应用的横向扩展。[0104]	以下给出本发明一个令牌的具体示例。用户浏览器在访问至少一认证服务器时，如果需要会话信息，至少一认证服务器生成值为“624792CF4D83D5C85123F1B7A6B33456”的令牌，将令牌保存到至少一外部缓存中，通过cookie方式设置到用户浏览器中的具体做法如下所示:</p>
    <p>[0105]	用户浏览器发送访问请求:</p>
    <p>[0106]	GET/usercenter/auth.action HTTP/1.1</p>
    <p>[0107]	WEB容器返回应答(通过Cookie设置令牌):</p>
    <p>[0108]	HTTP/1.1 200 OK</p>
    <p>[0109]	Set-Cookie:T0KEN = 624792CF4D83D5C85123F1B7A6B33456 ；</p>
    <p>[0110]	用户浏览器向认证服务器发出访问请求，再次访问WEB容器时携带令牌:</p>
    <p>[0111]	GET/usercenter /auth.action HTTP/1.1</p>
    <p>[0112]	Cookie:TOKEN = 624792CF4D83D5C85123F1B7A6B33456。</p>
    <p>[0113]	基于上述各实施例，本发明还提出用户信息分级机制。本实施例的认证服务器除实现用户身份认证，还维护用户信息。用户全部信息都集中存放在认证服务器的数据库中。用户在认证服务器通过身份认证后，可以查看和修改自己的用户信息。认证服务器预设用户信息分级配置，用户信息中有一些是普通信息，如昵称、性别等；也有一些敏感信息如用户的邮箱地址、用户绑定的互联网的账号信息等。在获取到令牌后，认证客户端可使用令牌向认证服务器请求用户信息，对于接收到的访问请求，认证服务器根据访问请求附带的应用系统的标识，查找与其对应的用户信息分级，生成符合用户信息分级的用户信息，返回给认证客户端。本实施例的身份认证系统内的多个应用系统，并非都是同等信任级别。用户用统一方式通过身份认证后，虽然可以直接访问所有应用系统，但不同的应用系统获取到的用户信息是有差别的。认证服务器保存有所有应用系统的标识、密钥及其对应的用户信息级别。认证客户端发来的访问请求附带有应用系统的标识，认证服务器根据访问请求附带的应用系统的标识，查找与其对应的用户信息级别，生成符合用户信息级别的用户会话信息，返回给认证客户端。</p>
    <p>[0114]	本发明还提出一种基于单点单点登录的身份认证方法，基于认证服务器、至少一认证客户端和外部缓存对至少一应用系统实现单点登录，参照图13示出的单点单点登录的身份认证方法流程示意图，本实施例包括:</p>
    <p>[0115]	步骤S501，认证客户端根据用户提出的对受保护资源的访问请求，查找令牌以判断用户是否已通过身份认证的步骤；对于已通过身份认证的，进行步骤S510 ;对于未通过身份认证的，进行步骤S502;</p>
    <p>[0116]	步骤S502，认证客户端将访问请求重定向到认证服务器的步骤；</p>
    <p>[0117]	步骤S503，认证服务器根据用户登录状态判断用户是否已通过身份认证的步骤；对于已通过身份认证的用户，进行步骤S504 ;否则进行步骤S505 ；</p>
    <p>[0118]	步骤S504，认证服务器从外部缓存中获取已经产生的令牌，加密并根据令牌生成令牌校验码，将访问请求重定向到应用系统受保护资源的步骤；</p>
    <p>[0119]	步骤S505，对未通过身份认证的用户，引导用户在页面输入身份认证信息，对用户进行身份认证的步骤；</p>
    <p>[0120]	步骤S506，对于身份认证失败的，进行步骤S505，引导用户继续身份认证；对于身份认证成功的，进行步骤S507 ；</p>
    <p>[0121]	步骤S507，认证服务器设定用户登录状态为已通过身份认证；产生与用户身份相应的令牌，设置到用户的浏览器中；并将包括令牌在内的用户的会话信息保存到外部缓存；认证服务器将产生的令牌加密，并根据令牌生成令牌校验码，将访问请求重定向到应用系统受保护资源的步骤；</p>
    <p>[0122]	步骤S508，若认证客户端接收到认证服务器返回的令牌，则进行步骤S509 ;否则进行步骤S502 ；</p>
    <p>[0123]	步骤S509，认证客户端对令牌进行校验，令牌校验成功的，进行步骤S510 ;否则进行步骤S502 ；</p>
    <p>[0124]	步骤S510，认证客户端认为用户已通过应用系统的身份认证，允许其访问受保护资源，保存令牌。</p>
    <p>[0125]	本发明中认证客户端的工作流程参照图4示出的认证客户端工作流程示意图及上述实施例，故不赘述。</p>
    <p>[0126]	本发明中认证服务器的工作流程参照图5示出的认证服务器工作流程示意图及上述实施例，故不赘述。</p>
    <p>[0127]	本发明又一实施例设置访问校验码，用于认证服务器对访问请求的校验，认证客户端的工作流程参照图6示出的认证服务器工作流程示意图及上述实施例，故不赘述。</p>
    <p>[0128]	本发明的认证客户端可包括权限框架组件211、资源保护过滤器组件212和框架缓存组件213，本实施例认证客户端的工作流程如图8示出的认证客户端工作流程示意图及上述实施例，故不赘述。</p>
    <p>[0129]	基于上述实施例，本发明还提出一实施例。参照图12示出的认证服务器、外部缓存及数据库工作关系图，本实施例认证服务器3的用户名、密码等用户信息持久保存在数据库31中，包括令牌等用户的会话信息保存在外部缓存中。认证服务器对尚未通过身份认证的用户进行身份认证，是从数据库中获取该用户的用户名、密码等用户信息以核对用户身份。身份认证完成后，认证服务器产生令牌，并把令牌等该用户的会话信息放到外部缓存。当该用户访问其它应用系统，其它应用系统再重定向请求到认证服务器认证时，认证服务器先查找外部缓存中的会话信息，如果找到该用户的会话信息中已经存在令牌，就直接把令牌加密，生成令牌校验码重定向回其他应用系统。</p>
    <p>[0130]	基于上述实施例，本发明还提出一实施例。认证服务器预设用户信息分级配置，本实施例的步骤S510，认证客户端认为用户已通过应用系统的身份认证，允许其访问受保护资源，保存令牌之后还可以包括:</p>
    <p>[0131]	步骤S511、认证客户端使用令牌向认证服务器请求用户信息的步骤；</p>
    <p>[0132]	步骤S512，对于接收到的访问请求，认证服务器根据访问请求附带的应用系统的标识，查找与其对应的用户信息分级，生成符合用户信息分级的用户信息，返回给认证客户端的步骤。</p>
    <p>[0133]	本实施例参照上述实施例，故不赘述。</p>
    <p>[0134]	本发明的基于单点单点登录的身份认证系统及方法由上述揭露的结构，可以达到目的和效果，然而以上所揭露仅为本发明的较佳实施例，自不能以此限定本发明的权利范围，至于本发明的其它等效修饰或变化，均应涵盖在本发明的权利要求范围内。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN1812403A?cl=zh">CN1812403A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2005年1月28日</td><td class="patent-data-table-td patent-date-value">2006年8月2日</td><td class="patent-data-table-td ">广东省电信有限公司科学技术研究院</td><td class="patent-data-table-td ">一种跨管理域实现身份认证的单点登录方法</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101202753A?cl=zh">CN101202753A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2007年11月29日</td><td class="patent-data-table-td patent-date-value">2008年6月18日</td><td class="patent-data-table-td ">中国电信股份有限公司</td><td class="patent-data-table-td ">一种客户端访问插件应用系统的方法和装置</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101335626A?cl=zh">CN101335626A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2008年8月6日</td><td class="patent-data-table-td patent-date-value">2008年12月31日</td><td class="patent-data-table-td ">中国网通集团宽带业务应用国家工程实验室有限公司</td><td class="patent-data-table-td ">多级认证方法和多级认证系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101764806A?cl=zh">CN101764806A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年12月31日</td><td class="patent-data-table-td patent-date-value">2010年6月30日</td><td class="patent-data-table-td ">卓望数码技术（深圳）有限公司</td><td class="patent-data-table-td ">一种单点登录方法、系统以及登录服务平台</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102098158A?cl=zh">CN102098158A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2009年12月10日</td><td class="patent-data-table-td patent-date-value">2011年6月15日</td><td class="patent-data-table-td ">北京大学</td><td class="patent-data-table-td ">跨域名单点登录和注销的方法、系统及相应设备</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=Q-vDCAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0009320000">H04L9/32</a></span>, <span class="nested-value"><a href="https://www.google.com/url?id=Q-vDCAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029060000">H04L29/06</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年7月3日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年7月31日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/10da1b1fd246734e2d76/CN103188248A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_6e802a6b2b28d51711baddc2f3bec198.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E5%9F%BA%E4%BA%8E%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%9A%84%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%B3%BB%E7%BB%9F.pdf?id=Q-vDCAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U1TERlqoGSVXtt0cWrNWUl8VRMCrA"},"sample_url":"https://www.google.com/patents/reader?id=Q-vDCAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>