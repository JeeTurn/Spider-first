<!DOCTYPE html><html><head><title>专利 CN103268443A - 一种基于符号的Android恶意代码检测方法及系统 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_50a6672b5f82ffbd39b7a9e87fd4594c/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_50a6672b5f82ffbd39b7a9e87fd4594c__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="一种基于符号的Android恶意代码检测方法及系统"><meta name="DC.contributor" content="潘宣辰" scheme="inventor"><meta name="DC.contributor" content="武汉安天信息技术有限责任公司" scheme="assignee"><meta name="DC.date" content="2012-12-27" scheme="dateSubmitted"><meta name="DC.description" content="本发明提供一种基于符号的Android恶意代码检测方法及系统，包括：对待检测程序中的文件进行解析，获取并记录各文件的符号信息，并标记符号类型；根据关键字特征库，过滤文件的符号信息；将过滤后的全部符号信息和符号类型与符号特征库中的符号规则匹配，若与任一符号规则中的符号内容及对应的符号类型匹配成功的数量大于预设值，则输出符号规则对应的病毒名称，否则结束检测。本发明还提供了基于符号的Android恶意代码检测系统。通过本发明的方法及系统，可以通过对待检测程序中的符号信息来进行恶意代码检测，即使资源文件和数据发生变化，也能根据提取到的符号信息特征进行检测。"><meta name="DC.date" content="2013-8-28"><meta name="DC.relation" content="CN:101162485:A" scheme="references"><meta name="DC.relation" content="CN:102779257:A" scheme="references"><meta name="DC.relation" content="US:20080016573:A1" scheme="references"><meta name="DC.relation" content="US:7861304" scheme="references"><meta name="citation_patent_publication_number" content="CN:103268443:A"><meta name="citation_patent_application_number" content="CN:201210579541"><link rel="canonical" href="https://www.google.com/patents/CN103268443A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN103268443A?cl=zh"/><meta name="title" content="专利 CN103268443A - 一种基于符号的Android恶意代码检测方法及系统"/><meta name="description" content="本发明提供一种基于符号的Android恶意代码检测方法及系统，包括：对待检测程序中的文件进行解析，获取并记录各文件的符号信息，并标记符号类型；根据关键字特征库，过滤文件的符号信息；将过滤后的全部符号信息和符号类型与符号特征库中的符号规则匹配，若与任一符号规则中的符号内容及对应的符号类型匹配成功的数量大于预设值，则输出符号规则对应的病毒名称，否则结束检测。本发明还提供了基于符号的Android恶意代码检测系统。通过本发明的方法及系统，可以通过对待检测程序中的符号信息来进行恶意代码检测，即使资源文件和数据发生变化，也能根据提取到的符号信息特征进行检测。"/><meta property="og:title" content="专利 CN103268443A - 一种基于符号的Android恶意代码检测方法及系统"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN103268443A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN103268443A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=XTDPCAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN103268443A&amp;usg=AFQjCNFytmDlY9r--TKQz_cPGofVXhiK2w" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/40bb7f96bcdd8b4b4bce/CN103268443A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/40bb7f96bcdd8b4b4bce/CN103268443A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN103268443A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN103268443A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN103268443A?cl=zh" style="display:none"><span itemprop="description">本发明提供一种基于符号的Android恶意代码检测方法及系统，包括：对待检测程序中的文件进行解析，获取并记录各文件的符号信息，并标记符号类型；根据关键字特征库，过滤文件的符号信息；将过滤后的全部符号信息和符号 ...</span><span itemprop="url">https://www.google.com/patents/CN103268443A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN103268443A - 一种基于符号的Android恶意代码检测方法及系统</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN103268443A - 一种基于符号的Android恶意代码检测方法及系统" title="专利 CN103268443A - 一种基于符号的Android恶意代码检测方法及系统"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN103268443 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201210579541</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年8月28日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年12月27日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2012年12月27日</td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201210579541.5, </span><span class="patent-bibdata-value">CN 103268443 A, </span><span class="patent-bibdata-value">CN 103268443A, </span><span class="patent-bibdata-value">CN 201210579541, </span><span class="patent-bibdata-value">CN-A-103268443, </span><span class="patent-bibdata-value">CN103268443 A, </span><span class="patent-bibdata-value">CN103268443A, </span><span class="patent-bibdata-value">CN201210579541, </span><span class="patent-bibdata-value">CN201210579541.5</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22%E6%BD%98%E5%AE%A3%E8%BE%B0%22">潘宣辰</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%AD%A6%E6%B1%89%E5%AE%89%E5%A4%A9%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E6%9C%89%E9%99%90%E8%B4%A3%E4%BB%BB%E5%85%AC%E5%8F%B8%22">武汉安天信息技术有限责任公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103268443A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103268443A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103268443A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (4),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (1),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (2)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=XTDPCAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201210579541&amp;usg=AFQjCNHuNW8tJ9YoV_TtZw2Ei1a7CsmHXg"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=XTDPCAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D103268443A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNHxxx23vTrXCXfDRY8N8dyFtQ4sMQ"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT127648041" lang="ZH" load-source="patent-office">一种基于符号的Android恶意代码检测方法及系统</invention-title>
      </span><br><span class="patent-number">CN 103268443 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA120067279" lang="ZH" load-source="patent-office">
    <div class="abstract">本发明提供一种基于符号的Android恶意代码检测方法及系统，包括：对待检测程序中的文件进行解析，获取并记录各文件的符号信息，并标记符号类型；根据关键字特征库，过滤文件的符号信息；将过滤后的全部符号信息和符号类型与符号特征库中的符号规则匹配，若与任一符号规则中的符号内容及对应的符号类型匹配成功的数量大于预设值，则输出符号规则对应的病毒名称，否则结束检测。本发明还提供了基于符号的Android恶意代码检测系统。通过本发明的方法及系统，可以通过对待检测程序中的符号信息来进行恶意代码检测，即使资源文件和数据发生变化，也能根据提取到的符号信息特征进行检测。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(8)</span></span></div><div class="patent-text"><div mxw-id="PCLM54383041" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.一种基于符号的Android恶意代码检测方法，其特征在于，包括:  对待检测程序中的文件进行解析，获取并记录各文件的符号信息，并标记符号类型；所述文件的符号类型至少包括:AP1、FILENAME和UNKNOWN ；  遍历所有文件的符号信息及符号类型，判断符号类型是否为UNKNOWN，若是，则根据关键字特征库的符号内容匹配符号信息，若所述符号信息与关键字特征库中的任一符号内容相同，则关键字特征库中符号内容对应的符号类型为当前符号信息的符号类型，输出当前文件的符号信息及符号类型；若关键字特征库中不包含符号内容，则进行下一文件的判断；否则直接输出文件的符号信息及符号内容；所述关键字特征库为已知文件的符号信息及对应符号类型的集合；  将输出的全部符号信息和符号类型与符号特征库中的符号规则匹配，若与任一符号规则中的符号内容及对应的符号类型匹配成功的数量大于预设值，则输出符号规则对应的病毒名称，否则结束检测；所述的符号特征库中至少包括符号规则及病毒名称，所述符号规则为已知恶意代码的全部符号信息及对应符号类型的集合。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.如权利要求1所述的方法，其特征在于，所述的待检测程序中的文件至少包括:dex文件、apk文件、资源文件和elf文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.如权利要求2所述的方法，其特征在于，所述的文件的符号信息至少包括:dex文件中的函数类型、apk文件中各文件节点的文件路径、资源文件中的资源符号、elf文件中rodata中的全局静态数据符号、URL或SP号码。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.如权利要求3所述的方法，其特征在于，所述的dex文件中的函数类型为，按类名和函数名对每个函数的API信息拼接后的函数符号信息组。</div>
    </div>
    </div> <div class="claim"> <div num="5" class="claim">
      <div class="claim-text">5.一种基于符号的Android恶意代码检测系统，其特征在于，包括:`  解析模块，用于对待检测程序中的文件进行解析，获取并记录各文件的符号信息，并标记符号类型；所述文件的符号类型至少包括:AP1、FILENAME和UNKNOWN ；  过滤模块，用于遍历所有文件的符号信息及符号类型，判断符号类型是否为UNKNOWN，若是，则根据关键字特征库的符号内容匹配符号信息，若所述符号信息与关键字特征库中的任一符号内容相同，则关键字特征库中符号内容对应的符号类型为当前符号信息的符号类型，输出当前文件的符号信息及符号类型；若关键字特征库中不包含符号内容，则进行下一文件的判断；否则直接输出文件的符号信息及符号内容；所述关键字特征库为已知文件的符号信息及对应符号类型的集合；  匹配模块，用于将输出的全部符号信息和符号类型与符号特征库中的符号规则匹配，若与任一符号规则中的符号内容及对应的符号类型匹配成功的数量大于预设值，则输出符号规则对应的病毒名称，否则结束检测；所述的符号特征库中至少包括符号规则及病毒名称，所述符号规则为已知恶意代码的全部符号信息及对应符号类型的集合。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.如权利要求5所述的系统，其特征在于，所述的待检测程序中的文件至少包括:dex文件、apk文件、资源文件和elf文件。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.如权利要求6所述的系统，其特征在于，所述的文件的符号信息至少包括:dex文件中的函数类型、apk文件中各文件节点的文件路径、资源文件中的资源符号、elf文件中rodata中的全局静态数据符号、URL或SP号码。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.如权利要求7所述的系统，其特征在于，所述的dex文件中的函数类型为，按类名和函数名对每个函数的AP I信息拼接后的函数符号信息组。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES61396152" lang="ZH" load-source="patent-office" class="description">
    <p>&#8212;种基于符号的Android恶意代码检测方法及系统</p>
    <p>技术领域</p>
    <p>[0001]	本发明涉及移动终端恶意代码检测技术，特别涉及一种基于符号的Android恶意代码检测方法及系统。</p>
    <p>背景技术</p>
    <p>[0002]	随着移动通信网络的发展，融合3C的智能手机成为移动终端的发展趋势。智能手机的出现极大地丰富了手机应用的种类，为移动增值业务提供了终端基础。但与此同时，智能手机的流行也给手机病毒的滋生和肆虐创造了便利条件，手机正在成为黑客、病毒制造者的新目标。因此面对形势日益严峻的个人数据安全问题，各个安全厂商都在研制更加稳定高效的病毒检测机制。但是目前的恶意软件判研方法一般都是广泛采用文件中的特征值扫描技术进行检测，一旦资源文件和数据发生变化，文件的特征值也随之变化，因此恶意代码可以通过修改资源文件和数据文件对编译文件进行改变躲过检测。</p>
    <p>发明内容</p>
    <p>[0003]	本发明提供了一种基于符号的Android恶意代码检测方法，通过对文件中的符号信息进行检测，解决了特征值扫描方法中特征值随数据变化，导致无法检出的问题。</p>
    <p>[0004]	一种基于符号的Android恶意代码检测方法，包括:</p>
    <p>[0005]	对待检测程序中的文件进行解析，获取并记录各文件的符号信息，并标记符号类型，所述文件的符号信息为文件中的所有符号；所述文件的符号类型至少包括:AP1、FILENAME 和 UNKNOWN ；</p>
    <p>[0006]	遍历所有文件的符号信息及符号类型，判断符号类型是否为UNKNOWN，若是，则根据关键字特征库的符号内容匹配符号信息，若所述符号信息与关键字特征库中的任一符号内容相同，则关键字特征库中符号内容对应的符号类型为当前符号信息的符号类型，输出当前文件的符号信息及符号类型；若关键字特征库中不包含符号内容，则进行下一文件的判断；否则直接输出文件的符号信息及符号内容；所述关键字特征库为已知文件的符号信息及对应符号类型的集合；</p>
    <p>[0007]	将输出的全部符号信息和符号类型与符号特征库中的符号规则匹配，若与任一符号规则中的符号内容及对应的符号类型匹配成功的数量大于预设值，则输出符号规则对应的病毒名称，否则结束检测；所述的符号特征库中至少包括符号规则及病毒名称，所述符号规则为已知恶意代码的全部符号信息及对应符号类型的集合。</p>
    <p>[0008]	所述的方法中，所述的待检测程序中的文件至少包括:dex文件、apk文件、资源文件和elf文件。</p>
    <p>[0009]	所述的方法中，所述的文件的符号信息至少包括:dex文件中的函数类型、apk文件中各文件节点的文件路径、资源文件中的资源符号、elf文件中rodata中的全局静态数据符号、URL或SP号码。</p>
    <p>[0010]	所述的方法中， 所述的dex文件中的函数类型为，按类名和函数名对每个函数的API信息拼接后的函数符号信息组。</p>
    <p>[0011]	一种基于符号的Android恶意代码检测系统，包括:</p>
    <p>[0012]	解析模块，用于对待检测程序中的文件进行解析，获取并记录各文件的符号信息，并标记符号类型，所述文件的符号信息为文件中的所有符号；所述文件的符号类型至少包括:AP1、FILENAME 和 UNKNOWN ；</p>
    <p>[0013]	过滤模块，用于遍历所有文件的符号信息及符号类型，判断符号类型是否为UNKNOWN，若是，则根据关键字特征库的符号内容匹配符号信息，若所述符号信息与关键字特征库中的任一符号内容相同，则关键字特征库中符号内容对应的符号类型为当前符号信息的符号类型，输出当前文件的符号信息及符号类型；若关键字特征库中不包含符号内容，则进行下一文件的判断；否则直接输出文件的符号信息及符号内容；</p>
    <p>[0014]	匹配模块，用于将输出的全部符号信息和符号类型与符号特征库中的符号规则匹配，若与任一符号规则中的符号内容及对应的符号类型匹配成功的数量大于预设值，则输出符号规则对应的病毒名称，否则结束检测；所述的符号特征库中至少包括符号规则及病毒名称，所述符号规则为已知恶意代码的全部符号信息及对应符号类型的集合。</p>
    <p>[0015]	所述的系统中，所述的待检测程序中的文件至少包括:dex文件、apk文件、资源文件和elf文件。</p>
    <p>[0016]	所述的系统中，所述的文件的符号信息至少包括:dex文件中的函数类型、apk文件中各文件节点的文件路径、资源文件中的资源符号、elf文件中rodata中的全局静态数据符号、URL或SP号码。 </p>
    <p>[0017]	所述的系统中，所述的dex文件中的函数类型为，按类名和函数名对每个函数的API信息拼接后的函数符号信息组。</p>
    <p>[0018]	本发明的方法及系统，对手机恶意代码的检测不依赖于dex文件和data代码段数据，而对手机文件中恶意文件经常用到的符号信息进行提取进行检测，即使资源文件和数据发生变化，也能根据提取到的符号信息特征进行检测，使恶意代码不能通过修改资源文件和数据文件对编译文件进行改变躲过检测，提高恶意代码检出率。</p>
    <p>附图说明</p>
    <p>[0019]	为了更清楚地说明本发明或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本发明中记载的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。</p>
    <p>[0020]	图1为本发明一种基于符号的Android恶意代码检测方法流程图；</p>
    <p>[0021]	图2为本发明一种基于符号的Android恶意代码检测方法实施例流程图；</p>
    <p>[0022]	图3为本发明一种基于符号的Android恶意代码检测系统结构不意图。</p>
    <p>具体实施方式</p>
    <p>[0023]	为了使本技术领域的人员更好地理解本发明实施例中的技术方案，并使本发明的上述目的、特征和优点能够更加明显易懂，下面结合附图对本发明中技术方案作进一步详细的说明。[0024]	在针对Android平台的手机恶意软件的检测中可以利用的符号信息可以包括Apk安装包文件名信息是路径类型的符号信息resource, arse中有URL或SP号码类型的符号信息；elf文件中有URL或SP号码类型的符号信息；Dex文件中有函数类型的符号信息，同时在调用参数中，还有URL或SP号码类型的符号信息。其中，Dex文件是采用类似于java的面向对象的构建体系，对类符号，函数符号和路径都有严格的要求和定义，并采用了大量的基于函数符号的技术，例如反射调用，函数寻址等等，这些都给恶意代码的检测提供了有力的数据信息支持。无论是一个APK程序包中的文件或者单独的dex文件，都包含大量有效可用于检测的符号信息，可以用来作为一种基于符号的恶意代码基因检测方法，提供一种具备较高启发式能力和准确性的android恶意代码检测方法。</p>
    <p>[0025]	本发明提供了一种基于符号的Android恶意代码检测方法，通过对文件中的符号信息进行检测，解决了特征值扫描方法中特征值随数据变化，导致无法检出的问题。</p>
    <p>[0026]	&#8212;种基于符号的Android恶意代码检测方法,如图1所不，包括:</p>
    <p>[0027]	SlOl:对待检测程序中的文件进行解析，获取并记录各文件的符号信息，并标记符号类型，所述文件的符号信息为文件中的所有符号；所述文件的符号类型至少包括:AP1、FILENAME 和 UNKNOWN ；</p>
    <p>[0028]	S102:遍历所有文件的符号信息及符号类型，判断符号类型是否为UNKNOWN，若是，则执行S104，否则执行S105 ；</p>
    <p>[0029]	S103:根据关键字特征库的符号内容匹配符号信息，判断所述符号信息是否与关键字特征库中的任一符号内容相同，若是，则执行S104，返回S102，进行下一文件的判断；所述关键字特征库为已知文件的符号信息及对应符号类型的集合；</p>
    <p>[0030]	S104:关键字特征库 中符号内容对应的符号类型为当前符号信息的符号类型，输出当前文件的符号信息及符号类型，执行S106 ；</p>
    <p>[0031]	S105:直接输出文件的符号信息及符号类型；</p>
    <p>[0032]	S106:将输出的全部符号信息和符号类型与符号特征库中的符号规则匹配，若与任一符号规则中的符号内容及对应的符号类型匹配成功的数量大于预设值，则输出符号规则对应的病毒名称，否则结束检测；所述的符号特征库中至少包括符号规则及病毒名称，所述符号规则为已知恶意代码的全部符号信息及对应符号类型的集合。</p>
    <p>[0033]	所述的方法中，所述的待检测程序中的文件至少包括:dex文件、apk文件、资源文件和elf文件。</p>
    <p>[0034]	所述的方法中，所述的文件的符号信息至少包括:dex文件中的函数类型、apk文件中各文件节点的文件路径、资源文件中的资源符号、elf文件中rodata中的全局静态数据符号、URL或SP号码。</p>
    <p>[0035]	所述的方法中，所述的dex文件中的函数类型为，按类名和函数名对每个函数的API信息拼接后的函数符号信息组。</p>
    <p>[0036]	为更好理解本发明方法，如图2所示，对本发明方法进行举例说明。</p>
    <p>[0037]	在进行恶意代码检测前，预先建立关键字特征库和符号特征库，在本实施例中关键字特征库记为SymKeyDatabase,符号内容及符号类型记为一个iKeySymList数组；符号特征库记为SymRuleDatabase，符号特征库中为记录了符号规则及对应病毒名的数组，所述数组记为iRuleList，每一数组节点记为SymRule，包括符号规则及对应病毒名称，符号规则为记录了符号类型及对应的符号内容的数组iSymList,每一数组节点记为SymNode,符号类型记为type,符号内容记为symbol。</p>
    <p>[0038]	S201:对待检测程序中的文件进行解析，获取并记录各文件的符号信息，并标记符号类型；以检测dex文件、apk文件、resource, arse文件及elf文件为例进行说明；</p>
    <p>[0039]	检测dex文件,对dex文件进行格式解析，识别所有结构体，然后对method_ids进行扫描，并按照类名和函数名对每个函数的API信息进行拼接，形成函数符号信息组，将完整的API符号信息存入一个SymNode数组中作为symbol符号内容，对应的符号类型为API ；</p>
    <p>[0040]	检测apk文件，对文件进行格式解析，识别文件结构中所有的文件信息节点，将文件路径存储为一个SymNode中作为symbol符号信息，对应的符号类型为FILENAME ；</p>
    <p>[0041]	检测resource, arse文件，对该文件进行格式解析，识别所有的资源符号信息，将资源符号存储为一个SymNode中作为symbol符号信息，对应的符号类型为UNKNOWN ；</p>
    <p>[0042]	检测elf文件，对文件进行格式解析，识别所有的rodata中的全局静态数据符号信息，并将其存储为一个SymNode中作为symbol符号信息，对应的符号类型为UNKNOWN。</p>
    <p>[0043]	S202:遍历每一 SymNode，判断符号类型是否为UNKNOWN，如果是，则执行S203，否则直接输出SymNode作为待检测符号；</p>
    <p>[0044]	S203:调用关键字特征库匹配符号信息，判断符号信息symbol中是否包含关键子特征库SymKeyDatabase中的符号内容,如果是则将符号内容对应的符号类型记为当前SymNode的符号类型，并输出SymNode作为待检测符号，否则返回S202 ；</p>
    <p>[0045]	S204:遍历每一匹配 后输出的SymNode,与符号特征库SymRuleDatabase中SymRule中的每一符号内容的数组iSymList进行匹配,如果与其中某一数组节点完全相同，则输出对应的病毒名，否则结束检测。</p>
    <p>[0046]	在与符号特征库匹配的方式中，可以根据实际情况预设不同的匹配条件，如完全相同、包含、或者预设相同的阈值等。</p>
    <p>[0047]	一种基于符号的Android恶意代码检测系统，如图3所不，包括:</p>
    <p>[0048]	解析模块301，用于对待检测程序中的文件进行解析，获取并记录各文件的符号信息，并标记符号类型，所述文件的符号信息为文件中的所有符号；所述文件的符号类型至少包括:AP1、FILENAME 和 UNKNOWN ；</p>
    <p>[0049]	过滤模块302，用于遍历所有文件的符号信息及符号类型，判断符号类型是否为UNKNOWN，若是，则根据关键字特征库的符号内容匹配符号信息，若所述符号信息与关键字特征库中的任一符号内容相同，则关键字特征库中符号内容对应的符号类型为当前符号信息的符号类型，输出当前文件的符号信息及符号类型；若关键字特征库中不包含符号内容，则进行下一文件的判断；否则直接输出文件的符号信息及符号内容；所述关键字特征库为已知文件的符号信息及对应符号类型的集合；</p>
    <p>[0050]	匹配模块303，用于将输出的全部符号信息和符号类型与符号特征库中的符号规则匹配，若与任一符号规则中的符号内容及对应的符号类型匹配成功的数量大于预设值，则输出符号规则对应的病毒名称，否则结束检测；所述的符号特征库中至少包括符号规则及病毒名称，所述符号规则为已知恶意代码的全部符号信息及对应符号类型的集合。</p>
    <p>[0051]	所述的系统中，所述的待检测程序中的文件至少包括:dex文件、apk文件、资源文件和elf文件。</p>
    <p>[0052]	所述的系统中，所述的文件的符号信息至少包括:dex文件中的函数类型、apk文件中各文件节点的文件路径、资源文件中的资源符号、elf文件中rodata中的全局静态数据符号、URL或SP号码。</p>
    <p>[0053]	所述的系统中，所述的dex文件中的函数类型为，按类名和函数名对每个函数的API信息拼接后的函数符号信息组。</p>
    <p>[0054]	本发明的方法及系统，对手机恶意代码的检测不依赖于dex文件和data代码段数据，而对手机文件中恶意文件经常用到的符号信息进行提取进行检测，即使资源文件和数据发生变化，也能根据提取到的符号信息特征进行检测，使恶意代码不能通过修改资源文件和数据文件对编译文件进行改变躲过检测，提高恶意代码检出率。</p>
    <p>[0055]	本发明的方法及系统，对手机恶意代码的检测不依赖于dex文件和data代码段数据，而对手机文件中恶意文件经常用到的符号信息进行提取进行检测，即使资源文件和数据发生变化，也能根据提取到的符号信息特征进行检测，使恶意代码不能通过修改资源文件和数据文件对编译文件进行改变躲过检测，提高恶意代码检出率。</p>
    <p>[0056]	本发明提供一种基于符号的Android恶意代码检测方法及系统，包括:对待检测程序中的文件进行解析，获取并记录各文件的符号信息，并标记符号类型；根据关键字特征库，过滤文件的符号信息；将过滤后的的全部符号信息和符号类型与符号特征库中的符号规则匹配，若与任一符号规则中的符号内容及对应的符号类型匹配成功的数量大于预设值，则输出符号规则对应的病毒名称，否则结束检测。本发明还提供了基于符号的Android恶意代码检测系统。通过本发明的方法及系统，可以通过对待检测程序中的符号信息来进行恶意代码检测，即使资源文件和数据发生变化，也能根据提取到的符号信息特征进行检测。</p>
    <p>[0057]	本说明书中的各个实施例均采用递进的方式描述，各个实施例之间相同相似的部分互相参见即可，每个实施例重点说明的都是与其他实施例的不同之处。尤其，对于系统实施例而言，由于其基本相似于方法实施例，所以描述的比较简单，相关之处参见方法实施例的部分说明即可。</p>
    <p>[0058]	虽然通过实施例描绘了本发明，本领域普通技术人员知道，本发明有许多变形和变化而不脱离本发 明的精神，希望所附的权利要求包括这些变形和变化而不脱离本发明的精神。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101162485A?cl=zh">CN101162485A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2006年10月11日</td><td class="patent-data-table-td patent-date-value">2008年4月16日</td><td class="patent-data-table-td ">飞塔信息科技（北京）有限公司</td><td class="patent-data-table-td ">一种计算机恶意代码处理方法和系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN102779257A?cl=zh">CN102779257A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2012年6月28日</td><td class="patent-data-table-td patent-date-value">2012年11月14日</td><td class="patent-data-table-td ">奇智软件（北京）有限公司</td><td class="patent-data-table-td ">一种Android应用程序的安全检测方法及系统</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US7861304">US7861304</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2004年5月7日</td><td class="patent-data-table-td patent-date-value">2010年12月28日</td><td class="patent-data-table-td ">Symantec Corporation</td><td class="patent-data-table-td ">Pattern matching using embedded functions</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20080016573">US20080016573</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2006年7月13日</td><td class="patent-data-table-td patent-date-value">2008年1月17日</td><td class="patent-data-table-td ">Aladdin Knowledge System Ltd.</td><td class="patent-data-table-td ">Method for detecting computer viruses</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=XTDPCAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=G06F0021560000">G06F21/56</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年8月28日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr><tr><td class="patent-data-table-td patent-date-value">2013年9月25日</td><td class="patent-data-table-td ">C10</td><td class="patent-data-table-td ">Request of examination as to substance</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/40bb7f96bcdd8b4b4bce/CN103268443A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_50a6672b5f82ffbd39b7a9e87fd4594c.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8E%E7%AC%A6%E5%8F%B7%E7%9A%84Android%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81.pdf?id=XTDPCAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U05Z4hETQx9DPPWEB8LW7d4enjFgw"},"sample_url":"https://www.google.com/patents/reader?id=XTDPCAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>