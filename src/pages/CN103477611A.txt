<!DOCTYPE html><html><head><title>专利 CN103477611A - 用于n层高速缓存重定向的系统和方法 -  Google 专利</title><script>(function(){(function(){function e(a){this.t={};this.tick=function(a,c,b){var d=void 0!=b?b:(new Date).getTime();this.t[a]=[d,c];if(void 0==b)try{window.console.timeStamp("CSI/"+a)}catch(e){}};this.tick("start",null,a)}var a;window.performance&&(a=window.performance.timing);var f=a?new e(a.responseStart):new e;window.jstiming={Timer:e,load:f};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick("_wtsrt",void 0,c),b.tick("wtsrt_",
"_wtsrt",d),b.tick("tbsd_","wtsrt_"))}try{a=null,window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick("_tbnd",void 0,window.chrome.csi().startE),b.tick("tbnd_","_tbnd",c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick("_tbnd",void 0,window.external.startE),b.tick("tbnd_","_tbnd",c))),a&&(window.jstiming.pt=a)}catch(g){}})();})();
</script><link rel="stylesheet" href="/patents/css/_5115ea495017d9115e613207d3810e5a/kl_intl_patents_bundle.css" type="text/css" /><script src="/books/javascript/atb_5115ea495017d9115e613207d3810e5a__zh_cn.js"></script><script>function googleTranslateElementInit() {new google.translate.TranslateElement({pageLanguage: "zh",gaTrack: true,gaId: "UA-27188110-1",multilanguagePage: true});}</script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script><meta name="DC.type" content="Patent"><meta name="DC.title" content="用于n层高速缓存重定向的系统和方法"><meta name="DC.contributor" content="A&#183;仇达瑞" scheme="inventor"><meta name="DC.contributor" content="A&#183;K&#183;加维尼" scheme="inventor"><meta name="DC.contributor" content="A&#183;谢蒂" scheme="inventor"><meta name="DC.contributor" content="思杰系统有限公司" scheme="assignee"><meta name="DC.date" content="2012-2-8" scheme="dateSubmitted"><meta name="DC.description" content="本公开描述用于负载平衡多层中的多个应用传送控制器（ADC）的系统和方法。该层中的上层包括的ADC负载平衡该层中的低层的多个ADC。为了对于透明高速缓存重定向场景适当地共享和维护客户机IP，在低层的ADC之间分割传输层（传输控制协议（TCP））端口范围。接着，低层ADC将仅使用分配给它们的源端口来创建连接。接着，将来自原点的响应发送到在目的端口查看的上层ADC，并且将分组转发到正确的低层ADC。因此，在两个层处的ADC将一起工作，以提供透明高速缓存重定向。"><meta name="DC.date" content="2013-12-25"><meta name="DC.relation" content="CN:101030940:A" scheme="references"><meta name="DC.relation" content="CN:101534204:A" scheme="references"><meta name="DC.relation" content="US:20020035639:A1" scheme="references"><meta name="DC.relation" content="US:20030195984:A1" scheme="references"><meta name="DC.relation" content="US:7412531" scheme="references"><meta name="citation_patent_publication_number" content="CN:103477611:A"><meta name="citation_patent_application_number" content="CN:201280016831"><link rel="canonical" href="https://www.google.com/patents/CN103477611A?cl=zh"/><meta property="og:url" content="https://www.google.com/patents/CN103477611A?cl=zh"/><meta name="title" content="专利 CN103477611A - 用于n层高速缓存重定向的系统和方法"/><meta name="description" content="本公开描述用于负载平衡多层中的多个应用传送控制器（ADC）的系统和方法。该层中的上层包括的ADC负载平衡该层中的低层的多个ADC。为了对于透明高速缓存重定向场景适当地共享和维护客户机IP，在低层的ADC之间分割传输层（传输控制协议（TCP））端口范围。接着，低层ADC将仅使用分配给它们的源端口来创建连接。接着，将来自原点的响应发送到在目的端口查看的上层ADC，并且将分组转发到正确的低层ADC。因此，在两个层处的ADC将一起工作，以提供透明高速缓存重定向。"/><meta property="og:title" content="专利 CN103477611A - 用于n层高速缓存重定向的系统和方法"/><meta property="og:type" content="book"/><meta property="og:site_name" content="Google Books"/><meta property="og:image" content="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><link rel="image_src" href="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"/><script>if (window['_OC_timingAction']) {window['_OC_timingAction']('patents_refpage');}</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}

#gbar { padding:.3em .6em !important;}</style></head><body ><div id=gbar><nobr><a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&sa=N&tab=tw">搜索</a> <a class=gb1 href="https://www.google.com/search?cl=zh&hl=zh-CN&tbm=isch&source=og&sa=N&tab=ti">图片</a> <a class=gb1 href="https://maps.google.com/maps?cl=zh&hl=zh-CN&sa=N&tab=tl">地图</a> <a class=gb1 href="https://play.google.com/?cl=zh&hl=zh-CN&sa=N&tab=t8">Play</a> <a class=gb1 href="https://www.youtube.com/results?cl=zh&hl=zh-CN&sa=N&tab=t1">YouTube</a> <a class=gb1 href="https://news.google.com/nwshp?hl=zh-CN&tab=tn">新闻</a> <a class=gb1 href="https://mail.google.com/mail/?tab=tm">Gmail</a> <a class=gb1 href="https://drive.google.com/?tab=to">云端硬盘</a> <a class=gb1 style="text-decoration:none" href="https://www.google.com/intl/zh-CN/options/"><u>更多</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a target=_top id=gb_70 href="https://www.google.com/accounts/Login?service=&continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN&hl=zh-CN" class=gb4>登录</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div><div role="alert" style="position: absolute; left: 0; right: 0;"><a href="https://www.google.com/patents/CN103477611A?cl=zh&amp;hl=zh-CN&amp;output=html_text" title="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"><img border="0" src="//www.google.com/images/cleardot.gif"alt="屏幕阅读器用户请注意：点击此链接可进入无障碍模式。阅读器在无障碍模式下具有同样的基本功能，但可让用户获得更好的体验。"></a></div><div class="kd-appbar"><h2 class="kd-appname"><a href="/patents?hl=zh-CN"> 专利</a></h2><div class="kd-buttonbar left" id="left-toolbar-buttons"><a id="appbar-write-review-link" href=""></a><a id="appbar-view-print-sample-link" href=""></a><a id="appbar-view-ebook-sample-link" href=""></a><a id="appbar-patents-prior-art-finder-link" href="https://www.google.com/patents/related/CN103477611A"></a><a id="appbar-patents-discuss-this-link" href="https://www.google.com/url?id=-BDpCAABERAJ&amp;q=http://patents.stackexchange.com/redirect/google-patents%3Fpublication%3DCN103477611A&amp;usg=AFQjCNEhYI2zJYiBKZyDkJ8zhSIOalKzEA" data-is-grant="false"></a><a id="appbar-read-patent-link" href="//docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/ee3e5b2d4b2176616e6e/CN103477611A.pdf"></a><a id="appbar-download-pdf-link" href="//patentimages.storage.googleapis.com/pdfs/ee3e5b2d4b2176616e6e/CN103477611A.pdf"></a><a class="appbar-content-language-link" data-selected="true" data-label="中文" href="/patents/CN103477611A?cl=zh&amp;hl=zh-CN"></a><a class="appbar-content-language-link" data-label="英语" href="/patents/CN103477611A?cl=en&amp;hl=zh-CN"></a></div><div class="kd-buttonbar right" id="right-toolbar-buttons"></div></div><div id="books-microdata" itemscope=""itemtype="http://schema.org/Book"itemid="https://www.google.com/patents/CN103477611A?cl=zh" style="display:none"><span itemprop="description">本公开描述用于负载平衡多层中的多个应用传送控制器（ADC）的系统和方法。该层中的上层包括的ADC负载平衡该层中的低层的多个ADC。为了对于透明高速缓存重定向场景适当地共享和维护客户机IP，在低层的ADC之间分割传输层（ ...</span><span itemprop="url">https://www.google.com/patents/CN103477611A?cl=zh&amp;utm_source=gb-gplus-share</span><span class="main-title" itemprop="name">专利 CN103477611A - 用于n层高速缓存重定向的系统和方法</span><img itemprop="image" src="https://www.google.com/patents?id=&amp;printsec=frontcover&amp;img=1&amp;zoom=1"alt="专利 CN103477611A - 用于n层高速缓存重定向的系统和方法" title="专利 CN103477611A - 用于n层高速缓存重定向的系统和方法"></div><div style="display: none"><ol id="ofe-gear-menu-contents" class="gbmcc"><li class="gbe gbmtc"><a class="gbmt goog-menuitem-content" id="" href="https://www.google.com/advanced_patent_search?hl=zh-CN"> 高级专利搜索</a></li></ol></div><div id="volume-main"><div id="volume-center"><div class=vertical_module_list_row><div id=intl_patents class=about_content><div id=intl_patents_v><table class="patent-bibdata patent-drawings-missing"><tr><td class="patent-bibdata-heading"> 公开号</td><td class="single-patent-bibdata">CN103477611 A</td></tr><tr><td class="patent-bibdata-heading">发布类型</td><td class="single-patent-bibdata">申请</td></tr><tr><td class="patent-bibdata-heading"> 专利申请号</td><td class="single-patent-bibdata">CN 201280016831</td></tr><tr><td class="patent-bibdata-heading"> 专利合作条约 (PCT) 编号</td><td class="single-patent-bibdata">PCT/US2012/024360</td></tr><tr><td class="patent-bibdata-heading">公开日</td><td class="single-patent-bibdata">2013年12月25日</td></tr><tr><td class="patent-bibdata-heading"> 申请日期</td><td class="single-patent-bibdata">2012年2月8日</td></tr><tr><td class="patent-bibdata-heading"> 优先权日<span class="patent-tooltip-anchor patent-question-icon"data-tooltip-text="优先日期属于假设性质，不具任何法律效力。Google 对于所列日期的正确性并没有进行法律分析，也不作任何陈述。"></span></td><td class="single-patent-bibdata">2011年2月9日</td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">公告号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/EP2673942A1?hl=zh-CN&amp;cl=zh">EP2673942A1</a>, </span><span class="patent-bibdata-value"><a href="/patents/EP2673942B1?hl=zh-CN&amp;cl=zh">EP2673942B1</a>, </span><span class="patent-bibdata-value"><a href="/patents/US8996614?hl=zh-CN&amp;cl=zh">US8996614</a>, </span><span class="patent-bibdata-value"><a href="/patents/US20120203825?hl=zh-CN&amp;cl=zh">US20120203825</a>, </span><span class="patent-bibdata-value"><a href="/patents/WO2012109377A1?hl=zh-CN&amp;cl=zh">WO2012109377A1</a></span></span></td></tr><tr class="patent-bibdata-list-row alternate-patent-number"><td class="patent-bibdata-heading"> 公开号</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value">201280016831.7, </span><span class="patent-bibdata-value">CN 103477611 A, </span><span class="patent-bibdata-value">CN 103477611A, </span><span class="patent-bibdata-value">CN 201280016831, </span><span class="patent-bibdata-value">CN-A-103477611, </span><span class="patent-bibdata-value">CN103477611 A, </span><span class="patent-bibdata-value">CN103477611A, </span><span class="patent-bibdata-value">CN201280016831, </span><span class="patent-bibdata-value">CN201280016831.7, </span><span class="patent-bibdata-value">PCT/2012/24360, </span><span class="patent-bibdata-value">PCT/US/12/024360, </span><span class="patent-bibdata-value">PCT/US/12/24360, </span><span class="patent-bibdata-value">PCT/US/2012/024360, </span><span class="patent-bibdata-value">PCT/US/2012/24360, </span><span class="patent-bibdata-value">PCT/US12/024360, </span><span class="patent-bibdata-value">PCT/US12/24360, </span><span class="patent-bibdata-value">PCT/US12024360, </span><span class="patent-bibdata-value">PCT/US1224360, </span><span class="patent-bibdata-value">PCT/US2012/024360, </span><span class="patent-bibdata-value">PCT/US2012/24360, </span><span class="patent-bibdata-value">PCT/US2012024360, </span><span class="patent-bibdata-value">PCT/US201224360</span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 发明者</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22A%C2%B7%E4%BB%87%E8%BE%BE%E7%91%9E%22">A&#183;仇达瑞</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22A%C2%B7K%C2%B7%E5%8A%A0%E7%BB%B4%E5%B0%BC%22">A&#183;K&#183;加维尼</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=ininventor:%22A%C2%B7%E8%B0%A2%E8%92%82%22">A&#183;谢蒂</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading"> 申请人</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="https://www.google.com/search?tbo=p&amp;tbm=pts&amp;hl=en&amp;q=inassignee:%22%E6%80%9D%E6%9D%B0%E7%B3%BB%E7%BB%9F%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%22">思杰系统有限公司</a></span></span></td></tr><tr class="patent-bibdata-list-row "><td class="patent-bibdata-heading">导出引文</td><td><span class="patent-bibdata-value-list"><span class="patent-bibdata-value"><a href="/patents/CN103477611A.bibtex?cl=zh">BiBTeX</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103477611A.enw?cl=zh">EndNote</a>, </span><span class="patent-bibdata-value"><a href="/patents/CN103477611A.ris?cl=zh">RefMan</a></span></span></td></tr><tr class="patent-internal-links"><td colspan=2><span class="patent-bibdata-value"><a href="#backward-citations">专利引用</a> (5),</span> <span class="patent-bibdata-value"><a href="#classifications">分类</a> (2),</span> <span class="patent-bibdata-value"><a href="#legal-events">法律事件</a> (1)</span> </td></tr><tr><td colspan=2 class="patent-bibdata-external-link-spacer-top"></td></tr><tr class="patent-bibdata-external-link-spacer-bottom"></tr><tr><td colspan=2><span class="patent-bibdata-heading">外部链接:&nbsp;</span><span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=-BDpCAABERAJ&amp;q=http://211.157.104.87:8080/sipo/zljs/hyjs-yx-new.jsp%3Frecid%3D201280016831&amp;usg=AFQjCNEm96ppgvNVhHeM7TwnESlYgWQ72Q"> 中国国家知识产权局</a>, </span><span class="patent-bibdata-value"><a href="https://www.google.com/url?id=-BDpCAABERAJ&amp;q=http://worldwide.espacenet.com/publicationDetails/biblio%3FCC%3DCN%26NR%3D103477611A%26KC%3DA%26FT%3DD&amp;usg=AFQjCNGFFRLhRA_AbfxHfps7Z40oRfkjAQ"> 欧洲专利数据库 (Espacenet)</a></span></span></td></tr><tr class="patent-bibdata-group-spacer"></tr></table><div class="number-and-title"><span class="patent-title"><invention-title mxw-id="PT132101711" lang="ZH" load-source="patent-office">用于n层高速缓存重定向的系统和方法</invention-title>
      </span><br><span class="patent-number">CN 103477611 A</span></div><div class="patent-section patent-abstract-section"><div class="patent-section-header"><span class="patent-section-title"> 摘要</span></div><div class="patent-text"><abstract mxw-id="PA128278724" lang="ZH" load-source="patent-office">
    <div class="abstract">本公开描述用于负载平衡多层中的多个应用传送控制器（ADC）的系统和方法。该层中的上层包括的ADC负载平衡该层中的低层的多个ADC。为了对于透明高速缓存重定向场景适当地共享和维护客户机IP，在低层的ADC之间分割传输层（传输控制协议（TCP））端口范围。接着，低层ADC将仅使用分配给它们的源端口来创建连接。接着，将来自原点的响应发送到在目的端口查看的上层ADC，并且将分组转发到正确的低层ADC。因此，在两个层处的ADC将一起工作，以提供透明高速缓存重定向。</div>
  </abstract>
  </div></div><div class="patent-section patent-claims-section"><div class="patent-section-header"><span class="patent-section-title">权利要求<span class="patent-section-count">(20)</span></span></div><div class="patent-text"><div mxw-id="PCLM57426569" lang="ZH" load-source="patent-office" class="claims">
    <div class="claim"> <div num="1" class="claim">
      <div class="claim-text">1.一种用于管理提供客户机请求的高速缓存重定向的多层中间装置的方法，所述方法包括:  (a)由负载平衡第二层的多个中间装置的第一层的一个或多个中间装置中的第一中间装置，接收到起源服务器的客户机的第一请求，所述第二层的多个中间装置中的每一个被配置为在与所述第二层的另一中间装置不同的预定范围的端口上接收请求；  (b)由所述第一层的第一中间装置响应于负载平衡客户机的第一请求，将所述第一请求转发到第二层的多个中间装置中的第二中间装置；  (c)由所述第二层的第二中间装置响应于确定所述第一请求是可高速缓存的，将所述第一请求传输到高速缓存服务器；  Cd)由所述第二中间装置响应于高速缓存未命中，将从所述高速缓存服务器向起源服务器发送的第二请求传输到起源服务器；以及  Ce)由所述第一层的第一中间装置响应于对目的端口应用基于策略的路由规则，将来自起源服务器的对所述第二请求的响应传输到所述第二层的第二中间装置，该目的端口经由响应被识别为与所述第二中间装置的预定范围的端口中的端口相对应。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="2" class="claim">
      <div class="claim-text">2.根据权利要求1所述的方法，其中步骤(a)还包括在所述第二层的多个中间装置中的每一个之间分配可用的传输控制协议端口范围。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="3" class="claim">
      <div class="claim-text">3.根据权利要求1所述的方法，其中步骤(a)还包括由所述第一中间装置响应于被配置为转发源IP地址而不改变源IP地址的模式，识别所述第一请求的源互联网协议(IP)地址。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="4" class="claim">
      <div class="claim-text">4.根据权利要求1所述的方法，其中步骤(b)还包括由所述第一中间装置将所述第一请求转发到所述第二中间装置 而不改变所述第一请求的源IP地址。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="5" class="claim">
      <div class="claim-text">5.根据权利要求1所述的方法，其中步骤(c)还包括由所述第二中间装置响应于对所述第一请求的内容应用策略表达式，来确定所述第一请求是可高速缓存的。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="6" class="claim">
      <div class="claim-text">6.根据权利要求1所述的方法，其中步骤(c)还包括由所述第二中间装置将客户机的互联网协议地址插入发送到所述高速缓存服务器的所述第一请求中。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="7" class="claim">
      <div class="claim-text">7.根据权利要求1所述的方法，其中步骤(d)还包括由所述第二中间装置从所述高速缓存服务器接收由所述高速缓存服务器使用起源服务器的目的IP地址和目的端口以及所述高速缓存服务器的源IP地址和源端口传输的第二请求。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="8" class="claim">
      <div class="claim-text">8.根据权利要求1所述的方法，其中步骤(d)还包括由所述第二中间装置将所述第二请求修改为将客户机的IP地址用作源IP地址，并且使用从分配给所述第二中间装置的预定范围的端口中选择的源端口。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="9" class="claim">
      <div class="claim-text">9.根据权利要求1所述的方法，其中步骤(e)还包括由所述第一装置基于将响应的目的端口和所述第二中间装置的预定范围的端口进行匹配来应用所述基于策略的路由规则，并且将所述第二中间装置的IP地址标识为下一跳。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="10" class="claim">
      <div class="claim-text">10.根据权利要求1所述的方法，其中步骤(e)还包括由所述第二中间装置基于由所述第一中间装置转发的起源服务器的响应来传输对第一客户机的第一请求的响应。</div>
    </div>
    </div> <div class="claim"> <div num="11" class="claim">
      <div class="claim-text">11.一种用于管理提供客户机请求的高速缓存重定向的多层中间装置的系统，所述系统包括:  包括一个或多个中间装置的第一层；包括与所述第一层的一个或多个中间装置通信的并且由所述第一层的一个或多个中间装置负载平衡的多个中间装置的第二层，所述第二层的多个中间装置中的每一个被配置为在与所述第二层的另一中间装置不同的预定范围的端口上接收请求；  所述第一层的一个或多个中间装置中的第一中间装置接收到起源服务器的客户机的第一请求，并且响应于负载平衡将所述第一请求转发到所述第二层的多个中间装置中的第二中间装置；  其中，所述第二层的第二中间装置响应于确定所述第一请求是可高速缓存的，将所述第一请求传输到高速缓存服务器，并且响应于高速缓存未命中，将从所述高速缓存服务器向起源服务器发送的第二请求转发到起源服务器；以及  其中，所述第一层的第一中间装置响应于对目的端口应用基于策略的路由规则，将来自起源服务器的对所述第二请求的响应传输到所述第二层的第二中间装置，该目的端口经由所述响应被识别为与所述第二中间装置的预定范围的端口中的端口相对应。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="12" class="claim">
      <div class="claim-text">12.根据权利要求11所述的系统，其中，向所述第二层的多个中间装置中的每一个分配可用的传输控制协议端口范围的部分。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="13" class="claim">
      <div class="claim-text">13.根据权利要求11所述的系统，其中，所述第一中间装置响应于被配置为转发源IP地址而不改变源IP地址的模式，识别所述第一请求的源互联网协议(IP)地址。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="14" class="claim">
      <div class="claim-text">14.根据权利要求11所述的系统，其中，所述第一中间装置将所述第一请求转发到所述第二中间装置而不改变所述第一请求的源IP地址。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="15" class="claim">
      <div class="claim-text">15.根据权利要求11所述的系统，其中，所述第二中间装置响应于对所述第一请求的内容应用策略表达式，来确定 所述第一请求是可高速缓存的。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="16" class="claim">
      <div class="claim-text">16.根据权利要求11所述的系统，其中，所述第二中间装置将客户机的互联网协议地址插入发送到所述高速缓存服务器的所述第一请求中。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="17" class="claim">
      <div class="claim-text">17.根据权利要求11所述的系统，其中，所述第二中间装置从所述高速缓存服务器接收由所述高速缓存服务器传输的第二请求，所述第二请求包括起源服务器的目的IP地址和目的端口以及所述高速缓存服务器的源IP地址和源端口。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="18" class="claim">
      <div class="claim-text">18.根据权利要求11所述的系统，其中，所述第二中间装置将所述第二请求修改为使用客户机的IP地址作为源IP地址，并且使用从分配给所述第二中间装置的预定范围的端口中选择的源端口。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="19" class="claim">
      <div class="claim-text">19.根据权利要求11所述的系统，其中，所述第一中间装置基于将响应的目的端口和所述第二中间装置的预定范围的端口进行匹配来应用所述基于策略的路由规则，并且将所述第二中间装置的IP地址标识为下一跳。</div>
    </div>
    </div> <div class="claim-dependent"> <div num="20" class="claim">
      <div class="claim-text">20.根据权利要求11所述的系统，其中，所述第二中间装置基于由所述第一中间装置转发的起源服务器的响应来传输对第一客户机的所述第一请求的响应。</div>
    </div>
  </div> </div>
  </div></div><div class="patent-section patent-description-section"><div class="patent-section-header"><span class="patent-section-title"> 说明</span></div><div class="patent-text"><div mxw-id="PDES64388685" lang="ZH" load-source="patent-office" class="description">
    <p>用于N层高速缓存重定向的系统和方法</p>
    <p>[0001]	本专利文件的公开的部分内容包括受版权保护的资料。版权所有人不反对任何人以专利商标局所公开的文件或记录的形式对专利文件或专利公开进行传真复制，除此之夕卜，保留所有版权。</p>
    <p>[0002]	相关申请</p>
    <p>[0003]	本申请要求在2011年2月9日提交的，标题为“Systems and Methods For nTierCache Redirection”的美国临时专利申请N0.61/441098的优先权，并且本申请是该美国临时专利申请的继续申请，该美国临时专利申请通过引用被全部包含于此。</p>
    <p>技术领域</p>
    <p>[0004]	本申请总的涉及数据通信网络。本申请尤其涉及用于在多层中间装置间高速缓存重定向的系统和方法。</p>
    <p>背景技术</p>
    <p>[0005]	在某些环境下，中间装置可用于担当应用传送控制器。这样的中间装置可对经过该装置的网络流量执行流量管理。在互联网服务提供商(ISP)环境下，流经网络和这样的装置的流量可能很大。例如，可能有10秒千兆字节的流量流经这样的装置。大流量会给应用传送控制器的性能和操作带来挑战。</p>
    <p>发明内容</p>
    <p>[0006]	ADC可将可高速缓存的请求重定向到高速缓存服务器，并且将不可高速缓存的或动态的请求发送到起源服务器。高速缓存服务器频繁地存储所请求的Web内容，并且代表起源服务器将这些内容提供给客户机。这样做减轻了起源服务器群上的负载。在一些情况下，ISP环境下的大流量对于由应用传送控制器或ADC执行高速缓存重定向的性能和操作带来挑战。</p>
    <p>[0007]	作为解决这些挑战的解决方案，本公开描述用于负载平衡多层中的多个ADC的系统和方法。层中的上层包括负载平衡层中的低层的多个ADC的ADC。为了对透明高速缓存重定向场景适当地共享和维护客户机IP，在低层的ADC之间分割传输层(传输控制协议(TCP))端口范围。接着，低层ADC可创建仅使用分配给它们的源端口的连接。接着，将来自起源服务器的响应发送到查看目的端口的上层ADC，并且将分组转发到正确的低层ADC。因此，两个层级的ADC将一起工作，以提供透明高速缓存重定向。</p>
    <p>[0008]	在一些方面，本解决方案针对用于管理提供客户机请求的高速缓存重定向的多层中间装置的方法。所述方法包括由负载平衡第二层的多个中间装置的第一层的一个或多个中间装置中的第一中间装置，接收到起源服务器的客户机的第一请求。所述第二层的多个中间装置中的每一个被配置为在与所述第二层的另一中间装置不同的预定范围的端口上接收请求。所述方法可包括由所述第一层的第一中间装置响应于负载平衡客户机的第一请求，将所述第一请求转发到第二层的多个中间装置中的第二中间装置。响应于确定所述第一请求是可高速缓存的，所述第二层的第二中间装置可将所述第一请求传输到高速缓存服务器。所述方法还可以包括由所述第二中间装置响应于高速缓存未命中，将从所述高速缓存服务器向起源服务器发送的第二请求传输到起源服务器。所述方法还可以包括由所述第一层的第一中间装置响应于对目的端口应用基于策略的路由规则，接收来自起源服务器的对所述第二请求的响应并且将其传输到所述第二层的第二中间装置，该目的端口经由该响应被识别为与所述第二中间装置的预定范围的端口中的端口相对应。</p>
    <p>[0009]	在一些实施例中，所述方法包括在所述第二层的多个中间装置中的每一个之间分配可用的传输控制协议端口范围。在一些实施例中，所述方法包括由所述第一中间装置响应于被配置为转发源IP地址而不改变源IP地址的模式，识别所述第一请求的源互联网协议(IP)地址。在一些实施例中，该方法包括由所述第一中间装置将所述第一请求转发到所述第二中间装置而不改变所述第一请求的源IP地址。在一些实施例中，该方法包括由所述第二中间装置响应于对所述第一请求的内容应用策略表达式，来确定所述第一请求是可高速缓存的。在一些实施例中，该方法包括由所述第二中间装置将客户机的互联网协议地址插入发送到所述高速缓存服务器的所述第一请求中。在一些实施例中，该方法包括由所述第二中间装置从所述高速缓存服务器接收由所述高速缓存服务器传输的第二请求，该第二请求使用起源服务器的目的IP地址和目的端口以及所述高速缓存服务器的源IP地址和源端口。在一些实施例中，该方法包括由所述第二中间装置将所述第二请求修改为使用客户机的IP地址作为源IP地址，并且使用从分配给所述第二中间装置的预定范围的端口中选择的源端口。在一些实施例中，该方法包括由所述第一装置基于将响应的目的端口和所述第二中间装置的预定范围的端口进行匹配来应用基于策略的路由规则，并且将所述第二中间装置的IP地址识别为下一跳。在一些实施例中，该方法包括由所述第二中间装置基于由所述第一中间装置转发的起源服务器的响应来传输对第一客户机的所述第一请求的响应。</p>
    <p>[0010]	在一些方面，本解决方案针对用于管理提供客户机请求的高速缓存重定向的多层中间装置的系统。所述系统可包括第一层和第二层；所述第一层包括一个或多个中间装置，以及所述第二层包括与所述第一层的一个或多个中间装置通信的并且由所述第一层的一个或多个中间装置负载平衡的多个中间装置。所述第二层的多个中间装置中的每一个被配置为在与所述第二层的另一中间装置不同的预定范围的端口上接收请求。所述第一层的一个或多个中间装置中的第一中间装置接收到起源服务器的客户机的第一请求，并且响应于负载平衡将所述第一请求转发到所述第二层的多个中间装置中的第二中间装置。所述第二层的第二中间装置响应于确定所述第一请求是可高速缓存的，将所述第一请求传输到高速缓存服务器，并且响应于高速缓存未命中，将从所述高速缓存服务器向起源服务器发送的第二请求传输到起源服务器。所述第一层的第一中间装置响应于对目的端口应用基于策略的路由规则，接收来自起源服务器的对所述第二请求的响应并且将其传输到所述第二层的第二中间装置，该目的端口经由该响应被识别为与所述第二中间装置的预定范围的端口中的端口相对应。</p>
    <p>[0011]	在一些实施例中，向所述第二层的多个中间装置中的每一个分配可用的传输控制协议端口范围的部分。在一些实施例中，所述第一中间装置响应于被配置为转发源IP地址而不改变源IP地址的模式，识别所述第一请求的源互联网协议(IP)地址。在一些实施例中，所述第一中间装置将所述第一请求转发到所述第二中间装置而不改变所述第一请求的源IP地址。在一些实施例中，所述第二中间装置响应于对所述第一请求的内容应用策略表达式，来确定所述第一请求是可高速缓存的。在一些实施例中，所述第二中间装置将客户机的互联网协议地址插入发送到所述高速缓存服务器的所述第一请求中。在一些实施例中，所述第二中间装置从所述高速缓存服务器接收由所述高速缓存服务器传输的第二请求，所述第二请求包括起源服务器的目的IP地址和目的端口以及所述高速缓存服务器的源IP地址和源端口。在一些实施例中，所述第二中间装置将所述第二请求修改为使用客户机的IP地址作为源IP地址，并且使用从分配给所述第二中间装置的预定范围的端口中选择的源端口。在一些实施例中，所述第一装置基于将响应的目的端口和所述第二中间装置的预定范围的端口进行匹配来应用基于策略的路由规则，并且将所述第二中间装置的IP地址识别为下一跳。在一些实施例中，所述第二中间装置基于由所述第一中间装置转发的起源服务器的响应来传输对第一客户机的所述第一请求的响应。</p>
    <p>[0012]	在附图和下面的描述中将详细阐述本发明的各种实施例的细节。</p>
    <p>附图说明</p>
    <p>[0013]	通过参考下述结合附图的描述，本发明的前述和其它目的、方面、特征和优点将会更加明显并更易于理解，其中:</p>
    <p>[0014]	图1A是客户机经由设备访问服务器的网络环境的实施例的框图；</p>
    <p>[0015]	图1B是经由设备从服务器传送计算环境到客户机的环境的实施例的框图；</p>
    <p>[0016]	图1C是经由设备从服务器传送计算环境到客户机的环境的另一个实施例的框图；</p>
    <p>[0017]	图1D是经由设备从服务器传送计算环境到客户机的环境的另一个实施例的框图；</p>
    <p>[0018]	图1E-1H是计算装置的实施例的框图；</p>
    <p>[0019]	图2A是用于处理客户机和服务器之间的通信的设备的实施例的框图；</p>
    <p>[0020]	图2B是用于优化、加速、负载平衡和路由客户端和服务器之间的通信的设备的另一个实施例的框图；</p>
    <p>[0021]	图3是用于经由设备与服务器通信的客户机的实施例的框图；</p>
    <p>[0022]	图4A是虚拟化环境的实施例的框图；</p>
    <p>[0023]	图4B是虚拟化环境的另一个实施例的框图；</p>
    <p>[0024]	图4C是虚拟化设备的实施例的框图；</p>
    <p>[0025]	图5A是在多核网络设备中实现并行的方法的实施例的框图；</p>
    <p>[0026]	图5B是使用多核网络应用的系统的实施例的框图；</p>
    <p>[0027]	图5C是多核网络设备的一个方面的实施例的框图；</p>
    <p>[0028]	图6A是多层设备环境的实施例的框图；</p>
    <p>[0029]	图6B是经由多层设备环境处理客户机请求的实施例的框图；</p>
    <p>[0030]	图6C是经由多层设备环境的客户机请求的另一个实施例的框图；</p>
    <p>[0031]	图6D是经由多层设备环境的客户机请求的又一个实施例的框图；以及</p>
    <p>[0032]	图7是用于提供多层高速缓存重定向的方法的实施例的流程图。</p>
    <p>[0033]	从下面结合附图所阐述的详细描述，本发明的特征和优点将更明显，其中，同样的参考标记在全文中标识相应的元素。在附图中，同样的附图标记通常表示相同的、功能上相似的和/或结构上相似的元素。</p>
    <p>具体实施方式</p>
    <p>[0034]	为了阅读下文各种实施例的描述，下述对于说明书的部分以及它们各自内容的描述是有用的:</p>
    <p>[0035]	- A部分描述有益于实施本文描述的实施例的网络环境和计算环境；</p>
    <p>[0036]	- B部分描述用于将计算环境传送到远程用户的系统和方法的实施例；</p>
    <p>[0037]	- C部分描述用于加速客户机和服务器间通信的系统和方法的实施例；</p>
    <p>[0038]	- D部分描述用于对应用传送控制器进行虚拟化的系统和方法的实施例。</p>
    <p>[0039]	&#8212; E部分描述用于提供多核架构和环境的系统和方法的实施例；</p>
    <p>[0040]	一 F部分描述用于在多层应用传送控制器间高速缓存重定向的系统和方法的实施例。</p>
    <p>[0041]	A.网络和计算环&#22607;</p>
    <p>[0042]	在讨论设备和/或客户机的系统和方法的实施例的细节之前，讨论可在其中部署这些实施例的网络和计算环境是有帮助的。现在参见图1A，描述了网络环境的实施例。概括来讲，网络环境包括经由一个或多个网络104、104’(总的称为网络104)与一个或多个服务器106a &#8212; 106η (同样总的称为服务器106,或远程机器106)通信的一个或多个客户机102a - 102η(同样总的称为本地机器102，或客户机102)。在一些实施例中，客户机102通过设备200与服务器106通信。</p>
    <p>[0043]	虽然图1A示出了在客户机102和服务器106之间的网络104和网络104’，客户机102和服务器106可以位于同一个的网络104上。网络104和104’可以是相同类型的网络或不同类型的网络。网络104和/或104’可为局域网(LAN)例如公司内网，城域网(MAN)，或者广域网(WAN)例如因特网或万维网。在一个实施例中，网络104可为专用网络并且网络104’可为公网。在一些实施例中，网络104可为专用网并且网络104’可为公网。在又一个实施例中，网络104和104’可都为专用网。在一些实施例中，客户机102可位于公司企业的分支机构中，通过网络104上的WAN连接与位于公司数据中心的服务器106通信。</p>
    <p>[0044]	网络104和/或104’可以是任何类型和/或形式的网络，并且可包括任何下述网络:点对点网络，广播网络，广域网，局域网，电信网络，数据通信网络，计算机网络，ATM (异步传输模式)网络，SONET (同步光纤网络)网络，SDH (同步数字体系)网络，无线网络和有线网络。在一些实施例中，网络104可以包括无线链路，诸如红外信道或者卫星频带。网络104和/或104’的拓扑可为总线型、星型或环型网络拓扑。网络104和/或104’以及网络拓扑可以是对于本领域普通技术人员所熟知的、可以支持此处描述的操作的任何这样的网络或网络拓扑。</p>
    <p>[0045]	如图1A所示，设备200被显示在网络104和104’之间，设备200也可被称为接口单元200或者网关200。在一些实施例中，设备200可位于网络104上。例如，公司的分支机构可在分支机构中部署设备200。在其他实施例中，设备200可以位于网络104’上。例如，设备200可位于公司的数据中心。在又一个实施例中，多个设备200可在网络104上部署。在一些实施例中，多个设备200可部署在网络104’上。在一个实施例中，第一设备200与第二设备200’通信。在其他实施例中，设备200可为位于与客户机102同一或不同网络104、104’的任一客户机102或服务器106的一部分。一个或多个设备200可位于客户机102和服务器106之间的网络或网络通信路径中的任一点。</p>
    <p>[0046]	在一些实施例中，设备200包括由位于佛罗里达州Ft.Lauderdale的CitrixSystems公司制造的被称为Citrix NetScaler设备的任何网络设备。在其他实施例中，设备200包括由位于华盛顿州西雅图的F5Networks公司制造的被称为WebAccelerator和BigIP的任何一个产品实施例。在又一个实施例中，设备205包括由位于加利福尼亚州Sunnyvale的Juniper Networks公司制造的DX加速设备平台和/或诸如SA700、SA2000、SA4000和SA6000的SSL VPN系列设备中的任何一个。在又一个实施例中，设备200包括由位于加利福尼亚州San Jose的Cisco Systems公司制造的任何应用加速和/或安全相关的设备和/或软件，例如Cisco ACE应用控制引擎模块服务(Application ControlEngine Module service)软件和网络模块以及Cisco AVS系列应用速度系统(ApplicationVelocity System)。</p>
    <p>[0047]	在一个实施例中，系统可包括多个逻辑分组的服务器106。在这些实施例中，服务器的逻辑分组可以被称为服务器群38。在其中一些实施例中，服务器106可为地理上分散的。在一些情况中，群38可以作为单个实体被管理。在其他实施例中，服务器群38包括多个服务器群38。在一个实施例中，服务器群代表一个或多个客户机102执行一个或多个应用程序。</p>
    <p>[0048]	在每个群38中的服务器106可为不同种类。一个或多个服务器106可根据一种类型的操作系统平台(例如，由华盛顿州Redmond的Microsoft公司制造的WINDOWS NT)操作，而一个或多个其它服务器106可根据另一类型的操作系统平台(例如，Unix或Linux)操作。每个群38的服务器106不需要与同一群38内的另一个服务器106物理上接近。因此，被逻辑分组为群38的服务器106组可使用广域网(WAN)连接或城域网(MAN)连接互联。例如，群38可包括物理上位于不同大陆或大陆的不同区域、国家、州、城市、校园或房间的服务器106。如果使用局域网(LAN)连接或一些直连形式来连接服务器106，则可增加群38中的服务器106间的数据传送速度。</p>
    <p>[0049]	服务器106可指文件服务器、应用服务器、web服务器、代理服务器或者网关服务器。在一些实施例中，服务器106可以有作为应用服务器或者作为主应用服务器工作的能力。在一个实施例中，服务器106可包括活动目录。客户机102也可称为客户端节点或端点。在一些实施例中，客户机102可以有作为客户机节点寻求访问服务器上的应用的能力，也可以有作为应用服务器为其它客户机102a-102n提供对寄载的应用的访问的能力。</p>
    <p>[0050]	在一些实施例中，客户机102与服务器106通信。在一个实施例中，客户机102与群38中的服务器106的其中一个直接通信。在又一个实施例中，客户机102执行程序邻近应用(program neighborhood application)以与群38内的服务器106通信。在又一个实施例中，服务器106提供主节点的功能。在一些实施例中，客户机102通过网络104与群38中的服务器106通信。通过网络104，客户机102例如可以请求执行群38中的服务器106a-106n寄载的各种应用，并接收应用执行结果的输出进行显示。在一些实施例中，只有主节点提供识别和提供与寄载所请求的应用的服务器106’相关的地址信息所需的功能。</p>
    <p>[0051]	在一个实施例中，服务器106提供web服务器的功能。在又一个实施例中，服务器106a接收来自客户机102的请求，将该请求转发到第二服务器106b，并使用来自服务器106b对该请求的响应来对客户机102的请求进行响应。在又一个实施例中，服务器106获得客户机102可用的应用的列举以及与由该应用的列举所识别的应用的服务器106相关的地址信息。在又一个实施例中，服务器106使用web接口将对请求的响应提供给客户机102。在一个实施例中，客户机102直接与服务器106通信以访问所识别的应用。在又一个实施例中，客户机102接收由执行服务器106上所识别的应用而产生的诸如显示数据的应用输出数据。</p>
    <p>[0052]	现参考图1B，描述了部署多个设备200的网络环境的实施例。第一设备200可以部署在第一网络104上，而第二设备200’部署在第二网络104’上。例如，公司可以在分支机构部署第一设备200,而在数据中心部署第二设备200’。在又一个实施例中，第一设备200和第二设备200’被部署在同一个网络104或网络104上。例如，第一设备200可以被部署用于第一服务器群38,而第二设备200可以被部署用于第二服务器群38’。在另一个实例中，第一设备200可以被部署在第一分支机构，而第二设备200’被部署在第二分支机构’。在一些实施例中，第一设备200和第二设备200’彼此协同或联合工作，以加速客户机和服务器之间的网络流量或应用和数据的传送。</p>
    <p>[0053]	现参考图1C，描述了网络环境的又一个实施例，在该网络环境中，将设备200和一个或多个其它类型的设备部署在一起，例如，部署在一个或多个WAN优化设备205，205’之间。例如，第一 WAN优化设备205显示在网络104和104’之间，而第二 WAN优化设备205’可以部署在设备200和一个或多个服务器106之间。例如，公司可以在分支机构部署第一WAN优化设备205，而在数据中心部署第二 WAN优化设备205’。在一些实施例中，设备205可以位于网络104’上。在其他实施例中，设备205’可以位于网络104上。在一些实施例中，设备205’可以位于网络104’或网络104〃上。在一个实施例中，设备205和205’在同一个网络上。在又一个实施例中，设备205和205’在不同的网络上。在另一个实例中，第一 WAN优化设备205可以被部署用于第一服务器群38,而第二 WAN优化设备205’可以被部署用于第二服务器群38’。</p>
    <p>[0054]	在一个实施例中，设备205是用于加速、优化或者以其他方式改善任何类型和形式的网络流量(例如去往和/或来自WAN连接的流量)的性能、操作或服务质量的装置。在一些实施例中，设备205是一个性能增强代理。在其他实施例中，设备205是任何类型和形式的WAN优化或加速装置，有时也被称为WAN优化控制器。在一个实施例中，设备205是由位于佛罗里达州Ft.Lauderdale的Citrix Systems公司出品的被称为WANScaler的产品实施例中的任何一种。在其他实施例中，设备205包括由位于华盛顿州Seattle的F5Networks公司出品的被称为BIG-1P链路控制器和WANjet的产品实施例中的任何一种。在又一个实施例中，设备205包括由位于加利福尼亚州Sunnyvale的Juniper NetWorks公司出品的WX和WXC WAN加速装置平台中的任何一种。在一些实施例中，设备205包括由加利福尼亚州San Francisco的Riverbed Technology公司出品的虹蹲(steeIhead)系列WAN优化设备中的任何一种。在其他实施例中，设备205包括由位于新泽西州Roseland的Expand Networks公司出品的WAN相关装置中的任何一种。在一个实施例中，设备205包括由位于加利福尼亚州Cupertino的Packeteer公司出品的任何一种WAN相关设备，例如由Packeteer提供的PacketShaper、iShared和SkyX产品实施例。在又一个实施例中，设备205包括由位于加利福尼亚州San Jose的Cisco Systems公司出品的任何WAN相关设备和/或软件，例如Cisco广域网应用服务软件和网络模块以及广域网引擎设备。</p>
    <p>[0055]	在一个实施例中，设备205为分支机构或远程办公室提供应用和数据加速服务。在一个实施例中，设备205包括广域文件服务(WAFS)的优化。在又一个实施例中，设备205加速文件的传送，例如经由通用互联网文件系统(CIFS)协议。在其他实施例中，设备205在存储器和/或存储装置中提供高速缓存来加速应用和数据的传送。在一个实施例中，设备205在任何级别的网络堆栈或在任何的协议或网络层中提供网络流量的压缩。在又一个实施例中，设备205提供传输层协议优化、流量控制、性能增强或修改和/或管理，以加速WAN连接上的应用和数据的传送。例如，在一个实施例中，设备205提供传输控制协议(TCP)优化。在其他实施例中，设备205提供对于任何会话或应用层协议的优化、流量控制、性能增强或修改和/或管理。</p>
    <p>[0056]	在又一个实施例中，设备205将任何类型和形式的数据或信息编码成网络分组的定制的或标准的TCP和/或IP的报头字段或可选字段，以将其存在、功能或能力通告给另一个设备205’。在又一个实施例中，设备205’可以使用在TCP和/或IP报头字段或选项中编码的数据来与另一个设备205’进行通信。例如，设备可以使用TCP选项或IP报头字段或选项来传达在执行诸如WAN加速的功能时或者为了彼此联合工作而由设备205，205’所使用的一个或多个参数。</p>
    <p>[0057]	在一些实施例中，设备200保存在设备205和205’之间传达的TCP和/或IP报头和/或可选字段中编码的任何信息。例如，设备200可以终止经过设备200的传输层连接，例如经过设备205和205’的在客户机和服务器之间的一个传输层连接。在一个实施例中，设备200识别并保存由第一设备205通过第一传输层连接发送的传输层分组中的任何编码信息，并经由第二传输层连接来将具有编码信息的传输层分组传达到第二设备205’。</p>
    <p>[0058]	现参考图1D，描述了用于传送和/或操作客户机102上的计算环境的网络环境。在一些实施例中，服务器106包括用于向一个或多个客户机102传送计算环境或应用和/或数据文件的应用传送系统190。总的来说，客户机10通过网络104、104’和设备200与服务器106通信。例如，客户机102可驻留在公司的远程办公室里，例如分支机构，并且服务器106可驻留在公司数据中心。客户机102包括客户机代理120以及计算环境15。计算环境15可执行或操作用于访问、处理或使用数据文件的应用。可经由设备200和/或服务器106传送计算环境15、应用和/或数据文件。</p>
    <p>[0059]	在一些实施例中，设备200加速计算环境15或者其任何部分到客户机102的传送。在一个实施例中，设备200通过应用传送系统190加速计算环境15的传送。例如，可使用此处描述的实施例来加速从公司中央数据中心到远程用户位置(例如公司的分支机构)的流应用(streaming application)及该应用可处理的数据文件的传送。在又一个实施例中，设备200加速客户机102和服务器106之间的传输层流量。设备200可以提供用于加速从服务器106到客户机102的任何传输层有效载荷的加速技术，例如:1)传输层连接池，2)传输层连接多路复用，3)传输控制协议缓冲，4)压缩和5)高速缓存。在一些实施例中，设备200响应于来自客户机102的请求提供服务器106的负载平衡。在其他实施例中，设备200充当代理或者访问服务器来提供对一个或者多个服务器106的访问。在又一个实施例中，设备200提供从客户机102的第一网络104到服务器106的第二网络104’的安全虚拟专用网络连接，诸如SSL VPN连接。在又一些实施例中，设备200提供客户机102和服务器106之间的连接和通信的应用防火墙安全、控制和管理。</p>
    <p>[0060]	在一些实施例中，基于多个执行方法并且基于通过策略引擎195所应用的任一验证和授权策略，应用传送管理系统190提供将计算环境传送到远程的或者另外的用户的桌面的应用传送技术。使用这些技术，远程用户可以从任何网络连接装置100获取计算环境并且访问服务器所存储的应用和数据文件。在一个实施例中，应用传送系统190可驻留在服务器106上或在其上执行。在又一个实施例中，应用传送系统190可驻留在多个服务器106a-106n上或在其上执行。在一些实施例中，应用传送系统190可在服务器群38内执行。在一个实施例中，执行应用传送系统190的服务器106也可存储或提供应用和数据文件。在又一个实施例中，一个或多个服务器106的第一组可执行应用传送系统190，而不同的服务器106η可存储或提供应用和数据文件。在一些实施例中，应用传送系统190、应用和数据文件中的每一个可驻留或位于不同的服务器。在又一个实施例中，应用传送系统190的任何部分可驻留、执行、或被存储于或分发到设备200或多个设备。</p>
    <p>[0061]	客户机102可包括用于执行使用或处理数据文件的应用的计算环境15。客户机102可通过网络104、104’和设备200请求来自服务器106的应用和数据文件。在一个实施例中，设备200可以将来自客户机102的请求转发到服务器106。例如，客户机102可能不具有本地存储或者本地可访问的应用和数据文件。响应于请求，应用传送系统190和/或服务器106可以传送应用和数据文件到客户机102。例如，在一个实施例中，服务器106可以把应用作为应用流来传输，以在客户机102上的计算环境15中操作。</p>
    <p>[0062]	在一些实施例中，应用传送系统190包括Citrix Systems有限公司的CitrixAccess Suite&#8482; 的任一部分(例如 MetaFrame 或 Citrix Presentation Server&#8482;),和 / 或微软公司开发的Microsoft&#174; Windows终端服务中的任何一个。在一个实施例中，应用传送系统190可以通过远程显示协议或者以其它方式通过基于远程计算或者基于服务器计算来传送一个或者多个应用到客户机102或者用户。在又一个实施例中，应用传送系统190可以通过应用流来传送一个或者多个应用到客户机或者用户。</p>
    <p>[0063]	在一个实施例中，应用传送系统190包括策略引擎195，其用于控制和管理对应用的访问、应用执行方法的选择以及应用的传送。在一些实施例中，策略引擎195确定用户或者客户机102可以访问的一个或者多个应用。在又一个实施例中，策略弓I擎195确定应用应该如何被传送到用户或者客户机102，例如执行方法。在一些实施例中，应用传送系统190提供多个传送技术，从中选择应用执行的方法，例如基于服务器的计算、本地流式传输或传送应用给客户机120以用于本地执行。</p>
    <p>[0064]	在一个实施例中，客户机102请求应用程序的执行并且包括服务器106的应用传送系统190选择执行应用程序的方法。在一些实施例中，服务器106从客户机102接收证书。在又一个实施例中，服务器106从客户机102接收对于可用应用的列举的请求。在一个实施例中，响应该请求或者证书的接收，应用传送系统190列举对于客户机102可用的多个应用程序。应用传送系统190接收执行所列举的应用的请求。应用传送系统190选择预定数量的方法之一来执行所列举的应用，例如响应策略引擎的策略。应用传送系统190可以选择执行应用的方法，使得客户机102接收通过执行服务器106上的应用程序所产生的应用输出数据。应用传送系统190可以选择执行应用的方法，使得本地机器10在检索包括应用的多个应用文件之后本地执行应用程序。在又一个实施例中，应用传送系统190可以选择执行应用的方法，以通过网络104流式传输应用到客户机102。</p>
    <p>[0065]	客户机102可以执行、操作或者以其它方式提供应用，所述应用可为任何类型和/或形式的软件、程序或者可执行指令，例如任何类型和/或形式的web浏览器、基于web的客户机、客户机一服务器应用、瘦客户端计算客户机、ActiveX控件、或者Java程序、或者可以在客户机102上执行的任何其它类型和/或形式的可执行指令。在一些实施例中，应用可以是代表客户机102在服务器106上执行的基于服务器或者基于远程的应用。在一个实施例中，服务器106可以使用任何瘦-客户端或远程显示协议来显示输出到客户机102，所述瘦_客户端或远程显示协议例如由位于佛罗里达州Ft.Lauderdale的Citrix Systems公司出品的独立计算架构(ICA)协议或由位于华盛顿州Redmond的微软公司出品的远程桌面协议(RDP)。应用可使用任何类型的协议，并且它可为，例如，HTTP客户机、FTP客户机、Oscar客户机或Telnet客户机。在其他实施例中，应用包括和VoIP通信相关的任何类型的软件，例如软IP电话。在进一步的实施例中，应用包括涉及到实时数据通信的任一应用，例如用于流式传输视频和/或音频的应用。</p>
    <p>[0066]	在一些实施例中，服务器106或服务器群38可运行一个或多个应用，例如提供瘦客户端计算或远程显示表示应用的应用。在一个实施例中，服务器106或服务器群38作为一个应用来执行Citrix Systems有限公司的Citrix Access Suite&#8482;的任一部分(例如 MetaFrame 或 Citrix Presentation Server&#8482;),和 / 或微软公司开发的 Microsoft&#174;Windows终端服务中的任何一个。在一个实施例中，该应用是位于佛罗里达州FortLauderdale的Citrix Systems有限公司开发的ICA客户机。在其他实施例中，该应用包括由位于华盛顿州Redmond的Microsoft公司开发的远程桌面(RDP)客户机。另外，服务器106可以运行一个应用，例如，其可以是提供电子邮件服务的应用服务器，例如由位于华盛顿州 Redmond 的 Microsoft 公司制造的 Microsoft Exchange, web 或 Internet 服务器，或者桌面共享服务器，或者协作服务器。在一些实施例中，任一应用可以包括任一类型的所寄载的服务或产品，例如位于加利福尼亚州Santa Barbara的Citrix Online Division公司提供的GoToMeeting&#8482;,位于加利福尼亚州Santa Clara的WebEx有限公司提供的WebEx&#8482;,或者位于华盛顿州 Redmond 的 Microsoft 公司提供的 Microsoft Office Live Meeting。</p>
    <p>[0067]	仍参考图1D，网络环境的一个实施例可以包括监控服务器106A。监控服务器106A可以包括任何类型和形式的性能监控服务198。性能监控服务198可以包括监控、测量和/或管理软件和/或硬件，包括数据收集、集合、分析、管理和报告。在一个实施例中，性能监控服务198包括一个或多个监控代理197。监控代理197包括用于在诸如客户机102、服务器106或设备200和205的装置上执行监控、测量和数据收集活动的任何软件、硬件或其组合。在一些实施例中，监控代理197包括诸如Visual Basic脚本或Javascript任何类型和形式的脚本。在一个实施例中，监控代理197相对于装置的任何应用和/或用户透明地执行。在一些实施例中，监控代理197相对于应用或客户机不显眼地被安装和操作。在又一个实施例中，监控代理197的安装和操作不需要用于该应用或装置的任何设备。</p>
    <p>[0068]	在一些实施例中，监控代理197以预定频率监控、测量和收集数据。在其他实施例中，监控代理197基于检测到任何类型和形式的事件来监控、测量和收集数据。例如，监控代理197可以在检测到对web页面的请求或收到HTTP响应时收集数据。在另一个实例中，监控代理197可以在检测到诸如鼠标点击的任一用户输入事件时收集数据。监控代理197可以报告或提供任何所监控、测量或收集的数据给监控服务198。在一个实施例中，监控代理197根据时间安排或预定频率来发送信息给监控服务198。在又一个实施例中，监控代理197在检测到事件时发送信息给监控服务198。</p>
    <p>[0069]	在一些实施例中，监控服务198和/或监控代理197对诸如客户机、服务器、服务器群、设备200、设备205或网络连接的任何网络资源或网络基础结构元件的进行监控和性能测量。在一个实施例中，监控服务198和/或监控代理197执行诸如TCP或UDP连接的任何传输层连接的监控和性能测量。在又一个实施例中，监控服务198和/或监控代理197监控和测量网络等待时间。在又一个实施例中，监控服务198和/或监控代理197监控和测量带宽利用。</p>
    <p>[0070]	在其他实施例中，监控服务198和/或监控代理197监控和测量终端用户响应时间。在一些实施例中，监控服务198执行应用的监控和性能测量。在又一个实施例中，监控服务198和/或监控代理197执行到应用的任何会话或连接的监控和性能测量。在一个实施例中，监控服务198和/或监控代理197监控和测量浏览器的性能。在又一个实施例中，监控服务198和/或监控代理197监控和测量基于HTTP的事务的性能。在一些实施例中，监控服务198和/或监控代理197监控和测量IP电话(VoIP)应用或会话的性能。在其他实施例中，监控服务198和/或监控代理197监控和测量诸如ICA客户机或RDP客户机的远程显示协议应用的性能。在又一个实施例中，监控服务198和/或监控代理197监控和测量任何类型和形式的流媒体的性能。在进一步的实施例中，监控服务198和/或监控代理197监控和测量所寄载的应用或软件即服务(Software-As-A-Service, SaaS)传送模型的性能。</p>
    <p>[0071]	在一些实施例中，监控服务198和/或监控代理197执行与应用相关的一个或多个事务、请求或响应的监控和性能测量。在其他实施例中，监控服务198和/或监控代理197监控和测量应用层堆栈的任何部分，例如任何.NET或J2EE调用。在一个实施例中，监控服务198和/或监控代理197监控和测量数据库或SQL事务。在又一个实施例中，监控服务198和/或监控代理197监控和测量任何方法、函数或应用编程接口(API)调用。</p>
    <p>[0072]	在一个实施例中，监控服务198和/或监控代理197对经由诸如设备200和/或设备205的一个或多个设备从服务器到客户机的应用和/或数据的传送进行监控和性能测量。在一些实施例中，监控服务198和/或监控代理197监控和测量虚拟化应用的传送的性能。在其他实施例中，监控服务198和/或监控代理197监控和测量流式应用的传送的性能。在又一个实施例中，监控服务198和/或监控代理197监控和测量传送桌面应用到客户机和/或在客户机上执行桌面应用的性能。在又一个实施例中，监控服务198和/或监控代理197监控和测量客户机/服务器应用的性能。</p>
    <p>[0073]	在一个实施例中，监控服务198和/或监控代理197被设计和构建成为应用传送系统190提供应用性能管理。例如，监控服务198和/或监控代理197可以监控、测量和管理经由Citrix表示服务器(Citrix Presentation Server)传送应用的性能。在该实例中，监控服务198和/或监控代理197监控单独的ICA会话。监控服务198和/或监控代理197可以测量总的以及每次的会话系统资源使用，以及应用和连网性能。监控服务198和/或监控代理197可以对于给定用户和/或用户会话来标识有效服务器(active server).在一些实施例中，监控服务198和/或监控代理197监控在应用传送系统190和应用和/或数据库服务器之间的后端连接。监控服务198和/或监控代理197可以测量每个用户会话或ICA会话的网络等待时间、延迟和容量。</p>
    <p>[0074]	在一些实施例中，监控服务198和/或监控代理197测量和监控对于应用传送系统190的诸如总的存储器使用、每个用户会话和/或每个进程的存储器使用。在其他实施例中，监控服务198和/或监控代理197测量和监控诸如总的CPU使用、每个用户会话和/或每个进程的应用传送系统190的CPU使用。在又一个实施例中，监控服务198和/或监控代理197测量和监控登录到诸如Citrix表示服务器的应用、服务器或应用传送系统所需的时间。在一个实施例中，监控服务198和/或监控代理197测量和监控用户登录应用、月艮务器或应用传送系统190的持续时间。在一些实施例中，监控服务198和/或监控代理197测量和监控应用、服务器或应用传送系统会话的有效和无效的会话计数。在又一个实施例中，监控服务198和/或监控代理197测量和监控用户会话等待时间。</p>
    <p>[0075]	在另外的实施例中，监控服务198和/或监控代理197测量和监控任何类型和形式的服务器指标。在一个实施例中，监控服务198和/或监控代理197测量和监控与系统内存、CPU使用和盘存储器有关的指标。在又一个实施例中，监控服务198和/或监控代理197测量和监控和页错误有关的指标，诸如每秒页错误。在其他实施例中，监控服务198和/或监控代理197测量和监控往返时间的指标。在又一个实施例中，监控服务198和/或监控代理197测量和监控与应用崩溃、错误和/或中止相关的指标。</p>
    <p>[0076]	在一些实施例中，监控服务198和监控代理198包括由位于佛罗里达州Ft.Lauderdale的Citrix Systems公司出品的被称为EdgeSight的任何一种产品实施例。在又一个实施例中，性能监控服务198和/或监控代理198包括由位于加利福尼亚州PaloAlto的Symphoniq公司出品的被称为TrueView产品套件的产品实施例的任一部分。在一个实施例中，性能监控服务198和/或监控代理198包括由位于加利福尼亚州San Francisco的TeaLeaf技术公司出品的被称为TeaLeafCX产品套件的产品实施例的任何部分。在其他实施例中，性能监控服务198和/或监控代理198包括由位于德克萨斯州Houston的BMC软件公司出品的诸如BMC性能管理器和巡逻产品(BMC Performance Manager and Patrolproducts)的商业服务管理产品的任何部分。</p>
    <p>[0077]	客户机102、服务器106和设备200可以被部署为和/或执行在任何类型和形式的计算装置上，诸如能够在任何类型和形式的网络上通信并执行此处描述的操作的计算机、网络装置或者设备。图1E和IF描述了可用于实施客户机102、服务器106或设备200的实施例的计算装置100的框图。如图1E和IF所示，每个计算装置100包括中央处理单元101和主存储器单元122。如图1E所示，计算装置100可以包括可视显示装置124、键盘126和/或诸如鼠标的指示装置127。每个计算装置100也可包括其它可选元件，例如一个或多个输入/输出装置130a - 130b (总的使用附图标记130表示)，以及与中央处理单元101通信的高速缓存存储器140。</p>
    <p>[0078]	中央处理单元101是响应并处理从主存储器单元122取出的指令的任何逻辑电路。在许多实施例中，中央处理单元由微处理器单元提供，例如:由加利福尼亚州MountainView的Intel公司制造的微处理器单元；由伊利诺伊州Schaumburg的Motorola公司制造的微处理器单元；由加利福尼亚州Santa Clara的Transmeta公司制造的微处理器单元；由纽约州 White Plains 的 International Business Machines 公司制造的 RS/6000 处理器；或者由加利福尼亚州Sunnyvale的Advanced Micro Devices公司制造的微处理器单元。计算装置100可以基于这些处理器中的任何一种，或者能够如此处所述方式运行的任何其它处理器。</p>
    <p>[0079]	主存储器单元122可以是能够存储数据并允许微处理器101直接访问任何存储位置的一个或多个存储器芯片，例如静态随机存取存储器(SRAM)、突发SRAM或同步突发SRAM(BSRAM)、动态随机存取存储器DRAM、快速页模式DRAM (FPM DRAM)、增强型DRAM (EDRAM)、扩展数据输出RAM (EDO RAM)、扩展数据输出DRAM (EDO DRAM)、突发式扩展数据输出DRAM(BEDO DRAM)、增强型 DRAM (EDRAM)、同步 DRAM (SDRAM), JEDEC SRAM、PC100SDRAM、双数据速率SDRAM (DDR SDRAM)、增强型SRAM (ESDRAM)、同步链路DRAM (SLDRAM)、直接内存总线DRAM (DRDRAM)或铁电RAM (FRAM)0主存储器122可以基于上述存储芯片的任何一种，或者能够如此处所述方式运行的任何其它可用存储芯片。在图1E中所示的实施例中，处理器101通过系统总线150 (在下面进行更详细的描述)与主存储器122进行通信。图1E描述了在其中处理器通过存储器端口 103直接与主存储器122通信的计算装置100的实施例。例如，在图1F中，主存储器122可以是DRDRAM。</p>
    <p>[0080]	图1F描述了在其中主处理器101通过第二总线与高速缓存存储器140直接通信的实施例，第二总线有时也称为后端总线。其他实施例中，主处理器101使用系统总线150和高速缓存存储器140通信。高速缓存存储器140通常有比主存储器122更快的响应时间，并且通常由SRAM、BSRAM或EDRAM提供。在图1F中所示的实施例中，处理器101通过本地系统总线150与多个I/O装置130进行通信。可以使用各种不同的总线将中央处理单元101连接到任何I/O装置130，所述总线包括VESA VL总线、ISA总线、EISA总线、微通道体系结构(MCA)总线、PCI总线、PC1-X总线、PC1-Express总线或NuBus。对于I/O装置是视频显示器124的实施例，处理器101可以使用高级图形端口(AGP)与显示器124通信。图1F说明了主处理器101通过超传输(HyperTransport )、快速I/O或者Inf iniBand直接与I/O装置130通信的计算机100的一个实施例。图1F还描述了在其中混合本地总线和直接通信的实施例:处理器101使用本地互连总线与I/O装置130b进行通信，同时直接与I/O装置130a进行通信。</p>
    <p>[0081]	计算装置100可以支持任何适当的安装装置116，例如用于接纳诸如3.5英寸、5.25英寸磁盘或ZIP磁盘这样的软盘的软盘驱动器、⑶-ROM驱动器、⑶-R/RW驱动器、DVD-ROM驱动器、各种格式的磁带驱动器、USB装置、硬盘驱动器或适于安装像任何客户机代理120或其部分的软件和程序的任何其它装置。计算装置100还可以包括存储装置128，诸如一个或者多个硬盘驱动器或者独立磁盘冗余阵列，用于存储操作系统和其它相关软件，以及用于存储诸如涉及客户机代理120的任何程序的应用软件程序。或者，可以使用安装装置116的任何一种作为存储装置128。此外，操作系统和软件可从例如可引导⑶的可引导介质运行,诸如KNOPPIX&#174;，一种用于GNU/Linux的可引导⑶，该可引导⑶可自knoppix.net作为GNU/Linux &#8212;个分发版获得。</p>
    <p>[0082]	此外，计算装置100可以包括通过多种连接接口到局域网(LAN)、广域网(WAN)或因特网的网络接口 118，所述多种连接包括但不限于标准电话线路、LAN或WAN链路(例如802.ll，Tl，T3、56kb、X.25)、宽带连接(如ISDN、帧中继、ATM)、无线连接、或上述任何或所有连接的一些组合。网络接口 118可以包括内置网络适配器、网络接口卡、PCMCIA网络卡、卡总线网络适配器、无线网络适配器、USB网络适配器、调制解调器或适用于将计算装置100接口到能够通信并执行这里所说明的操作的任何类型的网络的任何其它设备。计算装置100中可以包括各种I/O装置130a-130n。输入装置包括键盘、鼠标、触控板、轨迹球、麦克风和绘图板。输出装置包括视频显示器、扬声器、喷墨打印机、激光打印机和热升华打印机。如图1E所示，I/O装置130可以由I/O控制器123控制。I/O控制器可以控制一个或多个I/O装置，例如键盘126和指示装置127(如鼠标或光笔)。此外，I/O装置还可以为计算装置100提供存储装置128和/或安装介质116。在其他实施例中，计算装置100可以提供USB连接以接纳手持USB存储装置,例如由位于美国加利福尼亚州Los Alamitos的TwintechIndustry有限公司生产的USB闪存驱动驱动系列装置。</p>
    <p>[0083]	在一些实施例中，计算装置100可以包括多个显示装置124a_124n或与其相连，这些显示装置各自可以是相同或不同的类型和/或形式。因而，任何一种I/O装置130a-130n和/或I/O控制器123可以包括任一类型和/或形式的适当的硬件、软件或硬件和软件的组合，以支持、允许或提供通过计算装置100连接和使用多个显示装置124a-124n。例如，计算装置100可以包括任何类型和/或形式的视频适配器、视频卡、驱动器和/或库，以与显示装置124a-124n接口、通信、连接或以其他方式使用显示装置。在一个实施例中，视频适配器可以包括多个连接器以与多个显示装置124a-124n接口。在其他实施例中，计算装置100可以包括多个视频适配器，每个视频适配器与显示装置124a-124n中的一个或多个连接。在一些实施例中，计算装置100的操作系统的任一部分都可以被配置用于使用多个显示器124a-124n。在其他实施例中，显示装置124a_124n中的一个或多个可以由一个或多个其它计算装置提供，诸如例如通过网络与计算装置100连接的计算装置IOOa和100b。这些实施例可以包括被设计和构造为将另一个计算机的显示装置用作计算装置100的第二显示装置124a的任一类型的软件。本领域的普通技术人员应认识和理解可以将计算装置100配置成具有多个显示装置124a-124n的各种方法和实施例。</p>
    <p>[0084]	在另外的实施例中，I/O装置130可以是系统总线150和外部通信总线之间的桥170，所述外部通信总线例如USB总线、Apple桌面总线、RS-232串行连接、SCSI总线、FireWire总线、Fireffire800总线、以太网总线、AppleTalk总线、千兆位以太网总线、异步传输模式总线、HIPPI总线、超级HIPPI总线、SerialPlus总线、SCI/LAMP总线、光纤信道总线或串行SCSI总线。</p>
    <p>[0085]	图1E和IF中描述的那类计算装置100通常在控制任务的调度和对系统资源的访问的操作系统的控制下操作。计算装置100可以运行任何操作系统,如Microsoft&#174;Windows操作系统,不同发行版本的Unix和Linux操作系统,用于Macintosh计算机的任何版本的MAC OS&#174;,任何嵌入式操作系统,任何实时操作系统,任何开源操作系统,任何专有操作系统，任何用于移动计算装置的操作系统，或者任何其它能够在计算装置上运行并完成这里所述操作的操作系统。典型的操作系统包括:WIND0WS3.X、WIND0WS95、WIND0WS98、WIND0WS2000, WINDOWS ΝΤ3.51、WINDOWS ΝΤ4.0、WINDOWS CE 和 WINDOWS XP，所有这些均由位于华盛顿州Redmond的微软公司出品；由位于加利福尼亚州Cupertino的苹果计算机出品的MacOS ;由位于纽约州Armonk的国际商业机器公司出品的OS/2 ;以及由位于犹他州Salt Lake City的Caldera公司发布的可免费使用的Linux操作系统或者任何类型和/或形式的Unix操作系统，以及其它。</p>
    <p>[0086]	在其他的实施例中，计算装置100可以有符合该装置的不同的处理器、操作系统和输入设备。例如，在一个实施例中，计算机100是由Palm公司出品的Treol80、270、1060、600或650智能电话。在该实施例中，Treo智能电话在PalmOS操作系统的控制下操作，并包括指示笔输入装置以及五向导航装置。此外，计算装置100可以是任何工作站、桌面计算机、膝上型或笔记本计算机、服务器、手持计算机、移动电话、任何其它计算机、或能够通信并有足够的处理器能力和存储容量以执行此处所述的操作的其它形式的计算或者电信装置。</p>
    <p>[0087]	如图1G所示，计算装置100可以包括多个处理器，可以提供用于对不只一个数据片同时执行多个指令或者同时执行一个指令的功能。在一些实施例中，计算装置100可包括具有一个或多个核的并行处理器。在这些实施例的一个中，计算装置100是共享内存并行设备，具有多个处理器和/或多个处理器核，将所有可用内存作为一个全局地址空间进行访问。在这些实施例的又一个中，计算装置100是分布式存储器并行设备，具有多个处理器，每个处理器访问本地存储器。在这些实施例的又一个中，计算装置100既有共享的存储器又有仅由特定处理器或处理器子集访问的存储器。在这些实施例的又一个中，如多核微处理器的计算装置100将两个或多个独立处理器组合在一个封装中，通常在一个集成电路(IC)中。在这些实施例的又一个中，计算装置100包括具有单元宽带引擎(CELL BROADBANDENGINE)架构的芯片，并包括高能处理器单元以及多个协同处理单元，高能处理器单元和多个协同处理单元通过内部高速总线连接在一起，可以将内部高速总线称为单元互连总线。</p>
    <p>[0088]	在一些实施例中，处理器提供用于对多个数据片同时执行单个指令(SMD)的功能。其他实施例中，处理器提供用于对多个数据片同时执行多个指令(MMD)的功能。又一个实施例中，处理器可以在单个装置中使用SMD和MMD核的任意组合。</p>
    <p>[0089]	在一些实施例中，计算装置100可包括图像处理单元。图1H所示的在这些实施例的一个中，计算装置100包括至少一个中央处理单元101和至少一个图像处理单元。在这些实施例的又一个中，计算装置100包括至少一个并行处理单元和至少一个图像处理单元。在这些实施例的又一个中，计算装置100包括任意类型的多个处理单元，多个处理单元中的一个包括图像处理单元。</p>
    <p>[0090]	一些实施例中，第一计算装置IOOa代表客户计算装置IOOb的用户执行应用。又一个实施例中，计算装置100执行虚拟机，其提供执行会话，在该会话中，代表客户计算装置IOOb的用户执行应用。在这些实施例的一个中，执行会话是寄载的桌面会话。在这些实施例的又一个中，计算装置100执行终端服务会话。终端服务会话可以提供寄载的桌面环境。在这些实施例的又一个中，执行会话提供对计算环境的访问，该计算环境可包括以下的一个或多个:应用、多个应用、桌面应用以及可执行一个或多个应用的桌面会话。B.设备架&#24313;</p>
    <p>[0091]	图2A示出设备200的一个示例实施例。提供图2A的设备200架构仅用于示例，并不意于作为限制性的架构。如图2所示，设备200包括硬件层206和被分为用户空间202和内核空间204的软件层。</p>
    <p>[0092]	硬件层206提供硬件元件，在内核空间204和用户空间202中的程序和服务在该硬件元件上被执行。硬件层206也提供结构和元件，就设备200而言，这些结构和元件允许在内核空间204和用户空间202内的程序和服务既在内部进行数据通信又与外部进行数据通信。如图2所示，硬件层206包括用于执行软件程序和服务的处理单元262，用于存储软件和数据的存储器264，用于通过网络传输和接收数据的网络端口 266，以及用于执行与安全套接字协议层相关的功能处理通过网络传输和接收的数据的加密处理器260。在一些实施例中，中央处理单元262可在单独的处理器中执行加密处理器260的功能。另外，硬件层206可包括用于每个处理单元262和加密处理器260的多处理器。处理器262可以包括以上结合图1E和IF所述的任一处理器101。例如，在一个实施例中，设备200包括第一处理器262和第二处理器262’。在其他实施例中，处理器262或者262’包括多核处理器。</p>
    <p>[0093]	虽然示出的设备200的硬件层206通常带有加密处理器260，但是处理器260可为执行涉及任何加密协议的功能的处理器，例如安全套接字协议层(SSL)或者传输层安全(TLS)协议。在一些实施例中，处理器260可为通用处理器(GPP)，并且在进一步的实施例中，可为用于执行任何安全相关协议处理的可执行指令。</p>
    <p>[0094]	虽然图2中设备200的硬件层206包括了某些元件，但是设备200的硬件部分或组件可包括计算装置的任何类型和形式的元件、硬件或软件，例如此处结合图1E和IF示出和讨论的计算装置100。在一些实施例中，设备200可包括服务器、网关、路由器、开关、桥接器或其它类型的计算或网络设备，并且拥有与此相关的任何硬件和/或软件元件。</p>
    <p>[0095]	设备200的操作系统分配、管理或另外分离可用的系统存储器到内核空间204和用户空间204。在示例的软件架构200中，操作系统可以是任何类型和/或形式的Unix操作系统，尽管本发明并未这样限制。这样，设备200可以运行任何操作系统，如任何版本的Microsoft&#174; Windows操作系统、不同版本的Unix和Linux操作系统、用于Macintosh计算机的任何版本的Mac OS&#174;、任何的嵌入式操作系统、任何的网络操作系统、任何的实时操作系统、任何的开放源操作系统、任何的专用操作系统、用于移动计算装置或网络装置的任何操作系统、或者能够运行在设备200上并执行此处所描述的操作的任何其它操作系统。</p>
    <p>[0096]	保留内核空间204用于运行内核230，内核230包括任何设备驱动器，内核扩展或其他内核相关软件。就像本领域技术人员所知的，内核230是操作系统的核心，并提供对资源以及设备104的相关硬件元件的访问、控制和管理。根据设备200的实施例，内核空间204也包括与高速缓存管理器232协同工作的多个网络服务或进程，高速缓存管理器232有时也称为集成的高速缓存，其益处此处将进一步详细描述。另外，内核230的实施例将依赖于通过设备200安装、配置或其他使用的操作系统的实施例。</p>
    <p>[0097]	在一个实施例中，设备200包括一个网络堆栈267,例如基于TCP/IP的堆栈,用于与客户机102和/或服务器106通信。在一个实施例中，使用网络堆栈267与第一网络(例如网络108)以及第二网络110通信。在一些实施例中，设备200终止第一传输层连接，例如客户机102的TCP连接，并建立客户机102使用的到服务器106的第二传输层连接，例如，终止在设备200和服务器106的第二传输层连接。可通过单独的网络堆栈267建立第一和第二传输层连接。在其他实施例中，设备200可包括多个网络堆栈，例如267或267’，并且在一个网络堆栈267可建立或终止第一传输层连接，在第二网络堆栈267’上可建立或者终止第二传输层连接。例如，一个网络堆栈可用于在第一网络上接收和传输网络分组，并且另一个网络堆栈用于在第二网络上接收和传输网络分组。在一个实施例中，网络堆栈267包括用于为一个或多个网络分组进行排队的缓冲器243，其中网络分组由设备200传输。[0098]	如图2A所示，内核空间204包括高速缓存管理器232、高速层2_7集成分组引擎240、加密引擎234、策略引擎236以及多协议压缩逻辑238。在内核空间204或内核模式而不是用户空间202中运行这些组件或进程232、240、234、236和238提高这些组件中的每个单独的和结合的性能。内核操作意味着这些组件或进程232、240、234、236和238在设备200的操作系统的核地址空间中运行。例如,在内核模式中运行加密引擎234通过移动加密和解密操作到内核可改进加密性能，从而可减少在内核模式中的存储空间或内核线程与在用户模式中的存储空间或线程之间的传输的数量。例如，在内核模式获得的数据可能不需要传输或拷贝到运行在用户模式的进程或线程，例如从内核级数据结构到用户级数据结构。在另一个方面，也可减少内核模式和用户模式之间的上下文切换的数量。另外，在任何组件或进程232、240、235、236和238间的同步和通信在内核空间204中可被执行的更有效率。</p>
    <p>[0099]	在一些实施例中，组件232、240、234、236和238的任何部分可在内核空间204中运行或操作，而这些组件232、240、234、236和238的其它部分可在用户空间202中运行或操作。在一个实施例中，设备200使用内核级数据结构来提供对一个或多个网络分组的任何部分的访问，例如，包括来自客户机102的请求或者来自服务器106的响应的网络分组。在一些实施例中，可以由分组引擎240通过到网络堆栈267的传输层驱动器接口或过滤器获得内核级数据结构。内核级数据结构可包括通过与网络堆栈267相关的内核空间204可访问的任何接口和/或数据、由网络堆栈267接收或发送的网络流量或分组。在其他实施例中，任何组件或进程232、240、234、236和238可使用内核级数据结构来执行组件或进程的需要的操作。在一个实例中，当使用内核级数据结构时，组件232、240、234、236和238在内核模式204中运行，而在又一个实施例中，当使用内核级数据结构时，组件232、240、234、236和238在用户模式中运行。在一些实施例中，内核级数据结构可被拷贝或传递到第二内核级数据结构，或任何期望的用户级数据结构。</p>
    <p>[0100]	高速缓存管理器232可包括软件、硬件或软件和硬件的任何组合，以提供对任何类型和形式的内容的高速缓存访问、控制和管理，例如由原始服务器106提供的对象或动态产生的对象。由高速缓存管理器232处理和存储的数据、对象或内容可包括任何格式(例如标记语言)的数据，或者通过任何协议的通信的任何类型的数据。在一些实施例中，高速缓存管理器232复制存储在其他地方的原始数据或先前计算、产生或传输的数据，其中相对于读高速缓存存储器元件，需要更长的访问时间以取得、计算或以其他方式得到原始数据。一旦数据被存储在高速缓存存储元件中，通过访问高速缓存的副本而不是重新获得或重新计算原始数据即可进行后续操作，因此而减少了访问时间。在一些实施例中，高速缓存元件可以包括设备200的存储器264中的数据对象。在其他实施例中，高速缓存存储元件可包括有比存储器264更快的存取时间的存储器。在又一个实施例中，高速缓存元件可以包括设备200的任一类型和形式的存储元件，诸如硬盘的一部分。在一些实施例中，处理单元262可提供被高速缓存管理器232使用的高速缓存存储器。在又一个实施例中，高速缓存管理器232可使用存储器、存储区或处理单元的任何部分和组合来高速缓存数据、对象或其它内容。</p>
    <p>[0101]	另外，高速缓存管理器232包括用于执行此处描述的设备200的技术的任一实施例的任何逻辑、功能、规则或操作。例如，高速缓存管理器232包括基于无效时间周期的终止，或者从客户机102或服务器106接收无效命令使对象无效的逻辑或功能。在一些实施例中，高速缓存管理器232可作为在内核空间204中执行的程序、服务、进程或任务而操作，并且在其他实施例中，在用户空间202中执行。在一个实施例中，高速缓存管理器232的第一部分在用户空间202中执行，而第二部分在内核空间204中执行。在一些实施例中，高速缓存管理器232可包括任何类型的通用处理器(GPP)，或任何其他类型的集成电路，例如现场可编程门阵列(FPGA)，可编程逻辑设备(PLD)，或者专用集成电路(ASIC)。</p>
    <p>[0102]	策略引擎236可包括例如智能统计引擎或其它可编程应用。在一个实施例中，策略引擎236提供配置机制以允许用户识别、指定、定义或配置高速缓存策略。策略引擎236，在一些实施例中，也访问存储器以支持数据结构，例如备份表或hash表，以启用用户选择的高速缓存策略决定。在其他实施例中，除了对安全、网络流量、网络访问、压缩或其它任何由设备200执行的功能或操作的访问、控制和管理之外，策略引擎236可包括任何逻辑、规贝U、功能或操作以确定和提供对设备200所高速缓存的对象、数据、或内容的访问、控制和管理。特定高速缓存策略的其他实施例此处进一步描述。</p>
    <p>[0103]	加密引擎234包括用于操控诸如SSL或TLS的任何安全相关协议或其中涉及的任何功能的处理的任何逻辑、商业规则、功能或操作。例如，加密引擎234加密并解密通过设备200传输的网络分组，或其任何部分。加密引擎234也可代表客户机102a-102n、服务器106a-106n或设备200来设置或建立SSL或TLS连接。因此，加密引擎234提供SSL处理的卸载和加速。在一个实施例中，加密引擎234使用隧道协议来提供在客户机102a-102n和服务器106a-106n间的虚拟专用网络。在一些实施例中，加密引擎234与加密处理器260通信。在其他实施例中，加密引擎234包括运行在加密处理器260上的可执行指令。</p>
    <p>[0104]	多协议压缩引擎238包括用于压缩一个或多个网络分组协议(例如被设备200的网络堆栈267使用的任何协议)的任何逻辑、商业规则、功能或操作。在一个实施例中，多协议压缩引擎238双向压缩在客户机102a-102n和服务器106a_106n间任一基于TCP/IP的协议，包括消息应用编程接口(MAPI)(电子邮件)、文件传输协议(FTP)、超文本传输协议(HTTP)、通用互联网文件系统(CIFS)协议(文件传输)、独立计算架构(ICA)协议、远程桌面协议(RDP)、无线应用协议(WAP)、移动IP协议以及互联网协议电话(VoIP)协议。在其他实施例中，多协议压缩引擎238提供基于超文本标记语言(HTML)的协议的压缩，并且在一些实施例中，提供任何标记语言的压缩，例如可扩展标记语言(XML)。在一个实施例中，多协议压缩引擎238提供任何高性能协议的压缩，例如设计用于设备200到设备200通信的任何协议。在又一个实施例中，多协议压缩引擎238使用修改的传输控制协议来压缩任何通信的任何载荷或任何通信，例如事务TCP (T/TCP )、带有选择确认的TCP (TCP-SACK )、带有大窗口的TCP(TCP-LW)、例如TCP-Vegas协议的拥塞预报协议以及TCP欺骗协议(TCP spoofingprotocol)0</p>
    <p>[0105]	同样的，多协议压缩引擎238为用户加速经由桌面客户机乃至移动客户机访问应用的性能，所述桌面客户机例如Micosoft Outlook和非web瘦客户机,诸如由像Oracle、SAP和Siebel的通用企业应用所启动的任何客户机，所述移动客户机例如掌上电脑。在一些实施例中，通过在内核模式204内部执行并与访问网络堆栈267的分组处理引擎240集成，多协议压缩引擎238可以压缩TCP/IP协议携带的任何协议，例如任何应用层协议。</p>
    <p>[0106]	高速层2-7集成分组引擎240，通常也称为分组处理引擎，或分组引擎，负责设备200通过网络端口 266接收和发送的分组的内核级处理的管理。高速层2-7集成分组引擎240可包括用于在例如接收网络分组和传输网络分组的处理期间排队一个或多个网络分组的缓冲器。另外，高速层2-7集成分组引擎240与一个或多个网络堆栈267通信以通过网络端口 266发送和接收网络分组。高速层2-7集成分组引擎240与加密引擎234、高速缓存管理器232、策略引擎236和多协议压缩逻辑238协同工作。更具体地，配置加密引擎234以执行分组的SSL处理，配置策略引擎236以执行涉及流量管理的功能，例如请求级内容切换以及请求级高速缓存重定向，并配置多协议压缩逻辑238以执行涉及数据压缩和解压缩的功能。</p>
    <p>[0107]	高速层2-7集成分组引擎240包括分组处理定时器242。在一个实施例中，分组处理定时器242提供一个或多个时间间隔以触发输入处理，例如，接收或者输出(即传输)网络分组。在一些实施例中，高速层2-7集成分组引擎240响应于定时器242处理网络分组。分组处理定时器242向分组引擎240提供任何类型和形式的信号以通知、触发或传输时间相关的事件、间隔或发生。在许多实施例中，分组处理定时器242以毫秒级操作，例如100ms、50ms、或25ms。例如，在一些实例中，分组处理定时器242提供时间间隔或者以其它方式使得由高速层2-7集成分组引擎240以IOms时间间隔处理网络分组，而在其他实施例中，使高速层2-7集成分组引擎240以5ms时间间隔处理网络分组，并且在进一步的实施例中，短到3、2或Ims时间间隔。高速层2-7集成分组引擎240在操作期间可与加密引擎234、高速缓存管理器232、策略引擎236以及多协议压缩引擎238连接、集成或通信。因此，响应于分组处理定时器242和/或分组引擎240，可执行加密引擎234、高速缓存管理器232、策略引擎236以及多协议压缩引擎238的任何逻辑、功能或操作。因此，在由分组处理定时器242提供的时间间隔粒度，可执行加密引擎234、高速缓存管理器232、策略引擎236以及多协议压缩引擎238的任何逻辑、功能或操作，例如，时间间隔少于或等于10ms。例如，在一个实施例中，高速缓存管理器232可响应于高速层2-7集成分组引擎240和/或分组处理定时器242来执行任何高速缓存的对象的终止。在又一个实施例中，高速缓存的对象的终止或无效时间被设定为与分组处理定时器242的时间间隔相同的粒度级，例如每10ms。</p>
    <p>[0108]	与内核空间204不同，用户空间202是被用户模式应用或在用户模式运行的程序所使用的操作系统的存储区域或部分。用户模式应用不能直接访问内核空间204而使用服务调用以访问内核服务。如图2所示，设备200的用户空间202包括图形用户接口(⑶I) 210、命令行接口(CLI) 212、壳服务(shell service) 214、健康监控程序216以及守护(daemon)服务218。⑶1210和CLI212提供系统管理员或其他用户可与之交互并控制设备200操作的装置，例如通过设备200的操作系统。⑶1210和CLI212可包括运行在用户空间202或内核框架204中的代码。⑶1210可以是任何类型或形式的图形用户接口，可以通过文本、图形或其他形式由任何类型的程序或应用(如浏览器)来呈现。CLI212可为任何类型和形式的命令行或基于文本的接口，例如通过操作系统提供的命令行。例如，CLI212可包括壳，该壳是使用户与操作系统相互作用的工具。在一些实施例中，可通过bash、csh、tcsh或者ksh类型的壳提供CLI212。壳服务214包括程序、服务、任务、进程或可执行指令以支持由用户通过⑶1210和/或CLI212的与设备200或者操作系统的交互</p>
    <p>[0109]	健康监控程序216用于监控、检查、报告并确保网络系统正常运行，以及用户正通过网络接收请求的内容。健康监控程序216包括一个或多个程序、服务、任务、进程或可执行指令，为监控设备200的任何行为提供逻辑、规则、功能或操作。在一些实施例中，健康监控程序216拦截并检查通过设备200传递的任何网络流量。在其他实施例中，健康监控程序216通过任何合适的方法和/或机制与一个或多个下述设备连接:加密引擎234，高速缓存管理器232，策略引擎236，多协议压缩逻辑238，分组引擎240，守护服务218以及壳服务214。因此，健康监控程序216可调用任何应用编程接口(API)以确定设备200的任何部分的状态、情况或健康。例如，健康监控程序216可周期性地查验(ping)或发送状态查询以检查程序、进程、服务或任务是否活动并当前正在运行。在又一个实施例中，健康监控程序216可检查由任何程序、进程、服务或任务提供的任何状态、错误或历史日志以确定设备200任何部分的任何状况、状态或错误。</p>
    <p>[0110]	守护服务218是连续运行或在背景中运行的程序，并且处理设备200接收的周期性服务请求。在一些实施例中，守护服务可向其他程序或进程(例如合适的另一个守护服务218)转发请求。如本领域技术人员所公知的，守护服务218可无人监护的运行，以执行连续的或周期性的系统范围功能，例如网络控制，或者执行任何需要的任务。在一些实施例中，一个或多个守护服务218运行在用户空间202中，而在其他实施例中，一个或多个守护服务218运行在内核空间。</p>
    <p>[0111]	现参考图2B，描述了设备200的又一个实施例。总的来说，设备200提供下列服务、功能或操作中的一个或多个:用于一个或多个客户机102以及一个或多个服务器106之间的通信的SSL VPN连通280、交换/负载平衡284、域名服务解析286、加速288和应用防火墙290。服务器106的每一个可以提供一个或者多个网络相关服务270a-270n(称为服务270)。例如，服务器106可以提供http服务270。设备200包括一个或者多个虚拟服务器或者虚拟互联网协议服务器，称为vServer275、vS275、VIP服务器或者仅是VIP275a_275n(此处也称为vServer275)。vServer275根据设备200的配置和操作来接收、拦截或者以其它方式处理客户机102和服务器106之间的通信。</p>
    <p>[0112]	vServer275可以包括软件、硬件或者软件和硬件的任何组合。vServer275可包括在设备200中的用户模式202、内核模式204或者其任何组合中运行的任何类型和形式的程序、服务、任务、进程或者可执行指令。vServer275包括任何逻辑、功能、规则或者操作，以执行此处所述技术的任何实施例，诸如SSL VPN280、转换/负载平衡284、域名服务解析286、加速288和应用防火墙290。在一些实施例中，vServer275建立到服务器106的服务270的连接。服务275可以包括能够连接到设备200、客户机102或者vServer275并与之通信的任何程序、应用、进程、任务或者可执行指令集。例如，服务275可以包括web服务器、http服务器、ftp、电子邮件或者数据库服务器。在一些实施例中，服务270是守护进程或者网络驱动器，用于监听、接收和/或发送应用的通信，诸如电子邮件、数据库或者企业应用。在一些实施例中，服务270可以在特定的IP地址、或者IP地址和端口上通信。</p>
    <p>[0113]	在一些实施例中，vServer275应用策略引擎236的一个或者多个策略到客户机102和服务器106之间的网络通信。在一个实施例中，该策略与VSerVer275相关。在又一个实施例中，该策略基于用户或者用户组。在又一个实施例中，策略为通用的并且应用到一个或者多个vServer275a-275n，和通过设备200通信的任何用户或者用户组。在一些实施例中，策略引擎的策略具有基于通信的任何内容应用该策略的条件，通信的内容诸如互联网协议地址、端口、协议类型、分组中的头部或者字段、或者通信的上下文，诸如用户、用户组、VSerVer275、传输层连接、和/或客户机102或者服务器106的标识或者属性。</p>
    <p>[0114]	在其他实施例中，设备200与策略引擎236通信或接口，以便确定远程用户或远程客户机102的验证和/或授权，以访问来自服务器106的计算环境15、应用和/或数据文件。在又一个实施例中，设备200与策略引擎236通信或交互，以便确定远程用户或远程客户机102的验证和/或授权，使得应用传送系统190传送一个或多个计算环境15、应用和/或数据文件。在又一个实施例中，设备200基于策略引擎236对远程用户或远程客户机102的验证和/或授权建立VPN或SSL VPN连接。一个实施例中，设备200基于策略引擎236的策略控制网络流量以及通信会话。例如，基于策略引擎236，设备200可控制对计算环境15、应用或数据文件的访问。</p>
    <p>[0115]	在一些实施例中，vServer275与客户机102经客户机代理120建立传输层连接，诸如TCP或者UDP连接。在一个实施例中，vServer275监听和接收来自客户机102的通信。在其他实施例中，vServer275与客户机服务器106建立传输层连接，诸如TCP或者UDP连接。在一个实施例中，vServer275建立到运行在服务器106上的服务器270的互联网协议地址和端口的传输层连接。在又一个实施例中，vServer275将到客户机102的第一传输层连接与到服务器106的第二传输层连接相关联。在一些实施例中，VSerVer275建立到服务器106的传输层连接池并经由所述池化(pooled)的传输层连接多路复用客户机的请求。</p>
    <p>[0116]	在一些实施例中，设备200提供客户机102和服务器106之间的SSL VPN连接280。例如，第一网络102上的客户机102请求建立到第二网络104’上的服务器106的连接。在一些实施例中，第二网络104’是不能从第一网络104路由的。在其他实施例中，客户机102位于公用网络104上，并且服务器106位于专用网络104’上，例如企业网。在一个实施例中，客户机代理120拦截第一网络104上的客户机102的通信，加密该通信，并且经第一传输层连接发送该通信到设备200。设备200将第一网络104上的第一传输层连接与到第二网络104上的服务器106的第二传输层连接相关联。设备200接收来自客户机代理102的所拦截的通信，解密该通信，并且经第二传输层连接发送该通信到第二网络104上的服务器106。第二传输层连接可以是池化的传输层连接。同样的，设备200为两个网络104、104’之间的客户机102提供端到端安全传输层连接。</p>
    <p>[0117]	在一个实施例中，设备200寄载虚拟专用网络104上的客户机102的内部网互联网协议或者IntranetIP282地址。客户机102具有本地网络标识符，诸如第一网络104上的互联网协议(IP)地址和/或主机名称。当经设备200连接到第二网络104’时，设备200在第二网络104’上为客户机102建立、分配或者以其它方式提供IntranetIP，其是诸如IP地址和/或主机名称的网络标识符。使用为客户机的所建立的IntranetIP282，设备200在第二或专用网104’上监听并接收指向该客户机102的任何通信。在一个实施例中，设备200在第二专用网络104上用作或者代表客户机102。例如，在又一个实施例中，vServer275监听和响应到客户机102的IntranetIP282的通信。在一些实施例中，如果第二网络104’上的计算装置100发送请求，设备200如同客户机102 &#8212;样来处理该请求。例如，设备200可以响应对客户机IntranetIP282的查验。在又一个实施例中，设备可以与请求和客户机IntranetIP282连接的第二网络104上的计算装置100建立连接，诸如TCP或者UDP连接。</p>
    <p>[0118]	在一些实施例中，设备200为客户机102和服务器106之间的通信提供下列一个或多个加速技术288:1)压缩；2)解压缩；3)传输控制协议池；4)传输控制协议多路复用；5)传输控制协议缓冲；以及6)高速缓存。在一个实施例中，设备200通过开启与每一服务器106的一个或者多个传输层连接并且维持这些连接以允许由客户机经因特网的重复数据访问，来为服务器106缓解由重复开启和关闭到客户机102的传输层连接所造成的大量处理负载。该技术此处称为“连接池”。</p>
    <p>[0119]	在一些实施例中，为了经池化的传输层连接无缝拼接从客户机102到服务器106的通信，设备200通过在传输层协议级修改序列号和确认号来转换或多路复用通信。这被称为“连接多路复用”。在一些实施例中，不需要应用层协议相互作用。例如，在到来分组(即，自客户机102接收的分组)的情况中，所述分组的源网络地址被改变为设备200的输出端口的网络地址，而目的网络地址被改为目的服务器的网络地址。在发出分组(即，自服务器106接收的一个分组)的情况中，源网络地址被从服务器106的网络地址改变为设备200的输出端口的网络地址，而目的地址被从设备200的网络地址改变为请求的客户机102的网络地址。分组的序列号和确认号也被转换为到客户机102的设备200的传输层连接上的客户机102所期待的序列号和确认。在一些实施例中，传输层协议的分组校验和被重新计算以计及这些转换。</p>
    <p>[0120]	在又一个实施例中，设备200为客户机102和服务器106之间的通信提供交换或负载平衡功能284。在一些实施例中，设备200根据层4或应用层请求数据来分布流量并将客户机请求定向到服务器106。在一个实施例中，尽管网络分组的网络层或者层2识别目的服务器106，但设备200通过承载为传输层分组的有效载荷的数据和应用信息来确定服务器106以便分发网络分组。在一个实施例中，设备200的健康监控程序216监控服务器的健康来确定分发客户机请求到哪个服务器106。在一些实施例中，如果设备200探测到某个服务器106不可用或者具有超过预定阈值的负载，设备200可以将客户机请求指向或者分发到另一个服务器106。</p>
    <p>[0121 ] 在一些实施例中，设备200用作域名服务(DNS)解析器或者以其它方式为来自客户机102的DNS请求提供解析。在一些实施例中，设备拦截由客户机102发送的DNS请求。在一个实施例中，设备200以设备200的IP地址或其所寄载的IP地址来响应客户机的DNS请求。在此实施例中，客户机102把用于域名的网络通信发送到设备200。在又一个实施例中，设备200以第二设备200’的或其所寄载的IP地址来响应客户机的DNS请求。在一些实施例中，设备200使用由设备200确定的服务器106的IP地址来响应客户机的DNS请求。</p>
    <p>[0122]	在又一个实施例中，设备200为客户机102和服务器106之间的通信提供应用防火墙功能290。在一个实施例中，策略引擎236提供用于探测和阻断非法请求的规则。在一些实施例中，应用防火墙290防御拒绝服务(DoS)攻击。在其他实施例中，设备检查所拦截的请求的内容，以识别和阻断基于应用的攻击。在一些实施例中，规则/策略引擎236包括用于提供对多个种类和类型的基于web或因特网的脆弱点的保护的一个或多个应用防火墙或安全控制策略，例如下列的一个或多个脆弱点:1)缓冲区泄出，2)CG1-BIN参数操纵，3)表单/隐藏字段操纵，4)强制浏览，5)C00kie或会话中毒，6)被破坏的访问控制列表(ACLs )或弱密码，7 )跨站脚本处理(XSS)，8 )命令注入，9 ) SQL注入，10 )错误触发敏感信息泄露，11)对加密的不安全使用，12)服务器错误配置，13)后门和调试选项，14)网站涂改，15)平台或操作系统弱点，和16)零天攻击。在一个实施例中，对下列情况的一种或多种，应用防火墙290以检查或分析网络通信的形式来提供HTML格式字段的保护:1)返回所需的字段，2)不允许附加字段，3)只读和隐藏字段强制(enforcement)，4)下拉列表和单选按钮字段的一致，以及5)格式字段最大长度强制。在一些实施例中，应用防火墙290确保cookie不被修改。在其他实施例中，应用防火墙290通过执行合法的URL来防御强制浏览。</p>
    <p>[0123]	在其他实施例中，应用防火墙290保护在网络通信中包含的任何机密信息。应用防火墙290可以根据引擎236的规则或策略来检查或分析任一网络通信以识别在网络分组的任一字段中的任一机密信息。在一些实施例中，应用防火墙290在网络通信中识别信用卡号、口令、社会保险号、姓名、病人代码、联系信息和年龄的一次或多次出现。网络通信的编码部分可以包括这些出现或机密信息。基于这些出现，在一个实施例中，应用防火墙290可以对网络通信采取策略行动，诸如阻止发送网络通信。在又一个实施例中，应用防火墙290可以重写、移动或者以其它方式掩盖该所识别的出现或者机密信息。</p>
    <p>[0124]	仍参考图2B，设备200可以包括如上面结合图1D所讨论的性能监控代理197。在一个实施例中，设备200从如图1D中所描述的监控服务198或监控服务器106中接收监控代理197。在一些实施例中，设备200在诸如磁盘的存储装置中保存监控代理197，以用于传送给与设备200通信的任何客户机或服务器。例如，在一个实施例中，设备200在接收到建立传输层连接的请求时发送监控代理197给客户机。在其他实施例中，设备200在建立与客户机102的传输层连接时发送监控代理197。在又一个实施例中，设备200在拦截或检测对web页面的请求时发送监控代理197给客户机。在又一个实施例中，设备200响应于监控服务器198的请求来发送监控代理197到客户机或服务器。在一个实施例中，设备200发送监控代理197到第二设备200’或设备205。</p>
    <p>[0125]	在其他实施例中，设备200执行监控代理197。在一个实施例中，监控代理197测量和监控在设备200上执行的任何应用、程序、进程、服务、任务或线程的性能。例如，监控代理197可以监控和测量vServers275A-275N的性能与操作。在又一个实施例中，监控代理197测量和监控设备200的任何传输层连接的性能。在一些实施例中，监控代理197测量和监控通过设备200的任何用户会话的性能。在一个实施例中，监控代理197测量和监控通过设备200的诸如SSL VPN会话的任何虚拟专用网连接和/或会话的性能。在进一步的实施例中，监控代理197测量和监控设备200的内存、CPU和磁盘使用以及性能。在又一个实施例中，监控代理197测量和监控诸如SSL卸载、连接池和多路复用、高速缓存以及压缩的由设备200执行的任何加速技术288的性能。在一些实施例中，监控代理197测量和监控由设备200执行的任一负载平衡和/或内容交换284的性能。在其他实施例中，监控代理197测量和监控由设备200执行的应用防火墙290保护和处理的性能。</p>
    <p>[0126]	C.客户机代理</p>
    <p>[0127]	现参考图3，描述客户机代理120的实施例。客户机102包括客户机代理120，用于经由网络104与设备200和/或服务器106来建立和交换通信。总的来说，客户机102在计算装置100上操作，该计算装置100拥有带有内核模式302以及用户模式303的操作系统，以及带有一个或多个层310a-310b的网络堆栈310。客户机102可以已经安装和/或执行一个或多个应用。在一些实施例中，一个或多个应用可通过网络堆栈310与网络104通信。所述应用之一，诸如web浏览器，也可包括第一程序322。例如，可在一些实施例中使用第一程序322来安装和/或执行客户机代理120，或其中任何部分。客户机代理120包括拦截机制或者拦截器350，用于从网络堆栈310拦截来自一个或者多个应用的网络通信。</p>
    <p>[0128]	客户机102的网络堆栈310可包括任何类型和形式的软件、或硬件或其组合，用于提供与网络的连接和通信。在一个实施例中，网络堆栈310包括用于网络协议组的软件实现。网络堆栈310可包括一个或多个网络层，例如为本领域技术人员所公认和了解的开放式系统互联(OSI)通信模型的任何网络层。这样，网络堆栈310可包括用于任何以下OSI模型层的任何类型和形式的协议:1)物理链路层；2)数据链路层；3)网络层；4)传输层；5)会话层)；6)表示层，以及7)应用层。在一个实施例中，网络堆栈310可包括在因特网协议(IP)的网络层协议上的传输控制协议(TCP)，通常称为TCP/IP。在一些实施例中，可在以太网协议上承载TCP/IP协议，以太网协议可包括IEEE广域网(WAN)或局域网(LAN)协议的任何族，例如被IEEE802.3覆盖的这些协议。在一些实施例中，网络堆栈310包括任何类型和形式的无线协议，例如IEEE802.11和/或移动因特网协议。</p>
    <p>[0129]	考虑基于TCP/IP的网络，可使用任何基于TCP/IP的协议，包括消息应用编程接口(MAPI) (email)、文件传输协议(FTP)、超文本传输协议(HTTP)、通用因特网文件系统(CIFS)协议(文件传输)、独立计算架构(ICA)协议、远程桌面协议(RDP)、无线应用协议(WAP)、移动IP协议，以及互联网协议电话(VoIP)协议。在又一个实施例中，网络堆栈310包括任何类型和形式的传输控制协议，诸如修改的传输控制协议，例如事务TCP(T/TCP)，带有选择确认的TCP (TCP-SACK),带有大窗口的TCP (TCP-LW)，例如TCP-Vegas协议的拥塞预测协议，以及TCP欺骗协议。在其他实施例中，网络堆栈310可使用诸如基于IP的UDP的任何类型和形式的用户数据报协议(UDP)，例如用于语音通信或实时数据通信。</p>
    <p>[0130]	另外，网络堆栈310可包括支持一个或多个层的一个或多个网络驱动器，例如TCP驱动器或网络层驱动器。网络层驱动器可作为计算装置100的操作系统的一部分或者作为计算装置100的任何网络接口卡或其它网络访问组件的一部分被包括。在一些实施例中，网络堆栈310的任何网络驱动器可被定制、修改或调整以提供网络堆栈310的定制或修改部分，用来支持此处描述的任何技术。在其他实施例中，设计并构建加速程序302以与网络堆栈310协同操作或工作，上述网络堆栈310由客户机102的操作系统安装或以其它方式提供。</p>
    <p>[0131]	网络堆栈310包括任何类型和形式的接口，用于接收、获得、提供或以其它方式访问涉及客户机102的网络通信的任何信息和数据。在一个实施例中，与网络堆栈310的接口包括应用编程接口(API)。接口也可包括任何函数调用、钩子或过滤机制，事件或回调机制、或任何类型的接口技术。网络堆栈310通过接口可接收或提供与网络堆栈310的功能或操作相关的任何类型和形式的数据结构，例如对象。例如，数据结构可以包括与网络分组相关的信息和数据或者一个或多个网络分组。在一些实施例中，数据结构包括在网络堆栈310的协议层处理的网络分组的一部分，例如传输层的网络分组。在一些实施例中，数据结构325包括内核级别数据结构，而在其他实施例中，数据结构325包括用户模式数据结构。内核级数据结构可以包括获得的或与在内核模式302中操作的网络堆栈310的一部分相关的数据结构、或者运行在内核模式302中的网络驱动程序或其它软件、或者由运行或操作在操作系统的内核模式的服务、进程、任务、线程或其它可执行指令获得或收到的任何数据结构。</p>
    <p>[0132]	此外，网络堆栈310的一些部分可在内核模式302执行或操作，例如，数据链路或网络层，而其他部分在用户模式303执行或操作，例如网络堆栈310的应用层。例如，网络堆栈的第一部分310a可以给应用提供对网络堆栈310的用户模式访问，而网络堆栈310的第二部分310a提供对网络的访问。在一些实施例中，网络堆栈的第一部分310a可包括网络堆栈310的一个或多个更上层，例如层5-7的任何层。在其他实施例中，网络堆栈310的第二部分310b包括一个或多个较低的层，例如层1-4的任何层。网络堆栈310的每个第一部分310a和第二部分310b可包括网络堆栈310的任何部分，位于任何一个或多个网络层，处于用户模式203、内核模式202，或其组合，或在网络层的任何部分或者到网络层的接口点，或用户模式203和内核模式202的任何部分或到用户模式203和内核模式202的接口点。</p>
    <p>[0133]	拦截器350可以包括软件、硬件、或者软件和硬件的任何组合。在一个实施例中，拦截器350在网络堆栈310的任一点拦截网络通信，并且重定向或者发送网络通信到由拦截器350或者客户机代理120所期望的、管理的或者控制的目的地。例如，拦截器350可以拦截第一网络的网络堆栈310的网络通信并且发送该网络通信到设备200，用于在第二网络104上发送。在一些实施例中，拦截器350包括含有诸如被构建和设计来与网络堆栈310对接并一同工作的网络驱动器的驱动器的任一类型的拦截器350。在一些实施例中，客户机代理120和/或拦截器350操作在网络堆栈310的一个或者多个层，诸如在传输层。在一个实施例中，拦截器350包括过滤器驱动器、钩子机制、或者连接到网络堆栈的传输层的任一形式和类型的合适网络驱动器接口，诸如通过传输驱动器接口(TDI)。在一些实施例中，拦截器350连接到诸如传输层的第一协议层和诸如传输协议层之上的任何层的另一个协议层，例如，应用协议层。在一个实施例中，拦截器350可以包括遵守网络驱动器接口规范(NDIS)的驱动器，或者NDIS驱动器。在又一个实施例中，拦截器350可以包括微型过滤器或者微端口驱动器。在一个实施例中，拦截器350或其部分在内核模式202中操作。在又一个实施例中，拦截器350或其部分在用户模式203中操作。在一些实施例中，拦截器350的一部分在内核模式202中操作，而拦截器350的另一部分在用户模式203中操作。在其他实施例中，客户机代理120在用户模式203操作，但通过拦截器350连接到内核模式驱动器、进程、服务、任务或者操作系统的部分，诸如以获取内核级数据结构225。在其他实施例中，拦截器350为用户模式应用或者程序，诸如应用。</p>
    <p>[0134]	在一个实施例中，拦截器350拦截任何的传输层连接请求。在这些实施例中，拦截器350执行传输层应用编程接口(API)调用以设置目的地信息，诸如到期望位置的目的地IP地址和/或端口用于定位。以此方式，拦截器350拦截并重定向传输层连接到由拦截器350或客户机代理120控制或管理的IP地址和端口。在一个实施例中，拦截器350把连接的目的地信息设置为客户机代理120监听的客户机102的本地IP地址和端口。例如，客户机代理120可以包括为重定向的传输层通信监听本地IP地址和端口的代理服务。在一些实施例中，客户机代理120随后将重定向的传输层通信传送到设备200。</p>
    <p>[0135]	在一些实施例中，拦截器350拦截域名服务(DNS)请求。在一个实施例中，客户机代理120和/或拦截器350解析DNS请求。在又一个实施例中，拦截器发送所拦截的DNS请求到设备200以进行DNS解析。在一个实施例中，设备200解析DNS请求并且将DNS响应传送到客户机代理120。在一些实施例中，设备200经另一个设备200’或者DNS服务器106来解析DNS请求。</p>
    <p>[0136]	在又一个实施例中，客户机代理120可以包括两个代理120和120’。在一个实施例中，第一代理120可以包括在网络堆栈310的网络层操作的拦截器350。在一些实施例中，第一代理120拦截网络层请求，诸如因特网控制消息协议(ICMP)请求(例如，查验和跟踪路由)。在其他实施例中，第二代理120’可以在传输层操作并且拦截传输层通信。在一些实施例中，第一代理120在网络堆栈210的一层拦截通信并且与第二代理120’连接或者将所拦截的通信传送到第二代理120’。</p>
    <p>[0137]	客户机代理120和/或拦截器350可以以对网络堆栈310的任何其它协议层透明的方式在协议层操作或与之对接。例如，在一个实施例中，拦截器350可以以对诸如网络层的传输层之下的任何协议层和诸如会话、表示或应用层协议的传输层之上的任何协议层透明的方式在网络堆栈310的传输层操作或与之对接。这允许网络堆栈310的其它协议层如所期望的进行操作并无需修改以使用拦截器350。这样，客户机代理120和/或拦截器350可以与传输层连接以安全、优化、加速、路由或者负载平衡经由传输层承载的任一协议提供的任一通信，诸如TCP/IP上的任一应用层协议。</p>
    <p>[0138]	此外，客户机代理120和/或拦截器可以以对任何应用、客户机102的用户和与客户机102通信的诸如服务器的任何其它计算装置透明的方式在网络堆栈310上操作或与之对接。客户机代理120和/或拦截器350可以以无需修改应用的方式被安装和/或执行在客户机102上。在一些实施例中，客户机102的用户或者与客户机102通信的计算装置未意识到客户机代理120和/或拦截器350的存在、执行或者操作。同样，在一些实施例中，相对于应用、客户机102的用户、诸如服务器的另一个计算装置、或者在由拦截器350连接的协议层之上和/或之下的任何协议层透明地来安装、执行和/或操作客户机代理120和/或拦截器350。</p>
    <p>[0139]	客户机代理120包括加速程序302、流客户机306、收集代理304和/或监控代理197。在一个实施例中，客户机代理120包括由佛罗里达州Fort Lauderdale的CitrixSystems Inc.开发的独立计算架构(ICA)客户机或其任一部分,并且也指ICA客户机。在一些实施例中，客户机代理120包括应用流客户机306，用于从服务器106流式传输应用到客户机102。在一些实施例中，客户机代理120包括加速程序302，用于加速客户机102和服务器106之间的通信。在又一个实施例中，客户机代理120包括收集代理304，用于执行端点检测/扫描并且用于为设备200和/或服务器106收集端点信息。</p>
    <p>[0140]	在一些实施例中，加速程序302包括用于执行一个或多个加速技术的客户机侧加速程序，以加速、增强或者以其他方式改善客户机与服务器106的通信和/或对服务器106的访问，诸如访问由服务器106提供的应用。加速程序302的可执行指令的逻辑、函数和/或操作可以执行一个或多个下列加速技术:1)多协议压缩，2)传输控制协议池，3)传输控制协议多路复用，4)传输控制协议缓冲，以及5)通过高速缓存管理器的高速缓存。另外，加速程序302可执行由客户机102接收和/或发送的任何通信的加密和/或解密。在一些实施例中，加速程序302以集成的方式或者格式执行一个或者多个加速技术。另外，加速程序302可以对作为传输层协议的网络分组的有效载荷所承载的任一协议或者多协议执行压缩。</p>
    <p>[0141]	流客户机306包括应用、程序、进程、服务、任务或者可执行指令，所述应用、程序、进程、服务、任务或者可执行指令用于接收和执行从服务器106所流式传输的应用。服务器106可以流式传输一个或者多个应用数据文件到流客户机306，用于播放、执行或者以其它方式引起客户机102上的应用被执行。在一些实施例中，服务器106发送一组压缩或者打包的应用数据文件到流客户机306。在一些实施例中，多个应用文件被压缩并存储在文件服务器上档案文件中，例如CAB、ZIP、SIT、TAR、JAR或其它档案文件。在一个实施例中，服务器106解压缩、解包或者解档应用文件并且将该文件发送到客户机102。在又一个实施例中，客户机102解压缩、解包或者解档应用文件。流客户机306动态安装应用或其部分，并且执行该应用。在一个实施例中，流客户机306可以为可执行程序。在一些实施例中，流客户机306可以能够启动另一个可执行程序。</p>
    <p>[0142]	收集代理304包括应用、程序、进程、服务、任务或者可执行指令，用于识别、获取和/或收集关于客户机102的信息。在一些实施例中，设备200发送收集代理304到客户机102或者客户机代理120。可以根据设备的策略引擎236的一个或多个策略来配置收集代理304。在其他实施例中，收集代理304发送在客户机102上收集的信息到设备200。在一个实施例中，设备200的策略引擎236使用所收集的信息来确定和提供到网络104的客户机连接的访问、验证和授权控制。</p>
    <p>[0143]	在一个实施例中，收集代理304包括端点检测和扫描机制，其识别并且确定客户机的一个或者多个属性或者特征。例如，收集代理304可以识别和确定任何一个或多个以下的客户机侧属性:1)操作系统和/或操作系统的版本，2)操作系统的服务包，3)运行的服务，4)运行的进程，和5)文件。收集代理304还可以识别并确定客户机上任何一个或多个以下软件的存在或版本:1)防病毒软件；2)个人防火墙软件；3)防垃圾邮件软件，和4)互联网安全软件。策略引擎236可以具有基于客户机或客户机侧属性的任何一个或多个属性或特性的一个或多个策略。</p>
    <p>[0144]	在一些实施例中，客户机代理120包括如结合图1D和2B所讨论的监控代理197。监控代理197可以是诸如Visual Basic或Java脚本的任何类型和形式的脚本。在一个实施例中，监控代理197监控和测量客户机代理120的任何部分的性能。例如，在一些实施例中，监控代理197监控和测量加速程序302的性能。在又一个实施例中，监控代理197监控和测量流客户机306的性能。在其他实施例中，监控代理197监控和测量收集代理304的性能。在又一个实施例中，监控代理197监控和测量拦截器350的性能。在一些实施例中，监控代理197监控和测量客户机102的诸如存储器、CPU和磁盘的任何资源。</p>
    <p>[0145]	监控代理197可以监控和测量客户机的任何应用的性能。在一个实施例中，监控代理197监控和测量客户机102上的浏览器的性能。在一些实施例中，监控代理197监控和测量经由客户机代理120传送的任何应用的性能。在其他实施例中，监控代理197测量和监控应用的最终用户响应时间，例如基于web的响应时间或HTTP响应时间。监控代理197可以监控和测量ICA或RDP客户机的性能。在又一个实施例中，监控代理197测量和监控用户会话或应用会话的指标。在一些实施例中，监控代理197测量和监控ICA或RDP会话。在一个实施例中，监控代理197测量和监控设备200在加速传送应用和/或数据到客户机102的过程中的性能。</p>
    <p>[0146]	在一些实施例中，仍参考图3，第一程序322可以用于自动地、静默地、透明地或者以其它方式安装和/或执行客户机代理120或其部分，诸如拦截器350。在一个实施例中，第一程序322包括插件组件,例如ActiveX控件或Java控件或脚本,其加载到应用并由应用执行。例如，第一程序包括由web浏览器应用载入和运行的ActiveX控件，例如在存储器空间或应用的上下文中。在又一个实施例中，第一程序322包括可执行指令组，该可执行指令组被例如浏览器的应用载入并执行。在一个实施例中，第一程序322包括被设计和构造的程序以安装客户机代理120。在一些实施例中，第一程序322通过网络从另一个计算装置获得、下载、或接收客户机代理120。在又一个实施例中，第一程序322是用于在客户机102的操作系统上安装如网络驱动的程序的安装程序或即插即用管理器。</p>
    <p>[0147]	P.用于提供虚拟化应用传送控制器的系统和方法</p>
    <p>[0148]	现参考图4A，该框图描述虚拟化环境400的一个实施例。总体而言，计算装置100包括管理程序层、虚拟化层和硬件层。管理程序层包括管理程序401 (也称为虚拟化管理器)，其通过在虚拟化层中执行的至少一个虚拟机来分配和管理对硬件层中的多个物理资源(例如处理器421和盘428)的访问。虚拟化层包括至少一个操作系统410和分配给至少一个操作系统410的多个虚拟资源。虚拟资源可包括而不限于多个虚拟处理器432a、432b、432c (总称为432)和虚拟盘442a、442b、442c (总称为442)，以及如虚拟存储器和虚拟网络接口的虚拟资源。可将多个虚拟资源和操作系统称为虚拟机406。虚拟机406可包括控制操作系统405，该控制操作系统405与管理程序401通信，并用于执行应用以管理并配置计算装置100上的其他虚拟机。</p>
    <p>[0149]	具体而言，管理程序401可以以模拟可访问物理设备的操作系统的任何方式向操作系统提供虚拟资源。管理程序401可以向任何数量的客户操作系统410a、410b (总称为410)提供虚拟资源。一些实施例中，计算装置100执行一种或多种管理程序。这些实施例中，管理程序可用于模拟虚拟硬件、划分物理硬件、虚拟化物理硬件并执行提供对计算环境的访问的虚拟机。管理程序可包括由位于美国加州的Palo Alto的VMWare制造的这些程序；XEN管理程序(一种开源产品，其开发由开源Xen.0rg协会监管)；由微软公司提供的HyperV&gt; Virtual Server或虚拟PC管理程序,或其他。一些实施例中，计算装置100执行创建客户操作系统可在其上执行虚拟机平台的管理程序，该计算装置100被称为宿主服务器。在这些实施例的一个中，例如，计算装置100是由位于美国佛罗里达州Fort Lauderdale的Citrix Systems 有限公司提供的 XEN SERVER。</p>
    <p>[0150]	一些实施例中，管理程序401在计算装置上执行的操作系统之内执行。在这些实施例的一个中，执行操作系统和管理程序401的计算装置可被视为具有宿主操作系统(执行在计算装置上的操作系统)，和客户操作系统(在由管理程序401提供的计算资源分区内执行的操作系统)。其他实施例中，管理程序401和计算装置上的硬件直接交互而不是在宿主操作系统上执行。在这些实施例的一个中，管理程序401可被视为在“裸金属(baremetal)”上执行，所述“裸金属”指包括计算装置的硬件。</p>
    <p>[0151]	一些实施例中，管理程序401可以产生操作系统410在其中执行的虚拟机406a_c(总称为406)。在这些实施例的一个中，管理程序401加载虚拟机映像以创建虚拟机406。在这些实施例的又一个中，管理程序401在虚拟机406内执行操作系统410。仍在这些实施例的又一个中，虚拟机406执行操作系统410。</p>
    <p>[0152]	一些实施例中，管理程序401控制在计算装置100上执行的虚拟机406的处理器调度和内存划分。在这些实施例的一个中，管理程序401控制至少一个虚拟机406的执行。在这些实施例的又一个中，管理程序401向至少一个虚拟机406呈现由计算装置100提供的至少一个硬件资源的抽象。其他实施例中，管理程序401控制是否以及如何将物理处理器能力呈现给虚拟机406。</p>
    <p>[0153]	控制操作系统405可以执行用于管理和配置客户操作系统的至少一个应用。一个实施例中，控制操作系统405可以执行管理应用，如包括如下用户接口的应用，该用户接口为管理员提供对用于管理虚拟机执行的功能的访问，这些功能包括用于执行虚拟机、中止虚拟机执行或者识别要分配给虚拟机的物理资源类型的功能。又一个实施例中，管理程序401在由管理程序401创建的虚拟机406内执行控制操作系统405。又一个实施例中，控制操作系统405在被授权直接访问计算装置100上的物理资源的虚拟机406上执行。一些实施例中，计算装置IOOa上的控制操作系统405a可以通过管理程序401a和管理程序401b之间的通信与计算装置IOOb上的控制操作系统405b交换数据。这样，一个或多个计算装置100可以和一个或多个其他计算装置100交换有关处理器或资源池中可用的其他物理资源的数据。在这些实施例的一个中，这种功能允许管理程序管理分布在多个物理计算装置上的资源池。在这些实施例的又一个中，多个管理程序管理在一个计算装置100上执行的一个或多个客户操作系统。</p>
    <p>[0154]	一个实施例中，控制操作系统405在被授权与至少一个客户操作系统410交互的虚拟机406上执行。又一个实施例中，客户操作系统410通过管理程序401和控制操作系统405通信，以请求访问盘或网络。仍在又一个实施例中，客户操作系统410和控制操作系统405可通过由管理程序401建立的通信信道通信，例如，通过由管理程序401提供的多个共享存储器页面。</p>
    <p>[0155]	一些实施例中，控制操作系统405包括用于直接与由计算装置100提供的网络硬件通信的网络后端驱动器。在这些实施例的一个中，网络后端驱动器处理来自至少一个客户操作系统110的至少一个虚拟机请求。其他实施例中，控制操作系统405包括用于与计算装置100上的存储元件通信的块后端驱动器。在这些实施例的一个中，块后端驱动器基于从客户操作系统410接收的至少一个请求从存储元件读写数据。</p>
    <p>[0156]	一个实施例，控制操作系统405包括工具堆栈404。其他实施例中，工具堆栈404提供如下功能:和管理程序401交互、和其他控制操作系统405 (例如位于第二计算装置IOOb上)通信，或者管理计算装置100上的虚拟机406b、406c。又一个实施例中，工具堆栈404包括自定义应用，其用于向虚拟机群的管理员提供改进的管理功能。一些实施例中，工具堆栈404和控制操作系统405中的至少一个包括管理API，其提供用于远程配置并控制计算装置100上运行的虚拟机406的接口。其他实施例中，控制操作系统405通过工具堆栈404和管理程序401通信。</p>
    <p>[0157]	一个实施例中，管理程序401在由管理程序401创建的虚拟机406内执行客户操作系统410。又一个实施例中，客户操作系统410为计算装置100的用户提供对计算环境中的资源的访问。又一个实施例中，资源包括程序、应用、文档、文件、多个应用、多个文件、可执行程序文件、桌面环境、计算环境或对计算装置100的用户可用的其他资源。又一个实施例中，可通过多个访问方法将资源传送给计算装置100，这些方法包括但不限于:常规的直接在计算装置100上安装、通过应用流的方法传送给计算装置100、将由在第二计算装置100’上执行资源产生的并通过表示层协议传送给计算装置100的输出数据传送给计算装置100、将通过在第二计算装置100’上执行的虚拟机执行资源所产生的输出数据传送给计算装置100、或者从连接到计算装置100的移动存储装置(例如USB设备)执行或者通过在计算装置100上执行的虚拟机执行并且产生输出数据。一些实施例中，计算装置100将执行资源所产生的输出数据传输给另一个计算装置100’。</p>
    <p>[0158]	&#8212;个实施例中，客户操作系统410和该客户操作系统410在其上执行的虚拟机结合形成完全虚拟化虚拟机，该完全虚拟化虚拟机并不知道自己是虚拟机，这样的机器可称为“Domain U HVM (硬件虚拟机)虚拟机”。又一个实施例中，完全虚拟化机包括模拟基本输入/输出系统(BIOS)的软件以便在完全虚拟化机中执行操作系统。在又一个实施例中，完全虚拟化机可包括驱动器，其通过和管理程序401通信提供功能。这样的实施例中，驱动器可意识到自己在虚拟化环境中执行。又一个实施例中，客户操作系统410和该客户操作系统410在其上执行的虚拟机结合形成超虚拟化(paravirtualized)虚拟机,该超虚拟化虚拟机意识到自己是虚拟机，这样的机器可称为“Domain U PV虚拟机”。又一个实施例中，超虚拟化机包括完全虚拟化机不包括的额外驱动器。又一个实施例中，超虚拟化机包括如上所述的被包含在控制操作系统405中的网络后端驱动器和块后端驱动器。</p>
    <p>[0159]	现参考图4B，框图描述了系统中的多个联网计算装置的一个实施例，其中，至少一个物理主机执行虚拟机。总体而言，系统包括管理组件404和管理程序401。系统包括多个计算装置100、多个虚拟机406、多个管理程序401、多个管理组件(又称为工具堆栈404或者管理组件404)以及物理资源421、428。多个物理机器100的每一个可被提供为如上结合图1E-1H和图4A描述的计算装置100。</p>
    <p>[0160]	具体而言，物理盘428由计算装置100提供，存储至少一部分虚拟盘442。一些实施例中，虚拟盘442和多个物理盘428相关联。在这些实施例的一个中，一个或多个计算装置100可以与一个或多个其他计算装置100交换有关处理器或资源池中可用的其他物理资源的数据，允许管理程序管理分布在多个物理计算装置上的资源池。一些实施例中，将虚拟机406在其上执行的计算装置100称为物理主机100或主机100。</p>
    <p>[0161]	管理程序在计算装置100上的处理器上执行。管理程序将对物理盘的访问量分配给虚拟盘。一个实施例中，管理程序401分配物理盘上的空间量。又一个实施例中，管理程序401分配物理盘上的多个页面。一些实施例中，管理程序提供虚拟盘442作为初始化和执行虚拟机450进程的一部分。</p>
    <p>[0162]	一个实施例中，将管理组件404a称为池管理组件404a。又一个实施例中，可以称为控制管理系统405a的管理操作系统405a包括管理组件。一些实施例中，将管理组件称为工具堆栈。在这些实施例的一个中，管理组件是上文结合图4A描述的工具堆栈404。其他实施例中，管理组件404提供用户接口，用于从如管理员的用户接收要供应和/或执行的虚拟机406的标识。仍在其他实施例中，管理组件404提供用户接口，用于从如管理员的用户接收将虚拟机406b从一个物理机器100迁移到另一物理机器的请求。在进一步的实施例中，管理组件404a识别在其上执行所请求的虚拟机406d的计算装置IOOb并指示所识别的计算装置IOOb上的管理程序401b执行所识别的虚拟机，这样，可将管理组件称为池管理组件。</p>
    <p>[0163]	现参考图4C，描述了虚拟应用传送控制器或虚拟设备450的实施例。总体而言，上文结合图2A和2B描述的设备200的任何功能和/或实施例(例如应用传送控制器)可以部署在上文结合图4A和4B描述的虚拟化环境的任何实施例中。应用传送控制器的功能不是以设备200的形式部署，而是将该功能部署在诸如客户机102、服务器106或设备200的任何计算装置100上的虚拟化环境400中。</p>
    <p>[0164]	现在参考图4C，描述了在服务器106的管理程序401上操作的虚拟设备450的实施例的框图。如图2A和2B的设备200 &#8212;样，虚拟机450可以提供可用性、性能、卸载和安全的功能。对于可用性，虚拟设备可以执行网络第4层和第7层之间的负载平衡并执行智能服务健康监控。对于通过网络流量加速实现的性能增加，虚拟设备可以执行缓存和压缩。对于任何服务器的卸载处理，虚拟设备可以执行连接复用和连接池和/或SSL处理。对于安全，虚拟设备可以执行设备200的任何应用防火墙功能和SSL VPN功能。</p>
    <p>[0165]	结合附图2A描述的设备200的任何模块可以虚拟化设备传送控制器450的形式被打包、组合、设计或构造，虚拟化设备传送控制器450可部署成在诸如流行的服务器这样的任何服务器上的虚拟化环境300或非虚拟化环境中执行的软件模块或组件。例如，可以安装在计算装置上的安装包的形式提供虚拟设备。参考图2A，可以将高速缓存管理器232、策略引擎236、压缩238、加密引擎234、分组引擎240、⑶I210、CLI212、壳服务214中的任一个设计和构成在计算装置和/或虚拟化环境300的任何操作系统上运行的组件或模块。虚拟化设备400不使用设备200的加密处理器260、处理器262、存储器264和网络堆栈267，而是可使用虚拟化环境400提供的任何这些资源或者服务器106上以其他方式可用的这些资源。</p>
    <p>[0166]	仍参考图4C，简言之，任何一个或多个vServer275A-275N可以操作或执行在任意类型的计算装置100 (如服务器106)的虚拟化环境400中。结合附图2B描述的设备200的任何模块和功能可以设计和构造成在服务器的虚拟化或非虚拟化环境中操作。可以将vServer275、SSL VPN280、内网 UP282、交换装置 284、DNS286、加速装置 288、APP FW280 和监控代理中的任一个打包、组合、设计或构造成应用传送控制器450的形式，应用传送控制器450可部署成在装置和/或虚拟化环境400中执行的一个或多个软件模块或组件。</p>
    <p>[0167]	一些实施例中，服务器可以在虚拟化环境中执行多个虚拟机406a_406b，每个虚拟机运行虚拟应用传送控制器450的相同或不同实施例。一些实施例中，服务器可以在多核处理系统的一个核上执行一个或多个虚拟机上的一个或多个虚拟设备450。一些实施例中，服务器可以在多处理器装置的每个处理器上执行一个或多个虚拟机上的一个或多个虚拟设备450。</p>
    <p>[0168]	E.提供多核架构的系统和方法</p>
    <p>[0169]	根据摩尔定律，每两年集成电路上可安装的晶体管的数量会基本翻倍。然而，CPU速度增加会达到一个稳定的水平(plateaus)，例如，2005年以来，CPU速度在约3.5_4GHz的范围内。一些情况下，CPU制造商可能不依靠CPU速度增加来获得额外的性能。一些CPU制造商会给处理器增加附加核以提供额外的性能。依靠CPU获得性能改善的如软件和网络供应商的产品可以通过利用这些多核CPU来改进他们的性能。可以重新设计和/或编写为单CPU设计和构造的软件以利用多线程、并行架构或多核架构。</p>
    <p>[0170]	一些实施例中，称为nCore或多核技术的设备200的多核架构允许设备打破单核性能障碍并利用多核CPU的能力。前文结合图2A描述的架构中，运行单个网络或分组引擎。nCore技术和架构的多核允许同时和/或并行地运行多个分组引擎。通过在每个核上运行分组引擎，设备架构利用附加核的处理能力。一些实施例中，这提供了高达七倍的性能改善和扩展性。[0171]图5A示出根据一类并行机制或并行计算方案(如功能并行机制、数据并行机制或基于流的数据并行机制)在一个或多个处理器核上分布的工作、任务、负载或网络流量的一些实施例。总体而言，图5A示出如具有η个核的设备200’的多核系统的实施例，η个核编号为I到N。一个实施例中，工作、负载或网络流量可以分布在第一核505Α、第二核505Β、第三核505C、第四核50&#174;、第五核505Ε、第六核505F、第七核505G等上，这样，分布位于所有η个核505Ν(此后统称为核505)或η个核中的两个或多个上。可以有多个VIP275，每个运行在多个核中的相应的核上。可以有多个分组引擎240，每个运行在多个核的相应的核。所使用任何方法可产生多个核中任一核上的不同的、变化的或类似的工作负载或性能级别515。对于功能并行方法，每个核运行由分组引擎、VIP275或设备200提供的多个功能的不同功能。在数据并行方法中，数据可基于接收数据的网络接口卡(NIC)或VIP275并行或分布在核上。又一个数据并行方法中，可通过将数据流分布在每个核上而将处理分布在核上。</p>
    <p>[0172]	图5A的进一步的细节中，一些实施例中，可以根据功能并行机制500将负载、工作或网络流量在多个核505间分布。功能并行机制可基于执行一个或多个相应功能的每个核。一些实施例中，第一核可执行第一功能，同时第二核执行第二功能。功能并行方法中，根据功能性将多核系统要执行的功能划分并分布到每个核。一些实施例中，可将功能并行机制称为任务并行机制，并且可在每个处理器或核对同一数据或不同数据执行不同进程或功能时实现。核或处理器可执行相同或不同的代码。一些情况下，不同的执行线程或代码可在工作时相互通信。可以进行通信以将数据作为工作流的一部分从一个线程传递给下一线程。</p>
    <p>[0173]	&#8212;些实施例中，根据功能并行机制500将工作分布在核505上，可以包括根据特定功能分布网络流量，所述特定功能例如为网络输入/输出管理(NW I/O) 510A、安全套接层(SSL)加密和解密510B和传输控制协议(TCP)功能510C。这会产生基于所使用的功能量或功能级别的工作、性能或者计算负载515。一些实施例中，根据数据并行机制540将工作分布在核505上可包括基于与特定的硬件或软件组件相关联的分布数据来分布工作量515。一些实施例中，根据基于流的数据并行机制520将工作分布在核505上可包括基于上下文或流来分布数据，从而使得每个核上的工作量515A-N可以类似、基本相等或者相对平均分布。</p>
    <p>[0174]	在功能并行方法的情况下，可以配置每个核来运行由设备的分组引擎或VIP提供的多个功能中的一个或多个功能。例如，核I可执行设备200’的网络I/O处理，同时核2执行设备的TCP连接管理。类似地，核3可执行SSL卸载，同时核4可执行第7层或应用层处理和流量管理。每个核可执行相同或不同的功能。每个核可执行不只一个功能。任一核可运行结合附图2A和2B识别和/或描述的功能或其一部分。该方法中，核上的工作可以粗粒度或细粒度方式按功能划分。一些情况下，如图5A所示，按功能划分会使得不同核运行在不同的性能或负载级别515。</p>
    <p>[0175]	在功能并行方法的情况下，可以配置每个核来运行由设备的分组引擎提供的多个功能中的一个或多个功能。例如，核I可执行设备200’的网络I/O处理，同时核2执行设备的TCP连接管理。类似地，核3可执行SSL卸载，同时核4可执行第7层或应用层处理和流量管理。每个核可执行相同或不同的功能。每个核可执行不只一个功能。任何核可运行结合附图2A和2B识别和/或描述的功能或其一部分。该方法中，核上的工作可以粗粒度或细粒度方式按功能划分。一些情况下，如图5A所示，按功能划分会使得不同核运行在不同的性能或负载级别。</p>
    <p>[0176]	可以用任何结构或方案来分布功能或任务。例如，图5B示出用于处理与网络I/O功能510A相关联的应用和进程的第一核Corel505A。一些实施例中，与网络I/O相关联的网络流量可以和特定的端口号相关联。因而，将具有与NW I/0510A相关联的端口目的地的发出和到来的分组导引给Corel505A，该Corel505A专用于处理与NW I/O端口相关联的所有网络流量。类似的，Core2505B专用于处理与SSL处理相关联的功能，Core450ro可专用于处理所有TCP级处理和功能。</p>
    <p>[0177]	虽然图5A示出如网络I/0、SSL和TCP的功能，也可将其他功能分配给核。这些其他功能可包括此处描述的任一或多个功能或操作。例如，结合图2A和2B描述的任何功能可基于功能基础分布在核上。一些情况下，第一 VIP275A可运行在第一核上，同时，具有不同配置的第二 VIP275B可运行在第二核上。一些实施例中，每个核505可处理特定功能，这样每个核505可处理与该特定功能相关联的处理。例如，Core2505B可处理SSL卸载，同时Core4505D可处理应用层处理和流量管理。</p>
    <p>[0178]	其他实施例中，可根据任何类型或形式的数据并行机制540将工作、负载或网络流量分布在核505上。一些实施例中,可由每个核对分布式数据的不同片执行相同任务或功能来实现多核系统中的数据并行机制。一些实施例中，单个执行线程或代码控制对所有数据片的操作。其他实施例中，不同线程或指令控制操作，但是可执行相同代码。一些实施例中，从分组引擎、vServer (VIP) 275A-C、网络接口卡(NIC) 542D-E和/或设备200上包括的或者与设备200相关联的任何其他网络硬件或软件的角度实现数据并行机制。例如，每个核可运行同样的分组引擎或VIP代码或配置但是在不同的分布式数据集上进行操作。每个网络硬件或软件结构可接收不同的、变化的或者基本相同量的数据，因而可以具有变化的、不同的或相对相同量的负载515。</p>
    <p>[0179]	在数据并行方法的情况下，可以基于VIP、NIC和/或VIP或NIC的数据流来划分和分布工作。在这些的方法的一个中，可通过使每个VIP在分布的数据集上工作来将多核系统的工作划分或者分布在VIP中。例如，可配置每个核运行一个或多个VIP。网络流量可分布在处理流量的每个VIP的核上。在这些方法的又一个中，可基于哪个NIC接收网络流量来将设备的工作划分或分布在核上。例如，第一 NIC的网络流量可被分布到第一核，同时第二 NIC的网络流量可被分布给第二核。一些情况下，核可处理来自多个NIC的数据。</p>
    <p>[0180]	虽然图5A示出了与单个核505相关联的单个vServer，正如VIP1275A、VIP2275B和VIP3275C的情况。但是，一些实施例中，单个vServer可以与一个或者多个核505相关联。相反，一个或多个vServer可以与单个核505相关联。将vServer与核505关联可包括该核505处理与该特定vServer关联的所有功能。一些实施例中，每个核执行具有相同代码和配置的VIP。其他实施例中，每个核执行具有相同代码但配置不同的VIP。一些实施例中，每个核执行具有不同代码和相同或不同配置的VIP。</p>
    <p>[0181]	和vServer类似，NIC也可以和特定的核505关联。许多实施例中，NIC可以连接到一个或多个核505，这样，当NIC接收或传输数据分组时，特定的核505处理涉及接收和传输数据分组的处理。一个实施例中，单个NIC可以与单个核505相关联，正如NIC1542D和NIC2542E的情况。其他实施例中，一个或多个NIC可以与单个核505相关联。但其他实施例中，单个NIC可以与一个或者多个核505相关联。这些实施例中，负载可以分布在一个或多个核505上，使得每个核505基本上处理类似的负载量。与NIC关联的核505可以处理与该特定NIC关联的所有功能和/或数据。</p>
    <p>[0182]	虽然根据VIP或NIC的数据将工作分布在核上具有某种程度的独立性，但是，一些实施例中，这会造成如图5A的变化负载515所示的核的不平衡的使用。</p>
    <p>[0183]	一些实施例中，可根据任何类型或形式的数据流将负载、工作或网络流量分布在核505上。在这些方法的又一个中,可基于数据流将工作划分或分布在多个核上。例如,客户机或服务器之间的经过设备的网络流量可以被分布到多个核中的一个核并且由其处理。一些情况下，最初建立会话或连接的核可以是该会话或连接的网络流量所分布的核。一些实施例中，数据流基于网络流量的任何单元或部分，如事务、请求/响应通信或来自客户机上的应用的流量。这样，一些实施例中，客户机和服务器之间的经过设备200’的数据流可以比其他方式分布的更均衡。</p>
    <p>[0184]	在基于流的数据并行机制520中，数据分布和任何类型的数据流相关，例如请求/响应对、事务、会话、连接或应用通信。例如，客户机或服务器之间的经过设备的网络流量可以被分布到多个核中的一个核并且由其处理。一些情况下，最初建立会话或连接的核可以是该会话或连接的网络流量所分布的核。数据流的分布可以使得每个核505运行基本相等或相对均匀分布的负载量、数据量或网络流量。</p>
    <p>[0185]	一些实施例中，数据流基于网络流量的任何单元或部分，如事务、请求/响应通信或源自客户机上的应用的流量。这样，一些实施例中，客户机和服务器之间的经过设备200’的数据流可以比其他方式分布的更均衡。一个实施例中，可以基于事务或一系列事务分布数据量。一些实施例中，该事务可以是客户机和服务器之间的，其特征可以是IP地址或其他分组标识符。例如，核1505A可专用于特定客户机和特定服务器之间的事务，因此，核1505A上的负载515A可包括与特定客户机和服务器之间的事务相关联的网络流量。可通过将源自特定客户机或服务器的所有数据分组路由到核1505A来将网络流量分配给核1505A。</p>
    <p>[0186]	虽然可部分地基于事务将工作或负载分布到核，但是，其他实施例中，可基于每个分组的基础分配负载或工作。这些实施例中，设备200可拦截数据分组并将数据分组分配给负载量最小的核505。例如，由于核I上的负载515A小于其他核505B-N上的负载515B-N，所以设备200可将第一到来的数据分组分配给核1505A。将第一数据分组分配给核1505A后，核1505A上的负载量515A与处理第一数据分组所需的处理资源量成比例增加。设备200拦截到第二数据分组时，设备200会将负载分配给核4505D，这是由于核450&#174;具有第二少的负载量。一些实施例中，将数据分组分配给负载量最小的核可确保分布到每个核505的负载515A-N保持基本相等。</p>
    <p>[0187]	其他实施例中，将一部分网络流量分配给特定核505的情况下，可以每单元为基础分配负载。上述示例说明以每分组为基础进行负载平衡。其他实施例中，可以基于分组数目分配负载，例如，将每10个、100个或1000个分组分配给流量最少的核505。分配给核505的分组数量可以是由应用、用户或管理员确定的数目，而且可以为大于零的任何数。仍在其他实施例中，基于时间指标分配负载，使得在预定时间段将分组分布到特定核505。这些实施例中，可以在5毫秒内或者由用户、程序、系统、管理器或其他方式确定的任何时间段将分组分布到特定核505。预定时间段过去后，在预定时间段内将时间分组传输给不同的核 505。</p>
    <p>[0188]	用于将工作、负载或网络流量分布在一个或多个核505上的基于流的数据并行方法可包括上述实施例的任意组合。这些方法可以由设备200的任何部分执行，由在核505上执行的应用或者一组可执行指令执行，例如分组引擎，或者由在与设备200通信的计算装置上执行的任何应用、程序或代理执行。</p>
    <p>[0189]	图5A所示的功能和数据并行机制计算方案可以任何方式组合，以产生混合并行机制或分布式处理方案，其包括功能并行机制500、数据并行机制540、基于流的数据并行机制520或者其任何部分。一些情况下，多核系统可使用任何类型或形式的负载平衡方案来将负载分布在一个或多个核505上。负载平衡方案可以和任何功能和数据平行方案或其组合结合使用。</p>
    <p>[0190]	图5B示出多核系统545的实施例，该系统可以是任何类型或形式的一个或多个系统、设备、装置或组件。一些实施例中，该系统545可被包括在具有一个或多个处理核505A-N的设备200内。系统545还可包括与存储器总线556通信的一个或多个分组引擎(PE)或分组处理引擎(PPE) 548A-N。存储器总线可用于与一个或多个处理核505A-N通信。系统545还可包括一个或多个网络接口卡(NIC) 552和流分布器550，流分布器还可与一个或多个处理核505A-N通信。流分布器550可包括接收侧调整器(Receiver SideScaler-RSS)或接收侧调整(Receiver Side Scaling-RSS)模块 560。</p>
    <p>[0191]	进一步参考图5B，具体而言，一个实施例中，分组引擎548A-N可包括此处所述的设备200的任何部分，例如图2A和2B所述设备的任何部分。一些实施例中，分组引擎548A-N可包括任何下列的元件:分组引擎240、网络堆栈267、高速缓存管理器232、策略引擎236、压缩引擎238、加密引擎234、⑶1210、CLI212、壳服务214、监控程序216以及能够从数据总线556或一个或多个核505A-N中的任一个接收数据分组的其他任何软件和硬件元件。一些实施例中，分组引擎548A-N可包括一个或多个vServer275A-N或其任何部分。其他实施例中，分组引擎548A-N可提供以下功能的任意组合:SSL VPN280、内部网IP282、交换284、DNS286、分组加速288、APP FW280、如由监控代理197提供的监控、和作为TCP堆栈关联的功能、负载平衡、SSL卸载和处理、内容交换、策略评估、高速缓存、压缩、编码、解压缩、解码、应用防火墙功能、XML处理和加速以及SSL VPN连接。</p>
    <p>[0192]	一些实施例中，分组引擎548A-N可以与特定服务器、用户、客户或网络关联。分组引擎548与特定实体关联时，分组引擎548可处理与该实体关联的数据分组。例如，如果分组引擎548与第一用户关联，那么该分组引擎548将对由第一用户产生的分组或者目的地址与第一用户关联的分组进行处理和操作。类似地，分组引擎548可选择不与特定实体关联，使得分组引擎548可对不是由该实体产生的或目的是该实体的任何数据分组进行处理和以其他方式进行操作。</p>
    <p>[0193]	一些实例中，可将分组引擎548A-N配置为执行图5A所示的任何功能和/或数据并行方案。这些实例中，分组引擎548A-N可将功能或数据分布在多个核505A-N上，从而使得分布是根据并行机制或分布方案的。一些实施例中，单个分组引擎548A-N执行负载平衡方案，其他实施例中，一个或多个分组弓I擎548A-N执行负载平衡方案。一个实施例中，每个核505A-N可以与特定分组引擎548关联，使得可以由分组引擎执行负载平衡。在该实施例中，负载平衡可要求与核505关联的每个分组引擎548A-N和与核关联的其他分组引擎通信，使得分组引擎548A-N可共同决定将负载分布在何处。该过程的一个实施例可包括从每个分组引擎接收对于负载的投票的仲裁器。仲裁器可部分地基于引擎投票的持续时间将负载分配给每个分组引擎548A-N，一些情况下，还可基于与在引擎关联的核505上的当前负载量相关联的优先级值来将负载分配给每个分组引擎548A-N。</p>
    <p>[0194]	核上运行的任何分组引擎可以运行于用户模式、内核模式或其任意组合。一些实施例中，分组引擎作为在用户空间或应用空间中运行的应用或程序来操作。这些实施例中，分组引擎可使用任何类型或形式的接口来访问内核提供的任何功能。一些实施例中，分组引擎操作于内核模式中或作为内核的一部分来操作。一些实施例中，分组引擎的第一部分操作于用户模式中，分组引擎的第二部分操作于内核模式中。一些实施例中，第一核上的第一分组引擎执行于内核模式中，同时，第二核上的第二分组引擎执行于用户模式中。一些实施例中，分组引擎或其任何部分对NIC或其任何驱动器进行操作或者与其联合操作。</p>
    <p>[0195]	一些实施例中，存储器总线556可以是任何类型或形式的存储器或计算机总线。虽然在图5B中描述了单个存储器总线556，但是系统545可包括任意数量的存储器总线556。一个实施例中，每个分组引擎548可以和一个或者多个单独的存储器总线556相关联。</p>
    <p>[0196]	一些实施例中，NIC552可以是此处所述的任何网络接口卡或机制。NIC552可具有任意数量的端口。NIC可设计并构造成连接到任何类型和形式的网络104。虽然示出单个NIC552，但是，系统545可包括任意数量的NIC552。一些实施例中，每个核505A-N可以与一个或多个单个NIC552关联。因而，每个核505可以与专用于特定核505的单个NIC552关联。核505A-N可包括此处所述的任何处理器。此外，可根据此处所述的任何核505配置来配置核505A-N。另外，核505A-N可具有此处所述的任何核505功能。虽然图5B示出七个核505A-G,但是系统545可包括任意数量的核505。具体而言,系统545可包括N个核,其中N是大于零的整数。</p>
    <p>[0197]	核可具有或使用被分配或指派用于该核的存储器。可将存储器视为该核的专有或本地存储器并且仅有该核可访问该存储器。核可具有或使用共享的或指派给多个核的存储器。该存储器可被视为由不只一个核可访问的公共或共享存储器。核可使用专有或公共存储器的任何组合。通过每个核的单独的地址空间，消除了使用同一地址空间的情况下的一些协调级别。利用单独的地址空间，核可以对核自己的地址空间中的信息和数据进行工作，而不用担心与其他核冲突。每个分组引擎可以具有用于TCP和/或SSL连接的单独存储器池。</p>
    <p>[0198]	仍参考图5B，上文结合图5A描述的核505的任何功能和/或实施例可以部署在上文结合图4A和4B描述的虚拟化环境的任何实施例中。不是以物理处理器505的形式部署核505的功能，而是将这些功能部署在诸如客户机102、服务器106或设备200的任何计算装置100的虚拟化环境400内。其他实施例中，不是以设备或一个装置的形式部署核505的功能，而是将该功能部署在任何布置的多个装置上。例如，一个装置可包括两个或多个核，另一个装置可包括两个或多个核。例如，多核系统可包括计算装置的集群、服务器群或计算装置的网络。一些实施例中，不是以核的形式部署核505的功能，而是将该功能部署在多个处理器上，例如部署多个单核处理器上。</p>
    <p>[0199]	一个实施例中，核505可以为任何形式或类型的处理器。一些实施例中，核的功能可以基本类似此处所述的任何处理器或中央处理单元。一些实施例中，核505可包括此处所述的任何处理器的任何部分。虽然图5A示出7个核，但是，设备200内可以有任意N个核，其中N是大于I的整数。一些实施例中，核505可以安装在公用设备200内，其他实施例中，核505可以安装在彼此通信连接的一个或多个设备200内。一些实施例中，核505包括图形处理软件，而其他实施例中，核505提供通用处理能力。核505可彼此物理靠近地安装和/或可彼此通信连接。可以用以物理方式和/或通信方式耦合到核的任何类型和形式的总线或子系统连接核，用于向核、从核和/或在核之间传输数据。</p>
    <p>[0200]	尽管每个核505可包括用于与其他核通信的软件,一些实施例中，核管理器(未不出)可有助于每个核505之间的通信。一些实施例中，内核可提供核管理。核可以使用各种接口机制彼此接口或通信。一些实施例中，可以使用核到核的消息传送来在核之间通信，比如，第一核通过连接到核的总线或子系统向第二核发送消息或数据。一些实施例中，核可通过任何种类或形式的共享存储器接口通信。一个实施例中，可以存在在所有核中共享的一个或多个存储器单元。一些实施例中，每个核可以具有和每个其他核共享的单独存储器单元。例如，第一核可具有与第二核的第一共享存储器，以及与第三核的第二共享存储器。一些实施例中，核可通过任何类型的编程或API (如通过内核的函数调用)来通信。一些实施例中，操作系统可识别并支持多核装置，并提供用于核间通信的接口和API。</p>
    <p>[0201]	流分布器550可以是任何应用、程序、库、脚本、任务、服务、进程或在任何类型或形式的硬件上执行的任何类型和形式的可执行指令。一些实施例中，流分布器550可以是用于执行此处所述任何操作和功能的任何电路设计或结构。一些实施例中，流分布器分布、转发、路由、控制和/或管理多个核505上的数据和/或在核上运行的分组引擎或VIP的分布。一些实施例中，可将流分布器550称为接口主装置(interface master)。一个实施例中，流分布器550包括在设备200的核或处理器上执行的一组可执行指令。又一个实施例中，流分布器550包括在与设备200通信的计算机器上执行的一组可执行指令。一些实施例中，流分布器550包括在如固件的NIC上执行的一组可执行指令。其他实施例,流分布器550包括用于将数据分组分布在核或处理器上的软件和硬件的任何组合。一个实施例中，流分布器550在至少一个核505A-N上执行,而在其他实施例中，分配给每个核505A-N的单独的流分布器550在相关联的核505A-N上执行。流分布器可使用任何类型和形式的统计或概率算法或决策来平衡多个核上的流。可以将如NIC的设备硬件或内核设计或构造成支持NIC和/或核上的顺序操作。</p>
    <p>[0202]	系统545包括一个或多个流分布器550的实施例中，每个流分布器550可以与处理器505或分组引擎548关联。流分布器550可包括允许每个流分布器550和在系统545内执行的其他流分布器550通信的接口机制。一个实例中，一个或多个流分布器550可通过彼此通信确定如何平衡负载。该过程的操作可以基本与上述过程类似，即将投票提交给仲裁器，然后仲裁器确定哪个流分布器550应该接收负载。其他实施例中，第一流分布器550’可识别所关联的核上的负载并基于任何下列标准确定是否将第一数据分组转发到所关联的核:所关联的核上的负载大于预定阈值；所关联的核上的负载小于预定阈值；所关联的核上的负载小于其他核上的负载；或者可以用于部分基于处理器上的负载量来确定将数据分组转发到何处的任何其他指标。</p>
    <p>[0203]	流分布器550可以根据如此处所述的分布、计算或负载平衡方法而将网络流量分布在核505上。一个实施例中，流分布器可基于功能并行机制分布方案550、数据并行机制负载分布方案540、基于流的数据并行机制分布方案520或这些分布方案的任意组合或用于将负载分布在多个处理器上的任何负载平衡方案来分布网络流量。因而，流分布器550可通过接收数据分组并根据操作的负载平衡或分布方案将数据分组分布在处理器上而充当负载分布器。一个实施例中，流分布器550可包括用于确定如何相应地分布分组、工作或负载的一个或多个操作、函数或逻辑。又一个实施例中，流分布器550可包括可识别与数据分组关联的源地址和目的地址并相应地分布分组的一个或多个子操作、函数或逻辑。</p>
    <p>[0204]	一些实施例中，流分布器550可包括接收侧调整(RSS)网络驱动器模块560或将数据分组分布在一个或多个核505上的任何类型和形式的可执行指令。RSS模块560可以包括硬件和软件的任意组合。一些实施例中，RSS模块560和流分布器550协同工作以将数据分组分布在核505A-N或多处理器网络中的多个处理器上。一些实施例中，RSS模块560可在NIC552中执行，其他实施例中，可在核505的任何一个上执行。</p>
    <p>[0205]	一些实施例中，RSS模块560使用微软接收侧调整(RSS)方法。一个实施例中，RSS是微软可扩展网络主动技术(Microsoft Scalable Networking initiative technology),其使得系统中的多个处理器上的接收处理是平衡的，同时保持数据的顺序传送。RSS可使用任何类型或形式的哈希方案来确定用于处理网络分组的核或处理器。</p>
    <p>[0206]	RSS模块560可应用任何类型或形式的哈希函数，如Toeplitz哈希函数。哈希函数可应用到哈希类型值或者任何值序列。哈希函数可以是任意安全级别的安全哈希或者是以其他方式加密。哈希函数可使用哈希关键字(hash key)ο关键字的大小取决于哈希函数。对于Toeplitz哈希,用于IPv6的哈希关键字大小为40字节,用于IPv4的哈希关键字大小为16字节。</p>
    <p>[0207]	可以基于任何一个或多个标准或设计目标设计或构造哈希函数。一些实施例中，可使用为不同的哈希输入和不同哈希类型提供均匀分布的哈希结果的哈希函数，所述不同哈希输入和不同哈希类型包括TCP/IPv4、TCP/IPv6、IPv4和IPv6头部。一些实施例中，可使用存在少量桶时(例如2个或4个)提供均匀分布的哈希结果的哈希函数。一些实施例中，可使用存在大量桶时(例如64个桶)提供随机分布的哈希结果的哈希函数。在一些实施例中，基于计算或资源使用水平来确定哈希函数。在一些实施例中，基于在硬件中实现哈希的难易度来确定哈希函数。在一些实施例中，基于用恶意的远程主机发送将全部哈希到同一桶中的分组的难易度来确定哈希函数。</p>
    <p>[0208]	RSS可从任意类型和形式的输入来产生哈希，例如值序列。该值序列可包括网络分组的任何部分，如网络分组的任何头部、域或载荷或其一部分。一些实施例中，可将哈希输入称为哈希类型，哈希输入可包括与网络分组或数据流关联的任何信息元组，例如下面的类型:包括至少两个IP地址和两个端口的四元组、包括任意四组值的四元组、六元组、二元组和/或任何其他数字或值序列。以下是可由RSS使用的哈希类型示例:</p>
    <p>[0209]-源TCP端口、源IP版本4	(IPv4)地址、目的TCP端口和目的IPv4地址的四元组。</p>
    <p>[0210]-源TCP端口、源IP版本6	(IPv6 )地址、目的TCP端口和目的IPv6地址的四元组。</p>
    <p>[0211]-源IPv4地址和目的IPv4地址的二元组。源IPv6地址和目的IPv6地址的二元组。</p>
    <p>[0212]-源IPv6地址和目的IPv6地址的二元组，包括对解析IPv6扩展头部的支持。</p>
    <p>[0213]	哈希结果或其任何部分可用于识别用于分布网络分组的核或实体，如分组引擎或Vipo 一些实施例中，可向哈希结果应用一个或者多个哈希位或掩码。哈希位或掩码可以是任何位数或字节数。NIC可支持任意位，例如7位。网络堆栈可在初始化时设定要使用的实际位数。位数介于I和7之间，包括端值。</p>
    <p>[0214]	可通过任意类型和形式的表用哈希结果来识别核或实体,例如通过桶表(buckettable)或间接表(indirection table)。一些实施例中，用哈希结果的位数来索引表。哈希掩码的范围可有效地限定间接表的大小。哈希结果的任何部分或哈希结果自身可用于索引间接表。表中的值可标识任何核或处理器，例如通过核或处理器标识符来标识。一些实施例中，表中标识多核系统的所有核。其他实施例中，表中标识多核系统的一部分核。间接表可包括任意多个桶，例如2到128个桶，可以用哈希掩码索引这些桶。每个桶可包括标识核或处理器的索引值范围。一些实施例中，流控制器和/或RSS模块可通过改变间接表来重新平衡网络负载。</p>
    <p>[0215]	一些实施例中，多核系统575不包括RSS驱动器或RSS模块560。在这些实施例的一些中，软件操控模块(未不出)或系统内RSS模块的软件实施例可以和流分布器550共同操作或者作为流分布器550的一部分操作，以将分组引导到多核系统575中的核505。</p>
    <p>[0216]	一些实施例中，流分布器550在设备200上的任何模块或程序中执行，或者在多核系统575中包括的任何一个核505和任一装置或组件上执行。一些实施例中，流分布器550’可在第一核505A上执行，而在其他实施例中，流分布器550”可在NIC552上执行。其他实施例中，流分布器550’的实例可在多核系统575中包括的每个核505上执行。该实施例中，流分布器550’的每个实例可和流分布器550’的其他实例通信以在核505之间来回转发分组。存在这样的状况，其中，对请求分组的响应不是由同一核处理的，即第一核处理请求，而第二核处理响应。这些情况下，流分布器550’的实例可以拦截分组并将分组转发到期望的或正确的核505，即流分布器550’可将响应转发到第一核。流分布器550’的多个实例可以在任意数量的核505或核505的任何组合上执行。</p>
    <p>[0217]	流分布器可以响应于任一个或多个规则或策略而操作。规则可识别接收网络分组、数据或数据流的核或分组处理引擎。规则可识别和网络分组有关的任何类型和形式的元组信息，例如源和目的IP地址以及源和目的端口的四元组。基于所接收的匹配规则所指定的元组的分组，流分布器可将分组转发到核或分组引擎。一些实施例中，通过共享存储器和/或核到核的消息传输将分组转发到核。</p>
    <p>[0218]	虽然图5B不出了在多核系统575中执行的流分布器550,但是,一些实施例中，流分布器550可执行在位于远离多核系统575的计算装置或设备上。这样的实施例中，流分布器550可以和多核系统575通信以接收数据分组并将分组分布在一个或多个核505上。一个实施例中，流分布器550接收以设备200为目的地的数据分组，向所接收的数据分组应用分布方案并将数据分组分布到多核系统575的一个或多个核505。一个实施例中,流分布器550可以被包括在路由器或其他设备中，这样路由器可以通过改变与每个分组关联的元数据而以特定核505为目的地，从而每个分组以多核系统575的子节点为目的地。这样的实施例中，可用CISCO的vn-tag机制来改变或标记具有适当元数据的每个分组。[0219]	图5C示出包括一个或多个处理核505A-N的多核系统575的实施例。简言之，核505中的一个可被指定为控制核505A并可用作其他核505的控制平面570。其他核可以是次级核，其工作于数据平面，而控制核提供控制平面。核505A-N共享全局高速缓存580。控制核提供控制平面，多核系统中的其他核形成或提供数据平面。这些核对网络流量执行数据处理功能，而控制核提供对多核系统的初始化、配置和控制。</p>
    <p>[0220]	仍参考图5C，具体而言，核505A-N以及控制核505A可以是此处所述的任何处理器。此外，核505A-N和控制核505A可以是能在图5C所述系统中工作的任何处理器。另外，核505A-N可以是此处所述的任何核或核组。控制核可以是与其他核不同类型的核或处理器。一些实施例中，控制核可操作不同的分组引擎或者具有与其他核的分组引擎配置不同的分组引擎。</p>
    <p>[0221]	每个核的存储器的任何部分可以被分配给或者用作核共享的全局高速缓存。简而言之，每个核的每个存储器的预定百分比或预定量可用作全局高速缓存。例如，每个核的每个存储器的50%可用作或分配给共享全局高速缓存。也就是说，所示实施例中，除了控制平面核或核I以外的每个核的2GB可用于形成28GB的共享全局高速缓存。例如通过配置服务而配置控制平面可确定用于共享全局高速缓存的存储量(the amount of memory)。一些实施例中，每个核可提供不同的存储量供全局高速缓存使用。其他实施例中，任一核可以不提供任何存储器或不使用全局高速缓存。一些实施例中，任何核也可具有未分配给全局共享存储器的存储器中的本地高速缓存。每个核可将网络流量的任意部分存储在全局共享高速缓存中。每个核可检查高速缓存来查找要在请求或响应中使用的任何内容。任何核可从全局共享高速缓存获得内容以在数据流、请求或响应中使用。</p>
    <p>[0222]	全局高速缓存580可以是任意类型或形式的存储器或存储元件，例如此处所述的任何存储器或存储元件。一些实施例中，核505可访问预定的存储量(即32GB或者与系统575相当的任何其他存储量)。全局高速缓存580可以从预定的存储量分配而来，同时，其余的可用存储器可在核505之间分配。其他实施例中，每个核505可具有预定的存储量。全局高速缓存580可包括分配给每个核505的存储量。该存储量可以字节为单位来测量，或者可用分配给每个核505的存储器百分比来测量。因而，全局高速缓存580可包括来自与每个核505关联的存储器的IGB存储器，或者可包括和每个核505关联的存储器的20%或一半。一些实施例，只有一部分核505提供存储器给全局高速缓存580，而在其他实施例，全局高速缓存580可包括未分配给核505的存储器。</p>
    <p>[0223]	每个核505可使用全局高速缓存580来存储网络流量或缓存数据。一些实施例中，核的分组引擎使用全局高速缓存来缓存并使用由多个分组引擎所存储的数据。例如，图2A的高速缓存管理器和图2B的高速缓存功能可使用全局高速缓存来共享数据以用于加速。例如，每个分组引擎可在全局高速缓存中存储例如HTML数据的响应。操作于核上的任何高速缓存管理器可访问全局高速缓存来将高速缓存响应提供给客户请求。</p>
    <p>[0224]	一些实施例中，核505可使用全局高速缓存580来存储端口分配表，其可用于部分基于端口确定数据流。其他实施例中，核505可使用全局高速缓存580来存储地址查询表或任何其他表或列表，流分布器可使用这些表来确定将到来的数据分组和发出的数据分组导向何处。一些实施例中，核505可以读写高速缓存580，而其他实施例中，核505仅从高速缓存读或者仅向高速缓存写。核可使用全局高速缓存来执行核到核通信。[0225]	可以将全局高速缓存580划分成各个存储器部分，其中每个部分可专用于特定核505。一个实施例中，控制核505A可接收大量的可用高速缓存，而其他核505可接收对全局高速缓存580的变化的访问量。</p>
    <p>[0226]	一些实施例中，系统575可包括控制核505A。虽然图5C将核1505A示为控制核，但是，控制核可以是设备200或多核系统中的任何一个核。此外，虽然仅描述了单个控制核，但是，系统575可包括一个或多个控制核，每个控制核对系统有某种程度的控制。一些实施例中，一个或多个控制核可以各自控制系统575的特定方面。例如，一个核可控制决定使用哪种分布方案，而另一个核可确定全局高速缓存580的大小。</p>
    <p>[0227]多核系统的控制平面可以是将一个核指定并配置成专用的管理核或者作为主核。控制平面核可对多核系统中的多个核的操作和功能提供控制、管理和协调。控制平面核可对多核系统中的多个核上存储器系统的分配和使用提供控制、管理和协调，这包括初始化和配置存储器系统。一些实施例中，控制平面包括流分布器，用于基于数据流控制数据流到核的分配以及网络分组到核的分配。一些实施例中，控制平面核运行分组引擎，其他实施例中，控制平面核专用于系统的其他核的控制和管理。</p>
    <p>[0228]	控制核505A可对其他核505进行某种级别的控制，例如，确定将多少存储器分配给每个核505，或者确定应该指派哪个核来处理特定功能或硬件/软件实体。一些实施例中，控制核505A可以对控制平面570中的这些核505进行控制。因而，控制平面570之外可存在不受控制核505A控制的处理器。确定控制平面570的边界可包括由控制核505A或系统575中执行的代理维护由控制核505A控制的核的列表。控制核505A可控制以下的任一个:核初始化、确定核何时不可用、一个核出故障时将负载重新分配给其他核505、决定实现哪个分布方案、决定哪个核应该接收网络流量、决定应该给每个核分配多少高速缓存、确定是否将特定功能或元件分布到特定核、确定是否允许核彼此通信、确定全局高速缓存580的大小以及对系统575内的核的功能、配置或操作的任何其他确定。</p>
    <p>[0229]	F.用于η层高速缓存重定向的系统和方法</p>
    <p>[0230]	在另一个方面，可在多层(称作η层)架构中部署设备，来提供用于透明高速缓存重定向的可扩展解决方案。高速缓存服务器存储被频繁请求的内容，并且代表起源服务器将该内容提供给客户机。如此，高速缓存服务器减少了起源服务器或服务器群上的负载。设备200的实施例包括高速缓存重定向特征，即，将对可高速缓存数据的请求发送给高速缓存服务器，且将不可高速缓存的请求和动态请求(如动态HTTP请求)发送给起源服务器。高速缓存重定向可与各种协议一起运行，所述协议例如是HTTP、HTTPS和NTNP协议。</p>
    <p>[0231]	以举例说明的方式来讨论下列基于HTTP重定向的实施例。设备可以如下方式重定向数据，如HTTP数据:</p>
    <p>[0232].到起源服务器。可将设备配置为将所有请求转发到起源服务器。在对高速缓存服务器执行维护时，这类重定向可能是有用的。如果设备卸下所有高速缓存服务器，设备可将所有流量定向到起源服务器。当所有高速缓存服务器以他们的最大连接数运行时，也可能需要或期望将所有流量发送到起源服务器。</p>
    <p>[0233].到高速缓存服务器。可将设备配置为将所有请求转发到高速缓存服务器。这类重定向对于测试可能很有用。可将流量定向到高速缓存服务器，以分析哪些数据是最适合从高速缓存提供的。[0234].基于策略到起源服务器或者高速缓存服务器。对于高速缓存重定向的典型操作的实施例，可将设备的策略配置为确定起源服务器还是高速缓存服务器来服务请求。可将与策略不匹配的请求发送到高速缓存服务器。可将匹配策略的请求发送到起源服务器。策略可检查URL后缀、前缀、查询字符串令牌、HTTP头部、高速缓存控制头部和HTTP方法。</p>
    <p>[0235]	设备的实施例的高速缓存重定向特征可具有多种模式，例如透明模式、反向代理模式和转发代理模式。可将设备的任何vServer275配置为高速缓存重定向vServer。对于透明模式，透明高速缓存可驻留在沿网络主干的各个点上，以减轻沿传送路径的流量。在透明模式下，高速缓存重定向虚拟服务器向起源服务器直接发送不可高速缓存的请求。对于反向代理模式，反向代理高速缓存可位于起源服务器前。在反向代理模式下，高速缓存重定向虚拟服务器可将请求发送到关于起源服务器的负载平衡虚拟服务器或者关于高速缓存的负载平衡虚拟服务器。该负载平衡虚拟服务器选择目的服务器。对于转发代理模式，转发代理高速缓存服务器驻留在企业LAN的边缘且面向WAN。在转发代理模式下，高速缓存重定向虚拟服务器将不可高速缓存的请求发送到DNS负载平衡虚拟服务器，该DNS负载平衡虚拟服务器选择起源服务器的目的地。</p>
    <p>[0236]	在透明模式的实施例中，将设备配置为评估流量以确定该流量或者其部分是否可以高速缓存。透明模式可以减轻沿传送路径的流量，且可以在高速缓存服务器驻留在ISP或者运营商的主干网上时使用。在透明模式下，例如，设备经由高速缓存重定向VServer根据策略来评估请求。设备将可高速缓存的请求发送到高速缓存服务器，并且将不可高速缓存的请求发送到起源服务器。例如，当设备接收到去往邮件服务器的请求时，设备可比较该请求中的HTTP头部与一组策略表达式。如果该请求与该策略不匹配，则设备将该请求转发到高速缓存服务器。如果响应匹配该策略，则设备将该请求不变地转发到邮件服务器。在透明模式下，设备评估其在端口(例如端口 80)上接收的任何请求，以进行高速缓存重定向。设备可根据请求的HOST头部中的主机域名或IP地址来确定所请求的目的地。如果请求中不存在HOST头部，则设备可使用目的IP地址将HOST头部插入该请求。</p>
    <p>[0237]	在透明模式下，可配置设备的高速缓存重定向虚拟服务器并且将其与策略相关联。策略可允许高速缓存重定向虚拟服务器确定请求是可高速缓存的还是不可高速缓存的。还可以根据策略评估的结果将该高速缓存重定向虚拟服务器与负载平衡虚拟服务器相关联，该负载平衡虚拟服务器负责将请求转发到高速缓存。可将不可高速缓存的请求发送到起源服务器。</p>
    <p>[0238]	下面是使用透明虚拟服务器进行高速缓存重定向的过程概述的实施例。客户机发送请求。设备200的高速缓存重定向虚拟服务器拦截该请求。该高速缓存重定向虚拟服务器可以是本身不具有IP地址的直通服务器。可将策略与该高速缓存重定向虚拟服务器相关联，并且允许或使该高速缓存重定向虚拟服务器能够确定该请求是否是可高速缓存的。如果该请求不与任何策略匹配，则可认为该请求是可高速缓存的，并且发生如下操作:高速缓存重定向虚拟服务器将请求转发到对于高速缓存的负载平衡虚拟服务器，该负载平衡虚拟服务器将该请求传递到HTTP服务，并且HTTP服务将该请求转发到物理高速缓存服务器。如果请求与策略相匹配，则设备将请求转发到在该请求中出现的起源服务器。</p>
    <p>[0239]	现参考图6A，描述了用于透明模式的这种可扩展高速缓存重定向的多层设备部署的实施例。可在多层部署的层(layer/tier)中平行部署多个设备，以提供可扩展性来处理大量网络流量，例如，由互联网服务供应商(ISP)承受的大量的网络流量。简要概括图6A的部署，可在多层或η层架构中的每一层上平行部署多个设备200A-200N。第一层(如层I)可包括一个或多个中间装置，例如第一设备NSA1200A和第二设备NSA2200B。这些设备NSAl和NSA2可以在第二层(如层2)中平行部署的多个设备(如NSB1、NSB2、NSB3和NSB4200C-200N)间负载平衡请求，如经由路由器Rl接收的请求。可以对客户机或者起源服务器透明的形式，将层2设备配置为提供到多个高速缓存服务器106A-106N中的任何一个的高速缓存重定向，可在第二层设备的后面、内部或者平行于第二层设备部署高速缓存服务器。</p>
    <p>[0240]	对于透明闻速缓存重定向场景，例如在闻速缓存未命中时，可能需要由第二层设备来维护客户机的IP地址，用于建立到起源服务器的连接。由于层2的任一平行部署的设备可接收来自层I负载平衡设备的客户机请求，所以本解决方案的实施例提供端口范围分配技术，以允许其中一个设备维护和使用客户机IP地址。端口范围分配方法为层I设备提供向维护客户机IP地址的层2设备发送适当的流量的机制。可将层2设备中的每一个配置为在可用端口范围605的一组预定端口 602A-602N上接收流量，其中在所有层2设备上管理该可用端口范围605。例如，设备NSBl可允许或者建立第一端口范围602A上的连接，而设备NSB2可允许或者建立第二端口范围602B上的连接，设备NSB3允许或建立第三端口范围602C上的连接，以此类推。</p>
    <p>[0241]	在进一步的细节中，路由器Rl可以是任何类型和形式的路由器。可将该路由器配置为将来自任何客户机器102A-102N的任何网络流量路由到层I设备，例如设备NSAl和NSA2。可将该路由器配置为基于分组的源IP地址将网络分组(如HTTP分组)定向到层I。在一些实施例中，可将该路由器配置为将来自客户机的所有网络分组定向到层I设备。</p>
    <p>[0242]	η层部署的第一层可包括任何数量的设备200Α-200Β。可将每个层I设备部署和/或配置为接收来自路由器的网络流量。可将每个层I设备部署和/或配置为接收来自客户机器的网络流量。可将诸如在这些设备上运行的vServer的层I设备，配置为负载平衡构成该η层部署的第二层或层2的多个设备。可使用任何类型的负载平衡方法或算法来负载平衡第二层。可将层I设备(诸如在这些设备上运行的vServer)配置为使用基于策略的路由规则610，以基于目的端口 612为请求或响应确定下一跳615。</p>
    <p>[0243]	可将层I设备配置为支持使用源IP模式，其称作USIP模式。使用日志的应用(如web服务器日志)可要求或请求将原始客户机IP地址记录到服务器日志中。设备可将客户机的源IP地址转发到服务器而不屏蔽该地址，从而保证客户机IP地址出现在日志中。使用源IP模式(USIP)模式适用于这样的应用。如果启用USIP模式，则设备将每个分组转发到适当的服务器而不改变源IP地址。使用USIP模式，这种高速缓存重定向部署中的设备可以在该部署中的不同实体之间发送和接收请求和响应时维护和跟踪客户机的IP地址和端口信息，例如在从层I设备到层2设备到高速缓存服务器，返回层设备和层2设备等发送和接收请求和响应时。设备可存储与由该设备用于管理和跟踪连接的任何记录、数据结构或者对象有关的客户机IP地址和端口信息。设备可存储与由该设备用于代替或取代客户机的IP和端口信息的任何IP地址和/或端口有关、关联或者映射的客户机的IP地址和端口信息。设备可查找与接收来自高速缓存服务器或者起源服务器的任何请求或响应相关的这些客户机信息。设备可查找与由该设备用来代替或取代客户机的IP和端口信息的任何IP地址和/或端口有关的这些客户机信息。[0244]	在一些实施例中，可以将层I设备配置为用于直接服务器返回(DSR)模式。为在DSR模式下运行，客户机请求中的目的IP保持不变。相反，设备将目的MAC改变为所选服务器的MAC。该设置使服务器能够确定客户机MAC地址，用于将请求转发到该客户机同时绕过服务器。在高数据量环境中，由于分组并不流经设备，在DSR模式下直接向客户机发送服务器流量可提高该设备的整体分组处理能力。</p>
    <p>[0245]	层I设备可被配置为具有一个或多个基于策略的路由(PBR) 610。设备的策略引擎可以被配置有一个或多个PBR或者可以将一个或多个PBR用于或应用到经过该设备的分组，例如由设备拦截或接收的分组。可将PBR设计和/或配置为基于策略将流量路由到层2设备。基于策略的路由将路由决策建立在指定标准的基础上。基于策略的路由(PBR)指定用于选择分组以及选择向其发送所选择的分组的下一跳615的标准。例如，可将设备配置为将来自指定IP地址或范围的输出分组路由到特定的下一跳路由器。按照由任何指定优先级确定的顺序将每个分组与每个配置的PBR进行匹配，直到找到匹配。如果没有找到匹配或者如果匹配的PBR指定DENY (拒绝)动作，则设备应用路由表以进行正常的基于目的地的路由。对于数据分组的PBR路由决策可基于参数，例如源IP地址、源端口、目的IP地址、目的端口、协议和源MAC地址。PBR限定分组必须满足的用于设备路由该分组的条件。可将这些动作称作“处理模式”。该这些处理模式是:允许(ALLOW)-设备将分组发送到指定的下一跳路由器，以及拒绝-设备应用路由表为来进行正常的基于目的地的路由。</p>
    <p>[0246]	PBR策略可指定要采取的路由动作。PBR策略可基于一个或多个参数来指定要采取的路由动作。PBR策略可指定动作和规则。该规则可标识或指定为其采取策略的指定动作的一组条件。对于该规则的这组条件可基于对策略的一个或多个参数与分组的相应特征645进行匹配，或者根据分组的特征645评估策略的一个或多个参数。策略可使用表达式或者策略语言来为PBR策略配置参数和/或评估逻辑表达式中的参数。该参数可包括但不限于:构造为识别下列特征的任何一个或多个参数的语法或语言:</p>
    <p>[0247]	&#8226;源IP (单独地或通过范围) [0248].目的IP (单独地或通过范围)</p>
    <p>[0249].源端口(单独地或通过范围)</p>
    <p>[0250]	&#8226;目的端口(单独地或通过范围)</p>
    <p>[0251].应用层、会话层、传输层和/或互联网层协议</p>
    <p>[0252].虚拟局域网(VLAN)</p>
    <p>[0253].源介质访问控制(MAC)地址</p>
    <p>[0254].接口(如设备的多个接口中的第一物理接口 )</p>
    <p>[0255]	PBR策略可允许或拒绝经由下一跳的分组访问。PBR策略可为路由动作指定预定的下一跳。PBR策略可以指定下一跳枚举列表，设备可从中选择下一跳以转发分组。在一些实施例中，该枚举列表可按优先级排序。在一些实施例中，PBR策略可指定通过其采取路由动作的预定的ISP。在一些实施例中，PBR策略可指定通过其采取路由动作的预定设备、装置或IP地址。在一些实施例中，PBR策略可指定用于负载平衡多个下一跳的负载平衡方法、算法或类型，该下一跳例如是用于路由动作的下一跳。</p>
    <p>[0256]	可将PBR设计和配置为选择与第二层设备中的一个相对应的下一跳615，其中该第二层设备具有包括或识别通信(如响应或请求)的目的端口 612的分配端口范围。对于层2或第二层的每个设备，可将PBR配置或指定为:如果通信的目的端口属于该设备的分配端口范围，则将该设备的IP地址标识为下一跳。目的端口可以是由用于管理该设备和起源服务器或高速缓存服务器之间的通信的第二设备寄载的端口。下一跳可以是由设备寄载的或者设备可通过其寻址或路由的IP地址中的一个。</p>
    <p>[0257]	PBR可包括或指定任何类型和形式的表达式，包括可应用于分组的内容(包括头部和字段)的面向对象表达式。在一些实施例中，PBR的表达式用于从TCP分组识别TCP端口。在一些实施例中，PBR的表达式用于从分组的有效载荷识别端口。在一些实施例中，PBR的表达式用于从分组的应用层内容(如HTTP内容)识别端口。</p>
    <p>[0258]	在一些实施例中，下列示例的配置模型可用于配置任何层I设备、上层设备或者负载平衡低层设备的设备。下列命令可添加负载平衡vServer275以拦截来自客户机的所有流量，并且在低层设备间负载平衡这些流量。在一些实施例中，为了减轻设备上的存储器负载，负载平衡可以是无会话的。</p>
    <p>[0259]	#为每个低层NS创建服务</p>
    <p>[0260]	add service NSBl_svc&lt;nsbl_ip&gt;ANY80</p>
    <p>[0261]	add service NSB2_svc&lt;nsb2_ip&gt;ANY80</p>
    <p>[0262]...[0263]	#添加Ib vserver，其将拦截所有输入请求并且将该输入请求发送到低层设备</p>
    <p>[0264]	add Ib vserver super-vip ANY*80_persistenceType SOURCEIP-1bMethodROUNDROBIN-m MAC-sessionless ENABLED-cItTimeoutI</p>
    <p>[0265]	bind Ib vserver super-vip NSBl_svc</p>
    <p>[0266]	bind Ib vserver super-vip NSB2_svc</p>
    <p>[0267]...[0268]	为了将响应发送到适当的低层设备，将使用本文描述的端口分配技术基于目的端口来设置和配置PBR。</p>
    <p>[0269]	#启用L3模式且添加路由，以基于目的端口范围向适当的低层设备发送流量</p>
    <p>[0270]	enable ns mode 13</p>
    <p>[0271]	add ns pbr a allow-srcPort80-destPortl025-4000-nexthop&lt;nsbl_ip&gt;</p>
    <p>[0272]	add ns pbr b allow-srcPort80-destPort4001-8000-nexthop&lt;nsb2_ip&gt;</p>
    <p>[0273]...[0274]	如在上文的配置中所示，向层2的设备NSBl分配作为下一跳的TCP端口范围1025-4000,同时向层2的NSB2分配作为下一跳的TCP端口范围4001-8000。还可以通过启用L3模式将设备配置为分组转发装置。随着L3模式被启用，如果存在到目的地的路由，则设备转发去往该设备还没有内部配置的IP地址的任何已接收的单播分组。设备还可以在VALN之间路由分组。</p>
    <p>[0275]	可使用任何TCP端口范围分配方法，例如，经由配置的PBR规则将来自层I设备的流量定向到层2设备。可用端口范围605可包括可用于传输层通信的任何端口，例如任何TCP或UDP端口。可用端口范围可包括公知的、注册的和/或保留的端口，或者它们的任何组合。可用端口范围可包括在互联网编号分配管理机构(IANA)注册的官方端口。可用端口范围可包括没有在IANA注册的非官方端口。可用端口范围可包括由多应用使用的多使用端口。可用端口范围可包括从公知的、注册的和/或保留的端口中选择的端口。可用端口范围可排除某些端口，如注册端口、公知端口和/或非官方端口。</p>
    <p>[0276]	在一些实施例中，可在层2设备的成员之中均匀分配可用TCP端口范围605 (例如，由层2中设备的总数除端口范围中的端口总数)。在一些实施例中，可以不平均地分配可用TCP端口范围，其中层2中的一个设备具有比另一个设备更多的已分配TCP端口。在一些实施例中，在设备之中连续分配可用TCP端口范围，使得范围中的第一序列被分配给第一设备，随后范围中的第二序列被分配给第二设备，等等。在一些实施例中，不连续地分配可用TCP端口范围，使得在多个设备之中分配的端口范围中存在间隔。在一些实施例中，可将设备分配为对于没有分配给其他设备的任何端口的全捕获设备。</p>
    <p>[0277]	尽管有时以TCP端口号的形式讨论端口范围，但端口分配和通信技术适用于任何类型的端口号，例如由互联网协议族的传输层协议用于建立主机到主机通信的互联网套接字端口号列表。这样的端口号可包括可用于建立主机到主机通信的任何类型和形式的传输层端口，例如m)P、流控制传输协议(SCTP)和数据报拥塞控制协议(Deep)端口。</p>
    <p>[0278]	η层部署的第二层可包括任何数量的设备200C-200N。可将每个层2设备部署和/或配置为接收来自层I设备或者由层I设备负载平衡的网络流量。层2设备与层I设备的类型可以相同或者不同。可将层2设备配置为经由多个负载平衡(Ib)vServer使用任何负载平衡方法或算法，来负载平衡多个高速缓存服务器106Α-106Ν。负载平衡高速缓存服务器的负载平衡方法可与负载平衡层I设备的负载平衡方法相同或者不同。</p>
    <p>[0279]	层2设备可执行被配置为或者建立为高速缓存重定向vServer的一个或多个vServerο可将这些高速缓存重定向vServer配置为在透明模式下运行。在重定向到高速缓存服务器或者以其他方式与高速缓存服务器通信时，层2设备可为服务器侧连接使用映射的IP地址或MIP。当设备接收分组，设备可在将该分组发送到服务器之前将源IP地址替换为MIP。服务器将分组发送到由设备寄载的MIP地址。层2设备可使用MIP，该MIP将由设备寄载的IP地址映射到经由层I设备从客户机请求接收的客户机IP或者源地址。层2设备可将客户机IP作为头部插入到请求中。在高速缓存未命中的情况下，可从来自高速缓存的请求中提取客户机IP，且将其用于到起源服务器的连接。</p>
    <p>[0280]	可将源IP表达式(称作srcIPExp)配置为用于高速缓存重定向vServer识别从中提取插入的客户机IP地址的请求的部分。源IP表达式可包括任何类型和形式的逻辑或者表达式，例如识别从中找到或获得源IP地址的分组的头部、字段或数据部分。在一些实施例中，源IP表达式是被配置为在请求的预定字段(例如HTTP请求中称为ClientIP的头部)中识别客户机IP地址的表达式。</p>
    <p>[0281]	由于可以在联系起源服务器时使用客户机IP,可在vServer上启用〃0riginUSIP〃参数。originUSIP是确定在将请求重定向或发送到起源服务器时是否使用源IP地址的参数。如果启用originUSIP,在这种情况下,高速缓存重定向vServer使用源IP地址、客户机IP地址并且将请求发送到起源服务器。此外，可将高速缓存重定向vServer配置为用于MAC (介质访问控制)模式，其中对于到高速缓存服务器的连接不改变目的IP地址。改变MAC地址以从多个高速缓存服务器中选择一个高速缓存服务器。将MAC模式与DSR模式结合使用，以提供直接服务器返回。</p>
    <p>[0282]	对于去往起源服务器的请求，每个层2设备将使用源端口的专有集。通过设置vServer上的〃OriginSrcPort〃参数来指定这些端口。这些端口配置与在上层设备上设置的PBR协作。每个层2设备的源端口被配置为与在层I设备中为该层2设备配置的PBR的目的端口相对应。</p>
    <p>[0283]	在一些实施例中，下面示例的配置模型可用于配置任何层2设备或低层设备。下列命令可添加负载平衡vServer275，以拦截来自层I的所有流量并且跨越高速缓存服务器负载平衡这些流量。命令(例如，启用-cip)还启用在客户机请求中客户机地址的插入，并且除了用于插入客户机IP地址外还识别客户机IP地址头部的名称。-m MAC选项为DST模式启用基于MAC的转发，其中，设备不改变客户机请求中的目的IP，而是将目的MAC修改为所选择的负载平衡服务器的MAC地址。</p>
    <p>[0284]	#配置高速缓存LB vserver</p>
    <p>[0285]	add service svc_cachel〈cacheipl&gt;http80_cip enabled"ClientIP〃</p>
    <p>[0286]	add service svc_cache2〈cacheip2&gt;http80_cip enabled"ClientIP〃</p>
    <p>[0287]...[0288]	add Ib vserver cache_lb http-m MAC</p>
    <p>[0289]	bind Ib vserver cache_lb svc_cachel</p>
    <p>[0290]	bind Ib vserver cache_lb svc_cache2</p>
    <p>[0291]	# 配置 CR vserver</p>
    <p>[0292]	add cr vserver crlhttp*80-srcIPExp;r"HTTP.REQ.HEADER(\〃</p>
    <p>[0293]	ClientIP\")"-originusip 0N-originSrcPortl025-4000-cacheVserver</p>
    <p>[0294]	cache_lb</p>
    <p>[0295]	现参考图6B，描述了经由n层部署高速缓存重定向场景的实施例，其中存在可高速缓存的请求和高速缓存命中。简要概括，由路由器Rl接收来自客户机的请求。该请求可识别客户机IP地址CIP和客户机端口 CIP。该请求可能去往目的IP地址DIP和目的端口，如端口 80。路由器将客户机请求路由到η层架构中层I的设备NSA1。设备NSAl基于负载平衡和/或PBR规则将该请求转发到该η层架构中层2的设备NSB2。NSB2的高速缓存重定向vServer确定该请求可高速缓存。设备NSB2使用到由请求识别的目的IP地址和目的端口的映射IP地址(MIP)和映射端口(MPORT )，将请求传输到高速缓存服务器。设备NSB2将客户机IP地址CIP插入请求中配置的客户机IP头部。高速缓存服务器经由回到由设备NSB2寄载的MIP和MPORT的响应，来服务与请求对应的内容。使用DSR模式，经由客户机IP地址和端口(CIP = PORT)绕过第一层设备将该响应发送回客户机。</p>
    <p>[0296]	现参考图6C，描述经由η层部署高速缓存重定向场景的实施例，其中存在高速缓存未命中。简要而言，由路由器Rl接收来自客户机的请求。该请求可识别客户机IP地址CIP和客户机端口 CIP。该请求可能去往目的IP地址DIP和目的端口，如端口 80。路由器将客户机请求路由到η层架构中的层I的设备NSA2。设备NSA2基于负载平衡和/或PBR规则将该请求转发到该η层架构中的层2的设备NSB3。可向NSB3分配包括8010的端口范围。例如以上文中结合图6Β描述的方式，NSB3的高速缓存重定向vServer将请求传输到高速缓存服务器。设备NSB3将客户机IP地址CIP插入请求中配置的客户机IP头部。高速缓存服务器没有找到或者不具有所请求的内容，且因此发生高速缓存未命中。高速缓存服务器使用到目地IP地址DIP和目的端口(如端口 80)的源IP地址CacheIP和源端口CachePort,向起源服务器传输请求。响应于高速缓存未命中和高速缓存请求，设备NSB3经由路由器/互联网向起源服务器发送请求以获得内容。设备NSB3将客户机IP地址用作源，并且使用来自分配给NSB3的端口范围中的源端口。响应经由路由器返回且由层I设备(如NSA2)接收。经由层I设备上的PBR规则，层I设备将该响应转发到分配了目的端口的NSB3。使用DSR模式，由NSB3经由客户机IP地址和端口(CIP:CP0RT)绕过第一层设备将响应发送回客户机。</p>
    <p>[0297]	现参考图6D，描述经由η层部署高速缓存重定向场景的实施例，其中存在高速缓存旁路(bypass)。简要而言，由路由器Rl接收来自客户机的请求。该请求可识别客户机IP地址CIP和客户机端口 CIP。该请求可去往目的IP地址DIP和目的端口，如端口 80。路由器将客户机请求路由到η层架构中层I的设备NSA2。设备NSA2基于负载平衡和/或PBR规则将请求转发到η层架构中层2的设备NSB2。NSB2的高速缓存重定向vServer可确定该请求不可高速缓存或者以其他方式绕过高速缓存。设备NSB2经由路由器/互联网将请求发送到起源服务器，以获得内容。设备NSB2将客户机IP地址用作源，并且使用来自分配给NSB2的端口范围中的源端口。响应经由路由器返回且由层I设备(如NSA2)接收。经由层I设备上的PBR规则，层I设备将该响应转发到分配了目的端口的NSB2。使用DSR模式，由NSB2经由客户机IP地址和端口(CIP:CP0RT)绕过第一层设备将该响应发送回客户机。</p>
    <p>[0298]	现参考图7，描述实现图6A-6D中的η层部署的任何实施例的方法的实施例。简要概括，在步骤705，从可用端口中给η层部署的每个第二层设备分配端口范围。在步骤710，将第二层设备配置为在分配给它们的一系列端口上接收通信或者侦听。还可以将第二层设备配置为执行或者向高速缓存服务器提供高速缓存重定向服务。在步骤715，将η层部署的第一层设备配置为负载平衡第二层，并且具有用于根据第二层设备相应的端口分配将通信转发到第二层中的设备的PBR。在步骤720，第一层设备接收对服务器的客户机请求，并且在第二层设备之中负载平衡该客户机请求。响应于负载平衡，第一层设备可将客户机的请求转发到在第二层设备中选择的一个设备。第二层设备可对客户机的请求执行高速缓存重定向服务。根据是否存在高速缓存命中或高速缓存未命中，或者根据设备是否绕过高速缓存，可执行方法的不同实施例。</p>
    <p>[0299]	对于高速缓存命中的场景，在步骤725，第二层设备接收由第一层设备负载平衡的客户机请求，并且确定该请求是可高速缓存的。响应于该确定，在步骤730，第二层设备将客户机的请求传输到高速缓存服务器，而不是起源服务器。第二层设备可将客户机的IP和端口信息(客户机的请求的源IP和端口)插入发送到高速缓存服务器的请求中。在步骤735，层2设备接收来自高速缓存服务器的响应，并且基于从高速缓存服务器接收的内容将响应发送回客户机。</p>
    <p>[0300]	对于高速缓存旁路的场景，在步骤760，第二层设备接收由第一层设备负载平衡的客户机请求，并且确定该请求不可高速缓存。响应于该确定，在步骤765，第二层设备将客户机的请求传输到起源服务器。第二层设备可将客户机的IP信息和端口信息(客户机的请求的源IP和端口)插入发送到起源服务器的请求中。在步骤770，层I设备接收来自起源服务器的响应，并且响应于基于端口分配技术的PBR规则将该响应发送回曾转发请求到起源服务器的第二层设备。在步骤775，层2设备接收该响应并且基于从起源服务器接收的内容将响应发送回客户机。[0301]	对于高速缓存未命中的场景，在步骤725，第二层设备接收由第一层设备负载平衡的客户机请求，并且确定该请求可高速缓存。响应于该确定，在步骤730，第二层设备将客户机的请求传输到高速缓存服务器而不是起源服务器。第二层设备可将客户机的IP和端口信息(客户机的请求的源IP和端口)插入发送到高速缓存服务器的请求中。在步骤750，响应于高速缓存未命中，高速缓存服务器向起源服务器发送第二请求。第二层设备接收该请求且发送到起源服务器。在步骤770，层I设备接收来自起源服务器的响应，并且响应于基于端口分配技术的PBR规则，层I设备将该响应发送回曾将请求转发到起源服务器的第二层设备。在步骤775，层2设备接收该响应，并且基于从起源服务器接收的内容将响应发送回客户机。</p>
    <p>[0302]	在进一步的细节中，在步骤705，可在针对或期望构建或者构成多层部署中低层的多个中间装置(如设备200)之间分配可用端口范围605的任何端口或全部端口。可用端口范围605可以是可用于一个或多个设备的TCP端口号。可使用任何分配方法来分配端口范围605中的端口号。在一些实施例中，每个层2设备接收可用端口范围605中的不重叠端口号的平均分配或分布。在一些实施例中，每个层2设备接收来自可用端口范围605的不平均分配，其中层2中的一个设备比层2中另一设备具有更多的已分配端口。在一些实施例中，每个层2设备接收设备之中的顺序分配，例如为第一设备分配范围中的第一序列，随后为第二设备分配范围中的第二序列，以此类推。在一些实施例中，第一设备非顺序地接收它们相应的分配，使得在多个设备之间分配的端口范围存在间隔。在一些实施例中，可将层2设备中的一个指定为全捕获设备，并且向其分配没有分配给其他设备的任何端口。</p>
    <p>[0303]	在步骤710，根据如可从步骤705确定的层2设备相应的端口分配来配置层2设备。可将第二层的每个设备配置为仅侦听和/或接受到分配给该设备的端口的连接。设备可配置和执行一个或多个vServer。每个vServer可在该设备的分配端口中的端口上侦听和/或接受连接。在一些实施例中，一个vServer侦听和/或接受来自分配的端口范围中的任何端口的连接。在一些实施例中，多个vServer侦听和/或接受来自分配的端口范围中的任何端口的连接。在一些实施例中，设备上的一个vServer侦听和/或接受来自分配的端口范围中的第一端口子集的连接，而设备上的另一个vServer侦听和/或接受来自分配的端口范围中的第二和不同端口子集的连接。</p>
    <p>[0304]	还可以将第二层设备配置为执行高速缓存重定向服务。如本文描述的任何高速缓存重定向操作。可在每个第二层设备上执行一个或多个高速缓存重定向vServer275或被配置或构造为执行高速缓存重定向服务的vServer。高速缓存重定向vServer可包括用以确定或者识别对内容的请求是针对可高速缓存的内容还是针对不可高速缓存的内容的逻辑或者策略。这些策略可包括任何类型和形式的表达式(包括面向对象表达式)，以识别请求的内容或部分，并且基于那些部分中的值或内容，采取向高速缓存服务器发起请求的动作，或者采取绕过高速缓存服务器且将请求转发到起源服务器的动作。</p>
    <p>[0305]	高速缓存重定向vServer可具有用于在到起源服务器的通信中使用客户机请求的源IP地址的模式。高速缓存重定向vServer可具有用以识别将客户机IP和/或端口信息插入分组的哪个部分的策略表达式，以在高速缓存重定向设备之中或者去往/来自高速缓存服务器的网络流量期间维护客户机信息。高速缓存重定向vServer可建立与一个或多个高速缓存服务器的连接。高速缓存重定向vServer可负载平衡发送到高速缓存服务器池、集群或集合的请求。在一些实施例中，高速缓存重定向vServer可使用MACID或者层2交换来与高速缓存服务器通信，例如以在识别起源服务器时维护请求的目的信息(IP和端口)。</p>
    <p>[0306]	第二层设备还可以包括用于在多个服务之间负载平衡客户机请求的vServer，例如在可向其转发客户机的请求的多个起源服务器之间。在一些实施例中，第二层设备可包括一个或多个vServer，用于执行到高速缓存服务器的高速缓存重定向以及用于负载平衡到后端起源服务器的请求。</p>
    <p>[0307]	在步骤715，根据第二层设备的数量和配置来配置第一层设备。可为每个第一层设备配置负载平衡vServer，以在多个第二层设备间负载平衡客户机请求。在一些实施例中，将vServer配置为管理第二层设备的服务。如此,在一些实施例中,vServer对作为将被负载平衡的服务的每个第二层设备识别IP地址和端口信息。每个第一层设备还可以包括基于每个第二层设备相应的端口分配配置的多个PBR规则。可在第一层的每个设备上配置将通信的目的端口匹配到作为下一跳的第二层设备的IP地址的PBR规则。</p>
    <p>[0308]	在步骤720，第一层设备可接收到服务器的客户机请求，例如从服务器检索内容或对象。例如，第一层设备可例如通过负载平衡为第一层设备上对于第二层设备配置的服务，来经由vServer在多个第二层设备之间负载平衡请求。负载平衡vServer可使用任何负载平衡方法(例如轮询)来负载平衡低层设备。当响应于负载平衡决策选择低层设备/服务时，第一层设备将客户机的请求转发到所选择的第二层设备。例如，如果要经由所选择的模式或配置来维护源IP地址，则第一层设备转发该客户机请求而不改变源IP地址和/或端口。在一些实施例中，第一层设备将源IP地址和/或端口改变为由第一层设备寄载或管理的IP地址和/或端口。</p>
    <p>[0309]	在第二层设备处理级别处，可能出现在图6B-6D中描述的任何一个高速缓存重定向场景，如高速缓存命中、高速缓存未命中或者高速缓存旁路。可将客户机的请求确定为可高速缓存并且可由第二层设备将其转发到高速缓存服务器。高速缓存可向第二层设备返回命中(例如内容或者对请求的响应)，或者如果未命中，高速缓存服务器可向起源服务器发送请求以获得内容。在一些情况下，可将客户机的请求确定为不可高速缓存，并且可由第二层设备将其转发到起源服务器。</p>
    <p>[0310]	在高速缓存命中或者高速缓存未命中的情况下，在步骤725，接收来自第一层设备的客户机请求的第二层设备可确定该请求是可高速缓存的。第二层设备的vServer可包括识别请求或者其请求的内容是否可高速缓存的一个或多个策略。策略可包括识别或匹配请求的任何部分的表达式，如面向对象表达式。基于对策略表达式的评估结果，vServer可确定是否将请求发送到高速缓存服务器。</p>
    <p>[0311]	在步骤730，第二层设备可响应于策略，确定将客户机的请求转发或传输到高速缓存服务器。第二层设备的vServer可在多个高速缓存服务器之间负载平衡该请求。vServer可将发送到高速缓存服务器的请求修改为使用第二层设备的寄载的或映射的IP地址和端口作为请求的源IP和地址。例如，第二层设备可将请求修改为在应用层内容中包括客户机的IP地址和/或端口信息。例如，第二层设备可将请求修改为在HTTP头部或字段，或者在HTTP内容的主体中包括客户机的IP地址和/或端口信息。第二层设备可基于经由表达式或其他方式识别分组中的要包括客户机的IP地址和/或端口信息的位置的策略，将请求修改为包括客户机的IP地址和/或端口信息。第二层设备可使用层2交换。第二层设备修改请求的目的MAC ID以识别高速缓存服务器或所选择的高速缓存服务器的MAC ID。第二层设备可在请求中维护起源服务器的目的IP地址和/或目的端口。</p>
    <p>[0312]	在高速缓存命中的情况下，在步骤735，第二层设备可例如经由第二层设备的vServer接收来自高速缓存服务器的响应，该响应包括由高速缓存服务器高速缓存命中的内容。高速缓存服务器可使用来自所修改的请求的源IP地址和端口的映射的IP地址和/或端口，将响应发送到第二层设备。第二层设备的vServer可处理来自高速缓存服务器的响应，以对客户机形成、提供和传输对客户机的请求的响应。在一些实施例中，使用DSR模式，第二层设备经由客户机IP地址和端口绕过第一层设备将响应发送到客户机。</p>
    <p>[0313]	在高速缓存命中的情况下，在步骤750，第二层设备接收或拦截从高速缓存服务器回到起源服务器的检索内容的请求，或者对客户机的请求的响应。响应于高速缓存未命中，高速缓存服务器可使用从第二层设备接收的且由第二层设备修改的请求中的客户机的IP信息，来生成要向起源服务器发送的第二请求，其将客户机的IP和端口信息识别为源IP地址和源端口。可将高速缓存服务器设计和配置为在请求的预定位置中(例如在HTTP头部中)识别或提取客户机IP地址和端口信息。该位置可与策略或策略的表达式相对应，该策略或策略表达式向第二层设备的高速缓存重定向(CR) vServer指示或识别在到高速缓存服务器的请求中的哪个位置包括或维护客户机的IP地址和端口信息。第二层设备可将请求转发到起源服务器。第二层设备的负载平衡vServer可将请求转发到第二层正负载平衡的多个起源服务器中的一个起源服务器。在一些实施例中，对于发送到起源服务器的请求，第二层设备可将客户机的IP地址和端口用作源IP地址和端口。在一些实施例中，对于发送到起源服务器的请求，第二层设备可将由第二层设备寄载的IP地址和端口用作源IP地址和端口。在一些实施例中，以与上文描述的在将请求发送到高速缓存服务器时的类似方式，第二层设备可将到起源服务器的请求修改为在由策略指定的分组中的位置中包括客户机的IP和端口信息。起源服务器可将对请求的响应发送回第二层设备的目的IP地址和端□。</p>
    <p>[0314]	在一些实施例中，在步骤770，当起源服务器将对请求的响应发送回客户机时，层I设备可接收该响应。基于对该响应应用一个或多个PBR，第一层设备可识别对响应执行过高速缓存重定向的第二层设备，或者识别该第二层设备是处理和/或管理到与该响应有关的起源服务器的通信第二层设备。基于对该响应应用一个或多个PBR，第一层设备可识别与PBR的下一跳相对应或匹配的响应的目的端口，该下一跳与曾将请求发送到产生该响应的起源服务器的第二层设备的IP地址相对应或者识别该IP地址。响应的目的端口与将请求发送到起源服务器的第二层设备的分配端口范围602A-N相匹配或者相对应。响应于PBR，第一层设备将响应转发或传输到第二层设备的下一跳IP地址。</p>
    <p>[0315]	在步骤775，第二层2设备从第一层设备接收起源服务器的响应。第二层设备(如第二层设备的vServer)，可处理由第一层设备转发的来自起源服务器的响应以形成对客户机的请求的响应并将其提供给或传输到客户机。在一些实施例中，使用DSR模式，第二层设备经由客户机IP地址和端口绕过第一层设备将响应发送到客户机。</p>
    <p>[0316]	进一步描述高速缓存旁路场景，在步骤670，第二层设备接收由第一层设备负载平衡的客户机请求。经由不匹配该请求的一个或多个高速缓存重定向策略，第二层设备可确定该请求是不可高速缓存的或其请求的内容是不可高速缓存的，或者确定该请求不能被发送到高速缓存服务器。经由匹配该请求的一个或多个策略，第二层设备可确定该请求仅被发送到起源服务器。经由匹配该请求的一个或多个策略，第二层设备可确定将绕过高速缓存服务器。</p>
    <p>[0317]	响应于步骤760的确定，在步骤765，第二层设备将客户机的请求传输到起源服务器。第二层设备的负载平衡vServer可在多个起源服务器之间负载平衡该请求。第二层设备可修改发送到起源服务器的请求。第二层设备可将由该设备寄载的IP地址和端口用作该请求的源IP地址和端口。在一些实施例中，第二层设备可将客户机的IP和端口信息(客户机的请求的源IP和端口)插入发送到起源服务器的请求中，例如插入由策略指定的位置中。</p>
    <p>[0318]	高速缓存旁路场景可跟在之前在上文中关于高速缓存未命中场景描述的步骤770和775的任何实施例之后。如在高速缓存未命中场景的步骤770中所描述的，第一层设备接收来自起源服务器的响应，并且响应于基于本文描述的端口分配技术的PBR规则，第一层设备将响应发送回到曾将该请求转发到起源服务器的第二层设备。如在高速缓存未命中场景的步骤775中所描述的，层2设备接收该响应，并且基于从起源服务器接收的内容将响应发送回客户机。</p>
  </div>
  </div></div><div class="patent-section patent-tabular-section"><a id="backward-citations"></a><div class="patent-section-header"><span class="patent-section-title">专利引用</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th">引用的专利</th><th class="patent-data-table-th"> 申请日期</th><th class="patent-data-table-th">公开日</th><th class="patent-data-table-th"> 申请人</th><th class="patent-data-table-th">专利名</th></tr></thead><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101030940A?cl=zh">CN101030940A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2007年4月9日</td><td class="patent-data-table-td patent-date-value">2007年9月5日</td><td class="patent-data-table-td ">华为技术有限公司</td><td class="patent-data-table-td ">网络流量负载均衡的方法以及第三层交换设备</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/CN101534204A?cl=zh">CN101534204A</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2008年3月10日</td><td class="patent-data-table-td patent-date-value">2009年9月16日</td><td class="patent-data-table-td ">中国网通集团宽带业务应用国家工程实验室有限公司;北京邮电大学</td><td class="patent-data-table-td ">流媒体信息分发系统和方法及客户端</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US7412531">US7412531</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2002年1月29日</td><td class="patent-data-table-td patent-date-value">2008年8月12日</td><td class="patent-data-table-td ">Blue Coat Systems, Inc.</td><td class="patent-data-table-td ">Live stream archiving method and apparatus</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20020035639">US20020035639</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2001年8月16日</td><td class="patent-data-table-td patent-date-value">2002年3月21日</td><td class="patent-data-table-td ">Wei Xu</td><td class="patent-data-table-td ">Systems and methods for a packet director</td></tr><tr><td class="patent-data-table-td citation-patent"><a href="/patents/US20030195984">US20030195984</a><span class='patent-tooltip-anchor' data-tooltip-text="由审查员引用"> *</span></td><td class="patent-data-table-td patent-date-value">2003年6月2日</td><td class="patent-data-table-td patent-date-value">2003年10月16日</td><td class="patent-data-table-td ">Radware Ltd.</td><td class="patent-data-table-td ">Load balancing</td></tr></table><div class="patent-section-footer">* 由审查员引用</div></div><div class="patent-section patent-tabular-section"><a id="classifications"></a><div class="patent-section-header"><span class="patent-section-title">分类</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> </th><th class="patent-data-table-th"> </th></tr></thead><tr><td class="patent-data-table-td ">国际分类号</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=-BDpCAABERAJ&amp;q=http://web2.wipo.int/ipcpub/&amp;usg=AFQjCNER44F5jlVoswCkvW3YEcB5lW4moA#refresh=page&amp;notion=scheme&amp;version=20130101&amp;symbol=H04L0029080000">H04L29/08</a></span></td></tr><tr><td class="patent-data-table-td "> 合作分类</td><td class="patent-data-table-td "><span class="nested-value"><a href="https://www.google.com/url?id=-BDpCAABERAJ&amp;q=http://worldwide.espacenet.com/classification&amp;usg=AFQjCNGs5WqSrPE3A4ZP63zGuM6PRNfEFA#!/CPC=H04L65/4076">H04L65/4076</a></span></td></tr></table><div class="patent-section-footer"></div></div><div class="patent-section patent-tabular-section"><a id="legal-events"></a><div class="patent-section-header"><span class="patent-section-title">法律事件</span></div><table class="patent-data-table"><thead class="patent-data-table-thead"><tr class="patent-data-table"><th class="patent-data-table-th"> 日期</th><th class="patent-data-table-th">代码</th><th class="patent-data-table-th">事件</th><th class="patent-data-table-th">说明</th></tr></thead><tr><td class="patent-data-table-td patent-date-value">2013年12月25日</td><td class="patent-data-table-td ">C06</td><td class="patent-data-table-td ">Publication</td><td class="patent-data-table-td "></td></tr></table><div class="patent-section-footer"></div></div><div class="modal-dialog" id="patent-images-lightbox"><div class="patent-lightbox-controls"><div class="patent-lightbox-rotate-controls"><div class="patent-lightbox-rotation-text">旋转</div><div class="rotate-icon rotate-ccw-icon"></div><div class="rotate-icon rotate-cw-icon"></div></div><div class="patent-lightbox-index-counter"></div><a class="patent-lightbox-fullsize-link" target="_blank">原始图片</a><div class="patent-drawings-control patent-drawings-next"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_right.png" alt="Next page"width="21" height="21" /></div><div class="patent-drawings-control patent-drawings-prev"><img class="patent-drawings-button-img"src="/googlebooks/images/kennedy/page_left.png" alt="Previous page"width="21" height="21" /></div></div><div class="modal-dialog-content"><div class="patent-lightbox-image-holder"><div class="patent-lightbox-placeholder"></div></div></div></div><script>_OC_initPatentsAtb({image_not_available_html: " 未提供图片。\x3ca href\x3d//docs.google.com/viewer?url\x3dpatentimages.storage.googleapis.com/pdfs/ee3e5b2d4b2176616e6e/CN103477611A.pdf\x3e查看 PDF\x3c/a\x3e"});</script></div></div></div></div></div><script>(function() {var href = window.location.href;if (href.indexOf('?') !== -1) {var parameters = href.split('?')[1].split('&');for (var i = 0; i < parameters.length; i++) {var param = parameters[i].split('=');if (param[0] == 'focus') {var elem = document.getElementById(param[1]);if (elem) {elem.focus();}}}}})();</script><script>_OC_addFlags({LockSrc:"/books/javascript/lock_5115ea495017d9115e613207d3810e5a.js", Host:"https://www.google.com/", IsBooksRentalEnabled:1, IsBrowsingHistoryEnabled:1, IsWebReaderSvgEnabled:0, IsImageModeNotesEnabled:1, IsOfflineBubbleEnabled:1, IsFutureOnSaleVolumesEnabled:1, IsBooksUnifiedLeftNavEnabled:1, IsMobileRequest:0, IsZipitFolderCollectionEnabled:1, IsAdsDisabled:0, IsEmbeddedMediaEnabled:1, IsImageModeAnnotationsEnabled:1, IsMyLibraryGooglePlusEnabled:1, IsImagePageProviderEnabled:1, IsBookcardListPriceSmall:0, IsInternalUser:0, IsBooksShareButtonEnabled:0, IsDisabledRandomBookshelves:0});_OC_Run({"enable_p13n":false,"is_cobrand":false,"sign_in_url":"https://www.google.com/accounts/Login?service=\u0026continue=https://www.google.com/patents%3Fcl%3Dzh%26hl%3Dzh-CN\u0026hl=zh-CN"}, {"volume_id":"","is_ebook":true,"volumeresult":{"has_flowing_text":false,"has_scanned_text":true,"can_download_pdf":false,"can_download_epub":false,"is_pdf_drm_enabled":false,"is_epub_drm_enabled":false,"download_pdf_url":"https://www.google.com/patents/download/%E7%94%A8%E4%BA%8En%E5%B1%82%E9%AB%98%E9%80%9F%E7%BC%93%E5%AD%98%E9%87%8D%E5%AE%9A%E5%90%91%E7%9A%84%E7%B3%BB%E7%BB%9F.pdf?id=-BDpCAABERAJ\u0026hl=zh-CN\u0026output=pdf\u0026sig=ACfU3U2M4itfMxXFQXeA8ICMNuefrN8DtQ"},"sample_url":"https://www.google.com/patents/reader?id=-BDpCAABERAJ\u0026hl=zh-CN\u0026printsec=frontcover\u0026output=reader\u0026source=gbs_atb_hover","is_browsable":true,"is_public_domain":true}, {});</script><div id="footer_table" style="font-size:83%;text-align:center;position:relative;top:20px;height:4.5em;margin-top:2em"><div style="margin-bottom:8px"><a href="https://www.google.com/search?hl=zh-CN"><nobr>Google&nbsp;首页</nobr></a> - <a href="//www.google.com/patents/sitemap/"><nobr>站点地图</nobr></a> - <a href="http://www.google.com/googlebooks/uspto.html"><nobr>美国专利商标局 (USPTO) 专利信息批量下载</nobr></a> - <a href="/intl/zh-CN/privacy/"><nobr>隐私权政策</nobr></a> - <a href="/intl/zh-CN/policies/terms/"><nobr>服务条款</nobr></a> - <a href="https://support.google.com/faqs/answer/2539193?hl=zh-CN"><nobr> 关于 Google 专利</nobr></a> - <a href="//www.google.com/tools/feedback/intl/zh-CN/error.html" onclick="try{_OC_startFeedback({productId: '72792',locale: 'zh-CN'});return false;}catch(e){}"><nobr>发送反馈</nobr></a></div></div> <script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</script><script type="text/javascript">var pageTracker = _gat._getTracker("UA-27188110-1");pageTracker._setCookiePath("/patents/");pageTracker._trackPageview();</script> </body></html>